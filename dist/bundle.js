/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(38);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _fridge = __webpack_require__(168);

	var _fridge2 = _interopRequireDefault(_fridge);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_reactDom2.default.render(_react2.default.createElement(_fridge2.default, null), document.getElementById('app'));

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(2);


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactChildren = __webpack_require__(5);
	var ReactComponent = __webpack_require__(16);
	var ReactClass = __webpack_require__(27);
	var ReactDOMFactories = __webpack_require__(32);
	var ReactElement = __webpack_require__(8);
	var ReactElementValidator = __webpack_require__(33);
	var ReactPropTypes = __webpack_require__(35);
	var ReactVersion = __webpack_require__(36);

	var onlyChild = __webpack_require__(37);
	var warning = __webpack_require__(10);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;

	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 3 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 4 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(6);
	var ReactElement = __webpack_require__(8);

	var emptyFunction = __webpack_require__(11);
	var traverseAllChildren = __webpack_require__(13);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactCurrentOwner = __webpack_require__(9);

	var warning = __webpack_require__(10);
	var canDefineProperty = __webpack_require__(12);

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	      ref = !config.hasOwnProperty('ref') || Object.getOwnPropertyDescriptor(config, 'ref').get ? null : config.ref;
	      key = !config.hasOwnProperty('key') || Object.getOwnPropertyDescriptor(config, 'key').get ? null : '' + config.key;
	    } else {
	      ref = config.ref === undefined ? null : config.ref;
	      key = config.key === undefined ? null : '' + config.key;
	    }
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // Create dummy `key` and `ref` property to `props` to warn users
	    // against its use
	    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	      if (!props.hasOwnProperty('key')) {
	        Object.defineProperty(props, 'key', {
	          get: function () {
	            if (!specialPropKeyWarningShown) {
	              specialPropKeyWarningShown = true;
	              process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', typeof type === 'function' && 'displayName' in type ? type.displayName : 'Element') : void 0;
	            }
	            return undefined;
	          },
	          configurable: true
	        });
	      }
	      if (!props.hasOwnProperty('ref')) {
	        Object.defineProperty(props, 'ref', {
	          get: function () {
	            if (!specialPropRefWarningShown) {
	              specialPropRefWarningShown = true;
	              process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', typeof type === 'function' && 'displayName' in type ? type.displayName : 'Element') : void 0;
	            }
	            return undefined;
	          },
	          configurable: true
	        });
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */

	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(11);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  warning = function warning(condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactElement = __webpack_require__(8);

	var getIteratorFn = __webpack_require__(14);
	var invariant = __webpack_require__(7);
	var KeyEscapeUtils = __webpack_require__(15);
	var warning = __webpack_require__(10);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 14 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {*} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var ReactNoopUpdateQueue = __webpack_require__(17);
	var ReactInstrumentation = __webpack_require__(18);

	var canDefineProperty = __webpack_require__(12);
	var emptyObject = __webpack_require__(26);
	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : void 0;
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onSetState();
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(10);

	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */

	'use strict';

	var ReactDebugTool = __webpack_require__(19);

	module.exports = { debugTool: ReactDebugTool };

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDebugTool
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(20);

	var performanceNow = __webpack_require__(21);
	var warning = __webpack_require__(10);

	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};

	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  if (process.env.NODE_ENV !== 'production') {
	    eventHandlers.forEach(function (handler) {
	      try {
	        if (handler[handlerFunctionName]) {
	          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	        }
	      } catch (e) {
	        process.env.NODE_ENV !== 'production' ? warning(!handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e.message) : void 0;
	        handlerDoesThrowForEvent[handlerFunctionName] = true;
	      }
	    });
	  }
	}

	var isProfiling = false;
	var flushHistory = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerType = null;

	function clearHistory() {
	  ReactComponentTreeDevtool.purgeUnmountedComponents();
	  ReactNativeOperationHistoryDevtool.clearHistory();
	}

	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	    var parentID = ReactComponentTreeDevtool.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeDevtool.getDisplayName(id),
	      text: ReactComponentTreeDevtool.getText(id),
	      updateCount: ReactComponentTreeDevtool.getUpdateCount(id),
	      childIDs: ReactComponentTreeDevtool.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || ReactComponentTreeDevtool.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}

	function resetMeasurements() {
	  if (process.env.NODE_ENV !== 'production') {
	    var previousStartTime = currentFlushStartTime;
	    var previousMeasurements = currentFlushMeasurements || [];
	    var previousOperations = ReactNativeOperationHistoryDevtool.getHistory();

	    if (!isProfiling || currentFlushNesting === 0) {
	      currentFlushStartTime = null;
	      currentFlushMeasurements = null;
	      clearHistory();
	      return;
	    }

	    if (previousMeasurements.length || previousOperations.length) {
	      var registeredIDs = ReactComponentTreeDevtool.getRegisteredIDs();
	      flushHistory.push({
	        duration: performanceNow() - previousStartTime,
	        measurements: previousMeasurements || [],
	        operations: previousOperations || [],
	        treeSnapshot: getTreeSnapshot(registeredIDs)
	      });
	    }

	    clearHistory();
	    currentFlushStartTime = performanceNow();
	    currentFlushMeasurements = [];
	  }
	}

	function checkDebugID(debugID) {
	  process.env.NODE_ENV !== 'production' ? warning(debugID, 'ReactDebugTool: debugID may not be empty.') : void 0;
	}

	var ReactDebugTool = {
	  addDevtool: function (devtool) {
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function (devtool) {
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  beginProfiling: function () {
	    if (process.env.NODE_ENV !== 'production') {
	      if (isProfiling) {
	        return;
	      }

	      isProfiling = true;
	      flushHistory.length = 0;
	      resetMeasurements();
	    }
	  },
	  endProfiling: function () {
	    if (process.env.NODE_ENV !== 'production') {
	      if (!isProfiling) {
	        return;
	      }

	      isProfiling = false;
	      resetMeasurements();
	    }
	  },
	  getFlushHistory: function () {
	    if (process.env.NODE_ENV !== 'production') {
	      return flushHistory;
	    }
	  },
	  onBeginFlush: function () {
	    if (process.env.NODE_ENV !== 'production') {
	      currentFlushNesting++;
	      resetMeasurements();
	    }
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    if (process.env.NODE_ENV !== 'production') {
	      resetMeasurements();
	      currentFlushNesting--;
	    }
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    if (process.env.NODE_ENV !== 'production') {
	      if (isProfiling && currentFlushNesting > 0) {
	        process.env.NODE_ENV !== 'production' ? warning(!currentTimerType, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	        currentTimerStartTime = performanceNow();
	        currentTimerDebugID = debugID;
	        currentTimerType = timerType;
	      }
	    }
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    if (process.env.NODE_ENV !== 'production') {
	      if (isProfiling && currentFlushNesting > 0) {
	        process.env.NODE_ENV !== 'production' ? warning(currentTimerType === timerType, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	        currentFlushMeasurements.push({
	          timerType: timerType,
	          instanceID: debugID,
	          duration: performanceNow() - currentTimerStartTime
	        });
	        currentTimerStartTime = null;
	        currentTimerDebugID = null;
	        currentTimerType = null;
	      }
	    }
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginReconcilerTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginReconcilerTimer', debugID, timerType);
	  },
	  onEndReconcilerTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onEndReconcilerTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onNativeOperation: function (debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onNativeOperation', debugID, type, payload);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetDisplayName: function (debugID, displayName) {
	    checkDebugID(debugID);
	    emitEvent('onSetDisplayName', debugID, displayName);
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onSetOwner: function (debugID, ownerDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetOwner', debugID, ownerDebugID);
	  },
	  onSetText: function (debugID, text) {
	    checkDebugID(debugID);
	    emitEvent('onSetText', debugID, text);
	  },
	  onMountRootComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountRootComponent', debugID);
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  var ReactInvalidSetStateWarningDevTool = __webpack_require__(23);
	  var ReactNativeOperationHistoryDevtool = __webpack_require__(24);
	  var ReactComponentTreeDevtool = __webpack_require__(25);
	  ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);
	  ReactDebugTool.addDevtool(ReactComponentTreeDevtool);
	  ReactDebugTool.addDevtool(ReactNativeOperationHistoryDevtool);
	  var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	  if (/[?&]react_perf\b/.test(url)) {
	    ReactDebugTool.beginProfiling();
	  }
	}

	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 20 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var performance = __webpack_require__(22);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(20);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInvalidSetStateWarningDevTool
	 */

	'use strict';

	var warning = __webpack_require__(10);

	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;

	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}

	var ReactInvalidSetStateWarningDevTool = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};

	module.exports = ReactInvalidSetStateWarningDevTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 24 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeOperationHistoryDevtool
	 */

	'use strict';

	var history = [];

	var ReactNativeOperationHistoryDevtool = {
	  onNativeOperation: function (debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function () {
	    if (ReactNativeOperationHistoryDevtool._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }

	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};

	module.exports = ReactNativeOperationHistoryDevtool;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeDevtool
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	var tree = {};
	var rootIDs = [];

	function updateTree(id, update) {
	  if (!tree[id]) {
	    tree[id] = {
	      parentID: null,
	      ownerID: null,
	      text: null,
	      childIDs: [],
	      displayName: 'Unknown',
	      isMounted: false,
	      updateCount: 0
	    };
	  }
	  update(tree[id]);
	}

	function purgeDeep(id) {
	  var item = tree[id];
	  if (item) {
	    var childIDs = item.childIDs;

	    delete tree[id];
	    childIDs.forEach(purgeDeep);
	  }
	}

	var ReactComponentTreeDevtool = {
	  onSetDisplayName: function (id, displayName) {
	    updateTree(id, function (item) {
	      return item.displayName = displayName;
	    });
	  },
	  onSetChildren: function (id, nextChildIDs) {
	    updateTree(id, function (item) {
	      var prevChildIDs = item.childIDs;
	      item.childIDs = nextChildIDs;

	      nextChildIDs.forEach(function (nextChildID) {
	        var nextChild = tree[nextChildID];
	        !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected devtool events to fire for the child ' + 'before its parent includes it in onSetChildren().') : invariant(false) : void 0;
	        !(nextChild.displayName != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetDisplayName() to fire for the child ' + 'before its parent includes it in onSetChildren().') : invariant(false) : void 0;
	        !(nextChild.childIDs != null || nextChild.text != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child ' + 'before its parent includes it in onSetChildren().') : invariant(false) : void 0;
	        !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child ' + 'before its parent includes it in onSetChildren().') : invariant(false) : void 0;

	        if (prevChildIDs.indexOf(nextChildID) === -1) {
	          nextChild.parentID = id;
	        }
	      });
	    });
	  },
	  onSetOwner: function (id, ownerID) {
	    updateTree(id, function (item) {
	      return item.ownerID = ownerID;
	    });
	  },
	  onSetText: function (id, text) {
	    updateTree(id, function (item) {
	      return item.text = text;
	    });
	  },
	  onMountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = true;
	    });
	  },
	  onMountRootComponent: function (id) {
	    rootIDs.push(id);
	  },
	  onUpdateComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.updateCount++;
	    });
	  },
	  onUnmountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = false;
	    });
	    rootIDs = rootIDs.filter(function (rootID) {
	      return rootID !== id;
	    });
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeDevtool._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    Object.keys(tree).filter(function (id) {
	      return !tree[id].isMounted;
	    }).forEach(purgeDeep);
	  },
	  isMounted: function (id) {
	    var item = tree[id];
	    return item ? item.isMounted : false;
	  },
	  getChildIDs: function (id) {
	    var item = tree[id];
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var item = tree[id];
	    return item ? item.displayName : 'Unknown';
	  },
	  getOwnerID: function (id) {
	    var item = tree[id];
	    return item ? item.ownerID : null;
	  },
	  getParentID: function (id) {
	    var item = tree[id];
	    return item ? item.parentID : null;
	  },
	  getText: function (id) {
	    var item = tree[id];
	    return item ? item.text : null;
	  },
	  getUpdateCount: function (id) {
	    var item = tree[id];
	    return item ? item.updateCount : 0;
	  },
	  getRootIDs: function () {
	    return rootIDs;
	  },
	  getRegisteredIDs: function () {
	    return Object.keys(tree);
	  }
	};

	module.exports = ReactComponentTreeDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactComponent = __webpack_require__(16);
	var ReactElement = __webpack_require__(8);
	var ReactPropTypeLocations = __webpack_require__(28);
	var ReactPropTypeLocationNames = __webpack_require__(30);
	var ReactNoopUpdateQueue = __webpack_require__(17);

	var emptyObject = __webpack_require__(26);
	var invariant = __webpack_require__(7);
	var keyMirror = __webpack_require__(29);
	var keyOf = __webpack_require__(31);
	var warning = __webpack_require__(10);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}

	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : void 0;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : void 0;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }

	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.') : invariant(false) : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : void 0;

	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : void 0;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : void 0;

	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : void 0;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : void 0;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};

	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : void 0;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : void 0;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(29);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 31 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */

	'use strict';

	var ReactElement = __webpack_require__(8);
	var ReactElementValidator = __webpack_require__(33);

	var mapObject = __webpack_require__(34);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactElement = __webpack_require__(8);
	var ReactPropTypeLocations = __webpack_require__(28);
	var ReactPropTypeLocationNames = __webpack_require__(30);
	var ReactCurrentOwner = __webpack_require__(9);

	var canDefineProperty = __webpack_require__(12);
	var getIteratorFn = __webpack_require__(14);
	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	var loggedTypeFailures = {};

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
	  if (addenda === null) {
	    // we already showed the warning
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : void 0;
	}

	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} messageType A key used for de-duping warnings.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 * @returns {?object} A set of addenda to use in the warning message, or null
	 * if the warning has already been shown before (and shouldn't be shown again).
	 */
	function getAddendaForKeyUse(messageType, element, parentType) {
	  var addendum = getDeclarationErrorAddendum();
	  if (!addendum) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      addendum = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }

	  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
	  if (memoizer[addendum]) {
	    return null;
	  }
	  memoizer[addendum] = true;

	  var addenda = {
	    parentOrOwner: addendum,
	    url: ' See https://fb.me/react-warning-keys for more information.',
	    childOwner: null
	  };

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  return addenda;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : void 0;
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	var ReactElementValidator = {

	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 34 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(8);
	var ReactPropTypeLocationNames = __webpack_require__(30);

	var emptyFunction = __webpack_require__(11);
	var getIteratorFn = __webpack_require__(14);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ },
/* 36 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '15.1.0';

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var ReactElement = __webpack_require__(8);

	var invariant = __webpack_require__(7);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : void 0;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(39);


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDefaultInjection = __webpack_require__(43);
	var ReactMount = __webpack_require__(160);
	var ReactReconciler = __webpack_require__(62);
	var ReactUpdates = __webpack_require__(59);
	var ReactVersion = __webpack_require__(36);

	var findDOMNode = __webpack_require__(165);
	var getNativeComponentFromComposite = __webpack_require__(166);
	var renderSubtreeIntoContainer = __webpack_require__(167);
	var warning = __webpack_require__(10);

	ReactDefaultInjection.inject();

	var React = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getNativeComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(20);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */

	'use strict';

	var DOMProperty = __webpack_require__(41);
	var ReactDOMComponentFlags = __webpack_require__(42);

	var invariant = __webpack_require__(7);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Drill down (through composites and empty components) until we get a native or
	 * native text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedNativeOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_nativeNode` on the rendered native/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var nativeInst = getRenderedNativeOrTextFromComponent(inst);
	  nativeInst._nativeNode = node;
	  node[internalInstanceKey] = nativeInst;
	}

	function uncacheNode(inst) {
	  var node = inst._nativeNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._nativeNode = null;
	  }
	}

	/**
	 * Populate `_nativeNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedNativeOrTextFromComponent(childInst)._domID;
	    if (childID == null) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : invariant(false) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._nativeNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._nativeNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;

	  if (inst._nativeNode) {
	    return inst._nativeNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._nativeNode) {
	    parents.push(inst);
	    !inst._nativeParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : invariant(false) : void 0;
	    inst = inst._nativeParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._nativeNode);
	  }

	  return inst._nativeNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_SIDE_EFFECTS: 0x2,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };

	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : void 0;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : void 0;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 42 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(44);
	var ChangeEventPlugin = __webpack_require__(58);
	var DefaultEventPluginOrder = __webpack_require__(69);
	var EnterLeaveEventPlugin = __webpack_require__(70);
	var HTMLDOMPropertyConfig = __webpack_require__(75);
	var ReactComponentBrowserEnvironment = __webpack_require__(76);
	var ReactDOMComponent = __webpack_require__(90);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDOMEmptyComponent = __webpack_require__(131);
	var ReactDOMTreeTraversal = __webpack_require__(132);
	var ReactDOMTextComponent = __webpack_require__(133);
	var ReactDefaultBatchingStrategy = __webpack_require__(134);
	var ReactEventListener = __webpack_require__(135);
	var ReactInjection = __webpack_require__(138);
	var ReactReconcileTransaction = __webpack_require__(139);
	var SVGDOMPropertyConfig = __webpack_require__(147);
	var SelectEventPlugin = __webpack_require__(148);
	var SimpleEventPlugin = __webpack_require__(149);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(45);
	var EventPropagators = __webpack_require__(46);
	var ExecutionEnvironment = __webpack_require__(20);
	var FallbackCompositionState = __webpack_require__(53);
	var SyntheticCompositionEvent = __webpack_require__(55);
	var SyntheticInputEvent = __webpack_require__(57);

	var keyOf = __webpack_require__(31);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(29);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(45);
	var EventPluginHub = __webpack_require__(47);
	var EventPluginUtils = __webpack_require__(49);

	var accumulateInto = __webpack_require__(51);
	var forEachAccumulated = __webpack_require__(52);
	var warning = __webpack_require__(10);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var EventPluginRegistry = __webpack_require__(48);
	var EventPluginUtils = __webpack_require__(49);
	var ReactErrorUtils = __webpack_require__(50);

	var accumulateInto = __webpack_require__(51);
	var forEachAccumulated = __webpack_require__(52);
	var invariant = __webpack_require__(7);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : void 0;

	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[inst._rootNodeID] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[inst._rootNodeID];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[inst._rootNodeID];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][inst._rootNodeID]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][inst._rootNodeID];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var EventConstants = __webpack_require__(45);
	var ReactErrorUtils = __webpack_require__(50);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : void 0;
	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);

	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }

	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }

	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 52 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	var forEachAccumulated = function (arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};

	module.exports = forEachAccumulated;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(6);

	var getTextContentAccessor = __webpack_require__(54);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(20);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(56);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(6);

	var emptyFunction = __webpack_require__(11);
	var warning = __webpack_require__(10);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      var noop = __webpack_require__(11);
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', noop));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', noop));
	    }
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(56);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(45);
	var EventPluginHub = __webpack_require__(47);
	var EventPropagators = __webpack_require__(46);
	var ExecutionEnvironment = __webpack_require__(20);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactUpdates = __webpack_require__(59);
	var SyntheticEvent = __webpack_require__(56);

	var getEventTarget = __webpack_require__(66);
	var isEventSupported = __webpack_require__(67);
	var isTextInputElement = __webpack_require__(68);
	var keyOf = __webpack_require__(31);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}

	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}

	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;

	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }

	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}

	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var CallbackQueue = __webpack_require__(60);
	var PooledClass = __webpack_require__(6);
	var ReactFeatureFlags = __webpack_require__(61);
	var ReactInstrumentation = __webpack_require__(18);
	var ReactReconciler = __webpack_require__(62);
	var Transaction = __webpack_require__(65);

	var invariant = __webpack_require__(7);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }

	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	_assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  checkpoint: function () {
	    return this._callbacks ? this._callbacks.length : 0;
	  },

	  rollback: function (len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 61 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(63);
	var ReactInstrumentation = __webpack_require__(18);

	var invariant = __webpack_require__(7);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing native component instance
	   * @param {?object} info about the native container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, nativeParent, nativeContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, nativeParent, nativeContainerInfo, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getNativeNode: function (internalInstance) {
	    return internalInstance.getNativeNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      !(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : invariant(false) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }

	};

	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(64);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 66 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(20);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 68 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}

	module.exports = isTextInputElement;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(31);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(45);
	var EventPropagators = __webpack_require__(46);
	var ReactDOMComponentTree = __webpack_require__(40);
	var SyntheticMouseEvent = __webpack_require__(71);

	var keyOf = __webpack_require__(31);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(72);
	var ViewportMetrics = __webpack_require__(73);

	var getEventModifierState = __webpack_require__(74);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(56);

	var getEventTarget = __webpack_require__(66);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 73 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 74 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(41);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(77);
	var ReactDOMIDOperations = __webpack_require__(89);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {}

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(78);
	var Danger = __webpack_require__(84);
	var ReactMultiChildUpdateTypes = __webpack_require__(88);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactInstrumentation = __webpack_require__(18);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(80);
	var setInnerHTML = __webpack_require__(83);
	var setTextContent = __webpack_require__(81);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getNativeNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onNativeOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onNativeOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onNativeOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onNativeOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onNativeOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onNativeOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onNativeOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onNativeOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(79);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(80);
	var setTextContent = __webpack_require__(81);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    node.innerHTML = tree.html;
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    tree.node.innerHTML = html;
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ },
/* 79 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ },
/* 80 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(20);
	var escapeTextContentForBrowser = __webpack_require__(82);
	var setInnerHTML = __webpack_require__(83);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 82 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};

	var ESCAPE_REGEX = /[&><"']/g;

	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(20);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(80);

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  node.innerHTML = html;
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(78);
	var ExecutionEnvironment = __webpack_require__(20);

	var createNodesFromMarkup = __webpack_require__(85);
	var emptyFunction = __webpack_require__(11);
	var getMarkupWrap = __webpack_require__(87);
	var invariant = __webpack_require__(7);

	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';

	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}

	var Danger = {

	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function (markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : void 0;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : void 0;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];

	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];

	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }

	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );

	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);

	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : void 0;

	          resultList[resultIndex] = renderNode;

	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }

	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : void 0;

	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : void 0;

	    return resultList;
	  },

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }

	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(20);

	var createArrayFromMixed = __webpack_require__(86);
	var getMarkupWrap = __webpack_require__(87);
	var invariant = __webpack_require__(7);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var invariant = __webpack_require__(7);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(20);

	var invariant = __webpack_require__(7);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(29);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(77);
	var ReactDOMComponentTree = __webpack_require__(40);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _assign = __webpack_require__(4);

	var AutoFocusUtils = __webpack_require__(91);
	var CSSPropertyOperations = __webpack_require__(93);
	var DOMLazyTree = __webpack_require__(78);
	var DOMNamespaces = __webpack_require__(79);
	var DOMProperty = __webpack_require__(41);
	var DOMPropertyOperations = __webpack_require__(101);
	var EventConstants = __webpack_require__(45);
	var EventPluginHub = __webpack_require__(47);
	var EventPluginRegistry = __webpack_require__(48);
	var ReactBrowserEventEmitter = __webpack_require__(106);
	var ReactComponentBrowserEnvironment = __webpack_require__(76);
	var ReactDOMButton = __webpack_require__(109);
	var ReactDOMComponentFlags = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDOMInput = __webpack_require__(111);
	var ReactDOMOption = __webpack_require__(113);
	var ReactDOMSelect = __webpack_require__(114);
	var ReactDOMTextarea = __webpack_require__(115);
	var ReactInstrumentation = __webpack_require__(18);
	var ReactMultiChild = __webpack_require__(116);
	var ReactServerRenderingTransaction = __webpack_require__(128);

	var emptyFunction = __webpack_require__(11);
	var escapeTextContentForBrowser = __webpack_require__(82);
	var invariant = __webpack_require__(7);
	var isEventSupported = __webpack_require__(67);
	var keyOf = __webpack_require__(31);
	var shallowEqual = __webpack_require__(129);
	var validateDOMNesting = __webpack_require__(130);
	var warning = __webpack_require__(10);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : invariant(false) : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._nativeContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setContentChildForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setContentChildForInstrumentation = function (contentToUse) {
	    var debugID = this._debugID;
	    var contentDebugID = debugID + '#text';
	    this._contentDebugID = contentDebugID;
	    ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
	    ReactInstrumentation.debugTool.onSetText(contentDebugID, '' + contentToUse);
	    ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	    ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }

	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._nativeNode = null;
	  this._nativeParent = null;
	  this._rootNodeID = null;
	  this._domID = null;
	  this._nativeContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    this._contentDebugID = null;
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the containing DOM component instance
	   * @param {?object} info about the native container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = nativeContainerInfo._idCounter++;
	    this._nativeParent = nativeParent;
	    this._nativeContainerInfo = nativeContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'iframe':
	      case 'object':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, nativeParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, nativeParent);
	        props = ReactDOMInput.getNativeProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, nativeParent);
	        props = ReactDOMOption.getNativeProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, nativeParent);
	        props = ReactDOMSelect.getNativeProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, nativeParent);
	        props = ReactDOMTextarea.getNativeProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (nativeParent != null) {
	      namespaceURI = nativeParent._namespaceURI;
	      parentTag = nativeParent._tag;
	    } else if (nativeContainerInfo._tag) {
	      namespaceURI = nativeContainerInfo._namespaceURI;
	      parentTag = nativeContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (nativeParent != null) {
	        parentInfo = nativeParent._ancestorInfo;
	      } else if (nativeContainerInfo._tag) {
	        parentInfo = nativeContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = nativeContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else {
	          el = ownerDocument.createElement(this._currentElement.type, props.is || null);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._nativeParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'button':
	      case 'input':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._nativeParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          this._contentDebugID = this._debugID + '#text';
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._contentDebugID) {
	          ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	          this._contentDebugID = null;
	        }
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getNativeNode: function () {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'iframe':
	      case 'object':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._domID = null;
	    this._wrapperState = null;

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._contentDebugID) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	        this._contentDebugID = null;
	      }
	    }
	  },

	  getPublicInstance: function () {
	    return getNode(this);
	  }

	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(40);

	var focusNode = __webpack_require__(92);

	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 92 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */

	'use strict';

	var CSSProperty = __webpack_require__(94);
	var ExecutionEnvironment = __webpack_require__(20);
	var ReactInstrumentation = __webpack_require__(18);

	var camelizeStyleName = __webpack_require__(95);
	var dangerousStyleValue = __webpack_require__(97);
	var hyphenateStyleName = __webpack_require__(98);
	var memoizeStringOnly = __webpack_require__(100);
	var warning = __webpack_require__(10);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onNativeOperation(component._debugID, 'update styles', styles);
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 94 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(96);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 96 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */

	'use strict';

	var CSSProperty = __webpack_require__(94);
	var warning = __webpack_require__(10);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      if (component) {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(99);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 99 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 100 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */

	'use strict';

	var DOMProperty = __webpack_require__(41);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDOMInstrumentation = __webpack_require__(102);
	var ReactInstrumentation = __webpack_require__(18);

	var quoteAttributeValueForBrowser = __webpack_require__(105);
	var warning = __webpack_require__(10);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
	    }
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onNativeOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onNativeOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          // No HAS_SIDE_EFFECTS logic here, only `value` has it and is string.
	          node[propName] = false;
	        } else {
	          if (!propertyInfo.hasSideEffects || '' + node[propName] !== '') {
	            node[propName] = '';
	          }
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onNativeOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInstrumentation
	 */

	'use strict';

	var ReactDOMDebugTool = __webpack_require__(103);

	module.exports = { debugTool: ReactDOMDebugTool };

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMDebugTool
	 */

	'use strict';

	var ReactDOMUnknownPropertyDevtool = __webpack_require__(104);

	var warning = __webpack_require__(10);

	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};

	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  if (process.env.NODE_ENV !== 'production') {
	    eventHandlers.forEach(function (handler) {
	      try {
	        if (handler[handlerFunctionName]) {
	          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	        }
	      } catch (e) {
	        process.env.NODE_ENV !== 'production' ? warning(!handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e.message) : void 0;
	        handlerDoesThrowForEvent[handlerFunctionName] = true;
	      }
	    });
	  }
	}

	var ReactDOMDebugTool = {
	  addDevtool: function (devtool) {
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function (devtool) {
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  onCreateMarkupForProperty: function (name, value) {
	    emitEvent('onCreateMarkupForProperty', name, value);
	  },
	  onSetValueForProperty: function (node, name, value) {
	    emitEvent('onSetValueForProperty', node, name, value);
	  },
	  onDeleteValueForProperty: function (node, name) {
	    emitEvent('onDeleteValueForProperty', node, name);
	  }
	};

	ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);

	module.exports = ReactDOMDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMUnknownPropertyDevtool
	 */

	'use strict';

	var DOMProperty = __webpack_require__(41);
	var EventPluginRegistry = __webpack_require__(48);

	var warning = __webpack_require__(10);

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};

	  var warnUnknownProperty = function (name) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }

	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : void 0;

	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

	    process.env.NODE_ENV !== 'production' ? warning(registrationName == null, 'Unknown event handler property %s. Did you mean `%s`?', name, registrationName) : void 0;
	  };
	}

	var ReactDOMUnknownPropertyDevtool = {
	  onCreateMarkupForProperty: function (name, value) {
	    warnUnknownProperty(name);
	  },
	  onSetValueForProperty: function (node, name, value) {
	    warnUnknownProperty(name);
	  },
	  onDeleteValueForProperty: function (node, name) {
	    warnUnknownProperty(name);
	  }
	};

	module.exports = ReactDOMUnknownPropertyDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(82);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var EventConstants = __webpack_require__(45);
	var EventPluginRegistry = __webpack_require__(48);
	var ReactEventEmitterMixin = __webpack_require__(107);
	var ViewportMetrics = __webpack_require__(73);

	var getVendorPrefixedEventName = __webpack_require__(108);
	var isEventSupported = __webpack_require__(67);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }

	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(47);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(20);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var DisabledInputUtils = __webpack_require__(110);

	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: DisabledInputUtils.getNativeProps
	};

	module.exports = ReactDOMButton;

/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */

	'use strict';

	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getNativeProps: function (inst, props) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        nativeProps[key] = props[key];
	      }
	    }

	    return nativeProps;
	  }
	};

	module.exports = DisabledInputUtils;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var DisabledInputUtils = __webpack_require__(110);
	var DOMPropertyOperations = __webpack_require__(101);
	var LinkedValueUtils = __webpack_require__(112);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactUpdates = __webpack_require__(59);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueNull = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function warnIfValueIsNull(props) {
	  if (props != null && props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `input` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;

	    didWarnValueNull = true;
	  }
	}

	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var nativeProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined
	    }, DisabledInputUtils.getNativeProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	      warnIfValueIsNull(props);
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };

	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = props.checked !== undefined || props.value !== undefined;
	    }
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (process.env.NODE_ENV !== 'production') {
	      warnIfValueIsNull(props);

	      var initialValue = inst._wrapperState.initialChecked || inst._wrapperState.initialValue;
	      var defaultValue = props.defaultChecked || props.defaultValue;
	      var controlled = props.checked !== undefined || props.value !== undefined;
	      var owner = inst._currentElement._owner;

	      if ((initialValue || !inst._wrapperState.controlled) && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && (defaultValue || !controlled) && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */

	'use strict';

	var ReactPropTypes = __webpack_require__(35);
	var ReactPropTypeLocations = __webpack_require__(28);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : void 0;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactChildren = __webpack_require__(5);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDOMSelect = __webpack_require__(114);

	var warning = __webpack_require__(10);

	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, nativeParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (nativeParent != null) {
	      var selectParent = nativeParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._nativeParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getNativeProps: function (inst, props) {
	    var nativeProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }

	    var content = '';

	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	      }
	    });

	    if (content) {
	      nativeProps.children = content;
	    }

	    return nativeProps;
	  }

	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var DisabledInputUtils = __webpack_require__(110);
	var LinkedValueUtils = __webpack_require__(112);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactUpdates = __webpack_require__(59);

	var warning = __webpack_require__(10);

	var didWarnValueLink = false;
	var didWarnValueNull = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function warnIfValueIsNull(props) {
	  if (props != null && props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `select` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;

	    didWarnValueNull = true;
	  }
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getNativeProps: function (inst, props) {
	    return _assign({}, DisabledInputUtils.getNativeProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	      warnIfValueIsNull(props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	    if (process.env.NODE_ENV !== 'production') {
	      warnIfValueIsNull(props);
	    }

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var DisabledInputUtils = __webpack_require__(110);
	var DOMPropertyOperations = __webpack_require__(101);
	var LinkedValueUtils = __webpack_require__(112);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactUpdates = __webpack_require__(59);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var didWarnValueLink = false;
	var didWarnValueNull = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	function warnIfValueIsNull(props) {
	  if (props != null && props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `textarea` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;

	    didWarnValueNull = true;
	  }
	}

	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = _assign({}, DisabledInputUtils.getNativeProps(inst, props), {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return nativeProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	      warnIfValueIsNull(props);
	    }

	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	      }
	      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : void 0;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : void 0;
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (process.env.NODE_ENV !== 'production') {
	      warnIfValueIsNull(props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'value', '' + value);
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(117);
	var ReactInstrumentation = __webpack_require__(18);
	var ReactMultiChildUpdateTypes = __webpack_require__(88);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactReconciler = __webpack_require__(62);
	var ReactChildReconciler = __webpack_require__(118);

	var emptyFunction = __webpack_require__(11);
	var flattenChildren = __webpack_require__(127);
	var invariant = __webpack_require__(7);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getNativeNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setChildrenForInstrumentation = function (children) {
	    ReactInstrumentation.debugTool.onSetChildren(this._debugID, children ? Object.keys(children).map(function (key) {
	      return children[key]._debugID;
	    }) : []);
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, removedNodes, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._nativeContainerInfo, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : invariant(false) : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : invariant(false) : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, lastPlacedNode, nextIndex, transaction, context));
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getNativeNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, afterNode, index, transaction, context) {
	      var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._nativeContainerInfo, context);
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }

	  }

	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : void 0;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(62);

	var instantiateReactComponent = __webpack_require__(119);
	var KeyEscapeUtils = __webpack_require__(15);
	var shouldUpdateReactComponent = __webpack_require__(124);
	var traverseAllChildren = __webpack_require__(13);
	var warning = __webpack_require__(10);

	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', KeyEscapeUtils.unescape(name)) : void 0;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, removedNodes, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getNativeNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getNativeNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactCompositeComponent = __webpack_require__(120);
	var ReactEmptyComponent = __webpack_require__(125);
	var ReactNativeComponent = __webpack_require__(126);
	var ReactInstrumentation = __webpack_require__(18);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function getDisplayName(instance) {
	  var element = instance._currentElement;
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else if (instance.getName) {
	    return instance.getName() || 'Unknown';
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	var nextDebugID = 1;

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;

	  var isEmpty = node === null || node === false;
	  if (isEmpty) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : void 0;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : void 0;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getNativeNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    var debugID = isEmpty ? 0 : nextDebugID++;
	    instance._debugID = debugID;

	    if (debugID !== 0) {
	      var displayName = getDisplayName(instance);
	      ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
	      var owner = node && node._owner;
	      if (owner) {
	        ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
	      }
	    }
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactComponentEnvironment = __webpack_require__(117);
	var ReactCurrentOwner = __webpack_require__(9);
	var ReactElement = __webpack_require__(8);
	var ReactErrorUtils = __webpack_require__(50);
	var ReactInstanceMap = __webpack_require__(121);
	var ReactInstrumentation = __webpack_require__(18);
	var ReactNodeTypes = __webpack_require__(122);
	var ReactPropTypeLocations = __webpack_require__(28);
	var ReactPropTypeLocationNames = __webpack_require__(30);
	var ReactReconciler = __webpack_require__(62);
	var ReactUpdateQueue = __webpack_require__(123);

	var emptyObject = __webpack_require__(26);
	var invariant = __webpack_require__(7);
	var shouldUpdateReactComponent = __webpack_require__(124);
	var warning = __webpack_require__(10);

	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}

	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}

	function shouldConstruct(Component) {
	  return Component.prototype && Component.prototype.isReactComponent;
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	    this._nativeParent = null;
	    this._nativeContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} nativeParent
	   * @param {?object} nativeContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._nativeParent = nativeParent;
	    this._nativeContainerInfo = nativeContainerInfo;

	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    // Initialize the public class
	    var inst = this._constructComponent(publicProps, publicContext);
	    var renderedElement;

	    // Support functional components
	    if (!shouldConstruct(Component) && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : invariant(false) : void 0;
	      inst = new StatelessComponent(Component);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function (publicProps, publicContext) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(publicProps, publicContext);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(publicProps, publicContext);
	    }
	  },

	  _constructComponentWithoutOwner: function (publicProps, publicContext) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (shouldConstruct(Component)) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, ReactUpdateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, ReactUpdateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },

	  performInitialMountWithErrorHandling: function (renderedElement, nativeParent, nativeContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function (renderedElement, nativeParent, nativeContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    this._renderedNodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedComponent = this._instantiateReactComponent(renderedElement);

	    var markup = ReactReconciler.mountComponent(this._renderedComponent, transaction, nativeParent, nativeContainerInfo, this._processChildContext(context));

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, this._renderedComponent._debugID !== 0 ? [this._renderedComponent._debugID] : []);
	      }
	    }

	    return markup;
	  },

	  getNativeNode: function () {
	    return ReactReconciler.getNativeNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function (newProps) {
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },

	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function (propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : void 0;
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);

	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : void 0;
	          } else {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : void 0;
	          }
	        }
	      }
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    var willReceive = false;
	    var nextContext;
	    var nextProps;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate && inst.shouldComponentUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	      shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldNativeNode = ReactReconciler.getNativeNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      this._renderedNodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);

	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, transaction, this._nativeParent, this._nativeContainerInfo, this._processChildContext(context));

	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, this._renderedComponent._debugID !== 0 ? [this._renderedComponent._debugID] : []);
	        }
	      }

	      this._replaceNodeWithMarkup(oldNativeNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldNativeNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldNativeNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;

	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 121 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(8);

	var invariant = __webpack_require__(7);

	var ReactNodeTypes = {
	  NATIVE: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.NATIVE;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : invariant(false) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactInstanceMap = __webpack_require__(121);
	var ReactUpdates = __webpack_require__(59);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : void 0;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function (internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : invariant(false) : void 0;
	  }

	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 124 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 125 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var invariant = __webpack_require__(7);

	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}

	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};

	module.exports = ReactNativeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */

	'use strict';

	var KeyEscapeUtils = __webpack_require__(15);
	var traverseAllChildren = __webpack_require__(13);
	var warning = __webpack_require__(10);

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', KeyEscapeUtils.unescape(name)) : void 0;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(6);
	var Transaction = __webpack_require__(65);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	var noopCallbackQueue = {
	  enqueue: function () {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},

	  checkpoint: function () {},

	  rollback: function () {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 129 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var emptyFunction = __webpack_require__(11);
	var warning = __webpack_require__(10);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var DOMLazyTree = __webpack_require__(78);
	var ReactDOMComponentTree = __webpack_require__(40);

	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._nativeNode = null;
	  this._nativeParent = null;
	  this._nativeContainerInfo = null;
	  this._domID = null;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
	    var domID = nativeContainerInfo._idCounter++;
	    this._domID = domID;
	    this._nativeParent = nativeParent;
	    this._nativeContainerInfo = nativeContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = nativeContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getNativeNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_nativeNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;
	  !('_nativeNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._nativeParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._nativeParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._nativeParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._nativeParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._nativeParent;
	    instB = instB._nativeParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_nativeNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : invariant(false) : void 0;
	  !('_nativeNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : invariant(false) : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._nativeParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_nativeNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : invariant(false) : void 0;

	  return inst._nativeParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._nativeParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._nativeParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._nativeParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var DOMChildrenOperations = __webpack_require__(77);
	var DOMLazyTree = __webpack_require__(78);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactInstrumentation = __webpack_require__(18);

	var escapeTextContentForBrowser = __webpack_require__(82);
	var invariant = __webpack_require__(7);
	var validateDOMNesting = __webpack_require__(130);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._nativeNode = null;
	  this._nativeParent = null;

	  // Properties
	  this._domID = null;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);

	      var parentInfo;
	      if (nativeParent != null) {
	        parentInfo = nativeParent._ancestorInfo;
	      } else if (nativeContainerInfo != null) {
	        parentInfo = nativeContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }

	    var domID = nativeContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._nativeParent = nativeParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = nativeContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getNativeNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);

	        if (process.env.NODE_ENV !== 'production') {
	          ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
	        }
	      }
	    }
	  },

	  getNativeNode: function () {
	    var nativeNode = this._commentNodes;
	    if (nativeNode) {
	      return nativeNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : invariant(false) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    nativeNode = [this._nativeNode, this._closingComment];
	    this._commentNodes = nativeNode;
	    return nativeNode;
	  },

	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }

	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactUpdates = __webpack_require__(59);
	var Transaction = __webpack_require__(65);

	var emptyFunction = __webpack_require__(11);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var EventListener = __webpack_require__(136);
	var ExecutionEnvironment = __webpack_require__(20);
	var PooledClass = __webpack_require__(6);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactUpdates = __webpack_require__(59);

	var getEventTarget = __webpack_require__(66);
	var getUnboundedScrollPosition = __webpack_require__(137);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._nativeParent) {
	    inst = inst._nativeParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(11);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 137 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(41);
	var EventPluginHub = __webpack_require__(47);
	var EventPluginUtils = __webpack_require__(49);
	var ReactComponentEnvironment = __webpack_require__(117);
	var ReactClass = __webpack_require__(27);
	var ReactEmptyComponent = __webpack_require__(125);
	var ReactBrowserEventEmitter = __webpack_require__(106);
	var ReactNativeComponent = __webpack_require__(126);
	var ReactUpdates = __webpack_require__(59);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var CallbackQueue = __webpack_require__(60);
	var PooledClass = __webpack_require__(6);
	var ReactBrowserEventEmitter = __webpack_require__(106);
	var ReactInputSelection = __webpack_require__(140);
	var Transaction = __webpack_require__(65);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(141);

	var containsNode = __webpack_require__(143);
	var focusNode = __webpack_require__(92);
	var getActiveElement = __webpack_require__(146);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(20);

	var getNodeForCharacterOffset = __webpack_require__(142);
	var getTextContentAccessor = __webpack_require__(54);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 142 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(144);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(145);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 145 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 146 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 147 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(45);
	var EventPropagators = __webpack_require__(46);
	var ExecutionEnvironment = __webpack_require__(20);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactInputSelection = __webpack_require__(140);
	var SyntheticEvent = __webpack_require__(56);

	var getActiveElement = __webpack_require__(146);
	var isTextInputElement = __webpack_require__(68);
	var keyOf = __webpack_require__(31);
	var shallowEqual = __webpack_require__(129);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(45);
	var EventListener = __webpack_require__(136);
	var EventPropagators = __webpack_require__(46);
	var ReactDOMComponentTree = __webpack_require__(40);
	var SyntheticAnimationEvent = __webpack_require__(150);
	var SyntheticClipboardEvent = __webpack_require__(151);
	var SyntheticEvent = __webpack_require__(56);
	var SyntheticFocusEvent = __webpack_require__(152);
	var SyntheticKeyboardEvent = __webpack_require__(153);
	var SyntheticMouseEvent = __webpack_require__(71);
	var SyntheticDragEvent = __webpack_require__(156);
	var SyntheticTouchEvent = __webpack_require__(157);
	var SyntheticTransitionEvent = __webpack_require__(158);
	var SyntheticUIEvent = __webpack_require__(72);
	var SyntheticWheelEvent = __webpack_require__(159);

	var emptyFunction = __webpack_require__(11);
	var getEventCharCode = __webpack_require__(154);
	var invariant = __webpack_require__(7);
	var keyOf = __webpack_require__(31);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(56);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(56);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(72);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(72);

	var getEventCharCode = __webpack_require__(154);
	var getEventKey = __webpack_require__(155);
	var getEventModifierState = __webpack_require__(74);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 154 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(154);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(71);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(72);

	var getEventModifierState = __webpack_require__(74);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(56);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(71);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(78);
	var DOMProperty = __webpack_require__(41);
	var ReactBrowserEventEmitter = __webpack_require__(106);
	var ReactCurrentOwner = __webpack_require__(9);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactDOMContainerInfo = __webpack_require__(161);
	var ReactDOMFeatureFlags = __webpack_require__(162);
	var ReactElement = __webpack_require__(8);
	var ReactFeatureFlags = __webpack_require__(61);
	var ReactInstrumentation = __webpack_require__(18);
	var ReactMarkupChecksum = __webpack_require__(163);
	var ReactReconciler = __webpack_require__(62);
	var ReactUpdateQueue = __webpack_require__(123);
	var ReactUpdates = __webpack_require__(59);

	var emptyObject = __webpack_require__(26);
	var instantiateReactComponent = __webpack_require__(119);
	var invariant = __webpack_require__(7);
	var setInnerHTML = __webpack_require__(83);
	var shouldUpdateReactComponent = __webpack_require__(124);
	var warning = __webpack_require__(10);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  ReactReconciler.unmountComponent(instance, safely);

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._nativeParent);
	  }
	}

	function getNativeRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevNativeInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevNativeInstance && !prevNativeInstance._nativeParent ? prevNativeInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getNativeRootInstanceInContainer(container);
	  return root ? root._nativeContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by devtools!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginFlush();
	    }

	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement);

	    if (process.env.NODE_ENV !== 'production') {
	      // Mute future events from the top level wrapper.
	      // It is an implementation detail that devtools should not know about.
	      componentInstance._debugID = 0;
	    }

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    if (process.env.NODE_ENV !== 'production') {
	      // The instance here is TopLevelWrapper so we report mount for its child.
	      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
	      ReactInstrumentation.debugTool.onEndFlush();
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : void 0;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : void 0;

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : void 0;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var nativeNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (nativeNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onNativeOperation(nativeNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(130);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 162 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(164);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 164 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactDOMComponentTree = __webpack_require__(40);
	var ReactInstanceMap = __webpack_require__(121);

	var getNativeComponentFromComposite = __webpack_require__(166);
	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getNativeComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : void 0;
	  }
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNativeComponentFromComposite
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(122);

	function getNativeComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.NATIVE) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getNativeComponentFromComposite;

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(160);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _immutable = __webpack_require__(169);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _results = __webpack_require__(170);

	var _spindleUi = __webpack_require__(171);

	var _spindleUi2 = _interopRequireDefault(_spindleUi);

	var _tile = __webpack_require__(172);

	var _tile2 = _interopRequireDefault(_tile);

	var _chain = __webpack_require__(173);

	var _chain2 = _interopRequireDefault(_chain);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var selectRandom = function selectRandom(dict) {
	  var dictionary = Object.keys(dict);
	  return dictionary[Math.random() * dictionary.length | 0];
	};

	var sample = function sample(dict, n) {
	  return _immutable2.default.Range(0, n).map(function () {
	    return selectRandom(dict);
	  });
	};

	var predictions = function predictions(word, n) {
	  console.log(word);
	  var options = _chain2.default[word];
	  if (options !== undefined) {
	    return _immutable2.default.OrderedSet(sample(options, n));
	  }
	  return _immutable2.default.OrderedSet(sample(_chain2.default, n));
	};

	var Action = (0, _results.Union)({
	  Add: {},
	  Remove: null
	});

	var stopwords = _immutable2.default.OrderedSet(['a', 's', 'i', 'is', 'me', 'an', 'ing', 'ly', 'ed', 'you', 'the', 'and', 'this', '.', ',', '!', '?', '—', 'line break']);

	var Model = (0, _immutable.Record)({
	  words: _immutable2.default.List([]),
	  options: _immutable2.default.OrderedSet(sample(_chain2.default, 25))
	});

	var init = function init() {
	  return (0, _spindleUi.Update)({ model: Model() });
	};

	var update = function update(action, model) {
	  return Action.match(action, {
	    Add: function Add(word) {
	      return (0, _spindleUi.Update)({
	        model: model.update('words', function (list) {
	          return list.push({
	            id: list.size,
	            word: word.toString()
	          });
	        }).update('options', function (list) {
	          return list.delete(word).takeLast(25).merge(predictions(word, 4));
	        }) });
	    },
	    Remove: function Remove() {
	      return (0, _spindleUi.Update)({ model: model.update('words', function (list) {
	          return list.pop();
	        }) });
	    }
	  });
	};

	var view = function view(model, dispatch) {
	  return _react2.default.createElement(
	    'div',
	    { style: {
	        height: '90vh',
	        display: 'flex',
	        flexDirection: 'column',
	        justifyContent: 'space-around'
	      } },
	    _react2.default.createElement(
	      'div',
	      { style: {
	          width: '350px',
	          maxWidth: '100%',
	          margin: 'auto'
	        } },
	      model.get('words').map(function (item) {
	        return _react2.default.createElement(_tile2.default, { text: item.word, key: item.id });
	      }).toArray()
	    ),
	    _react2.default.createElement(
	      'p',
	      { style: {
	          display: 'flex',
	          flexWrap: 'wrap',
	          flexDirection: 'row-reverse',
	          justifyContent: 'flex-end'
	        } },
	      model.get('options').merge(stopwords).map(function (word) {
	        return _react2.default.createElement(_tile2.default, { key: word, text: word, onEmit: dispatch.Add });
	      }).toArray(),
	      _react2.default.createElement(_tile2.default, { text: 'backspace', onEmit: dispatch.Remove })
	    )
	  );
	};

	exports.default = (0, _spindleUi2.default)('Fridge', { Action: Action, init: init, update: update, view: view });

	/////////////////////////////////////////////////////

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 *  Copyright (c) 2014-2015, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 */

	(function (global, factory) {
	   true ? module.exports = factory() :
	  typeof define === 'function' && define.amd ? define(factory) :
	  (global.Immutable = factory());
	}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;

	  function createClass(ctor, superClass) {
	    if (superClass) {
	      ctor.prototype = Object.create(superClass.prototype);
	    }
	    ctor.prototype.constructor = ctor;
	  }

	  function Iterable(value) {
	      return isIterable(value) ? value : Seq(value);
	    }


	  createClass(KeyedIterable, Iterable);
	    function KeyedIterable(value) {
	      return isKeyed(value) ? value : KeyedSeq(value);
	    }


	  createClass(IndexedIterable, Iterable);
	    function IndexedIterable(value) {
	      return isIndexed(value) ? value : IndexedSeq(value);
	    }


	  createClass(SetIterable, Iterable);
	    function SetIterable(value) {
	      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
	    }



	  function isIterable(maybeIterable) {
	    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
	  }

	  function isKeyed(maybeKeyed) {
	    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
	  }

	  function isIndexed(maybeIndexed) {
	    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
	  }

	  function isAssociative(maybeAssociative) {
	    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
	  }

	  function isOrdered(maybeOrdered) {
	    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
	  }

	  Iterable.isIterable = isIterable;
	  Iterable.isKeyed = isKeyed;
	  Iterable.isIndexed = isIndexed;
	  Iterable.isAssociative = isAssociative;
	  Iterable.isOrdered = isOrdered;

	  Iterable.Keyed = KeyedIterable;
	  Iterable.Indexed = IndexedIterable;
	  Iterable.Set = SetIterable;


	  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  // Used for setting prototype methods that IE8 chokes on.
	  var DELETE = 'delete';

	  // Constants describing the size of trie nodes.
	  var SHIFT = 5; // Resulted in best performance after ______?
	  var SIZE = 1 << SHIFT;
	  var MASK = SIZE - 1;

	  // A consistent shared value representing "not set" which equals nothing other
	  // than itself, and nothing that could be provided externally.
	  var NOT_SET = {};

	  // Boolean references, Rough equivalent of `bool &`.
	  var CHANGE_LENGTH = { value: false };
	  var DID_ALTER = { value: false };

	  function MakeRef(ref) {
	    ref.value = false;
	    return ref;
	  }

	  function SetRef(ref) {
	    ref && (ref.value = true);
	  }

	  // A function which returns a value representing an "owner" for transient writes
	  // to tries. The return value will only ever equal itself, and will not equal
	  // the return of any subsequent call of this function.
	  function OwnerID() {}

	  // http://jsperf.com/copy-array-inline
	  function arrCopy(arr, offset) {
	    offset = offset || 0;
	    var len = Math.max(0, arr.length - offset);
	    var newArr = new Array(len);
	    for (var ii = 0; ii < len; ii++) {
	      newArr[ii] = arr[ii + offset];
	    }
	    return newArr;
	  }

	  function ensureSize(iter) {
	    if (iter.size === undefined) {
	      iter.size = iter.__iterate(returnTrue);
	    }
	    return iter.size;
	  }

	  function wrapIndex(iter, index) {
	    // This implements "is array index" which the ECMAString spec defines as:
	    //
	    //     A String property name P is an array index if and only if
	    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
	    //     to 2^32−1.
	    //
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
	    if (typeof index !== 'number') {
	      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
	      if ('' + uint32Index !== index || uint32Index === 4294967295) {
	        return NaN;
	      }
	      index = uint32Index;
	    }
	    return index < 0 ? ensureSize(iter) + index : index;
	  }

	  function returnTrue() {
	    return true;
	  }

	  function wholeSlice(begin, end, size) {
	    return (begin === 0 || (size !== undefined && begin <= -size)) &&
	      (end === undefined || (size !== undefined && end >= size));
	  }

	  function resolveBegin(begin, size) {
	    return resolveIndex(begin, size, 0);
	  }

	  function resolveEnd(end, size) {
	    return resolveIndex(end, size, size);
	  }

	  function resolveIndex(index, size, defaultIndex) {
	    return index === undefined ?
	      defaultIndex :
	      index < 0 ?
	        Math.max(0, size + index) :
	        size === undefined ?
	          index :
	          Math.min(size, index);
	  }

	  /* global Symbol */

	  var ITERATE_KEYS = 0;
	  var ITERATE_VALUES = 1;
	  var ITERATE_ENTRIES = 2;

	  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator';

	  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


	  function Iterator(next) {
	      this.next = next;
	    }

	    Iterator.prototype.toString = function() {
	      return '[Iterator]';
	    };


	  Iterator.KEYS = ITERATE_KEYS;
	  Iterator.VALUES = ITERATE_VALUES;
	  Iterator.ENTRIES = ITERATE_ENTRIES;

	  Iterator.prototype.inspect =
	  Iterator.prototype.toSource = function () { return this.toString(); }
	  Iterator.prototype[ITERATOR_SYMBOL] = function () {
	    return this;
	  };


	  function iteratorValue(type, k, v, iteratorResult) {
	    var value = type === 0 ? k : type === 1 ? v : [k, v];
	    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {
	      value: value, done: false
	    });
	    return iteratorResult;
	  }

	  function iteratorDone() {
	    return { value: undefined, done: true };
	  }

	  function hasIterator(maybeIterable) {
	    return !!getIteratorFn(maybeIterable);
	  }

	  function isIterator(maybeIterator) {
	    return maybeIterator && typeof maybeIterator.next === 'function';
	  }

	  function getIterator(iterable) {
	    var iteratorFn = getIteratorFn(iterable);
	    return iteratorFn && iteratorFn.call(iterable);
	  }

	  function getIteratorFn(iterable) {
	    var iteratorFn = iterable && (
	      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
	      iterable[FAUX_ITERATOR_SYMBOL]
	    );
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  function isArrayLike(value) {
	    return value && typeof value.length === 'number';
	  }

	  createClass(Seq, Iterable);
	    function Seq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        isIterable(value) ? value.toSeq() : seqFromValue(value);
	    }

	    Seq.of = function(/*...values*/) {
	      return Seq(arguments);
	    };

	    Seq.prototype.toSeq = function() {
	      return this;
	    };

	    Seq.prototype.toString = function() {
	      return this.__toString('Seq {', '}');
	    };

	    Seq.prototype.cacheResult = function() {
	      if (!this._cache && this.__iterateUncached) {
	        this._cache = this.entrySeq().toArray();
	        this.size = this._cache.length;
	      }
	      return this;
	    };

	    // abstract __iterateUncached(fn, reverse)

	    Seq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, true);
	    };

	    // abstract __iteratorUncached(type, reverse)

	    Seq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, true);
	    };



	  createClass(KeyedSeq, Seq);
	    function KeyedSeq(value) {
	      return value === null || value === undefined ?
	        emptySequence().toKeyedSeq() :
	        isIterable(value) ?
	          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :
	          keyedSeqFromValue(value);
	    }

	    KeyedSeq.prototype.toKeyedSeq = function() {
	      return this;
	    };



	  createClass(IndexedSeq, Seq);
	    function IndexedSeq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
	    }

	    IndexedSeq.of = function(/*...values*/) {
	      return IndexedSeq(arguments);
	    };

	    IndexedSeq.prototype.toIndexedSeq = function() {
	      return this;
	    };

	    IndexedSeq.prototype.toString = function() {
	      return this.__toString('Seq [', ']');
	    };

	    IndexedSeq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, false);
	    };

	    IndexedSeq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, false);
	    };



	  createClass(SetSeq, Seq);
	    function SetSeq(value) {
	      return (
	        value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value
	      ).toSetSeq();
	    }

	    SetSeq.of = function(/*...values*/) {
	      return SetSeq(arguments);
	    };

	    SetSeq.prototype.toSetSeq = function() {
	      return this;
	    };



	  Seq.isSeq = isSeq;
	  Seq.Keyed = KeyedSeq;
	  Seq.Set = SetSeq;
	  Seq.Indexed = IndexedSeq;

	  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

	  Seq.prototype[IS_SEQ_SENTINEL] = true;



	  createClass(ArraySeq, IndexedSeq);
	    function ArraySeq(array) {
	      this._array = array;
	      this.size = array.length;
	    }

	    ArraySeq.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
	    };

	    ArraySeq.prototype.__iterate = function(fn, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ArraySeq.prototype.__iterator = function(type, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}
	      );
	    };



	  createClass(ObjectSeq, KeyedSeq);
	    function ObjectSeq(object) {
	      var keys = Object.keys(object);
	      this._object = object;
	      this._keys = keys;
	      this.size = keys.length;
	    }

	    ObjectSeq.prototype.get = function(key, notSetValue) {
	      if (notSetValue !== undefined && !this.has(key)) {
	        return notSetValue;
	      }
	      return this._object[key];
	    };

	    ObjectSeq.prototype.has = function(key) {
	      return this._object.hasOwnProperty(key);
	    };

	    ObjectSeq.prototype.__iterate = function(fn, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        if (fn(object[key], key, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ObjectSeq.prototype.__iterator = function(type, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, key, object[key]);
	      });
	    };

	  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(IterableSeq, IndexedSeq);
	    function IterableSeq(iterable) {
	      this._iterable = iterable;
	      this.size = iterable.length || iterable.size;
	    }

	    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      var iterations = 0;
	      if (isIterator(iterator)) {
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (fn(step.value, iterations++, this) === false) {
	            break;
	          }
	        }
	      }
	      return iterations;
	    };

	    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      if (!isIterator(iterator)) {
	        return new Iterator(iteratorDone);
	      }
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step : iteratorValue(type, iterations++, step.value);
	      });
	    };



	  createClass(IteratorSeq, IndexedSeq);
	    function IteratorSeq(iterator) {
	      this._iterator = iterator;
	      this._iteratorCache = [];
	    }

	    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      while (iterations < cache.length) {
	        if (fn(cache[iterations], iterations++, this) === false) {
	          return iterations;
	        }
	      }
	      var step;
	      while (!(step = iterator.next()).done) {
	        var val = step.value;
	        cache[iterations] = val;
	        if (fn(val, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };

	    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      return new Iterator(function()  {
	        if (iterations >= cache.length) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          cache[iterations] = step.value;
	        }
	        return iteratorValue(type, iterations, cache[iterations++]);
	      });
	    };




	  // # pragma Helper functions

	  function isSeq(maybeSeq) {
	    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
	  }

	  var EMPTY_SEQ;

	  function emptySequence() {
	    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
	  }

	  function keyedSeqFromValue(value) {
	    var seq =
	      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :
	      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :
	      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :
	      typeof value === 'object' ? new ObjectSeq(value) :
	      undefined;
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of [k, v] entries, '+
	        'or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function indexedSeqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value);
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values: ' + value
	      );
	    }
	    return seq;
	  }

	  function seqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value) ||
	      (typeof value === 'object' && new ObjectSeq(value));
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values, or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function maybeIndexedSeqFromValue(value) {
	    return (
	      isArrayLike(value) ? new ArraySeq(value) :
	      isIterator(value) ? new IteratorSeq(value) :
	      hasIterator(value) ? new IterableSeq(value) :
	      undefined
	    );
	  }

	  function seqIterate(seq, fn, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    }
	    return seq.__iterateUncached(fn, reverse);
	  }

	  function seqIterator(seq, type, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
	      });
	    }
	    return seq.__iteratorUncached(type, reverse);
	  }

	  function fromJS(json, converter) {
	    return converter ?
	      fromJSWith(converter, json, '', {'': json}) :
	      fromJSDefault(json);
	  }

	  function fromJSWith(converter, json, key, parentJSON) {
	    if (Array.isArray(json)) {
	      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    if (isPlainObj(json)) {
	      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    return json;
	  }

	  function fromJSDefault(json) {
	    if (Array.isArray(json)) {
	      return IndexedSeq(json).map(fromJSDefault).toList();
	    }
	    if (isPlainObj(json)) {
	      return KeyedSeq(json).map(fromJSDefault).toMap();
	    }
	    return json;
	  }

	  function isPlainObj(value) {
	    return value && (value.constructor === Object || value.constructor === undefined);
	  }

	  /**
	   * An extension of the "same-value" algorithm as [described for use by ES6 Map
	   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
	   *
	   * NaN is considered the same as NaN, however -0 and 0 are considered the same
	   * value, which is different from the algorithm described by
	   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
	   *
	   * This is extended further to allow Objects to describe the values they
	   * represent, by way of `valueOf` or `equals` (and `hashCode`).
	   *
	   * Note: because of this extension, the key equality of Immutable.Map and the
	   * value equality of Immutable.Set will differ from ES6 Map and Set.
	   *
	   * ### Defining custom values
	   *
	   * The easiest way to describe the value an object represents is by implementing
	   * `valueOf`. For example, `Date` represents a value by returning a unix
	   * timestamp for `valueOf`:
	   *
	   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
	   *     var date2 = new Date(1234567890000);
	   *     date1.valueOf(); // 1234567890000
	   *     assert( date1 !== date2 );
	   *     assert( Immutable.is( date1, date2 ) );
	   *
	   * Note: overriding `valueOf` may have other implications if you use this object
	   * where JavaScript expects a primitive, such as implicit string coercion.
	   *
	   * For more complex types, especially collections, implementing `valueOf` may
	   * not be performant. An alternative is to implement `equals` and `hashCode`.
	   *
	   * `equals` takes another object, presumably of similar type, and returns true
	   * if the it is equal. Equality is symmetrical, so the same result should be
	   * returned if this and the argument are flipped.
	   *
	   *     assert( a.equals(b) === b.equals(a) );
	   *
	   * `hashCode` returns a 32bit integer number representing the object which will
	   * be used to determine how to store the value object in a Map or Set. You must
	   * provide both or neither methods, one must not exist without the other.
	   *
	   * Also, an important relationship between these methods must be upheld: if two
	   * values are equal, they *must* return the same hashCode. If the values are not
	   * equal, they might have the same hashCode; this is called a hash collision,
	   * and while undesirable for performance reasons, it is acceptable.
	   *
	   *     if (a.equals(b)) {
	   *       assert( a.hashCode() === b.hashCode() );
	   *     }
	   *
	   * All Immutable collections implement `equals` and `hashCode`.
	   *
	   */
	  function is(valueA, valueB) {
	    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	      return true;
	    }
	    if (!valueA || !valueB) {
	      return false;
	    }
	    if (typeof valueA.valueOf === 'function' &&
	        typeof valueB.valueOf === 'function') {
	      valueA = valueA.valueOf();
	      valueB = valueB.valueOf();
	      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	        return true;
	      }
	      if (!valueA || !valueB) {
	        return false;
	      }
	    }
	    if (typeof valueA.equals === 'function' &&
	        typeof valueB.equals === 'function' &&
	        valueA.equals(valueB)) {
	      return true;
	    }
	    return false;
	  }

	  function deepEqual(a, b) {
	    if (a === b) {
	      return true;
	    }

	    if (
	      !isIterable(b) ||
	      a.size !== undefined && b.size !== undefined && a.size !== b.size ||
	      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||
	      isKeyed(a) !== isKeyed(b) ||
	      isIndexed(a) !== isIndexed(b) ||
	      isOrdered(a) !== isOrdered(b)
	    ) {
	      return false;
	    }

	    if (a.size === 0 && b.size === 0) {
	      return true;
	    }

	    var notAssociative = !isAssociative(a);

	    if (isOrdered(a)) {
	      var entries = a.entries();
	      return b.every(function(v, k)  {
	        var entry = entries.next().value;
	        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
	      }) && entries.next().done;
	    }

	    var flipped = false;

	    if (a.size === undefined) {
	      if (b.size === undefined) {
	        if (typeof a.cacheResult === 'function') {
	          a.cacheResult();
	        }
	      } else {
	        flipped = true;
	        var _ = a;
	        a = b;
	        b = _;
	      }
	    }

	    var allEqual = true;
	    var bSize = b.__iterate(function(v, k)  {
	      if (notAssociative ? !a.has(v) :
	          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
	        allEqual = false;
	        return false;
	      }
	    });

	    return allEqual && a.size === bSize;
	  }

	  createClass(Repeat, IndexedSeq);

	    function Repeat(value, times) {
	      if (!(this instanceof Repeat)) {
	        return new Repeat(value, times);
	      }
	      this._value = value;
	      this.size = times === undefined ? Infinity : Math.max(0, times);
	      if (this.size === 0) {
	        if (EMPTY_REPEAT) {
	          return EMPTY_REPEAT;
	        }
	        EMPTY_REPEAT = this;
	      }
	    }

	    Repeat.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Repeat []';
	      }
	      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
	    };

	    Repeat.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._value : notSetValue;
	    };

	    Repeat.prototype.includes = function(searchValue) {
	      return is(this._value, searchValue);
	    };

	    Repeat.prototype.slice = function(begin, end) {
	      var size = this.size;
	      return wholeSlice(begin, end, size) ? this :
	        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
	    };

	    Repeat.prototype.reverse = function() {
	      return this;
	    };

	    Repeat.prototype.indexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return 0;
	      }
	      return -1;
	    };

	    Repeat.prototype.lastIndexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return this.size;
	      }
	      return -1;
	    };

	    Repeat.prototype.__iterate = function(fn, reverse) {
	      for (var ii = 0; ii < this.size; ii++) {
	        if (fn(this._value, ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}
	      );
	    };

	    Repeat.prototype.equals = function(other) {
	      return other instanceof Repeat ?
	        is(this._value, other._value) :
	        deepEqual(other);
	    };


	  var EMPTY_REPEAT;

	  function invariant(condition, error) {
	    if (!condition) throw new Error(error);
	  }

	  createClass(Range, IndexedSeq);

	    function Range(start, end, step) {
	      if (!(this instanceof Range)) {
	        return new Range(start, end, step);
	      }
	      invariant(step !== 0, 'Cannot step a Range by 0');
	      start = start || 0;
	      if (end === undefined) {
	        end = Infinity;
	      }
	      step = step === undefined ? 1 : Math.abs(step);
	      if (end < start) {
	        step = -step;
	      }
	      this._start = start;
	      this._end = end;
	      this._step = step;
	      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
	      if (this.size === 0) {
	        if (EMPTY_RANGE) {
	          return EMPTY_RANGE;
	        }
	        EMPTY_RANGE = this;
	      }
	    }

	    Range.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Range []';
	      }
	      return 'Range [ ' +
	        this._start + '...' + this._end +
	        (this._step !== 1 ? ' by ' + this._step : '') +
	      ' ]';
	    };

	    Range.prototype.get = function(index, notSetValue) {
	      return this.has(index) ?
	        this._start + wrapIndex(this, index) * this._step :
	        notSetValue;
	    };

	    Range.prototype.includes = function(searchValue) {
	      var possibleIndex = (searchValue - this._start) / this._step;
	      return possibleIndex >= 0 &&
	        possibleIndex < this.size &&
	        possibleIndex === Math.floor(possibleIndex);
	    };

	    Range.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      begin = resolveBegin(begin, this.size);
	      end = resolveEnd(end, this.size);
	      if (end <= begin) {
	        return new Range(0, 0);
	      }
	      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
	    };

	    Range.prototype.indexOf = function(searchValue) {
	      var offsetValue = searchValue - this._start;
	      if (offsetValue % this._step === 0) {
	        var index = offsetValue / this._step;
	        if (index >= 0 && index < this.size) {
	          return index
	        }
	      }
	      return -1;
	    };

	    Range.prototype.lastIndexOf = function(searchValue) {
	      return this.indexOf(searchValue);
	    };

	    Range.prototype.__iterate = function(fn, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(value, ii, this) === false) {
	          return ii + 1;
	        }
	        value += reverse ? -step : step;
	      }
	      return ii;
	    };

	    Range.prototype.__iterator = function(type, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      var ii = 0;
	      return new Iterator(function()  {
	        var v = value;
	        value += reverse ? -step : step;
	        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
	      });
	    };

	    Range.prototype.equals = function(other) {
	      return other instanceof Range ?
	        this._start === other._start &&
	        this._end === other._end &&
	        this._step === other._step :
	        deepEqual(this, other);
	    };


	  var EMPTY_RANGE;

	  createClass(Collection, Iterable);
	    function Collection() {
	      throw TypeError('Abstract');
	    }


	  createClass(KeyedCollection, Collection);function KeyedCollection() {}

	  createClass(IndexedCollection, Collection);function IndexedCollection() {}

	  createClass(SetCollection, Collection);function SetCollection() {}


	  Collection.Keyed = KeyedCollection;
	  Collection.Indexed = IndexedCollection;
	  Collection.Set = SetCollection;

	  var imul =
	    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?
	    Math.imul :
	    function imul(a, b) {
	      a = a | 0; // int
	      b = b | 0; // int
	      var c = a & 0xffff;
	      var d = b & 0xffff;
	      // Shift by 0 fixes the sign on the high part.
	      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int
	    };

	  // v8 has an optimization for storing 31-bit signed numbers.
	  // Values which have either 00 or 11 as the high order bits qualify.
	  // This function drops the highest order bit in a signed number, maintaining
	  // the sign bit.
	  function smi(i32) {
	    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);
	  }

	  function hash(o) {
	    if (o === false || o === null || o === undefined) {
	      return 0;
	    }
	    if (typeof o.valueOf === 'function') {
	      o = o.valueOf();
	      if (o === false || o === null || o === undefined) {
	        return 0;
	      }
	    }
	    if (o === true) {
	      return 1;
	    }
	    var type = typeof o;
	    if (type === 'number') {
	      if (o !== o || o === Infinity) {
	        return 0;
	      }
	      var h = o | 0;
	      if (h !== o) {
	        h ^= o * 0xFFFFFFFF;
	      }
	      while (o > 0xFFFFFFFF) {
	        o /= 0xFFFFFFFF;
	        h ^= o;
	      }
	      return smi(h);
	    }
	    if (type === 'string') {
	      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
	    }
	    if (typeof o.hashCode === 'function') {
	      return o.hashCode();
	    }
	    if (type === 'object') {
	      return hashJSObj(o);
	    }
	    if (typeof o.toString === 'function') {
	      return hashString(o.toString());
	    }
	    throw new Error('Value type ' + type + ' cannot be hashed.');
	  }

	  function cachedHashString(string) {
	    var hash = stringHashCache[string];
	    if (hash === undefined) {
	      hash = hashString(string);
	      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
	        STRING_HASH_CACHE_SIZE = 0;
	        stringHashCache = {};
	      }
	      STRING_HASH_CACHE_SIZE++;
	      stringHashCache[string] = hash;
	    }
	    return hash;
	  }

	  // http://jsperf.com/hashing-strings
	  function hashString(string) {
	    // This is the hash from JVM
	    // The hash code for a string is computed as
	    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
	    // where s[i] is the ith character of the string and n is the length of
	    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
	    // (exclusive) by dropping high bits.
	    var hash = 0;
	    for (var ii = 0; ii < string.length; ii++) {
	      hash = 31 * hash + string.charCodeAt(ii) | 0;
	    }
	    return smi(hash);
	  }

	  function hashJSObj(obj) {
	    var hash;
	    if (usingWeakMap) {
	      hash = weakMap.get(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = obj[UID_HASH_KEY];
	    if (hash !== undefined) {
	      return hash;
	    }

	    if (!canDefineProperty) {
	      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
	      if (hash !== undefined) {
	        return hash;
	      }

	      hash = getIENodeHash(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = ++objHashUID;
	    if (objHashUID & 0x40000000) {
	      objHashUID = 0;
	    }

	    if (usingWeakMap) {
	      weakMap.set(obj, hash);
	    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
	      throw new Error('Non-extensible objects are not allowed as keys.');
	    } else if (canDefineProperty) {
	      Object.defineProperty(obj, UID_HASH_KEY, {
	        'enumerable': false,
	        'configurable': false,
	        'writable': false,
	        'value': hash
	      });
	    } else if (obj.propertyIsEnumerable !== undefined &&
	               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
	      // Since we can't define a non-enumerable property on the object
	      // we'll hijack one of the less-used non-enumerable properties to
	      // save our hash on it. Since this is a function it will not show up in
	      // `JSON.stringify` which is what we want.
	      obj.propertyIsEnumerable = function() {
	        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
	      };
	      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
	    } else if (obj.nodeType !== undefined) {
	      // At this point we couldn't get the IE `uniqueID` to use as a hash
	      // and we couldn't use a non-enumerable property to exploit the
	      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
	      // itself.
	      obj[UID_HASH_KEY] = hash;
	    } else {
	      throw new Error('Unable to set a non-enumerable property on object.');
	    }

	    return hash;
	  }

	  // Get references to ES5 object methods.
	  var isExtensible = Object.isExtensible;

	  // True if Object.defineProperty works as expected. IE8 fails this test.
	  var canDefineProperty = (function() {
	    try {
	      Object.defineProperty({}, '@', {});
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }());

	  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
	  // and avoid memory leaks from the IE cloneNode bug.
	  function getIENodeHash(node) {
	    if (node && node.nodeType > 0) {
	      switch (node.nodeType) {
	        case 1: // Element
	          return node.uniqueID;
	        case 9: // Document
	          return node.documentElement && node.documentElement.uniqueID;
	      }
	    }
	  }

	  // If possible, use a WeakMap.
	  var usingWeakMap = typeof WeakMap === 'function';
	  var weakMap;
	  if (usingWeakMap) {
	    weakMap = new WeakMap();
	  }

	  var objHashUID = 0;

	  var UID_HASH_KEY = '__immutablehash__';
	  if (typeof Symbol === 'function') {
	    UID_HASH_KEY = Symbol(UID_HASH_KEY);
	  }

	  var STRING_HASH_CACHE_MIN_STRLEN = 16;
	  var STRING_HASH_CACHE_MAX_SIZE = 255;
	  var STRING_HASH_CACHE_SIZE = 0;
	  var stringHashCache = {};

	  function assertNotInfinite(size) {
	    invariant(
	      size !== Infinity,
	      'Cannot perform this action with an infinite size.'
	    );
	  }

	  createClass(Map, KeyedCollection);

	    // @pragma Construction

	    function Map(value) {
	      return value === null || value === undefined ? emptyMap() :
	        isMap(value) && !isOrdered(value) ? value :
	        emptyMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);
	      return emptyMap().withMutations(function(map ) {
	        for (var i = 0; i < keyValues.length; i += 2) {
	          if (i + 1 >= keyValues.length) {
	            throw new Error('Missing value for key: ' + keyValues[i]);
	          }
	          map.set(keyValues[i], keyValues[i + 1]);
	        }
	      });
	    };

	    Map.prototype.toString = function() {
	      return this.__toString('Map {', '}');
	    };

	    // @pragma Access

	    Map.prototype.get = function(k, notSetValue) {
	      return this._root ?
	        this._root.get(0, undefined, k, notSetValue) :
	        notSetValue;
	    };

	    // @pragma Modification

	    Map.prototype.set = function(k, v) {
	      return updateMap(this, k, v);
	    };

	    Map.prototype.setIn = function(keyPath, v) {
	      return this.updateIn(keyPath, NOT_SET, function()  {return v});
	    };

	    Map.prototype.remove = function(k) {
	      return updateMap(this, k, NOT_SET);
	    };

	    Map.prototype.deleteIn = function(keyPath) {
	      return this.updateIn(keyPath, function()  {return NOT_SET});
	    };

	    Map.prototype.update = function(k, notSetValue, updater) {
	      return arguments.length === 1 ?
	        k(this) :
	        this.updateIn([k], notSetValue, updater);
	    };

	    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {
	      if (!updater) {
	        updater = notSetValue;
	        notSetValue = undefined;
	      }
	      var updatedValue = updateInDeepMap(
	        this,
	        forceIterator(keyPath),
	        notSetValue,
	        updater
	      );
	      return updatedValue === NOT_SET ? undefined : updatedValue;
	    };

	    Map.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._root = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyMap();
	    };

	    // @pragma Composition

	    Map.prototype.merge = function(/*...iters*/) {
	      return mergeIntoMapWith(this, undefined, arguments);
	    };

	    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, merger, iters);
	    };

	    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.merge === 'function' ?
	          m.merge.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoMapWith(this, deepMerger, arguments);
	    };

	    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
	    };

	    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.mergeDeep === 'function' ?
	          m.mergeDeep.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator));
	    };

	    Map.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator, mapper));
	    };

	    // @pragma Mutability

	    Map.prototype.withMutations = function(fn) {
	      var mutable = this.asMutable();
	      fn(mutable);
	      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
	    };

	    Map.prototype.asMutable = function() {
	      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
	    };

	    Map.prototype.asImmutable = function() {
	      return this.__ensureOwner();
	    };

	    Map.prototype.wasAltered = function() {
	      return this.__altered;
	    };

	    Map.prototype.__iterator = function(type, reverse) {
	      return new MapIterator(this, type, reverse);
	    };

	    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      this._root && this._root.iterate(function(entry ) {
	        iterations++;
	        return fn(entry[1], entry[0], this$0);
	      }, reverse);
	      return iterations;
	    };

	    Map.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeMap(this.size, this._root, ownerID, this.__hash);
	    };


	  function isMap(maybeMap) {
	    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
	  }

	  Map.isMap = isMap;

	  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

	  var MapPrototype = Map.prototype;
	  MapPrototype[IS_MAP_SENTINEL] = true;
	  MapPrototype[DELETE] = MapPrototype.remove;
	  MapPrototype.removeIn = MapPrototype.deleteIn;


	  // #pragma Trie Nodes



	    function ArrayMapNode(ownerID, entries) {
	      this.ownerID = ownerID;
	      this.entries = entries;
	    }

	    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && entries.length === 1) {
	        return; // undefined
	      }

	      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
	        return createNodes(ownerID, entries, key, value);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new ArrayMapNode(ownerID, newEntries);
	    };




	    function BitmapIndexedNode(ownerID, bitmap, nodes) {
	      this.ownerID = ownerID;
	      this.bitmap = bitmap;
	      this.nodes = nodes;
	    }

	    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));
	      var bitmap = this.bitmap;
	      return (bitmap & bit) === 0 ? notSetValue :
	        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);
	    };

	    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var bit = 1 << keyHashFrag;
	      var bitmap = this.bitmap;
	      var exists = (bitmap & bit) !== 0;

	      if (!exists && value === NOT_SET) {
	        return this;
	      }

	      var idx = popCount(bitmap & (bit - 1));
	      var nodes = this.nodes;
	      var node = exists ? nodes[idx] : undefined;
	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

	      if (newNode === node) {
	        return this;
	      }

	      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
	        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
	      }

	      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
	        return nodes[idx ^ 1];
	      }

	      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
	        return newNode;
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
	      var newNodes = exists ? newNode ?
	        setIn(nodes, idx, newNode, isEditable) :
	        spliceOut(nodes, idx, isEditable) :
	        spliceIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.bitmap = newBitmap;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
	    };




	    function HashArrayMapNode(ownerID, count, nodes) {
	      this.ownerID = ownerID;
	      this.count = count;
	      this.nodes = nodes;
	    }

	    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var node = this.nodes[idx];
	      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
	    };

	    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var removed = value === NOT_SET;
	      var nodes = this.nodes;
	      var node = nodes[idx];

	      if (removed && !node) {
	        return this;
	      }

	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
	      if (newNode === node) {
	        return this;
	      }

	      var newCount = this.count;
	      if (!node) {
	        newCount++;
	      } else if (!newNode) {
	        newCount--;
	        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
	          return packNodes(ownerID, nodes, newCount, idx);
	        }
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newNodes = setIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.count = newCount;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new HashArrayMapNode(ownerID, newCount, newNodes);
	    };




	    function HashCollisionNode(ownerID, keyHash, entries) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entries = entries;
	    }

	    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }

	      var removed = value === NOT_SET;

	      if (keyHash !== this.keyHash) {
	        if (removed) {
	          return this;
	        }
	        SetRef(didAlter);
	        SetRef(didChangeSize);
	        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
	      }

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && len === 2) {
	        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
	    };




	    function ValueNode(ownerID, keyHash, entry) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entry = entry;
	    }

	    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
	    };

	    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;
	      var keyMatch = is(key, this.entry[0]);
	      if (keyMatch ? value === this.entry[1] : removed) {
	        return this;
	      }

	      SetRef(didAlter);

	      if (removed) {
	        SetRef(didChangeSize);
	        return; // undefined
	      }

	      if (keyMatch) {
	        if (ownerID && ownerID === this.ownerID) {
	          this.entry[1] = value;
	          return this;
	        }
	        return new ValueNode(ownerID, this.keyHash, [key, value]);
	      }

	      SetRef(didChangeSize);
	      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
	    };



	  // #pragma Iterators

	  ArrayMapNode.prototype.iterate =
	  HashCollisionNode.prototype.iterate = function (fn, reverse) {
	    var entries = this.entries;
	    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
	      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
	        return false;
	      }
	    }
	  }

	  BitmapIndexedNode.prototype.iterate =
	  HashArrayMapNode.prototype.iterate = function (fn, reverse) {
	    var nodes = this.nodes;
	    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
	      var node = nodes[reverse ? maxIndex - ii : ii];
	      if (node && node.iterate(fn, reverse) === false) {
	        return false;
	      }
	    }
	  }

	  ValueNode.prototype.iterate = function (fn, reverse) {
	    return fn(this.entry);
	  }

	  createClass(MapIterator, Iterator);

	    function MapIterator(map, type, reverse) {
	      this._type = type;
	      this._reverse = reverse;
	      this._stack = map._root && mapIteratorFrame(map._root);
	    }

	    MapIterator.prototype.next = function() {
	      var type = this._type;
	      var stack = this._stack;
	      while (stack) {
	        var node = stack.node;
	        var index = stack.index++;
	        var maxIndex;
	        if (node.entry) {
	          if (index === 0) {
	            return mapIteratorValue(type, node.entry);
	          }
	        } else if (node.entries) {
	          maxIndex = node.entries.length - 1;
	          if (index <= maxIndex) {
	            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
	          }
	        } else {
	          maxIndex = node.nodes.length - 1;
	          if (index <= maxIndex) {
	            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
	            if (subNode) {
	              if (subNode.entry) {
	                return mapIteratorValue(type, subNode.entry);
	              }
	              stack = this._stack = mapIteratorFrame(subNode, stack);
	            }
	            continue;
	          }
	        }
	        stack = this._stack = this._stack.__prev;
	      }
	      return iteratorDone();
	    };


	  function mapIteratorValue(type, entry) {
	    return iteratorValue(type, entry[0], entry[1]);
	  }

	  function mapIteratorFrame(node, prev) {
	    return {
	      node: node,
	      index: 0,
	      __prev: prev
	    };
	  }

	  function makeMap(size, root, ownerID, hash) {
	    var map = Object.create(MapPrototype);
	    map.size = size;
	    map._root = root;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_MAP;
	  function emptyMap() {
	    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
	  }

	  function updateMap(map, k, v) {
	    var newRoot;
	    var newSize;
	    if (!map._root) {
	      if (v === NOT_SET) {
	        return map;
	      }
	      newSize = 1;
	      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
	    } else {
	      var didChangeSize = MakeRef(CHANGE_LENGTH);
	      var didAlter = MakeRef(DID_ALTER);
	      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
	      if (!didAlter.value) {
	        return map;
	      }
	      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
	    }
	    if (map.__ownerID) {
	      map.size = newSize;
	      map._root = newRoot;
	      map.__hash = undefined;
	      map.__altered = true;
	      return map;
	    }
	    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
	  }

	  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	    if (!node) {
	      if (value === NOT_SET) {
	        return node;
	      }
	      SetRef(didAlter);
	      SetRef(didChangeSize);
	      return new ValueNode(ownerID, keyHash, [key, value]);
	    }
	    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
	  }

	  function isLeafNode(node) {
	    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
	  }

	  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
	    if (node.keyHash === keyHash) {
	      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
	    }

	    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
	    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

	    var newNode;
	    var nodes = idx1 === idx2 ?
	      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :
	      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);

	    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
	  }

	  function createNodes(ownerID, entries, key, value) {
	    if (!ownerID) {
	      ownerID = new OwnerID();
	    }
	    var node = new ValueNode(ownerID, hash(key), [key, value]);
	    for (var ii = 0; ii < entries.length; ii++) {
	      var entry = entries[ii];
	      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
	    }
	    return node;
	  }

	  function packNodes(ownerID, nodes, count, excluding) {
	    var bitmap = 0;
	    var packedII = 0;
	    var packedNodes = new Array(count);
	    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
	      var node = nodes[ii];
	      if (node !== undefined && ii !== excluding) {
	        bitmap |= bit;
	        packedNodes[packedII++] = node;
	      }
	    }
	    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
	  }

	  function expandNodes(ownerID, nodes, bitmap, including, node) {
	    var count = 0;
	    var expandedNodes = new Array(SIZE);
	    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
	      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
	    }
	    expandedNodes[including] = node;
	    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
	  }

	  function mergeIntoMapWith(map, merger, iterables) {
	    var iters = [];
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = KeyedIterable(value);
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    return mergeIntoCollectionWith(map, merger, iters);
	  }

	  function deepMerger(existing, value, key) {
	    return existing && existing.mergeDeep && isIterable(value) ?
	      existing.mergeDeep(value) :
	      is(existing, value) ? existing : value;
	  }

	  function deepMergerWith(merger) {
	    return function(existing, value, key)  {
	      if (existing && existing.mergeDeepWith && isIterable(value)) {
	        return existing.mergeDeepWith(merger, value);
	      }
	      var nextValue = merger(existing, value, key);
	      return is(existing, nextValue) ? existing : nextValue;
	    };
	  }

	  function mergeIntoCollectionWith(collection, merger, iters) {
	    iters = iters.filter(function(x ) {return x.size !== 0});
	    if (iters.length === 0) {
	      return collection;
	    }
	    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
	      return collection.constructor(iters[0]);
	    }
	    return collection.withMutations(function(collection ) {
	      var mergeIntoMap = merger ?
	        function(value, key)  {
	          collection.update(key, NOT_SET, function(existing )
	            {return existing === NOT_SET ? value : merger(existing, value, key)}
	          );
	        } :
	        function(value, key)  {
	          collection.set(key, value);
	        }
	      for (var ii = 0; ii < iters.length; ii++) {
	        iters[ii].forEach(mergeIntoMap);
	      }
	    });
	  }

	  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
	    var isNotSet = existing === NOT_SET;
	    var step = keyPathIter.next();
	    if (step.done) {
	      var existingValue = isNotSet ? notSetValue : existing;
	      var newValue = updater(existingValue);
	      return newValue === existingValue ? existing : newValue;
	    }
	    invariant(
	      isNotSet || (existing && existing.set),
	      'invalid keyPath'
	    );
	    var key = step.value;
	    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
	    var nextUpdated = updateInDeepMap(
	      nextExisting,
	      keyPathIter,
	      notSetValue,
	      updater
	    );
	    return nextUpdated === nextExisting ? existing :
	      nextUpdated === NOT_SET ? existing.remove(key) :
	      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
	  }

	  function popCount(x) {
	    x = x - ((x >> 1) & 0x55555555);
	    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
	    x = (x + (x >> 4)) & 0x0f0f0f0f;
	    x = x + (x >> 8);
	    x = x + (x >> 16);
	    return x & 0x7f;
	  }

	  function setIn(array, idx, val, canEdit) {
	    var newArray = canEdit ? array : arrCopy(array);
	    newArray[idx] = val;
	    return newArray;
	  }

	  function spliceIn(array, idx, val, canEdit) {
	    var newLen = array.length + 1;
	    if (canEdit && idx + 1 === newLen) {
	      array[idx] = val;
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        newArray[ii] = val;
	        after = -1;
	      } else {
	        newArray[ii] = array[ii + after];
	      }
	    }
	    return newArray;
	  }

	  function spliceOut(array, idx, canEdit) {
	    var newLen = array.length - 1;
	    if (canEdit && idx === newLen) {
	      array.pop();
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        after = 1;
	      }
	      newArray[ii] = array[ii + after];
	    }
	    return newArray;
	  }

	  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
	  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
	  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

	  createClass(List, IndexedCollection);

	    // @pragma Construction

	    function List(value) {
	      var empty = emptyList();
	      if (value === null || value === undefined) {
	        return empty;
	      }
	      if (isList(value)) {
	        return value;
	      }
	      var iter = IndexedIterable(value);
	      var size = iter.size;
	      if (size === 0) {
	        return empty;
	      }
	      assertNotInfinite(size);
	      if (size > 0 && size < SIZE) {
	        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
	      }
	      return empty.withMutations(function(list ) {
	        list.setSize(size);
	        iter.forEach(function(v, i)  {return list.set(i, v)});
	      });
	    }

	    List.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    List.prototype.toString = function() {
	      return this.__toString('List [', ']');
	    };

	    // @pragma Access

	    List.prototype.get = function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      if (index >= 0 && index < this.size) {
	        index += this._origin;
	        var node = listNodeFor(this, index);
	        return node && node.array[index & MASK];
	      }
	      return notSetValue;
	    };

	    // @pragma Modification

	    List.prototype.set = function(index, value) {
	      return updateList(this, index, value);
	    };

	    List.prototype.remove = function(index) {
	      return !this.has(index) ? this :
	        index === 0 ? this.shift() :
	        index === this.size - 1 ? this.pop() :
	        this.splice(index, 1);
	    };

	    List.prototype.insert = function(index, value) {
	      return this.splice(index, 0, value);
	    };

	    List.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = this._origin = this._capacity = 0;
	        this._level = SHIFT;
	        this._root = this._tail = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyList();
	    };

	    List.prototype.push = function(/*...values*/) {
	      var values = arguments;
	      var oldSize = this.size;
	      return this.withMutations(function(list ) {
	        setListBounds(list, 0, oldSize + values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(oldSize + ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.pop = function() {
	      return setListBounds(this, 0, -1);
	    };

	    List.prototype.unshift = function(/*...values*/) {
	      var values = arguments;
	      return this.withMutations(function(list ) {
	        setListBounds(list, -values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.shift = function() {
	      return setListBounds(this, 1);
	    };

	    // @pragma Composition

	    List.prototype.merge = function(/*...iters*/) {
	      return mergeIntoListWith(this, undefined, arguments);
	    };

	    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, merger, iters);
	    };

	    List.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoListWith(this, deepMerger, arguments);
	    };

	    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, deepMergerWith(merger), iters);
	    };

	    List.prototype.setSize = function(size) {
	      return setListBounds(this, 0, size);
	    };

	    // @pragma Iteration

	    List.prototype.slice = function(begin, end) {
	      var size = this.size;
	      if (wholeSlice(begin, end, size)) {
	        return this;
	      }
	      return setListBounds(
	        this,
	        resolveBegin(begin, size),
	        resolveEnd(end, size)
	      );
	    };

	    List.prototype.__iterator = function(type, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      return new Iterator(function()  {
	        var value = values();
	        return value === DONE ?
	          iteratorDone() :
	          iteratorValue(type, index++, value);
	      });
	    };

	    List.prototype.__iterate = function(fn, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      var value;
	      while ((value = values()) !== DONE) {
	        if (fn(value, index++, this) === false) {
	          break;
	        }
	      }
	      return index;
	    };

	    List.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        return this;
	      }
	      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
	    };


	  function isList(maybeList) {
	    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
	  }

	  List.isList = isList;

	  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

	  var ListPrototype = List.prototype;
	  ListPrototype[IS_LIST_SENTINEL] = true;
	  ListPrototype[DELETE] = ListPrototype.remove;
	  ListPrototype.setIn = MapPrototype.setIn;
	  ListPrototype.deleteIn =
	  ListPrototype.removeIn = MapPrototype.removeIn;
	  ListPrototype.update = MapPrototype.update;
	  ListPrototype.updateIn = MapPrototype.updateIn;
	  ListPrototype.mergeIn = MapPrototype.mergeIn;
	  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  ListPrototype.withMutations = MapPrototype.withMutations;
	  ListPrototype.asMutable = MapPrototype.asMutable;
	  ListPrototype.asImmutable = MapPrototype.asImmutable;
	  ListPrototype.wasAltered = MapPrototype.wasAltered;



	    function VNode(array, ownerID) {
	      this.array = array;
	      this.ownerID = ownerID;
	    }

	    // TODO: seems like these methods are very similar

	    VNode.prototype.removeBefore = function(ownerID, level, index) {
	      if (index === level ? 1 << level : 0 || this.array.length === 0) {
	        return this;
	      }
	      var originIndex = (index >>> level) & MASK;
	      if (originIndex >= this.array.length) {
	        return new VNode([], ownerID);
	      }
	      var removingFirst = originIndex === 0;
	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[originIndex];
	        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && removingFirst) {
	          return this;
	        }
	      }
	      if (removingFirst && !newChild) {
	        return this;
	      }
	      var editable = editableVNode(this, ownerID);
	      if (!removingFirst) {
	        for (var ii = 0; ii < originIndex; ii++) {
	          editable.array[ii] = undefined;
	        }
	      }
	      if (newChild) {
	        editable.array[originIndex] = newChild;
	      }
	      return editable;
	    };

	    VNode.prototype.removeAfter = function(ownerID, level, index) {
	      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
	        return this;
	      }
	      var sizeIndex = ((index - 1) >>> level) & MASK;
	      if (sizeIndex >= this.array.length) {
	        return this;
	      }

	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[sizeIndex];
	        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
	          return this;
	        }
	      }

	      var editable = editableVNode(this, ownerID);
	      editable.array.splice(sizeIndex + 1);
	      if (newChild) {
	        editable.array[sizeIndex] = newChild;
	      }
	      return editable;
	    };



	  var DONE = {};

	  function iterateList(list, reverse) {
	    var left = list._origin;
	    var right = list._capacity;
	    var tailPos = getTailOffset(right);
	    var tail = list._tail;

	    return iterateNodeOrLeaf(list._root, list._level, 0);

	    function iterateNodeOrLeaf(node, level, offset) {
	      return level === 0 ?
	        iterateLeaf(node, offset) :
	        iterateNode(node, level, offset);
	    }

	    function iterateLeaf(node, offset) {
	      var array = offset === tailPos ? tail && tail.array : node && node.array;
	      var from = offset > left ? 0 : left - offset;
	      var to = right - offset;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        if (from === to) {
	          return DONE;
	        }
	        var idx = reverse ? --to : from++;
	        return array && array[idx];
	      };
	    }

	    function iterateNode(node, level, offset) {
	      var values;
	      var array = node && node.array;
	      var from = offset > left ? 0 : (left - offset) >> level;
	      var to = ((right - offset) >> level) + 1;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        do {
	          if (values) {
	            var value = values();
	            if (value !== DONE) {
	              return value;
	            }
	            values = null;
	          }
	          if (from === to) {
	            return DONE;
	          }
	          var idx = reverse ? --to : from++;
	          values = iterateNodeOrLeaf(
	            array && array[idx], level - SHIFT, offset + (idx << level)
	          );
	        } while (true);
	      };
	    }
	  }

	  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
	    var list = Object.create(ListPrototype);
	    list.size = capacity - origin;
	    list._origin = origin;
	    list._capacity = capacity;
	    list._level = level;
	    list._root = root;
	    list._tail = tail;
	    list.__ownerID = ownerID;
	    list.__hash = hash;
	    list.__altered = false;
	    return list;
	  }

	  var EMPTY_LIST;
	  function emptyList() {
	    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
	  }

	  function updateList(list, index, value) {
	    index = wrapIndex(list, index);

	    if (index !== index) {
	      return list;
	    }

	    if (index >= list.size || index < 0) {
	      return list.withMutations(function(list ) {
	        index < 0 ?
	          setListBounds(list, index).set(0, value) :
	          setListBounds(list, 0, index + 1).set(index, value)
	      });
	    }

	    index += list._origin;

	    var newTail = list._tail;
	    var newRoot = list._root;
	    var didAlter = MakeRef(DID_ALTER);
	    if (index >= getTailOffset(list._capacity)) {
	      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
	    } else {
	      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
	    }

	    if (!didAlter.value) {
	      return list;
	    }

	    if (list.__ownerID) {
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
	  }

	  function updateVNode(node, ownerID, level, index, value, didAlter) {
	    var idx = (index >>> level) & MASK;
	    var nodeHas = node && idx < node.array.length;
	    if (!nodeHas && value === undefined) {
	      return node;
	    }

	    var newNode;

	    if (level > 0) {
	      var lowerNode = node && node.array[idx];
	      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
	      if (newLowerNode === lowerNode) {
	        return node;
	      }
	      newNode = editableVNode(node, ownerID);
	      newNode.array[idx] = newLowerNode;
	      return newNode;
	    }

	    if (nodeHas && node.array[idx] === value) {
	      return node;
	    }

	    SetRef(didAlter);

	    newNode = editableVNode(node, ownerID);
	    if (value === undefined && idx === newNode.array.length - 1) {
	      newNode.array.pop();
	    } else {
	      newNode.array[idx] = value;
	    }
	    return newNode;
	  }

	  function editableVNode(node, ownerID) {
	    if (ownerID && node && ownerID === node.ownerID) {
	      return node;
	    }
	    return new VNode(node ? node.array.slice() : [], ownerID);
	  }

	  function listNodeFor(list, rawIndex) {
	    if (rawIndex >= getTailOffset(list._capacity)) {
	      return list._tail;
	    }
	    if (rawIndex < 1 << (list._level + SHIFT)) {
	      var node = list._root;
	      var level = list._level;
	      while (node && level > 0) {
	        node = node.array[(rawIndex >>> level) & MASK];
	        level -= SHIFT;
	      }
	      return node;
	    }
	  }

	  function setListBounds(list, begin, end) {
	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      end = end | 0;
	    }
	    var owner = list.__ownerID || new OwnerID();
	    var oldOrigin = list._origin;
	    var oldCapacity = list._capacity;
	    var newOrigin = oldOrigin + begin;
	    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
	    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
	      return list;
	    }

	    // If it's going to end after it starts, it's empty.
	    if (newOrigin >= newCapacity) {
	      return list.clear();
	    }

	    var newLevel = list._level;
	    var newRoot = list._root;

	    // New origin might need creating a higher root.
	    var offsetShift = 0;
	    while (newOrigin + offsetShift < 0) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
	      newLevel += SHIFT;
	      offsetShift += 1 << newLevel;
	    }
	    if (offsetShift) {
	      newOrigin += offsetShift;
	      oldOrigin += offsetShift;
	      newCapacity += offsetShift;
	      oldCapacity += offsetShift;
	    }

	    var oldTailOffset = getTailOffset(oldCapacity);
	    var newTailOffset = getTailOffset(newCapacity);

	    // New size might need creating a higher root.
	    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
	      newLevel += SHIFT;
	    }

	    // Locate or create the new tail.
	    var oldTail = list._tail;
	    var newTail = newTailOffset < oldTailOffset ?
	      listNodeFor(list, newCapacity - 1) :
	      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

	    // Merge Tail into tree.
	    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
	      newRoot = editableVNode(newRoot, owner);
	      var node = newRoot;
	      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
	        var idx = (oldTailOffset >>> level) & MASK;
	        node = node.array[idx] = editableVNode(node.array[idx], owner);
	      }
	      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
	    }

	    // If the size has been reduced, there's a chance the tail needs to be trimmed.
	    if (newCapacity < oldCapacity) {
	      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
	    }

	    // If the new origin is within the tail, then we do not need a root.
	    if (newOrigin >= newTailOffset) {
	      newOrigin -= newTailOffset;
	      newCapacity -= newTailOffset;
	      newLevel = SHIFT;
	      newRoot = null;
	      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

	    // Otherwise, if the root has been trimmed, garbage collect.
	    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
	      offsetShift = 0;

	      // Identify the new top root node of the subtree of the old root.
	      while (newRoot) {
	        var beginIndex = (newOrigin >>> newLevel) & MASK;
	        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {
	          break;
	        }
	        if (beginIndex) {
	          offsetShift += (1 << newLevel) * beginIndex;
	        }
	        newLevel -= SHIFT;
	        newRoot = newRoot.array[beginIndex];
	      }

	      // Trim the new sides of the new root.
	      if (newRoot && newOrigin > oldOrigin) {
	        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
	      }
	      if (newRoot && newTailOffset < oldTailOffset) {
	        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
	      }
	      if (offsetShift) {
	        newOrigin -= offsetShift;
	        newCapacity -= offsetShift;
	      }
	    }

	    if (list.__ownerID) {
	      list.size = newCapacity - newOrigin;
	      list._origin = newOrigin;
	      list._capacity = newCapacity;
	      list._level = newLevel;
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
	  }

	  function mergeIntoListWith(list, merger, iterables) {
	    var iters = [];
	    var maxSize = 0;
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = IndexedIterable(value);
	      if (iter.size > maxSize) {
	        maxSize = iter.size;
	      }
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    if (maxSize > list.size) {
	      list = list.setSize(maxSize);
	    }
	    return mergeIntoCollectionWith(list, merger, iters);
	  }

	  function getTailOffset(size) {
	    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);
	  }

	  createClass(OrderedMap, Map);

	    // @pragma Construction

	    function OrderedMap(value) {
	      return value === null || value === undefined ? emptyOrderedMap() :
	        isOrderedMap(value) ? value :
	        emptyOrderedMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    OrderedMap.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedMap.prototype.toString = function() {
	      return this.__toString('OrderedMap {', '}');
	    };

	    // @pragma Access

	    OrderedMap.prototype.get = function(k, notSetValue) {
	      var index = this._map.get(k);
	      return index !== undefined ? this._list.get(index)[1] : notSetValue;
	    };

	    // @pragma Modification

	    OrderedMap.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._map.clear();
	        this._list.clear();
	        return this;
	      }
	      return emptyOrderedMap();
	    };

	    OrderedMap.prototype.set = function(k, v) {
	      return updateOrderedMap(this, k, v);
	    };

	    OrderedMap.prototype.remove = function(k) {
	      return updateOrderedMap(this, k, NOT_SET);
	    };

	    OrderedMap.prototype.wasAltered = function() {
	      return this._map.wasAltered() || this._list.wasAltered();
	    };

	    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._list.__iterate(
	        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},
	        reverse
	      );
	    };

	    OrderedMap.prototype.__iterator = function(type, reverse) {
	      return this._list.fromEntrySeq().__iterator(type, reverse);
	    };

	    OrderedMap.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      var newList = this._list.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        this._list = newList;
	        return this;
	      }
	      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
	    };


	  function isOrderedMap(maybeOrderedMap) {
	    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
	  }

	  OrderedMap.isOrderedMap = isOrderedMap;

	  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
	  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



	  function makeOrderedMap(map, list, ownerID, hash) {
	    var omap = Object.create(OrderedMap.prototype);
	    omap.size = map ? map.size : 0;
	    omap._map = map;
	    omap._list = list;
	    omap.__ownerID = ownerID;
	    omap.__hash = hash;
	    return omap;
	  }

	  var EMPTY_ORDERED_MAP;
	  function emptyOrderedMap() {
	    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
	  }

	  function updateOrderedMap(omap, k, v) {
	    var map = omap._map;
	    var list = omap._list;
	    var i = map.get(k);
	    var has = i !== undefined;
	    var newMap;
	    var newList;
	    if (v === NOT_SET) { // removed
	      if (!has) {
	        return omap;
	      }
	      if (list.size >= SIZE && list.size >= map.size * 2) {
	        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});
	        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();
	        if (omap.__ownerID) {
	          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
	        }
	      } else {
	        newMap = map.remove(k);
	        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
	      }
	    } else {
	      if (has) {
	        if (v === list.get(i)[1]) {
	          return omap;
	        }
	        newMap = map;
	        newList = list.set(i, [k, v]);
	      } else {
	        newMap = map.set(k, list.size);
	        newList = list.set(list.size, [k, v]);
	      }
	    }
	    if (omap.__ownerID) {
	      omap.size = newMap.size;
	      omap._map = newMap;
	      omap._list = newList;
	      omap.__hash = undefined;
	      return omap;
	    }
	    return makeOrderedMap(newMap, newList);
	  }

	  createClass(ToKeyedSequence, KeyedSeq);
	    function ToKeyedSequence(indexed, useKeys) {
	      this._iter = indexed;
	      this._useKeys = useKeys;
	      this.size = indexed.size;
	    }

	    ToKeyedSequence.prototype.get = function(key, notSetValue) {
	      return this._iter.get(key, notSetValue);
	    };

	    ToKeyedSequence.prototype.has = function(key) {
	      return this._iter.has(key);
	    };

	    ToKeyedSequence.prototype.valueSeq = function() {
	      return this._iter.valueSeq();
	    };

	    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;
	      var reversedSequence = reverseFactory(this, true);
	      if (!this._useKeys) {
	        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};
	      }
	      return reversedSequence;
	    };

	    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;
	      var mappedSequence = mapFactory(this, mapper, context);
	      if (!this._useKeys) {
	        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};
	      }
	      return mappedSequence;
	    };

	    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var ii;
	      return this._iter.__iterate(
	        this._useKeys ?
	          function(v, k)  {return fn(v, k, this$0)} :
	          ((ii = reverse ? resolveSize(this) : 0),
	            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),
	        reverse
	      );
	    };

	    ToKeyedSequence.prototype.__iterator = function(type, reverse) {
	      if (this._useKeys) {
	        return this._iter.__iterator(type, reverse);
	      }
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var ii = reverse ? resolveSize(this) : 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, reverse ? --ii : ii++, step.value, step);
	      });
	    };

	  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(ToIndexedSequence, IndexedSeq);
	    function ToIndexedSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToIndexedSequence.prototype.includes = function(value) {
	      return this._iter.includes(value);
	    };

	    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);
	    };

	    ToIndexedSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, iterations++, step.value, step)
	      });
	    };



	  createClass(ToSetSequence, SetSeq);
	    function ToSetSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToSetSequence.prototype.has = function(key) {
	      return this._iter.includes(key);
	    };

	    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);
	    };

	    ToSetSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, step.value, step.value, step);
	      });
	    };



	  createClass(FromEntriesSequence, KeyedSeq);
	    function FromEntriesSequence(entries) {
	      this._iter = entries;
	      this.size = entries.size;
	    }

	    FromEntriesSequence.prototype.entrySeq = function() {
	      return this._iter.toSeq();
	    };

	    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(entry ) {
	        // Check if entry exists first so array access doesn't throw for holes
	        // in the parent iteration.
	        if (entry) {
	          validateEntry(entry);
	          var indexedIterable = isIterable(entry);
	          return fn(
	            indexedIterable ? entry.get(1) : entry[1],
	            indexedIterable ? entry.get(0) : entry[0],
	            this$0
	          );
	        }
	      }, reverse);
	    };

	    FromEntriesSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          // Check if entry exists first so array access doesn't throw for holes
	          // in the parent iteration.
	          if (entry) {
	            validateEntry(entry);
	            var indexedIterable = isIterable(entry);
	            return iteratorValue(
	              type,
	              indexedIterable ? entry.get(0) : entry[0],
	              indexedIterable ? entry.get(1) : entry[1],
	              step
	            );
	          }
	        }
	      });
	    };


	  ToIndexedSequence.prototype.cacheResult =
	  ToKeyedSequence.prototype.cacheResult =
	  ToSetSequence.prototype.cacheResult =
	  FromEntriesSequence.prototype.cacheResult =
	    cacheResultThrough;


	  function flipFactory(iterable) {
	    var flipSequence = makeSequence(iterable);
	    flipSequence._iter = iterable;
	    flipSequence.size = iterable.size;
	    flipSequence.flip = function()  {return iterable};
	    flipSequence.reverse = function () {
	      var reversedSequence = iterable.reverse.apply(this); // super.reverse()
	      reversedSequence.flip = function()  {return iterable.reverse()};
	      return reversedSequence;
	    };
	    flipSequence.has = function(key ) {return iterable.includes(key)};
	    flipSequence.includes = function(key ) {return iterable.has(key)};
	    flipSequence.cacheResult = cacheResultThrough;
	    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);
	    }
	    flipSequence.__iteratorUncached = function(type, reverse) {
	      if (type === ITERATE_ENTRIES) {
	        var iterator = iterable.__iterator(type, reverse);
	        return new Iterator(function()  {
	          var step = iterator.next();
	          if (!step.done) {
	            var k = step.value[0];
	            step.value[0] = step.value[1];
	            step.value[1] = k;
	          }
	          return step;
	        });
	      }
	      return iterable.__iterator(
	        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
	        reverse
	      );
	    }
	    return flipSequence;
	  }


	  function mapFactory(iterable, mapper, context) {
	    var mappedSequence = makeSequence(iterable);
	    mappedSequence.size = iterable.size;
	    mappedSequence.has = function(key ) {return iterable.has(key)};
	    mappedSequence.get = function(key, notSetValue)  {
	      var v = iterable.get(key, NOT_SET);
	      return v === NOT_SET ?
	        notSetValue :
	        mapper.call(context, v, key, iterable);
	    };
	    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(
	        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},
	        reverse
	      );
	    }
	    mappedSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var key = entry[0];
	        return iteratorValue(
	          type,
	          key,
	          mapper.call(context, entry[1], key, iterable),
	          step
	        );
	      });
	    }
	    return mappedSequence;
	  }


	  function reverseFactory(iterable, useKeys) {
	    var reversedSequence = makeSequence(iterable);
	    reversedSequence._iter = iterable;
	    reversedSequence.size = iterable.size;
	    reversedSequence.reverse = function()  {return iterable};
	    if (iterable.flip) {
	      reversedSequence.flip = function () {
	        var flipSequence = flipFactory(iterable);
	        flipSequence.reverse = function()  {return iterable.flip()};
	        return flipSequence;
	      };
	    }
	    reversedSequence.get = function(key, notSetValue) 
	      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};
	    reversedSequence.has = function(key )
	      {return iterable.has(useKeys ? key : -1 - key)};
	    reversedSequence.includes = function(value ) {return iterable.includes(value)};
	    reversedSequence.cacheResult = cacheResultThrough;
	    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);
	    };
	    reversedSequence.__iterator =
	      function(type, reverse)  {return iterable.__iterator(type, !reverse)};
	    return reversedSequence;
	  }


	  function filterFactory(iterable, predicate, context, useKeys) {
	    var filterSequence = makeSequence(iterable);
	    if (useKeys) {
	      filterSequence.has = function(key ) {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
	      };
	      filterSequence.get = function(key, notSetValue)  {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?
	          v : notSetValue;
	      };
	    }
	    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      }, reverse);
	      return iterations;
	    };
	    filterSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          var key = entry[0];
	          var value = entry[1];
	          if (predicate.call(context, value, key, iterable)) {
	            return iteratorValue(type, useKeys ? key : iterations++, value, step);
	          }
	        }
	      });
	    }
	    return filterSequence;
	  }


	  function countByFactory(iterable, grouper, context) {
	    var groups = Map().asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        0,
	        function(a ) {return a + 1}
	      );
	    });
	    return groups.asImmutable();
	  }


	  function groupByFactory(iterable, grouper, context) {
	    var isKeyedIter = isKeyed(iterable);
	    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}
	      );
	    });
	    var coerce = iterableClass(iterable);
	    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});
	  }


	  function sliceFactory(iterable, begin, end, useKeys) {
	    var originalSize = iterable.size;

	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      if (end === Infinity) {
	        end = originalSize;
	      } else {
	        end = end | 0;
	      }
	    }

	    if (wholeSlice(begin, end, originalSize)) {
	      return iterable;
	    }

	    var resolvedBegin = resolveBegin(begin, originalSize);
	    var resolvedEnd = resolveEnd(end, originalSize);

	    // begin or end will be NaN if they were provided as negative numbers and
	    // this iterable's size is unknown. In that case, cache first so there is
	    // a known size and these do not resolve to NaN.
	    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
	      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
	    }

	    // Note: resolvedEnd is undefined when the original sequence's length is
	    // unknown and this slice did not supply an end and should contain all
	    // elements after resolvedBegin.
	    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
	    var resolvedSize = resolvedEnd - resolvedBegin;
	    var sliceSize;
	    if (resolvedSize === resolvedSize) {
	      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
	    }

	    var sliceSeq = makeSequence(iterable);

	    // If iterable.size is undefined, the size of the realized sliceSeq is
	    // unknown at this point unless the number of items to slice is 0
	    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

	    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
	      sliceSeq.get = function (index, notSetValue) {
	        index = wrapIndex(this, index);
	        return index >= 0 && index < sliceSize ?
	          iterable.get(index + resolvedBegin, notSetValue) :
	          notSetValue;
	      }
	    }

	    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (sliceSize === 0) {
	        return 0;
	      }
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var skipped = 0;
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k)  {
	        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&
	                 iterations !== sliceSize;
	        }
	      });
	      return iterations;
	    };

	    sliceSeq.__iteratorUncached = function(type, reverse) {
	      if (sliceSize !== 0 && reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      // Don't bother instantiating parent iterator if taking 0.
	      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
	      var skipped = 0;
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (skipped++ < resolvedBegin) {
	          iterator.next();
	        }
	        if (++iterations > sliceSize) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (useKeys || type === ITERATE_VALUES) {
	          return step;
	        } else if (type === ITERATE_KEYS) {
	          return iteratorValue(type, iterations - 1, undefined, step);
	        } else {
	          return iteratorValue(type, iterations - 1, step.value[1], step);
	        }
	      });
	    }

	    return sliceSeq;
	  }


	  function takeWhileFactory(iterable, predicate, context) {
	    var takeSequence = makeSequence(iterable);
	    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c) 
	        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}
	      );
	      return iterations;
	    };
	    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterating = true;
	      return new Iterator(function()  {
	        if (!iterating) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var k = entry[0];
	        var v = entry[1];
	        if (!predicate.call(context, v, k, this$0)) {
	          iterating = false;
	          return iteratorDone();
	        }
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return takeSequence;
	  }


	  function skipWhileFactory(iterable, predicate, context, useKeys) {
	    var skipSequence = makeSequence(iterable);
	    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      });
	      return iterations;
	    };
	    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var skipping = true;
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step, k, v;
	        do {
	          step = iterator.next();
	          if (step.done) {
	            if (useKeys || type === ITERATE_VALUES) {
	              return step;
	            } else if (type === ITERATE_KEYS) {
	              return iteratorValue(type, iterations++, undefined, step);
	            } else {
	              return iteratorValue(type, iterations++, step.value[1], step);
	            }
	          }
	          var entry = step.value;
	          k = entry[0];
	          v = entry[1];
	          skipping && (skipping = predicate.call(context, v, k, this$0));
	        } while (skipping);
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return skipSequence;
	  }


	  function concatFactory(iterable, values) {
	    var isKeyedIterable = isKeyed(iterable);
	    var iters = [iterable].concat(values).map(function(v ) {
	      if (!isIterable(v)) {
	        v = isKeyedIterable ?
	          keyedSeqFromValue(v) :
	          indexedSeqFromValue(Array.isArray(v) ? v : [v]);
	      } else if (isKeyedIterable) {
	        v = KeyedIterable(v);
	      }
	      return v;
	    }).filter(function(v ) {return v.size !== 0});

	    if (iters.length === 0) {
	      return iterable;
	    }

	    if (iters.length === 1) {
	      var singleton = iters[0];
	      if (singleton === iterable ||
	          isKeyedIterable && isKeyed(singleton) ||
	          isIndexed(iterable) && isIndexed(singleton)) {
	        return singleton;
	      }
	    }

	    var concatSeq = new ArraySeq(iters);
	    if (isKeyedIterable) {
	      concatSeq = concatSeq.toKeyedSeq();
	    } else if (!isIndexed(iterable)) {
	      concatSeq = concatSeq.toSetSeq();
	    }
	    concatSeq = concatSeq.flatten(true);
	    concatSeq.size = iters.reduce(
	      function(sum, seq)  {
	        if (sum !== undefined) {
	          var size = seq.size;
	          if (size !== undefined) {
	            return sum + size;
	          }
	        }
	      },
	      0
	    );
	    return concatSeq;
	  }


	  function flattenFactory(iterable, depth, useKeys) {
	    var flatSequence = makeSequence(iterable);
	    flatSequence.__iterateUncached = function(fn, reverse) {
	      var iterations = 0;
	      var stopped = false;
	      function flatDeep(iter, currentDepth) {var this$0 = this;
	        iter.__iterate(function(v, k)  {
	          if ((!depth || currentDepth < depth) && isIterable(v)) {
	            flatDeep(v, currentDepth + 1);
	          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
	            stopped = true;
	          }
	          return !stopped;
	        }, reverse);
	      }
	      flatDeep(iterable, 0);
	      return iterations;
	    }
	    flatSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(type, reverse);
	      var stack = [];
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (iterator) {
	          var step = iterator.next();
	          if (step.done !== false) {
	            iterator = stack.pop();
	            continue;
	          }
	          var v = step.value;
	          if (type === ITERATE_ENTRIES) {
	            v = v[1];
	          }
	          if ((!depth || stack.length < depth) && isIterable(v)) {
	            stack.push(iterator);
	            iterator = v.__iterator(type, reverse);
	          } else {
	            return useKeys ? step : iteratorValue(type, iterations++, v, step);
	          }
	        }
	        return iteratorDone();
	      });
	    }
	    return flatSequence;
	  }


	  function flatMapFactory(iterable, mapper, context) {
	    var coerce = iterableClass(iterable);
	    return iterable.toSeq().map(
	      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}
	    ).flatten(true);
	  }


	  function interposeFactory(iterable, separator) {
	    var interposedSequence = makeSequence(iterable);
	    interposedSequence.size = iterable.size && iterable.size * 2 -1;
	    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k) 
	        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&
	        fn(v, iterations++, this$0) !== false},
	        reverse
	      );
	      return iterations;
	    };
	    interposedSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      var step;
	      return new Iterator(function()  {
	        if (!step || iterations % 2) {
	          step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	        }
	        return iterations % 2 ?
	          iteratorValue(type, iterations++, separator) :
	          iteratorValue(type, iterations++, step.value, step);
	      });
	    };
	    return interposedSequence;
	  }


	  function sortFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    var isKeyedIterable = isKeyed(iterable);
	    var index = 0;
	    var entries = iterable.toSeq().map(
	      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}
	    ).toArray();
	    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(
	      isKeyedIterable ?
	      function(v, i)  { entries[i].length = 2; } :
	      function(v, i)  { entries[i] = v[1]; }
	    );
	    return isKeyedIterable ? KeyedSeq(entries) :
	      isIndexed(iterable) ? IndexedSeq(entries) :
	      SetSeq(entries);
	  }


	  function maxFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    if (mapper) {
	      var entry = iterable.toSeq()
	        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})
	        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});
	      return entry && entry[0];
	    } else {
	      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});
	    }
	  }

	  function maxCompare(comparator, a, b) {
	    var comp = comparator(b, a);
	    // b is considered the new max if the comparator declares them equal, but
	    // they are not equal and b is in fact a nullish value.
	    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
	  }


	  function zipWithFactory(keyIter, zipper, iters) {
	    var zipSequence = makeSequence(keyIter);
	    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();
	    // Note: this a generic base implementation of __iterate in terms of
	    // __iterator which may be more generically useful in the future.
	    zipSequence.__iterate = function(fn, reverse) {
	      /* generic:
	      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        iterations++;
	        if (fn(step.value[1], step.value[0], this) === false) {
	          break;
	        }
	      }
	      return iterations;
	      */
	      // indexed:
	      var iterator = this.__iterator(ITERATE_VALUES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        if (fn(step.value, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };
	    zipSequence.__iteratorUncached = function(type, reverse) {
	      var iterators = iters.map(function(i )
	        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}
	      );
	      var iterations = 0;
	      var isDone = false;
	      return new Iterator(function()  {
	        var steps;
	        if (!isDone) {
	          steps = iterators.map(function(i ) {return i.next()});
	          isDone = steps.some(function(s ) {return s.done});
	        }
	        if (isDone) {
	          return iteratorDone();
	        }
	        return iteratorValue(
	          type,
	          iterations++,
	          zipper.apply(null, steps.map(function(s ) {return s.value}))
	        );
	      });
	    };
	    return zipSequence
	  }


	  // #pragma Helper Functions

	  function reify(iter, seq) {
	    return isSeq(iter) ? seq : iter.constructor(seq);
	  }

	  function validateEntry(entry) {
	    if (entry !== Object(entry)) {
	      throw new TypeError('Expected [K, V] tuple: ' + entry);
	    }
	  }

	  function resolveSize(iter) {
	    assertNotInfinite(iter.size);
	    return ensureSize(iter);
	  }

	  function iterableClass(iterable) {
	    return isKeyed(iterable) ? KeyedIterable :
	      isIndexed(iterable) ? IndexedIterable :
	      SetIterable;
	  }

	  function makeSequence(iterable) {
	    return Object.create(
	      (
	        isKeyed(iterable) ? KeyedSeq :
	        isIndexed(iterable) ? IndexedSeq :
	        SetSeq
	      ).prototype
	    );
	  }

	  function cacheResultThrough() {
	    if (this._iter.cacheResult) {
	      this._iter.cacheResult();
	      this.size = this._iter.size;
	      return this;
	    } else {
	      return Seq.prototype.cacheResult.call(this);
	    }
	  }

	  function defaultComparator(a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	  }

	  function forceIterator(keyPath) {
	    var iter = getIterator(keyPath);
	    if (!iter) {
	      // Array might not be iterable in this environment, so we need a fallback
	      // to our wrapped type.
	      if (!isArrayLike(keyPath)) {
	        throw new TypeError('Expected iterable or array-like: ' + keyPath);
	      }
	      iter = getIterator(Iterable(keyPath));
	    }
	    return iter;
	  }

	  createClass(Record, KeyedCollection);

	    function Record(defaultValues, name) {
	      var hasInitialized;

	      var RecordType = function Record(values) {
	        if (values instanceof RecordType) {
	          return values;
	        }
	        if (!(this instanceof RecordType)) {
	          return new RecordType(values);
	        }
	        if (!hasInitialized) {
	          hasInitialized = true;
	          var keys = Object.keys(defaultValues);
	          setProps(RecordTypePrototype, keys);
	          RecordTypePrototype.size = keys.length;
	          RecordTypePrototype._name = name;
	          RecordTypePrototype._keys = keys;
	          RecordTypePrototype._defaultValues = defaultValues;
	        }
	        this._map = Map(values);
	      };

	      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
	      RecordTypePrototype.constructor = RecordType;

	      return RecordType;
	    }

	    Record.prototype.toString = function() {
	      return this.__toString(recordName(this) + ' {', '}');
	    };

	    // @pragma Access

	    Record.prototype.has = function(k) {
	      return this._defaultValues.hasOwnProperty(k);
	    };

	    Record.prototype.get = function(k, notSetValue) {
	      if (!this.has(k)) {
	        return notSetValue;
	      }
	      var defaultVal = this._defaultValues[k];
	      return this._map ? this._map.get(k, defaultVal) : defaultVal;
	    };

	    // @pragma Modification

	    Record.prototype.clear = function() {
	      if (this.__ownerID) {
	        this._map && this._map.clear();
	        return this;
	      }
	      var RecordType = this.constructor;
	      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
	    };

	    Record.prototype.set = function(k, v) {
	      if (!this.has(k)) {
	        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
	      }
	      if (this._map && !this._map.has(k)) {
	        var defaultVal = this._defaultValues[k];
	        if (v === defaultVal) {
	          return this;
	        }
	      }
	      var newMap = this._map && this._map.set(k, v);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.remove = function(k) {
	      if (!this.has(k)) {
	        return this;
	      }
	      var newMap = this._map && this._map.remove(k);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);
	    };

	    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);
	    };

	    Record.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map && this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return makeRecord(this, newMap, ownerID);
	    };


	  var RecordPrototype = Record.prototype;
	  RecordPrototype[DELETE] = RecordPrototype.remove;
	  RecordPrototype.deleteIn =
	  RecordPrototype.removeIn = MapPrototype.removeIn;
	  RecordPrototype.merge = MapPrototype.merge;
	  RecordPrototype.mergeWith = MapPrototype.mergeWith;
	  RecordPrototype.mergeIn = MapPrototype.mergeIn;
	  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
	  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
	  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  RecordPrototype.setIn = MapPrototype.setIn;
	  RecordPrototype.update = MapPrototype.update;
	  RecordPrototype.updateIn = MapPrototype.updateIn;
	  RecordPrototype.withMutations = MapPrototype.withMutations;
	  RecordPrototype.asMutable = MapPrototype.asMutable;
	  RecordPrototype.asImmutable = MapPrototype.asImmutable;


	  function makeRecord(likeRecord, map, ownerID) {
	    var record = Object.create(Object.getPrototypeOf(likeRecord));
	    record._map = map;
	    record.__ownerID = ownerID;
	    return record;
	  }

	  function recordName(record) {
	    return record._name || record.constructor.name || 'Record';
	  }

	  function setProps(prototype, names) {
	    try {
	      names.forEach(setProp.bind(undefined, prototype));
	    } catch (error) {
	      // Object.defineProperty failed. Probably IE8.
	    }
	  }

	  function setProp(prototype, name) {
	    Object.defineProperty(prototype, name, {
	      get: function() {
	        return this.get(name);
	      },
	      set: function(value) {
	        invariant(this.__ownerID, 'Cannot set on an immutable record.');
	        this.set(name, value);
	      }
	    });
	  }

	  createClass(Set, SetCollection);

	    // @pragma Construction

	    function Set(value) {
	      return value === null || value === undefined ? emptySet() :
	        isSet(value) && !isOrdered(value) ? value :
	        emptySet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    Set.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Set.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    Set.prototype.toString = function() {
	      return this.__toString('Set {', '}');
	    };

	    // @pragma Access

	    Set.prototype.has = function(value) {
	      return this._map.has(value);
	    };

	    // @pragma Modification

	    Set.prototype.add = function(value) {
	      return updateSet(this, this._map.set(value, true));
	    };

	    Set.prototype.remove = function(value) {
	      return updateSet(this, this._map.remove(value));
	    };

	    Set.prototype.clear = function() {
	      return updateSet(this, this._map.clear());
	    };

	    // @pragma Composition

	    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);
	      iters = iters.filter(function(x ) {return x.size !== 0});
	      if (iters.length === 0) {
	        return this;
	      }
	      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
	        return this.constructor(iters[0]);
	      }
	      return this.withMutations(function(set ) {
	        for (var ii = 0; ii < iters.length; ii++) {
	          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});
	        }
	      });
	    };

	    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (!iters.every(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (iters.some(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.merge = function() {
	      return this.union.apply(this, arguments);
	    };

	    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return this.union.apply(this, iters);
	    };

	    Set.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator));
	    };

	    Set.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator, mapper));
	    };

	    Set.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);
	    };

	    Set.prototype.__iterator = function(type, reverse) {
	      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);
	    };

	    Set.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return this.__make(newMap, ownerID);
	    };


	  function isSet(maybeSet) {
	    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
	  }

	  Set.isSet = isSet;

	  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

	  var SetPrototype = Set.prototype;
	  SetPrototype[IS_SET_SENTINEL] = true;
	  SetPrototype[DELETE] = SetPrototype.remove;
	  SetPrototype.mergeDeep = SetPrototype.merge;
	  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
	  SetPrototype.withMutations = MapPrototype.withMutations;
	  SetPrototype.asMutable = MapPrototype.asMutable;
	  SetPrototype.asImmutable = MapPrototype.asImmutable;

	  SetPrototype.__empty = emptySet;
	  SetPrototype.__make = makeSet;

	  function updateSet(set, newMap) {
	    if (set.__ownerID) {
	      set.size = newMap.size;
	      set._map = newMap;
	      return set;
	    }
	    return newMap === set._map ? set :
	      newMap.size === 0 ? set.__empty() :
	      set.__make(newMap);
	  }

	  function makeSet(map, ownerID) {
	    var set = Object.create(SetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_SET;
	  function emptySet() {
	    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
	  }

	  createClass(OrderedSet, Set);

	    // @pragma Construction

	    function OrderedSet(value) {
	      return value === null || value === undefined ? emptyOrderedSet() :
	        isOrderedSet(value) ? value :
	        emptyOrderedSet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    OrderedSet.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedSet.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    OrderedSet.prototype.toString = function() {
	      return this.__toString('OrderedSet {', '}');
	    };


	  function isOrderedSet(maybeOrderedSet) {
	    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
	  }

	  OrderedSet.isOrderedSet = isOrderedSet;

	  var OrderedSetPrototype = OrderedSet.prototype;
	  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

	  OrderedSetPrototype.__empty = emptyOrderedSet;
	  OrderedSetPrototype.__make = makeOrderedSet;

	  function makeOrderedSet(map, ownerID) {
	    var set = Object.create(OrderedSetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_ORDERED_SET;
	  function emptyOrderedSet() {
	    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
	  }

	  createClass(Stack, IndexedCollection);

	    // @pragma Construction

	    function Stack(value) {
	      return value === null || value === undefined ? emptyStack() :
	        isStack(value) ? value :
	        emptyStack().unshiftAll(value);
	    }

	    Stack.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Stack.prototype.toString = function() {
	      return this.__toString('Stack [', ']');
	    };

	    // @pragma Access

	    Stack.prototype.get = function(index, notSetValue) {
	      var head = this._head;
	      index = wrapIndex(this, index);
	      while (head && index--) {
	        head = head.next;
	      }
	      return head ? head.value : notSetValue;
	    };

	    Stack.prototype.peek = function() {
	      return this._head && this._head.value;
	    };

	    // @pragma Modification

	    Stack.prototype.push = function(/*...values*/) {
	      if (arguments.length === 0) {
	        return this;
	      }
	      var newSize = this.size + arguments.length;
	      var head = this._head;
	      for (var ii = arguments.length - 1; ii >= 0; ii--) {
	        head = {
	          value: arguments[ii],
	          next: head
	        };
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pushAll = function(iter) {
	      iter = IndexedIterable(iter);
	      if (iter.size === 0) {
	        return this;
	      }
	      assertNotInfinite(iter.size);
	      var newSize = this.size;
	      var head = this._head;
	      iter.reverse().forEach(function(value ) {
	        newSize++;
	        head = {
	          value: value,
	          next: head
	        };
	      });
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pop = function() {
	      return this.slice(1);
	    };

	    Stack.prototype.unshift = function(/*...values*/) {
	      return this.push.apply(this, arguments);
	    };

	    Stack.prototype.unshiftAll = function(iter) {
	      return this.pushAll(iter);
	    };

	    Stack.prototype.shift = function() {
	      return this.pop.apply(this, arguments);
	    };

	    Stack.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._head = undefined;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyStack();
	    };

	    Stack.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      var resolvedBegin = resolveBegin(begin, this.size);
	      var resolvedEnd = resolveEnd(end, this.size);
	      if (resolvedEnd !== this.size) {
	        // super.slice(begin, end);
	        return IndexedCollection.prototype.slice.call(this, begin, end);
	      }
	      var newSize = this.size - resolvedBegin;
	      var head = this._head;
	      while (resolvedBegin--) {
	        head = head.next;
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    // @pragma Mutability

	    Stack.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeStack(this.size, this._head, ownerID, this.__hash);
	    };

	    // @pragma Iteration

	    Stack.prototype.__iterate = function(fn, reverse) {
	      if (reverse) {
	        return this.reverse().__iterate(fn);
	      }
	      var iterations = 0;
	      var node = this._head;
	      while (node) {
	        if (fn(node.value, iterations++, this) === false) {
	          break;
	        }
	        node = node.next;
	      }
	      return iterations;
	    };

	    Stack.prototype.__iterator = function(type, reverse) {
	      if (reverse) {
	        return this.reverse().__iterator(type);
	      }
	      var iterations = 0;
	      var node = this._head;
	      return new Iterator(function()  {
	        if (node) {
	          var value = node.value;
	          node = node.next;
	          return iteratorValue(type, iterations++, value);
	        }
	        return iteratorDone();
	      });
	    };


	  function isStack(maybeStack) {
	    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
	  }

	  Stack.isStack = isStack;

	  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

	  var StackPrototype = Stack.prototype;
	  StackPrototype[IS_STACK_SENTINEL] = true;
	  StackPrototype.withMutations = MapPrototype.withMutations;
	  StackPrototype.asMutable = MapPrototype.asMutable;
	  StackPrototype.asImmutable = MapPrototype.asImmutable;
	  StackPrototype.wasAltered = MapPrototype.wasAltered;


	  function makeStack(size, head, ownerID, hash) {
	    var map = Object.create(StackPrototype);
	    map.size = size;
	    map._head = head;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_STACK;
	  function emptyStack() {
	    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
	  }

	  /**
	   * Contributes additional methods to a constructor
	   */
	  function mixin(ctor, methods) {
	    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };
	    Object.keys(methods).forEach(keyCopier);
	    Object.getOwnPropertySymbols &&
	      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
	    return ctor;
	  }

	  Iterable.Iterator = Iterator;

	  mixin(Iterable, {

	    // ### Conversion to other types

	    toArray: function() {
	      assertNotInfinite(this.size);
	      var array = new Array(this.size || 0);
	      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });
	      return array;
	    },

	    toIndexedSeq: function() {
	      return new ToIndexedSequence(this);
	    },

	    toJS: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}
	      ).__toJS();
	    },

	    toJSON: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}
	      ).__toJS();
	    },

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, true);
	    },

	    toMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Map(this.toKeyedSeq());
	    },

	    toObject: function() {
	      assertNotInfinite(this.size);
	      var object = {};
	      this.__iterate(function(v, k)  { object[k] = v; });
	      return object;
	    },

	    toOrderedMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedMap(this.toKeyedSeq());
	    },

	    toOrderedSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Set(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSetSeq: function() {
	      return new ToSetSequence(this);
	    },

	    toSeq: function() {
	      return isIndexed(this) ? this.toIndexedSeq() :
	        isKeyed(this) ? this.toKeyedSeq() :
	        this.toSetSeq();
	    },

	    toStack: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Stack(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toList: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return List(isKeyed(this) ? this.valueSeq() : this);
	    },


	    // ### Common JavaScript methods and properties

	    toString: function() {
	      return '[Iterable]';
	    },

	    __toString: function(head, tail) {
	      if (this.size === 0) {
	        return head + tail;
	      }
	      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    concat: function() {var values = SLICE$0.call(arguments, 0);
	      return reify(this, concatFactory(this, values));
	    },

	    includes: function(searchValue) {
	      return this.some(function(value ) {return is(value, searchValue)});
	    },

	    entries: function() {
	      return this.__iterator(ITERATE_ENTRIES);
	    },

	    every: function(predicate, context) {
	      assertNotInfinite(this.size);
	      var returnValue = true;
	      this.__iterate(function(v, k, c)  {
	        if (!predicate.call(context, v, k, c)) {
	          returnValue = false;
	          return false;
	        }
	      });
	      return returnValue;
	    },

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, true));
	    },

	    find: function(predicate, context, notSetValue) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[1] : notSetValue;
	    },

	    forEach: function(sideEffect, context) {
	      assertNotInfinite(this.size);
	      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
	    },

	    join: function(separator) {
	      assertNotInfinite(this.size);
	      separator = separator !== undefined ? '' + separator : ',';
	      var joined = '';
	      var isFirst = true;
	      this.__iterate(function(v ) {
	        isFirst ? (isFirst = false) : (joined += separator);
	        joined += v !== null && v !== undefined ? v.toString() : '';
	      });
	      return joined;
	    },

	    keys: function() {
	      return this.__iterator(ITERATE_KEYS);
	    },

	    map: function(mapper, context) {
	      return reify(this, mapFactory(this, mapper, context));
	    },

	    reduce: function(reducer, initialReduction, context) {
	      assertNotInfinite(this.size);
	      var reduction;
	      var useFirst;
	      if (arguments.length < 2) {
	        useFirst = true;
	      } else {
	        reduction = initialReduction;
	      }
	      this.__iterate(function(v, k, c)  {
	        if (useFirst) {
	          useFirst = false;
	          reduction = v;
	        } else {
	          reduction = reducer.call(context, reduction, v, k, c);
	        }
	      });
	      return reduction;
	    },

	    reduceRight: function(reducer, initialReduction, context) {
	      var reversed = this.toKeyedSeq().reverse();
	      return reversed.reduce.apply(reversed, arguments);
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, true));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, true));
	    },

	    some: function(predicate, context) {
	      return !this.every(not(predicate), context);
	    },

	    sort: function(comparator) {
	      return reify(this, sortFactory(this, comparator));
	    },

	    values: function() {
	      return this.__iterator(ITERATE_VALUES);
	    },


	    // ### More sequential methods

	    butLast: function() {
	      return this.slice(0, -1);
	    },

	    isEmpty: function() {
	      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});
	    },

	    count: function(predicate, context) {
	      return ensureSize(
	        predicate ? this.toSeq().filter(predicate, context) : this
	      );
	    },

	    countBy: function(grouper, context) {
	      return countByFactory(this, grouper, context);
	    },

	    equals: function(other) {
	      return deepEqual(this, other);
	    },

	    entrySeq: function() {
	      var iterable = this;
	      if (iterable._cache) {
	        // We cache as an entries array, so we can just return the cache!
	        return new ArraySeq(iterable._cache);
	      }
	      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
	      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};
	      return entriesSequence;
	    },

	    filterNot: function(predicate, context) {
	      return this.filter(not(predicate), context);
	    },

	    findEntry: function(predicate, context, notSetValue) {
	      var found = notSetValue;
	      this.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          found = [k, v];
	          return false;
	        }
	      });
	      return found;
	    },

	    findKey: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry && entry[0];
	    },

	    findLast: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
	    },

	    findLastEntry: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
	    },

	    findLastKey: function(predicate, context) {
	      return this.toKeyedSeq().reverse().findKey(predicate, context);
	    },

	    first: function() {
	      return this.find(returnTrue);
	    },

	    flatMap: function(mapper, context) {
	      return reify(this, flatMapFactory(this, mapper, context));
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, true));
	    },

	    fromEntrySeq: function() {
	      return new FromEntriesSequence(this);
	    },

	    get: function(searchKey, notSetValue) {
	      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);
	    },

	    getIn: function(searchKeyPath, notSetValue) {
	      var nested = this;
	      // Note: in an ES6 environment, we would prefer:
	      // for (var key of searchKeyPath) {
	      var iter = forceIterator(searchKeyPath);
	      var step;
	      while (!(step = iter.next()).done) {
	        var key = step.value;
	        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
	        if (nested === NOT_SET) {
	          return notSetValue;
	        }
	      }
	      return nested;
	    },

	    groupBy: function(grouper, context) {
	      return groupByFactory(this, grouper, context);
	    },

	    has: function(searchKey) {
	      return this.get(searchKey, NOT_SET) !== NOT_SET;
	    },

	    hasIn: function(searchKeyPath) {
	      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
	    },

	    isSubset: function(iter) {
	      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
	      return this.every(function(value ) {return iter.includes(value)});
	    },

	    isSuperset: function(iter) {
	      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
	      return iter.isSubset(this);
	    },

	    keyOf: function(searchValue) {
	      return this.findKey(function(value ) {return is(value, searchValue)});
	    },

	    keySeq: function() {
	      return this.toSeq().map(keyMapper).toIndexedSeq();
	    },

	    last: function() {
	      return this.toSeq().reverse().first();
	    },

	    lastKeyOf: function(searchValue) {
	      return this.toKeyedSeq().reverse().keyOf(searchValue);
	    },

	    max: function(comparator) {
	      return maxFactory(this, comparator);
	    },

	    maxBy: function(mapper, comparator) {
	      return maxFactory(this, comparator, mapper);
	    },

	    min: function(comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
	    },

	    minBy: function(mapper, comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
	    },

	    rest: function() {
	      return this.slice(1);
	    },

	    skip: function(amount) {
	      return this.slice(Math.max(0, amount));
	    },

	    skipLast: function(amount) {
	      return reify(this, this.toSeq().reverse().skip(amount).reverse());
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, true));
	    },

	    skipUntil: function(predicate, context) {
	      return this.skipWhile(not(predicate), context);
	    },

	    sortBy: function(mapper, comparator) {
	      return reify(this, sortFactory(this, comparator, mapper));
	    },

	    take: function(amount) {
	      return this.slice(0, Math.max(0, amount));
	    },

	    takeLast: function(amount) {
	      return reify(this, this.toSeq().reverse().take(amount).reverse());
	    },

	    takeWhile: function(predicate, context) {
	      return reify(this, takeWhileFactory(this, predicate, context));
	    },

	    takeUntil: function(predicate, context) {
	      return this.takeWhile(not(predicate), context);
	    },

	    valueSeq: function() {
	      return this.toIndexedSeq();
	    },


	    // ### Hashable Object

	    hashCode: function() {
	      return this.__hash || (this.__hash = hashIterable(this));
	    }


	    // ### Internal

	    // abstract __iterate(fn, reverse)

	    // abstract __iterator(type, reverse)
	  });

	  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  var IterablePrototype = Iterable.prototype;
	  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
	  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
	  IterablePrototype.__toJS = IterablePrototype.toArray;
	  IterablePrototype.__toStringMapper = quoteString;
	  IterablePrototype.inspect =
	  IterablePrototype.toSource = function() { return this.toString(); };
	  IterablePrototype.chain = IterablePrototype.flatMap;
	  IterablePrototype.contains = IterablePrototype.includes;

	  mixin(KeyedIterable, {

	    // ### More sequential methods

	    flip: function() {
	      return reify(this, flipFactory(this));
	    },

	    mapEntries: function(mapper, context) {var this$0 = this;
	      var iterations = 0;
	      return reify(this,
	        this.toSeq().map(
	          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}
	        ).fromEntrySeq()
	      );
	    },

	    mapKeys: function(mapper, context) {var this$0 = this;
	      return reify(this,
	        this.toSeq().flip().map(
	          function(k, v)  {return mapper.call(context, k, v, this$0)}
	        ).flip()
	      );
	    }

	  });

	  var KeyedIterablePrototype = KeyedIterable.prototype;
	  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
	  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
	  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
	  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};



	  mixin(IndexedIterable, {

	    // ### Conversion to other types

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, false);
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, false));
	    },

	    findIndex: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    indexOf: function(searchValue) {
	      var key = this.keyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    lastIndexOf: function(searchValue) {
	      var key = this.lastKeyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, false));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, false));
	    },

	    splice: function(index, removeNum /*, ...values*/) {
	      var numArgs = arguments.length;
	      removeNum = Math.max(removeNum | 0, 0);
	      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
	        return this;
	      }
	      // If index is negative, it should resolve relative to the size of the
	      // collection. However size may be expensive to compute if not cached, so
	      // only call count() if the number is in fact negative.
	      index = resolveBegin(index, index < 0 ? this.count() : this.size);
	      var spliced = this.slice(0, index);
	      return reify(
	        this,
	        numArgs === 1 ?
	          spliced :
	          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
	      );
	    },


	    // ### More collection methods

	    findLastIndex: function(predicate, context) {
	      var entry = this.findLastEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    first: function() {
	      return this.get(0);
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, false));
	    },

	    get: function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      return (index < 0 || (this.size === Infinity ||
	          (this.size !== undefined && index > this.size))) ?
	        notSetValue :
	        this.find(function(_, key)  {return key === index}, undefined, notSetValue);
	    },

	    has: function(index) {
	      index = wrapIndex(this, index);
	      return index >= 0 && (this.size !== undefined ?
	        this.size === Infinity || index < this.size :
	        this.indexOf(index) !== -1
	      );
	    },

	    interpose: function(separator) {
	      return reify(this, interposeFactory(this, separator));
	    },

	    interleave: function(/*...iterables*/) {
	      var iterables = [this].concat(arrCopy(arguments));
	      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
	      var interleaved = zipped.flatten(true);
	      if (zipped.size) {
	        interleaved.size = zipped.size * iterables.length;
	      }
	      return reify(this, interleaved);
	    },

	    keySeq: function() {
	      return Range(0, this.size);
	    },

	    last: function() {
	      return this.get(-1);
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, false));
	    },

	    zip: function(/*, ...iterables */) {
	      var iterables = [this].concat(arrCopy(arguments));
	      return reify(this, zipWithFactory(this, defaultZipper, iterables));
	    },

	    zipWith: function(zipper/*, ...iterables */) {
	      var iterables = arrCopy(arguments);
	      iterables[0] = this;
	      return reify(this, zipWithFactory(this, zipper, iterables));
	    }

	  });

	  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
	  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



	  mixin(SetIterable, {

	    // ### ES6 Collection methods (ES6 Array and Map)

	    get: function(value, notSetValue) {
	      return this.has(value) ? value : notSetValue;
	    },

	    includes: function(value) {
	      return this.has(value);
	    },


	    // ### More sequential methods

	    keySeq: function() {
	      return this.valueSeq();
	    }

	  });

	  SetIterable.prototype.has = IterablePrototype.includes;
	  SetIterable.prototype.contains = SetIterable.prototype.includes;


	  // Mixin subclasses

	  mixin(KeyedSeq, KeyedIterable.prototype);
	  mixin(IndexedSeq, IndexedIterable.prototype);
	  mixin(SetSeq, SetIterable.prototype);

	  mixin(KeyedCollection, KeyedIterable.prototype);
	  mixin(IndexedCollection, IndexedIterable.prototype);
	  mixin(SetCollection, SetIterable.prototype);


	  // #pragma Helper functions

	  function keyMapper(v, k) {
	    return k;
	  }

	  function entryMapper(v, k) {
	    return [k, v];
	  }

	  function not(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    }
	  }

	  function neg(predicate) {
	    return function() {
	      return -predicate.apply(this, arguments);
	    }
	  }

	  function quoteString(value) {
	    return typeof value === 'string' ? JSON.stringify(value) : String(value);
	  }

	  function defaultZipper() {
	    return arrCopy(arguments);
	  }

	  function defaultNegComparator(a, b) {
	    return a < b ? 1 : a > b ? -1 : 0;
	  }

	  function hashIterable(iterable) {
	    if (iterable.size === Infinity) {
	      return 0;
	    }
	    var ordered = isOrdered(iterable);
	    var keyed = isKeyed(iterable);
	    var h = ordered ? 1 : 0;
	    var size = iterable.__iterate(
	      keyed ?
	        ordered ?
	          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :
	          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :
	        ordered ?
	          function(v ) { h = 31 * h + hash(v) | 0; } :
	          function(v ) { h = h + hash(v) | 0; }
	    );
	    return murmurHashOfSize(size, h);
	  }

	  function murmurHashOfSize(size, h) {
	    h = imul(h, 0xCC9E2D51);
	    h = imul(h << 15 | h >>> -15, 0x1B873593);
	    h = imul(h << 13 | h >>> -13, 5);
	    h = (h + 0xE6546B64 | 0) ^ size;
	    h = imul(h ^ h >>> 16, 0x85EBCA6B);
	    h = imul(h ^ h >>> 13, 0xC2B2AE35);
	    h = smi(h ^ h >>> 16);
	    return h;
	  }

	  function hashMerge(a, b) {
	    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
	  }

	  var Immutable = {

	    Iterable: Iterable,

	    Seq: Seq,
	    Collection: Collection,
	    Map: Map,
	    OrderedMap: OrderedMap,
	    List: List,
	    Stack: Stack,
	    Set: Set,
	    OrderedSet: OrderedSet,

	    Record: Record,
	    Range: Range,
	    Repeat: Repeat,

	    is: is,
	    fromJS: fromJS

	  };

	  return Immutable;

	}));

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Rust-inspired Result<T, E> and Option<T> (called Maybe) wrappers for Javascript.
	 *
	 * @author mystor
	 * @author uniphil
	 */

	/**
	 * @throws Error when the match is not exhaustive
	 * @throws Error when there are weird keys
	 * @throws Error when `option` is the wrong type for this match
	 * @param {EnumOption} option The instance to match against
	 * @param {Object} paths The optionName: callback mapping
	 * @returns {any} The result of calling the matching callback
	 */
	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function match(option, paths) {
	  if (!(option instanceof this.OptionClass)) {
	    if (process.env.NODE_ENV !== 'production' && process) {
	      console.error('Not a member from { ' + Object.keys(paths).join(', ') + ' }:', option);
	    }
	    throw new Error('match called on a non-member option: \'' + String(option) + '\'. ' + ('Expected a member from Union{ ' + Object.keys(paths).join(', ') + ' }'));
	  }
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;

	  try {
	    for (var _iterator = Object.keys(paths)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var k = _step.value;

	      if (!option.options.hasOwnProperty(k) && k !== '_') {
	        throw new Error('unrecognized match option: \'' + k + '\'');
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator['return']) {
	        _iterator['return']();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }

	  if (typeof paths._ === 'function') {
	    // match is de-facto exhaustive w/ `_`
	    if (typeof paths[option.name] === 'function') {
	      return paths[option.name](option.payload);
	    } else {
	      return paths._(option.payload);
	    }
	  } else {
	    // ensure match is exhaustive
	    for (var k in option.options) {
	      if (typeof paths[k] !== 'function') {
	        if (typeof paths[k] === 'undefined') {
	          throw new Error('Non-exhaustive match is missing \'' + k + '\'');
	        } else {
	          throw new Error('match expected a function for \'' + k + '\', but found a \'' + typeof paths[k] + '\'');
	        }
	      }
	    }
	    return paths[option.name](option.payload);
	  }
	}

	// Useful in general, but specifically motivated by and inspired by immutablejs
	// https://github.com/facebook/immutable-js/blob/master/src/is.js
	function _equals(_x4, _x5) {
	  var _again = true;

	  _function: while (_again) {
	    var a = _x4,
	        b = _x5;
	    _again = false;

	    if (a === b || a !== a && b !== b) {
	      // true for NaNs
	      return true;
	    }

	    if (!a || !b) {
	      return false;
	    }

	    // There is probably a cleaner way to do this check
	    // Blame TDD :)
	    if (a && typeof a.constructor === 'function' && a.constructor.unionFactory === Union) {
	      if (!(b && typeof b.constructor === 'function' && b.constructor.unionFactory === Union)) {
	        return false;
	      }
	      if (a.constructor !== b.constructor) {
	        return false;
	      }
	      if (a.name !== b.name) {
	        return false;
	      }
	      _x4 = a.payload;
	      _x5 = b.payload;
	      _again = true;
	      continue _function;
	    }

	    // I hate this block. Blame immutablejs :)
	    if (typeof a.valueOf === 'function' && typeof b.valueOf === 'function') {
	      a = a.valueOf();
	      b = b.valueOf();
	      if (a === b || a !== a && b !== b) {
	        return true;
	      }
	      if (!a || !b) {
	        return false;
	      }
	    }
	    if (typeof a.equals === 'function' && typeof b.equals === 'function') {
	      return a.equals(b);
	    }
	    return false;
	  }
	}

	function equalsProto(other) {
	  return _equals(this, other);
	}

	function hashCode() {
	  return 42; // TODO: this is valid, but inefficient. Actually implement this :)
	}

	function unionOptionToString() {
	  return '[' + this.name + '(' + this.payload + ') ' + ('from Union{ ' + Object.keys(this.options).join(', ') + ' }]');
	}

	function _factory(options, name, UnionOptionClass) {
	  return function (payload) {
	    return new UnionOptionClass(options, name, payload);
	  };
	}

	function Union(options) {
	  var proto = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	  var static_ = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	  var factory = arguments.length <= 3 || arguments[3] === undefined ? _factory : arguments[3];

	  if (typeof options !== 'object') {
	    throw new Error('Param `options` must be an object with keys for each member of the union');
	  }
	  if (options.hasOwnProperty('toString')) {
	    throw new Error('Cannot use reserved name `toString` as part of a Union');
	  }
	  if (options.hasOwnProperty('match')) {
	    throw new Error('Cannot use reserved name `match` as part of a Union');
	  }
	  if (options.hasOwnProperty('options')) {
	    throw new UnionError('Cannot use reserved name `options` as part of a Union');
	  }
	  if (options.hasOwnProperty('OptionClass')) {
	    throw new Error('Cannot use reserved name `UnionClass` as part of a Union');
	  }
	  var _iteratorNormalCompletion2 = true;
	  var _didIteratorError2 = false;
	  var _iteratorError2 = undefined;

	  try {
	    for (var _iterator2 = Object.keys(static_)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	      var k = _step2.value;

	      if (options.hasOwnProperty(k)) {
	        throw new Error('Cannot add static method \'' + k + '\' to Union which ' + ('has the same name as a member (members: ' + options.join(', ') + ').'));
	      }
	    }
	  } catch (err) {
	    _didIteratorError2 = true;
	    _iteratorError2 = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion2 && _iterator2['return']) {
	        _iterator2['return']();
	      }
	    } finally {
	      if (_didIteratorError2) {
	        throw _iteratorError2;
	      }
	    }
	  }

	  function UnionOption(options, name, payload) {
	    this.options = options;
	    this.name = name;
	    this.payload = payload;
	  }
	  UnionOption.prototype.toString = unionOptionToString;
	  UnionOption.prototype.equals = equalsProto;
	  UnionOption.prototype.hashCode = hashCode;
	  Object.keys(proto).forEach(function (k) {
	    return UnionOption.prototype[k] = proto[k];
	  });

	  // put a ref on the union option class back to Union so we can trace things
	  // back to see if they are from Union
	  UnionOption.unionFactory = Union;

	  var union = _extends({
	    options: options,
	    OptionClass: UnionOption,
	    toString: function toString() {
	      return '[Union { ' + Object.keys(options).join(', ') + ' }]';
	    },
	    match: match
	  }, static_);
	  var _iteratorNormalCompletion3 = true;
	  var _didIteratorError3 = false;
	  var _iteratorError3 = undefined;

	  try {
	    for (var _iterator3 = Object.keys(options)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	      var _name = _step3.value;

	      union[_name] = factory(options, _name, UnionOption);
	    }
	  } catch (err) {
	    _didIteratorError3 = true;
	    _iteratorError3 = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion3 && _iterator3['return']) {
	        _iterator3['return']();
	      }
	    } finally {
	      if (_didIteratorError3) {
	        throw _iteratorError3;
	      }
	    }
	  }

	  return union;
	}

	// deep-check equality between two union option instances, compatible with immutablejs
	Union.is = _equals;

	var maybeProto = {
	  isSome: function isSome() {
	    return this.name === 'Some';
	  },
	  isNone: function isNone() {
	    return this.name === 'None';
	  },
	  /**
	   * @throws whatever is passed as the arg
	   */
	  expect: function expect(err) {
	    if (this.name === 'Some') {
	      return this.payload;
	    } else {
	      throw err;
	    }
	  },
	  /**
	   * @throws Error if it is None
	   */
	  unwrap: function unwrap() {
	    if (this.name === 'Some') {
	      return this.payload;
	    } else {
	      throw new Error('Tried to .unwrap() Maybe.None as Some');
	    }
	  },
	  unwrapOr: function unwrapOr(def) {
	    return this.name === 'Some' ? this.payload : def;
	  },
	  unwrapOrElse: function unwrapOrElse(fn) {
	    return this.name === 'Some' ? this.payload : fn();
	  },
	  okOr: function okOr(err) {
	    return this.name === 'Some' ? Result.Ok(this.payload) : Result.Err(err);
	  },
	  okOrElse: function okOrElse(errFn) {
	    return this.name === 'Some' ? Result.Ok(this.payload) : Result.Err(errFn());
	  },
	  promiseOr: function promiseOr(err) {
	    return this.name === 'Some' ? Promise.resolve(this.payload) : Promise.reject(err);
	  },
	  promiseOrElse: function promiseOrElse(fn) {
	    return this.name === 'Some' ? Promise.resolve(this.payload) : Promise.reject(fn());
	  },
	  and: function and(other) {
	    return this.name === 'Some' ? Maybe.Some(other) : this;
	  },
	  andThen: function andThen(fn) {
	    return this.name === 'Some' ? Maybe.Some(fn(this.payload)) : this;
	  },
	  or: function or(other) {
	    return this.name === 'Some' ? this : Maybe.Some(other);
	  },
	  orElse: function orElse(fn) {
	    return this.name === 'Some' ? this : Maybe.Some(fn());
	  }
	};

	var maybeStatic = {
	  all: function all(values) {
	    return values.reduce(function (res, next) {
	      return res.andThen(function (resArr) {
	        return Maybe.Some(next).andThen(function (v) {
	          return resArr.concat([v]);
	        });
	      });
	    }, Maybe.Some([]));
	  },
	  undefined: function undefined(val) {
	    return typeof val === 'undefined' ? Maybe.None() : Maybe.Some(val);
	  },
	  'null': function _null(val) {
	    return val === null ? Maybe.None() : Maybe.Some(val);
	  },
	  nan: function nan(val) {
	    return val !== val ? Maybe.None() : Maybe.Some(val);
	  }
	};

	var Maybe = Union({
	  Some: null,
	  None: null
	}, maybeProto, maybeStatic, function (options, name, UnionOptionClass) {
	  if (name === 'Some') {
	    return function (value) {
	      if (value instanceof UnionOptionClass) {
	        return value;
	      } else {
	        return new UnionOptionClass(options, 'Some', value);
	      }
	    };
	  } else {
	    // None
	    return function () {
	      return new UnionOptionClass(options, 'None');
	    };
	  }
	});

	var resultProto = {
	  isOk: function isOk() {
	    return this.name === 'Ok';
	  },
	  isErr: function isErr() {
	    return this.name === 'Err';
	  },
	  ok: function ok() {
	    return this.name === 'Ok' ? Maybe.Some(this.payload) : Maybe.None();
	  },
	  err: function err() {
	    return this.name === 'Ok' ? Maybe.None() : Maybe.Some(this.payload);
	  },
	  promise: function promise() {
	    return this.name === 'Ok' ? Promise.resolve(this.payload) : Promise.reject(this.payload);
	  },
	  promiseErr: function promiseErr() {
	    return this.name === 'Ok' ? Promise.reject(this.payload) : Promise.resolve(this.payload);
	  },
	  and: function and(other) {
	    return this.name === 'Ok' ? Result.Ok(other) : this;
	  },
	  andThen: function andThen(fn) {
	    return this.name === 'Ok' ? Result.Ok(fn(this.payload)) : this;
	  },
	  or: function or(other) {
	    return this.name === 'Ok' ? this : Result.Ok(other);
	  },
	  orElse: function orElse(fn) {
	    return this.name === 'Ok' ? this : Result.Ok(fn(this.payload));
	  },
	  unwrapOr: function unwrapOr(def) {
	    return this.name === 'Ok' ? this.payload : def;
	  },
	  unwrapOrElse: function unwrapOrElse(fn) {
	    return this.name === 'Ok' ? this.payload : fn(this.payload);
	  },
	  /**
	   * @throws err
	   */
	  expect: function expect(err) {
	    if (this.name === 'Ok') {
	      return this.payload;
	    } else {
	      throw err;
	    }
	  },
	  /**
	   * @throws the value from Err(value)
	   */
	  unwrap: function unwrap() {
	    if (this.name === 'Ok') {
	      return this.payload;
	    } else {
	      throw this.payload;
	    }
	  },
	  /**
	   * @throws the value from Ok(value)
	   */
	  unwrapErr: function unwrapErr() {
	    if (this.name === 'Ok') {
	      var hint = '';
	      if (this.payload && typeof this.payload.toString === 'function') {
	        hint = ': ' + this.payload.toString();
	      }
	      throw new Error('Tried to .unwrap() Result.Ok as Err' + hint);
	    } else {
	      return this.payload;
	    }
	  }
	};

	var resultStatic = {
	  all: function all(values) {
	    return values.reduce(function (res, next) {
	      return res.andThen(function (resArr) {
	        return Result.Ok(next).andThen(function (v) {
	          return resArr.concat([v]);
	        });
	      });
	    }, Result.Ok([]));
	  },
	  'try': function _try(maybeThrows) {
	    try {
	      return Result.Ok(maybeThrows());
	    } catch (err) {
	      return Result.Err(err);
	    }
	  }
	};

	var Result = Union({
	  Ok: null,
	  Err: null
	}, resultProto, resultStatic, function (options, name, UnionOptionClass) {
	  if (name === 'Ok') {
	    return function (value) {
	      if (value instanceof UnionOptionClass) {
	        return value;
	      } else {
	        return new UnionOptionClass(options, 'Ok', value);
	      }
	    };
	  } else {
	    return function (err) {
	      return new UnionOptionClass(options, 'Err', err);
	    };
	  }
	});

	module.exports = {
	  Union: Union,

	  Maybe: Maybe,
	  Some: Maybe.Some,
	  None: Maybe.None,

	  Result: Result,
	  Ok: Result.Ok,
	  Err: Result.Err
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Sub = exports.Cmd = exports.Update = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	exports.cmd = cmd;
	exports.sub = sub;
	exports.default = Spindle;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _immutable = __webpack_require__(169);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _results = __webpack_require__(170);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Update = exports.Update = _immutable2.default.Record({
	  model: undefined,
	  cmds: undefined,
	  emit: undefined
	});

	var propsEq = function propsEq(a, b) {
	  for (var k in a) {
	    if (a[k] !== b[k] && k !== 'onEmit') return false;
	  }
	  var aCount = Object.keys(a).length - !!a.onEmit;
	  var bCount = Object.keys(b).length - !!b.onEmit;
	  return aCount === bCount;
	};

	var Cmd = exports.Cmd = _immutable2.default.Record({
	  run: null,
	  abort: null
	});

	var Sub = exports.Sub = _immutable2.default.Record({
	  key: null,
	  start: null,
	  stop: null
	});

	function cmd(c, Tag) {
	  return [c, Tag];
	}

	function sub(s, Tag) {
	  return [s, Tag];
	}

	var ComponentEffects = _immutable2.default.Record({
	  subs: _immutable2.default.Set(),
	  cmds: _immutable2.default.List()
	});

	var createSpindle = function createSpindle() {
	  var components = _immutable2.default.Map();
	  var subscriptions = _immutable2.default.Map();

	  return {
	    register: function register(component) {
	      return components = components.set(component, ComponentEffects());
	    },
	    unregister: function unregister(component) {
	      // abort cmds
	      // cancel subs
	      components = components.delete(component);
	    },
	    pushCmds: function pushCmds(component, cmds) {
	      cmds.forEach(function (_ref) {
	        var _ref2 = _slicedToArray(_ref, 2);

	        var c = _ref2[0];
	        var Tag = _ref2[1];

	        c.get('run')(function (payload) {
	          return component._dispatch(Tag(payload));
	        });
	      });
	    },
	    updateSubs: function updateSubs(component, subs) {
	      subs.forEach(function (_ref3) {
	        var _ref4 = _slicedToArray(_ref3, 2);

	        var s = _ref4[0];
	        var Tag = _ref4[1];

	        var k = s.get('key');
	        if (!subscriptions.has(k)) {
	          var go = function go(state, msg) {
	            subscriptions.getIn([k, 'subscribers']).forEach(function (suber) {
	              return suber(msg);
	            });
	            subscriptions = subscriptions.setIn([k, 'state'], state);
	          };
	          subscriptions = subscriptions.set(k, _immutable2.default.Map({
	            msg: go,
	            state: s.start(go),
	            subscribers: _immutable2.default.Map()
	          }));
	        }
	        subscriptions = subscriptions.setIn([k, 'subscribers', Tag], function (payload) {
	          return component._dispatch(Tag(payload));
	        });
	      });
	    }
	  };
	};

	var bindActions = function bindActions(dispatch, Action) {
	  return Object.keys(Action.options).forEach(function (k) {
	    return dispatch[k] = function (payload) {
	      return dispatch(Action[k](payload));
	    };
	  });
	};

	function Spindle(name, _ref5) {
	  var _ref5$Action = _ref5.Action;
	  var Action = _ref5$Action === undefined ? (0, _results.Union)({}) : _ref5$Action;
	  var _ref5$init = _ref5.init;
	  var init = _ref5$init === undefined ? function () {
	    return Update();
	  } : _ref5$init;
	  var _ref5$propsUpdate = _ref5.propsUpdate;
	  var propsUpdate = _ref5$propsUpdate === undefined ? function () {
	    return Update();
	  } : _ref5$propsUpdate;
	  var _ref5$update = _ref5.update;
	  var update = _ref5$update === undefined ? function () {
	    return Update();
	  } : _ref5$update;
	  var _ref5$view = _ref5.view;
	  var view = _ref5$view === undefined ? function () {
	    return null;
	  } : _ref5$view;
	  var _ref5$subscriptions = _ref5.subscriptions;
	  var subscriptions = _ref5$subscriptions === undefined ? function () {
	    return [];
	  } : _ref5$subscriptions;
	  var _ref5$propTypes = _ref5.propTypes;
	  var componentPropTypes = _ref5$propTypes === undefined ? {} : _ref5$propTypes;

	  var Component = function (_React$Component) {
	    _inherits(Component, _React$Component);

	    function Component(props) {
	      _classCallCheck(this, Component);

	      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Component).call(this, props));

	      _this.state = { model: null };
	      _this._hasInitialized = false;
	      _this._isSpindleRoot = null;
	      _this._spindle = undefined; // only for the root
	      _this._unregister = null;
	      _this._cmdQueue = [];
	      _this._dispatch = function (msg) {
	        return _this.run(update(msg, _this.state.model));
	      };
	      bindActions(_this._dispatch, Action);
	      return _this;
	    }

	    _createClass(Component, [{
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        if (typeof this.context.spindle === 'undefined') {
	          this._isSpindleRoot = true;
	          this._spindle = createSpindle();
	        } else {
	          this._isSpindleRoot = false;
	        }
	        this.getSpindle().register(this);
	        this.run(init(this.props));
	        this._hasInitialized = true;
	        this.forceUpdate(); // grosssssssssss
	      }
	    }, {
	      key: 'getChildContext',
	      value: function getChildContext() {
	        return { spindle: this.context.spindle || this._spindle };
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        if (!propsEq(this.props, nextProps)) {
	          this.run(propsUpdate(nextProps, this.state.model));
	        }
	      }
	    }, {
	      key: 'shouldComponentUpdate',
	      value: function shouldComponentUpdate(nextProps, nextState) {
	        return !propsEq(nextProps, this.props) || !_immutable2.default.is(nextState.model, this.state.model);
	      }
	    }, {
	      key: 'componentWillUpdate',
	      value: function componentWillUpdate(_, nextState) {
	        var subs = subscriptions(this.state.model);
	        this.getSpindle().updateSubs(this, subs);
	      }
	    }, {
	      key: 'componentDidUpdate',
	      value: function componentDidUpdate() {
	        this.getSpindle().pushCmds(this, this._cmdQueue);
	        this._cmdQueue = [];
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        this.getSpindle().unregister(this);
	      }
	    }, {
	      key: 'getSpindle',
	      value: function getSpindle() {
	        return this.context.spindle || this._spindle;
	      }
	    }, {
	      key: 'run',
	      value: function run(update) {
	        var _update$toObject = update.toObject();

	        var model = _update$toObject.model;
	        var cmds = _update$toObject.cmds;
	        var emit = _update$toObject.emit;

	        model && this.setState({ model: model });
	        cmds && (this._cmdQueue = this._cmdQueue.concat(cmds));
	        typeof emit !== 'undefined' && this.props.onEmit && this.props.onEmit(emit);
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        return this._hasInitialized ? view(this.state.model, this._dispatch, this.props) : null; // can't mount children until we can set up context
	      }
	    }]);

	    return Component;
	  }(_react2.default.Component);

	  Object.assign(Component, {
	    displayName: name,
	    contextTypes: {
	      spindle: _react.PropTypes.object
	    },
	    childContextTypes: {
	      spindle: _react.PropTypes.object
	    },
	    propTypes: _extends({}, componentPropTypes, {
	      onEmit: _react.PropTypes.func })
	  });
	  // optional
	  return Component;
	};

	// be friendly to cjs modules
	Object.assign(exports['default'], exports); // attach all the exports to Spindle
	module.exports = exports['default']; // export it like a cjs module

	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _immutable = __webpack_require__(169);

	var _immutable2 = _interopRequireDefault(_immutable);

	var _spindleUi = __webpack_require__(171);

	var _spindleUi2 = _interopRequireDefault(_spindleUi);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var propTypes = {
	  text: _react.PropTypes.string.isRequired,
	  onEmit: _react.PropTypes.fn
	};

	var Model = (0, _immutable.Record)({
	  word: _immutable2.default.List([]),
	  onClick: undefined
	});

	var init = function init(props) {
	  return (0, _spindleUi.Update)({ model: Model().set('word', props.text).set('onClick', props.onEmit) });
	};

	var view = function view(model, dispatch, _) {
	  var word = model.get('word');
	  var _onClick = model.get('onClick');
	  if (word === 'line break' && !_onClick) return _react2.default.createElement('br', null);
	  return _react2.default.createElement(
	    'span',
	    { style: {
	        cursor: 'pointer',
	        fontFamily: 'Georgia, serif',
	        display: 'inline-block',
	        border: '1px solid #222',
	        margin: '5px 1px',
	        padding: '2px 4px',
	        fontSize: '22px',
	        backgroundColor: '#f5f5f5',
	        boxShadow: '1px 1px 2px #111',
	        transform: 'rotate(-1deg)' },
	      onClick: function onClick() {
	        return _onClick(word);
	      } },
	    word
	  );
	};

	module.exports = (0, _spindleUi2.default)('Tile', { propTypes: propTypes, init: init, view: view });

/***/ },
/* 173 */
/***/ function(module, exports) {

	module.exports = {
		"sweet": {
			"sound": 2,
			"footnote": 1,
			"cool": 1,
			"wife": 1,
			"light": 1,
			"birds": 1,
			"his": 1,
			"voices": 2,
			"white": 1,
			"are": 8,
			"under": 1,
			"who": 2,
			"sweetest": 1,
			"which": 2,
			"sake": 2,
			"of": 21,
			"high": 1,
			"souls": 1,
			"city": 1,
			"place": 1,
			"pass": 1,
			"rose": 1,
			"sings": 1,
			"not": 1,
			"hours": 1,
			"praise": 1,
			"it": 4,
			"fool": 1,
			"child": 1,
			"by": 1,
			"eyes": 5,
			"fountain": 1,
			"bring": 2,
			"cold": 1,
			"land": 1,
			"is": 15,
			"return": 1,
			"farewell": 1,
			"form": 1,
			"immortality": 1,
			"they": 2,
			"thus": 1,
			"pale": 1,
			"new": 2,
			"rosy": 1,
			"its": 1,
			"than": 4,
			"song": 2,
			"friends": 1,
			"where": 1,
			"for": 4,
			"surprise": 1,
			"breath": 1,
			"my": 1,
			"words": 1,
			"beauty": 1,
			"sleep": 1,
			"peace": 3,
			"hopes": 1,
			"mary": 2,
			"soul": 3,
			"hope": 3,
			"bells": 4,
			"william": 1,
			"rain": 1,
			"were": 1,
			"indeed": 1,
			"did": 1,
			"was": 1,
			"that": 4,
			"if": 1,
			"lips": 1,
			"thin": 1,
			"always": 1,
			"make": 1,
			"perfume": 1,
			"oh": 1,
			"moon": 1,
			"music": 4,
			"even": 1,
			"charms": 1,
			"or": 2,
			"hands": 1,
			"tears": 1,
			"bitter": 2,
			"their": 2,
			"a": 5,
			"so": 3,
			"babe": 2,
			"given": 1,
			"upon": 1,
			"things": 2,
			"spirit": 14,
			"hath": 2,
			"love": 1,
			"on": 2,
			"content": 1,
			"but": 4,
			"time": 3,
			"when": 6,
			"sigh": 1,
			"sorrow": 2,
			"and": 41,
			"grace": 1,
			"days": 2,
			"i": 2,
			"thou": 6,
			"home": 3,
			"south": 1,
			"presence": 1,
			"one": 1,
			"such": 1,
			"secret": 1,
			"fields": 1,
			"saint": 1,
			"each": 1,
			"brow": 1,
			"how": 2,
			"hearts": 1,
			"from": 4,
			"maid": 3,
			"no": 2,
			"calm": 1,
			"voice": 2,
			"solitude": 1,
			"with": 4,
			"sad": 1,
			"soft": 1,
			"now": 1,
			"realm": 1,
			"will": 5,
			"thought": 2,
			"has": 1,
			"thats": 1,
			"well": 1,
			"doth": 1,
			"clear": 1,
			"spring": 1,
			"our": 1,
			"day": 3,
			"neer": 1,
			"mercy": 2,
			"yet": 1,
			"way": 1,
			"to": 17,
			"youth": 1,
			"human": 1,
			"springs": 2,
			"strain": 1,
			"freedoms": 1,
			"soar": 1,
			"may": 1,
			"smiled": 1,
			"we": 2,
			"as": 13,
			"heavens": 1,
			"life": 1,
			"he": 2,
			"at": 1,
			"slumber": 2,
			"o": 3,
			"the": 21,
			"tis": 1,
			"though": 1,
			"oft": 1,
			"there": 1,
			"in": 12,
			"flowers": 2,
			"thoughts": 1
		},
		"books": {
			"else": 1,
			"are": 3,
			"of": 3,
			"learning": 1,
			"fool": 1,
			"ease": 1,
			"they": 2,
			"you": 1,
			"my": 1,
			"were": 1,
			"that": 1,
			"a": 1,
			"but": 1,
			"dreams": 1,
			"and": 3,
			"these": 1,
			"with": 1,
			"will": 1,
			"all": 1,
			"to": 1,
			"we": 1,
			"the": 2,
			"in": 2
		},
		"tune": {
			"went": 1,
			"of": 2,
			"rock": 1,
			"just": 1,
			"what": 1,
			"oh": 1,
			"so": 2,
			"on": 1,
			"rhyme": 1,
			"and": 7,
			"down": 1,
			"beneath": 1,
			"before": 1,
			"to": 2,
			"as": 1,
			"at": 1,
			"the": 1
		},
		"perchance": {
			"of": 1,
			"she": 1,
			"sleep": 1,
			"had": 1,
			"have": 1,
			"am": 1,
			"a": 1,
			"upon": 1,
			"on": 1,
			"and": 1,
			"thou": 1,
			"from": 1,
			"with": 1,
			"some": 1,
			"could": 1,
			"to": 2,
			"may": 2,
			"o": 1,
			"the": 3,
			"her": 1,
			"there": 1,
			"in": 2
		},
		"flower": {
			"sweet": 1,
			"come": 1,
			"more": 1,
			"of": 15,
			"blind": 1,
			"she": 1,
			"is": 3,
			"found": 1,
			"lightly": 1,
			"small": 1,
			"for": 2,
			"lost": 1,
			"my": 1,
			"whom": 1,
			"can": 1,
			"was": 3,
			"that": 7,
			"fall": 1,
			"or": 4,
			"sae": 1,
			"a": 1,
			"so": 2,
			"on": 4,
			"but": 3,
			"death": 1,
			"when": 1,
			"and": 10,
			"i": 1,
			"down": 1,
			"might": 1,
			"how": 1,
			"from": 2,
			"want": 1,
			"with": 6,
			"give": 2,
			"to": 1,
			"we": 1,
			"the": 8,
			"near": 2,
			"first": 1,
			"there": 1,
			"in": 2
		},
		"blue": {
			"look": 1,
			"light": 1,
			"mountains": 1,
			"are": 1,
			"under": 5,
			"of": 4,
			"she": 1,
			"serene": 1,
			"far": 1,
			"eyes": 5,
			"they": 1,
			"mother": 1,
			"where": 1,
			"heaven": 1,
			"tomorrow": 1,
			"came": 1,
			"thy": 1,
			"morn": 2,
			"face": 1,
			"oer": 1,
			"that": 2,
			"what": 1,
			"oh": 1,
			"an": 2,
			"or": 2,
			"eye": 6,
			"tears": 1,
			"a": 3,
			"so": 1,
			"on": 1,
			"above": 2,
			"deep": 1,
			"old": 1,
			"wet": 1,
			"when": 1,
			"be": 1,
			"and": 15,
			"i": 1,
			"these": 1,
			"with": 2,
			"wave": 1,
			"some": 1,
			"will": 2,
			"strong": 1,
			"rhine": 1,
			"to": 1,
			"turning": 1,
			"skies": 2,
			"we": 1,
			"spread": 1,
			"as": 2,
			"heavens": 1,
			"he": 1,
			"yonder": 1,
			"the": 5,
			"tis": 1,
			"seas": 1,
			"in": 2,
			"shed": 1,
			"sky": 7
		},
		"come": {
			"come": 5,
			"us": 1,
			"more": 1,
			"blessd": 1,
			"light": 1,
			"his": 1,
			"see": 2,
			"lady": 1,
			"faithful": 1,
			"woe": 1,
			"tell": 1,
			"back": 9,
			"which": 1,
			"of": 3,
			"this": 1,
			"cast": 1,
			"pour": 1,
			"up": 1,
			"off": 1,
			"breathe": 1,
			"she": 2,
			"beyond": 1,
			"nor": 3,
			"forth": 9,
			"brother": 1,
			"not": 7,
			"proud": 1,
			"every": 3,
			"it": 4,
			"over": 1,
			"by": 3,
			"father": 1,
			"is": 1,
			"unto": 1,
			"like": 3,
			"away": 6,
			"good": 1,
			"together": 1,
			"they": 8,
			"without": 2,
			"lightly": 1,
			"where": 4,
			"gentle": 1,
			"holy": 1,
			"for": 13,
			"boys": 1,
			"my": 6,
			"short": 1,
			"again": 9,
			"watch": 1,
			"pretty": 1,
			"ere": 2,
			"gather": 1,
			"friend": 1,
			"oer": 2,
			"shell": 1,
			"was": 1,
			"that": 1,
			"let": 4,
			"what": 4,
			"an": 1,
			"even": 1,
			"or": 2,
			"de": 1,
			"late": 1,
			"fill": 4,
			"their": 2,
			"a": 2,
			"so": 2,
			"sometimes": 1,
			"true": 1,
			"upon": 1,
			"lord": 1,
			"never": 1,
			"many": 1,
			"love": 1,
			"on": 6,
			"maryland": 1,
			"above": 1,
			"fast": 1,
			"but": 5,
			"death": 1,
			"ye": 1,
			"when": 13,
			"onward": 1,
			"be": 1,
			"out": 4,
			"and": 52,
			"whateer": 1,
			"lovely": 1,
			"i": 4,
			"thou": 2,
			"marching": 1,
			"down": 1,
			"told": 1,
			"home": 5,
			"too": 1,
			"one": 1,
			"between": 1,
			"perfect": 1,
			"henry": 1,
			"from": 13,
			"join": 1,
			"ill": 1,
			"nigh": 1,
			"no": 1,
			"with": 18,
			"around": 1,
			"follow": 1,
			"strong": 1,
			"all": 1,
			"comrades": 1,
			"then": 4,
			"through": 1,
			"well": 2,
			"behind": 1,
			"wealth": 1,
			"nearer": 2,
			"our": 1,
			"open": 2,
			"shall": 2,
			"before": 2,
			"your": 2,
			"yet": 2,
			"to": 83,
			"may": 2,
			"we": 5,
			"as": 9,
			"stand": 1,
			"he": 1,
			"arms": 1,
			"at": 7,
			"o": 3,
			"coming": 1,
			"the": 10,
			"tis": 2,
			"though": 1,
			"scarce": 1,
			"her": 1,
			"near": 1,
			"in": 27,
			"seem": 1
		},
		"sound": {
			"sound": 2,
			"save": 2,
			"which": 1,
			"of": 26,
			"amid": 1,
			"silence": 1,
			"nor": 1,
			"whatever": 1,
			"not": 1,
			"it": 1,
			"by": 1,
			"breaks": 1,
			"is": 2,
			"like": 2,
			"swift": 1,
			"for": 2,
			"better": 1,
			"can": 4,
			"oer": 1,
			"was": 2,
			"that": 1,
			"let": 1,
			"go": 1,
			"must": 1,
			"what": 2,
			"an": 1,
			"their": 1,
			"a": 4,
			"upon": 1,
			"but": 2,
			"time": 1,
			"be": 2,
			"and": 14,
			"whateer": 1,
			"i": 2,
			"broke": 1,
			"how": 1,
			"from": 3,
			"beneath": 1,
			"calm": 1,
			"now": 1,
			"some": 1,
			"till": 1,
			"will": 1,
			"all": 2,
			"well": 1,
			"our": 1,
			"shall": 1,
			"your": 1,
			"yet": 1,
			"to": 2,
			"we": 1,
			"as": 2,
			"he": 1,
			"the": 13,
			"there": 1,
			"in": 2
		},
		"low": {
			"sweet": 1,
			"cool": 1,
			"murmur": 1,
			"light": 1,
			"are": 1,
			"under": 1,
			"who": 1,
			"sounds": 1,
			"of": 2,
			"hymn": 1,
			"rose": 1,
			"far": 1,
			"spirits": 1,
			"ease": 1,
			"by": 2,
			"is": 1,
			"tyrants": 1,
			"thus": 1,
			"without": 1,
			"laid": 1,
			"slow": 2,
			"where": 2,
			"for": 1,
			"cry": 1,
			"suns": 1,
			"my": 1,
			"desire": 1,
			"sing": 1,
			"tone": 1,
			"that": 1,
			"man": 1,
			"had": 1,
			"lest": 1,
			"have": 1,
			"their": 1,
			"fold": 1,
			"a": 2,
			"green": 1,
			"lay": 4,
			"leave": 1,
			"on": 2,
			"but": 4,
			"raise": 1,
			"t": 1,
			"and": 21,
			"sun": 2,
			"last": 1,
			"lone": 1,
			"sunshine": 1,
			"i": 4,
			"down": 1,
			"dull": 1,
			"one": 1,
			"how": 1,
			"no": 1,
			"called": 1,
			"with": 2,
			"now": 1,
			"till": 1,
			"all": 1,
			"has": 1,
			"george": 1,
			"king": 1,
			"dost": 1,
			"natures": 1,
			"to": 6,
			"vows": 1,
			"ah": 2,
			"we": 1,
			"as": 6,
			"he": 1,
			"lies": 2,
			"the": 5,
			"tis": 1,
			"world": 1,
			"in": 9
		},
		"else": {
			"free": 1,
			"his": 1,
			"appear": 1,
			"save": 1,
			"are": 1,
			"beside": 1,
			"who": 1,
			"this": 1,
			"not": 2,
			"it": 3,
			"by": 1,
			"is": 1,
			"like": 2,
			"why": 1,
			"sung": 1,
			"they": 2,
			"than": 1,
			"take": 1,
			"were": 2,
			"was": 1,
			"man": 1,
			"climb": 1,
			"their": 1,
			"a": 2,
			"so": 2,
			"whence": 1,
			"on": 1,
			"but": 2,
			"such": 1,
			"from": 1,
			"beneath": 1,
			"while": 1,
			"no": 1,
			"shall": 1,
			"to": 3,
			"we": 1,
			"me": 1,
			"the": 1,
			"first": 1,
			"in": 4
		},
		"jean": {
			"im": 1,
			"of": 1,
			"this": 1,
			"she": 1,
			"like": 1,
			"robert": 1,
			"where": 1,
			"theres": 1,
			"my": 1,
			"if": 1,
			"de": 1,
			"and": 2,
			"i": 2,
			"well": 1,
			"your": 1,
			"to": 1,
			"we": 1,
			"o": 1,
			"the": 2
		},
		"bow": {
			"thine": 1,
			"his": 3,
			"are": 1,
			"which": 1,
			"of": 3,
			"like": 1,
			"my": 3,
			"was": 2,
			"and": 4,
			"down": 2,
			"beneath": 1,
			"while": 1,
			"with": 1,
			"has": 1,
			"before": 1,
			"to": 4,
			"slowly": 1,
			"use": 1,
			"o": 1,
			"the": 4,
			"bent": 1,
			"her": 1,
			"there": 1,
			"in": 1
		},
		"caught": {
			"perchance": 1,
			"longfellow": 1,
			"up": 2,
			"it": 1,
			"by": 2,
			"away": 1,
			"its": 1,
			"my": 1,
			"their": 1,
			"but": 1,
			"when": 1,
			"from": 1,
			"our": 1,
			"at": 2,
			"the": 5,
			"in": 1
		},
		"dare": {
			"his": 1,
			"appear": 1,
			"call": 2,
			"not": 14,
			"it": 1,
			"stir": 1,
			"my": 1,
			"thy": 1,
			"them": 2,
			"never": 1,
			"rage": 1,
			"do": 1,
			"i": 2,
			"thou": 1,
			"whereer": 1,
			"while": 1,
			"now": 1,
			"to": 6,
			"as": 1,
			"the": 5,
			"tis": 1,
			"in": 2
		},
		"fled": {
			"light": 1,
			"of": 1,
			"nor": 1,
			"forth": 1,
			"not": 1,
			"over": 1,
			"by": 1,
			"is": 1,
			"away": 1,
			"they": 1,
			"where": 1,
			"for": 1,
			"thy": 1,
			"even": 1,
			"so": 1,
			"hath": 1,
			"fast": 1,
			"and": 8,
			"whereer": 1,
			"how": 1,
			"from": 3,
			"with": 1,
			"all": 1,
			"before": 2,
			"yon": 2,
			"the": 6,
			"in": 2
		},
		"footnote": {
			"a": 33,
			"the": 1
		},
		"cool": {
			"his": 1,
			"are": 1,
			"of": 1,
			"darkness": 1,
			"began": 1,
			"by": 1,
			"where": 1,
			"gray": 1,
			"for": 1,
			"hand": 1,
			"my": 1,
			"touch": 2,
			"morn": 1,
			"that": 1,
			"their": 1,
			"so": 1,
			"on": 1,
			"deep": 1,
			"until": 1,
			"and": 7,
			"drink": 1,
			"breeze": 1,
			"with": 1,
			"clear": 1,
			"spring": 1,
			"night": 1,
			"to": 1,
			"me": 1,
			"near": 1,
			"grows": 1
		},
		"foolish": {
			"thing": 2,
			"word": 1,
			"ones": 1,
			"pain": 1,
			"by": 1,
			"pride": 1,
			"boy": 1,
			"friends": 1,
			"for": 1,
			"passion": 1,
			"face": 1,
			"let": 1,
			"go": 1,
			"and": 1,
			"saint": 1,
			"mind": 1,
			"the": 2,
			"world": 1,
			"saith": 1
		},
		"breaking": {
			"of": 1,
			"up": 1,
			"is": 1,
			"like": 1,
			"morn": 1,
			"comes": 1,
			"waves": 1,
			"man": 1,
			"their": 1,
			"a": 1,
			"heart": 1,
			"i": 1,
			"hearts": 2,
			"from": 1,
			"while": 1,
			"with": 2,
			"through": 1,
			"day": 1,
			"at": 1,
			"the": 2,
			"seem": 1
		},
		"dying": {
			"sweet": 1,
			"sound": 1,
			"dying": 2,
			"wish": 1,
			"his": 1,
			"wail": 1,
			"men": 2,
			"of": 6,
			"fame": 1,
			"blossoms": 1,
			"dear": 1,
			"hours": 1,
			"side": 1,
			"bless": 1,
			"eyes": 2,
			"alone": 1,
			"is": 1,
			"hark": 2,
			"they": 3,
			"prayer": 2,
			"where": 5,
			"hand": 1,
			"cry": 1,
			"breath": 2,
			"my": 1,
			"blow": 1,
			"words": 1,
			"great": 1,
			"moan": 1,
			"cease": 1,
			"glow": 1,
			"countrys": 1,
			"were": 1,
			"bud": 1,
			"cause": 1,
			"was": 1,
			"lips": 1,
			"man": 2,
			"fall": 1,
			"must": 2,
			"or": 1,
			"eye": 1,
			"a": 1,
			"so": 1,
			"lay": 1,
			"groan": 2,
			"brain": 1,
			"but": 2,
			"when": 1,
			"bed": 2,
			"glory": 1,
			"head": 1,
			"and": 9,
			"christian": 1,
			"year": 1,
			"thou": 1,
			"one": 1,
			"from": 1,
			"sand": 1,
			"ears": 1,
			"with": 1,
			"now": 3,
			"all": 1,
			"grief": 1,
			"desolate": 1,
			"then": 1,
			"thought": 1,
			"our": 1,
			"day": 3,
			"night": 1,
			"shall": 1,
			"flame": 1,
			"slowly": 1,
			"lie": 1,
			"we": 1,
			"he": 1,
			"me": 1,
			"at": 2,
			"deer": 1,
			"the": 5,
			"share": 1,
			"thirst": 1,
			"fire": 2,
			"soldier": 1,
			"in": 3,
			"shed": 1
		},
		"bread": {
			"of": 4,
			"keep": 1,
			"they": 2,
			"you": 1,
			"for": 2,
			"should": 1,
			"lonely": 1,
			"power": 1,
			"was": 1,
			"if": 1,
			"let": 1,
			"have": 1,
			"their": 1,
			"a": 1,
			"t": 1,
			"and": 7,
			"i": 1,
			"would": 1,
			"with": 1,
			"some": 1,
			"all": 1,
			"our": 1,
			"to": 2,
			"at": 1,
			"the": 2,
			"in": 3
		},
		"look": {
			"within": 1,
			"im": 1,
			"his": 2,
			"him": 1,
			"back": 1,
			"made": 1,
			"which": 1,
			"toward": 1,
			"of": 8,
			"once": 2,
			"up": 9,
			"angel": 1,
			"she": 2,
			"beyond": 2,
			"forth": 3,
			"not": 2,
			"over": 1,
			"by": 1,
			"unto": 1,
			"like": 7,
			"lo": 1,
			"hoary": 1,
			"about": 1,
			"they": 2,
			"nature": 1,
			"mother": 1,
			"where": 2,
			"for": 3,
			"my": 2,
			"again": 2,
			"ere": 1,
			"was": 2,
			"that": 3,
			"if": 2,
			"what": 1,
			"or": 3,
			"bright": 1,
			"a": 3,
			"so": 3,
			"upon": 11,
			"on": 19,
			"above": 1,
			"old": 1,
			"but": 2,
			"thee": 1,
			"be": 1,
			"out": 2,
			"and": 8,
			"i": 2,
			"thou": 2,
			"down": 4,
			"here": 2,
			"how": 1,
			"from": 1,
			"across": 2,
			"these": 1,
			"with": 1,
			"around": 1,
			"now": 1,
			"all": 1,
			"then": 1,
			"through": 3,
			"thats": 1,
			"behind": 6,
			"fear": 1,
			"still": 1,
			"your": 1,
			"yet": 1,
			"to": 8,
			"into": 5,
			"round": 2,
			"we": 1,
			"whose": 1,
			"as": 3,
			"he": 1,
			"me": 1,
			"at": 10,
			"the": 7,
			"there": 2,
			"in": 4,
			"dim": 1
		},
		"summer": {
			"come": 2,
			"sound": 1,
			"dust": 1,
			"cloud": 1,
			"under": 1,
			"which": 1,
			"beam": 1,
			"of": 4,
			"up": 1,
			"not": 1,
			"it": 2,
			"over": 1,
			"by": 1,
			"long": 1,
			"is": 2,
			"away": 1,
			"wide": 1,
			"sea": 1,
			"friends": 1,
			"blow": 1,
			"came": 1,
			"morn": 2,
			"comes": 1,
			"evening": 1,
			"friendship": 1,
			"oer": 1,
			"crowned": 1,
			"was": 2,
			"even": 1,
			"them": 1,
			"adieu": 1,
			"flies": 1,
			"never": 2,
			"walk": 1,
			"delight": 1,
			"on": 1,
			"saw": 1,
			"quite": 1,
			"grass": 1,
			"time": 2,
			"years": 1,
			"and": 6,
			"sun": 2,
			"bloom": 2,
			"sunshine": 1,
			"dream": 1,
			"days": 4,
			"i": 1,
			"snow": 1,
			"too": 1,
			"storm": 1,
			"looks": 1,
			"from": 1,
			"breeze": 1,
			"with": 1,
			"tempest": 1,
			"then": 2,
			"through": 2,
			"well": 1,
			"shine": 1,
			"day": 5,
			"gathered": 1,
			"night": 2,
			"shall": 1,
			"still": 1,
			"to": 1,
			"clouds": 1,
			"into": 1,
			"round": 1,
			"ah": 1,
			"may": 1,
			"he": 1,
			"lies": 1,
			"the": 6,
			"first": 1,
			"there": 1,
			"in": 2,
			"air": 3,
			"sky": 3
		},
		"floor": {
			"than": 1,
			"my": 1,
			"because": 1,
			"let": 2,
			"a": 1,
			"so": 1,
			"and": 2,
			"with": 3,
			"till": 1,
			"all": 1,
			"to": 1,
			"he": 1,
			"the": 1,
			"though": 1,
			"her": 1,
			"in": 2
		},
		"saviour": {
			"low": 1,
			"within": 1,
			"who": 2,
			"of": 1,
			"dear": 1,
			"not": 1,
			"divine": 1,
			"it": 1,
			"comes": 1,
			"was": 2,
			"that": 1,
			"a": 1,
			"hath": 1,
			"on": 1,
			"when": 1,
			"and": 1,
			"i": 2,
			"looks": 1,
			"thomas": 1,
			"has": 1,
			"son": 1,
			"the": 1
		},
		"itself": {
			"more": 1,
			"of": 2,
			"not": 1,
			"depart": 1,
			"it": 1,
			"alone": 1,
			"is": 5,
			"unto": 1,
			"away": 1,
			"they": 1,
			"without": 1,
			"enough": 1,
			"can": 2,
			"that": 3,
			"if": 1,
			"must": 1,
			"an": 1,
			"a": 6,
			"upon": 1,
			"but": 2,
			"be": 1,
			"out": 3,
			"and": 5,
			"breathes": 1,
			"no": 1,
			"with": 3,
			"till": 1,
			"will": 1,
			"could": 1,
			"has": 1,
			"before": 1,
			"to": 5,
			"into": 1,
			"apart": 1,
			"as": 2,
			"me": 1,
			"o": 1,
			"the": 5,
			"though": 1,
			"in": 3
		},
		"woes": {
			"of": 4,
			"brother": 1,
			"by": 1,
			"hark": 1,
			"they": 1,
			"short": 1,
			"sir": 1,
			"were": 1,
			"that": 1,
			"full": 1,
			"a": 1,
			"and": 2,
			"would": 1,
			"rare": 1,
			"then": 1,
			"shall": 1,
			"to": 2,
			"whose": 1,
			"he": 1,
			"at": 1,
			"the": 1
		},
		"sighs": {
			"im": 1,
			"which": 2,
			"silence": 1,
			"two": 1,
			"without": 1,
			"where": 1,
			"for": 4,
			"my": 1,
			"were": 1,
			"that": 2,
			"half": 1,
			"a": 1,
			"and": 8,
			"one": 1,
			"now": 1,
			"all": 1,
			"then": 1,
			"to": 2,
			"soar": 1,
			"the": 3,
			"though": 1,
			"in": 1
		},
		"us": {
			"low": 1,
			"more": 2,
			"since": 1,
			"thine": 4,
			"unseen": 1,
			"free": 6,
			"light": 1,
			"die": 3,
			"see": 5,
			"kiss": 1,
			"s": 1,
			"none": 1,
			"woe": 1,
			"weary": 1,
			"are": 3,
			"saints": 1,
			"back": 3,
			"fell": 1,
			"who": 2,
			"which": 1,
			"worth": 1,
			"hide": 1,
			"of": 9,
			"this": 7,
			"cast": 2,
			"wander": 1,
			"once": 1,
			"up": 1,
			"off": 1,
			"she": 1,
			"nor": 1,
			"thyself": 1,
			"joy": 1,
			"forth": 2,
			"two": 2,
			"place": 1,
			"part": 1,
			"pass": 1,
			"sick": 1,
			"beloved": 1,
			"not": 5,
			"dwell": 1,
			"burn": 1,
			"today": 1,
			"every": 1,
			"it": 3,
			"hangs": 1,
			"weep": 1,
			"by": 4,
			"father": 1,
			"alone": 1,
			"bring": 1,
			"is": 2,
			"cross": 1,
			"rise": 1,
			"like": 1,
			"lo": 1,
			"away": 1,
			"found": 1,
			"forever": 1,
			"good": 2,
			"ever": 1,
			"together": 1,
			"they": 1,
			"you": 1,
			"nay": 1,
			"than": 1,
			"een": 1,
			"those": 1,
			"friends": 1,
			"where": 2,
			"holy": 1,
			"welcome": 1,
			"for": 5,
			"cry": 1,
			"lonely": 1,
			"take": 1,
			"breath": 1,
			"words": 1,
			"hour": 1,
			"remain": 1,
			"great": 1,
			"again": 1,
			"thy": 2,
			"sing": 1,
			"watch": 1,
			"peace": 1,
			"comes": 1,
			"tonight": 1,
			"whom": 1,
			"most": 1,
			"win": 1,
			"friend": 1,
			"along": 1,
			"god": 2,
			"can": 1,
			"were": 1,
			"oer": 1,
			"cause": 1,
			"did": 1,
			"was": 1,
			"that": 8,
			"if": 4,
			"let": 2,
			"both": 2,
			"make": 1,
			"go": 2,
			"must": 1,
			"what": 8,
			"an": 1,
			"or": 1,
			"think": 2,
			"wilt": 1,
			"moved": 1,
			"pause": 1,
			"have": 1,
			"their": 1,
			"a": 9,
			"so": 4,
			"upon": 1,
			"lay": 1,
			"lord": 1,
			"leave": 1,
			"walk": 1,
			"love": 1,
			"on": 8,
			"but": 10,
			"thee": 1,
			"when": 8,
			"eternal": 1,
			"merry": 1,
			"thank": 1,
			"be": 5,
			"t": 1,
			"out": 3,
			"heart": 2,
			"nobler": 2,
			"and": 29,
			"do": 4,
			"fly": 1,
			"thou": 4,
			"down": 4,
			"home": 1,
			"here": 7,
			"one": 1,
			"such": 1,
			"rather": 1,
			"each": 1,
			"how": 9,
			"from": 12,
			"across": 1,
			"beat": 1,
			"beneath": 1,
			"while": 2,
			"breast": 1,
			"no": 1,
			"with": 15,
			"around": 1,
			"now": 8,
			"follow": 1,
			"all": 16,
			"desolate": 1,
			"gods": 1,
			"comrades": 1,
			"then": 3,
			"lose": 1,
			"poured": 1,
			"could": 1,
			"through": 3,
			"thomas": 1,
			"has": 2,
			"doth": 1,
			"clear": 1,
			"nearer": 1,
			"our": 5,
			"feel": 3,
			"shall": 2,
			"still": 5,
			"yet": 9,
			"best": 1,
			"to": 30,
			"clouds": 1,
			"into": 2,
			"lie": 2,
			"backward": 1,
			"freedoms": 1,
			"ah": 1,
			"may": 2,
			"apart": 1,
			"we": 11,
			"as": 11,
			"said": 1,
			"he": 3,
			"strength": 1,
			"gleam": 1,
			"at": 5,
			"lies": 3,
			"o": 5,
			"the": 20,
			"tis": 3,
			"though": 2,
			"fight": 1,
			"sure": 1,
			"bent": 1,
			"her": 2,
			"safe": 1,
			"near": 1,
			"first": 1,
			"there": 3,
			"lowly": 1,
			"in": 21
		},
		"suffering": {
			"which": 1,
			"of": 1,
			"angel": 1,
			"sons": 1,
			"race": 1,
			"is": 1,
			"for": 1,
			"bore": 1,
			"clay": 1,
			"face": 1,
			"must": 1,
			"what": 2,
			"whole": 1,
			"and": 4,
			"i": 1,
			"thou": 1,
			"from": 1,
			"nigh": 1,
			"with": 1,
			"give": 1,
			"life": 1,
			"in": 1
		},
		"more": {
			"sweet": 7,
			"low": 1,
			"dying": 1,
			"sighs": 1,
			"more": 3,
			"since": 3,
			"thine": 1,
			"ring": 1,
			"within": 1,
			"im": 1,
			"free": 1,
			"light": 2,
			"forget": 1,
			"his": 4,
			"ear": 1,
			"see": 1,
			"precious": 3,
			"fit": 1,
			"ii": 1,
			"white": 1,
			"woe": 1,
			"weary": 1,
			"are": 1,
			"alas": 1,
			"made": 1,
			"who": 1,
			"silent": 1,
			"men": 2,
			"of": 22,
			"this": 1,
			"amid": 1,
			"angel": 1,
			"among": 1,
			"anonymous": 1,
			"nor": 4,
			"sacred": 1,
			"heavy": 1,
			"dreadful": 1,
			"dear": 3,
			"fresh": 1,
			"pain": 1,
			"fine": 1,
			"mine": 1,
			"not": 1,
			"divine": 1,
			"constant": 1,
			"today": 3,
			"hes": 1,
			"praise": 1,
			"it": 5,
			"twas": 1,
			"child": 1,
			"weep": 1,
			"by": 6,
			"alone": 2,
			"cold": 1,
			"wise": 2,
			"is": 5,
			"cross": 1,
			"unto": 1,
			"return": 1,
			"farewell": 1,
			"sway": 1,
			"forms": 1,
			"why": 1,
			"good": 1,
			"care": 1,
			"they": 3,
			"believe": 1,
			"you": 3,
			"pale": 1,
			"heard": 1,
			"laid": 1,
			"its": 2,
			"than": 88,
			"slow": 1,
			"where": 2,
			"used": 1,
			"brief": 1,
			"small": 1,
			"richard": 1,
			"holy": 1,
			"just": 3,
			"for": 9,
			"lost": 2,
			"should": 1,
			"take": 1,
			"my": 6,
			"words": 2,
			"great": 1,
			"tender": 4,
			"again": 1,
			"thy": 1,
			"watch": 1,
			"vain": 1,
			"sleep": 1,
			"gather": 1,
			"francis": 1,
			"because": 1,
			"most": 1,
			"sir": 2,
			"friend": 1,
			"faith": 2,
			"can": 1,
			"bears": 1,
			"oer": 1,
			"need": 1,
			"did": 1,
			"that": 4,
			"if": 5,
			"man": 1,
			"taste": 1,
			"must": 2,
			"pure": 1,
			"an": 1,
			"stars": 1,
			"or": 4,
			"hands": 1,
			"bright": 1,
			"have": 1,
			"bitter": 1,
			"their": 3,
			"a": 10,
			"so": 6,
			"true": 2,
			"upon": 2,
			"things": 1,
			"cruel": 1,
			"met": 1,
			"on": 12,
			"fast": 1,
			"deep": 1,
			"but": 12,
			"knowledge": 1,
			"time": 1,
			"thee": 1,
			"ye": 2,
			"lives": 1,
			"years": 1,
			"when": 4,
			"terror": 1,
			"religious": 1,
			"sigh": 1,
			"be": 2,
			"t": 1,
			"awful": 1,
			"close": 1,
			"and": 33,
			"bliss": 1,
			"prize": 1,
			"quick": 1,
			"days": 4,
			"i": 12,
			"knew": 1,
			"worthy": 1,
			"thou": 6,
			"wretched": 1,
			"mournful": 1,
			"too": 1,
			"softly": 1,
			"against": 2,
			"perfect": 1,
			"shadows": 1,
			"looks": 1,
			"each": 2,
			"help": 1,
			"from": 6,
			"would": 2,
			"reason": 1,
			"rare": 1,
			"these": 1,
			"nigh": 1,
			"while": 1,
			"honor": 2,
			"no": 6,
			"alfred": 1,
			"with": 6,
			"sad": 1,
			"soft": 1,
			"now": 2,
			"some": 1,
			"till": 2,
			"will": 1,
			"strong": 2,
			"himself": 1,
			"all": 3,
			"grief": 1,
			"gay": 1,
			"familiar": 1,
			"then": 1,
			"blest": 1,
			"could": 1,
			"through": 2,
			"pleasant": 1,
			"thomas": 1,
			"thats": 1,
			"george": 1,
			"well": 4,
			"doth": 1,
			"clear": 1,
			"peaceful": 1,
			"dost": 1,
			"our": 2,
			"smoke": 1,
			"day": 1,
			"sense": 2,
			"loved": 1,
			"shall": 11,
			"before": 1,
			"golden": 1,
			"still": 2,
			"your": 2,
			"yet": 1,
			"to": 24,
			"loud": 1,
			"rich": 1,
			"gently": 1,
			"heavenly": 1,
			"glorious": 1,
			"ah": 1,
			"may": 3,
			"we": 13,
			"gloom": 1,
			"whose": 1,
			"as": 5,
			"fair": 8,
			"happy": 2,
			"he": 5,
			"me": 1,
			"at": 7,
			"o": 4,
			"the": 41,
			"tis": 1,
			"though": 4,
			"sure": 2,
			"bent": 1,
			"her": 4,
			"safe": 1,
			"grand": 6,
			"dead": 1,
			"near": 3,
			"there": 3,
			"in": 15,
			"shalt": 1,
			"grows": 1
		},
		"hear": {
			"sweet": 1,
			"ring": 1,
			"his": 4,
			"him": 5,
			"charity": 1,
			"breathing": 1,
			"none": 1,
			"who": 2,
			"which": 1,
			"greece": 1,
			"of": 1,
			"this": 1,
			"once": 1,
			"she": 2,
			"among": 1,
			"nor": 2,
			"roar": 1,
			"not": 1,
			"every": 1,
			"it": 3,
			"twas": 1,
			"by": 1,
			"land": 1,
			"is": 2,
			"they": 2,
			"faint": 1,
			"you": 4,
			"new": 1,
			"its": 1,
			"for": 2,
			"my": 4,
			"john": 1,
			"again": 2,
			"thy": 6,
			"was": 1,
			"that": 3,
			"full": 1,
			"what": 2,
			"even": 1,
			"or": 1,
			"de": 1,
			"have": 1,
			"their": 5,
			"a": 9,
			"so": 3,
			"them": 5,
			"but": 2,
			"thee": 3,
			"ye": 1,
			"out": 1,
			"and": 11,
			"i": 6,
			"thou": 2,
			"each": 1,
			"from": 3,
			"these": 1,
			"no": 2,
			"with": 3,
			"some": 1,
			"all": 1,
			"then": 2,
			"well": 1,
			"our": 9,
			"your": 6,
			"to": 1,
			"ah": 1,
			"as": 1,
			"life": 1,
			"me": 5,
			"at": 2,
			"o": 2,
			"the": 62,
			"though": 2,
			"her": 4,
			"there": 1,
			"in": 1
		},
		"sent": {
			"us": 1,
			"his": 1,
			"him": 1,
			"back": 1,
			"up": 1,
			"forth": 1,
			"it": 1,
			"by": 1,
			"for": 1,
			"earl": 1,
			"pray": 1,
			"along": 1,
			"full": 1,
			"nothing": 1,
			"finds": 1,
			"their": 1,
			"thee": 2,
			"and": 2,
			"down": 3,
			"arts": 1,
			"from": 1,
			"with": 2,
			"then": 1,
			"before": 1,
			"to": 9,
			"me": 1,
			"north": 1
		},
		"ain": {
			"jean": 1,
			"his": 1,
			"ive": 1,
			"dear": 1,
			"hes": 1,
			"like": 1,
			"robert": 1,
			"theres": 1,
			"my": 1,
			"mary": 1,
			"oh": 1,
			"so": 1,
			"but": 1,
			"out": 1,
			"and": 1,
			"to": 1,
			"life": 1,
			"o": 6,
			"the": 2,
			"her": 1
		},
		"taught": {
			"us": 2,
			"him": 1,
			"of": 1,
			"wisdom": 1,
			"by": 4,
			"return": 1,
			"mother": 1,
			"sir": 1,
			"that": 1,
			"what": 1,
			"or": 1,
			"them": 2,
			"thee": 1,
			"and": 2,
			"i": 1,
			"no": 2,
			"future": 1,
			"to": 1,
			"as": 3,
			"me": 6,
			"the": 10
		},
		"murmur": {
			"went": 1,
			"silent": 1,
			"of": 6,
			"soon": 1,
			"for": 1,
			"or": 1,
			"a": 1,
			"but": 1,
			"when": 1,
			"and": 1,
			"thou": 1,
			"one": 1,
			"from": 1,
			"through": 1,
			"to": 1,
			"as": 1,
			"at": 1,
			"the": 3
		},
		"wrought": {
			"come": 2,
			"since": 1,
			"his": 1,
			"him": 1,
			"who": 1,
			"by": 3,
			"alone": 1,
			"is": 1,
			"those": 1,
			"for": 1,
			"my": 1,
			"thy": 2,
			"oh": 1,
			"or": 1,
			"a": 1,
			"them": 1,
			"but": 1,
			"and": 4,
			"i": 2,
			"with": 3,
			"some": 1,
			"will": 1,
			"to": 1,
			"the": 6,
			"her": 1,
			"in": 4
		},
		"walks": {
			"us": 2,
			"his": 1,
			"are": 1,
			"under": 1,
			"up": 1,
			"by": 1,
			"is": 1,
			"abroad": 1,
			"where": 1,
			"for": 1,
			"tomorrow": 1,
			"again": 1,
			"along": 1,
			"folly": 1,
			"on": 1,
			"when": 1,
			"and": 4,
			"i": 1,
			"each": 1,
			"beneath": 1,
			"with": 2,
			"to": 2,
			"the": 3
		},
		"won": {
			"hear": 1,
			"since": 1,
			"save": 1,
			"tell": 1,
			"alas": 1,
			"under": 1,
			"two": 1,
			"it": 1,
			"twas": 1,
			"by": 4,
			"than": 1,
			"where": 1,
			"for": 1,
			"fixed": 1,
			"let": 1,
			"make": 1,
			"or": 1,
			"have": 1,
			"a": 1,
			"but": 2,
			"ye": 1,
			"and": 4,
			"from": 2,
			"ill": 1,
			"while": 1,
			"then": 1,
			"thomas": 1,
			"our": 1,
			"still": 1,
			"to": 2,
			"know": 1,
			"we": 1,
			"he": 2,
			"o": 2,
			"the": 5,
			"though": 1,
			"there": 1,
			"in": 1
		},
		"since": {
			"fled": 3,
			"summer": 1,
			"his": 1,
			"who": 2,
			"of": 1,
			"not": 1,
			"it": 1,
			"by": 1,
			"is": 1,
			"you": 2,
			"its": 1,
			"others": 1,
			"theres": 1,
			"my": 4,
			"freedom": 1,
			"thy": 1,
			"vain": 1,
			"god": 4,
			"oer": 1,
			"that": 4,
			"lips": 1,
			"have": 2,
			"a": 1,
			"sometimes": 1,
			"upon": 1,
			"but": 1,
			"thee": 1,
			"naught": 1,
			"sorrow": 1,
			"and": 2,
			"fate": 1,
			"i": 7,
			"knew": 1,
			"honor": 1,
			"no": 1,
			"called": 1,
			"with": 1,
			"set": 1,
			"all": 3,
			"then": 4,
			"turned": 1,
			"our": 2,
			"throne": 1,
			"day": 1,
			"fear": 1,
			"yet": 1,
			"to": 1,
			"we": 6,
			"fair": 1,
			"heavens": 1,
			"life": 3,
			"wound": 1,
			"the": 12,
			"safe": 1,
			"first": 3,
			"jesus": 1,
			"lowly": 1,
			"in": 2
		},
		"thine": {
			"low": 1,
			"look": 1,
			"thine": 2,
			"unseen": 1,
			"ear": 9,
			"see": 1,
			"rule": 1,
			"are": 1,
			"aid": 3,
			"next": 1,
			"men": 1,
			"ones": 1,
			"of": 1,
			"this": 1,
			"she": 1,
			"age": 2,
			"it": 1,
			"image": 2,
			"by": 3,
			"eyes": 7,
			"alone": 4,
			"long": 1,
			"is": 5,
			"like": 1,
			"why": 1,
			"forever": 1,
			"despair": 1,
			"hand": 1,
			"my": 1,
			"hour": 1,
			"thy": 3,
			"sir": 1,
			"walls": 1,
			"was": 1,
			"if": 1,
			"let": 1,
			"arm": 4,
			"embrace": 2,
			"ripe": 1,
			"pure": 1,
			"what": 2,
			"an": 1,
			"or": 1,
			"eye": 9,
			"a": 2,
			"so": 1,
			"them": 1,
			"true": 2,
			"never": 1,
			"on": 1,
			"own": 25,
			"old": 1,
			"but": 4,
			"iron": 1,
			"time": 1,
			"when": 1,
			"eternal": 3,
			"plain": 1,
			"be": 7,
			"firm": 2,
			"awful": 1,
			"earthly": 1,
			"head": 1,
			"and": 9,
			"cries": 1,
			"i": 3,
			"too": 1,
			"rather": 1,
			"how": 1,
			"endless": 1,
			"ancient": 2,
			"these": 1,
			"breast": 1,
			"no": 1,
			"worst": 1,
			"ears": 1,
			"with": 1,
			"prayers": 1,
			"then": 1,
			"being": 2,
			"our": 1,
			"equal": 1,
			"pity": 1,
			"shall": 3,
			"yet": 1,
			"to": 2,
			"youth": 1,
			"human": 1,
			"heavenly": 1,
			"art": 1,
			"whose": 1,
			"fair": 1,
			"heavens": 1,
			"happy": 1,
			"arms": 3,
			"me": 1,
			"o": 1,
			"the": 7,
			"her": 1,
			"young": 1,
			"in": 1,
			"air": 1
		},
		"blessd": {
			"blessd": 1,
			"rule": 1,
			"are": 4,
			"country": 2,
			"of": 2,
			"liberty": 1,
			"part": 1,
			"dwell": 1,
			"water": 1,
			"father": 1,
			"is": 1,
			"vision": 1,
			"forms": 1,
			"forever": 1,
			"mother": 1,
			"song": 1,
			"for": 1,
			"my": 1,
			"soul": 1,
			"hope": 1,
			"that": 1,
			"music": 1,
			"time": 1,
			"feet": 1,
			"home": 2,
			"will": 3,
			"angels": 2,
			"ways": 1,
			"to": 1
		},
		"ring": {
			"sweet": 1,
			"under": 1,
			"of": 3,
			"twixt": 1,
			"they": 1,
			"those": 1,
			"brief": 1,
			"for": 2,
			"my": 1,
			"again": 1,
			"vain": 1,
			"that": 1,
			"jerusalem": 1,
			"an": 1,
			"a": 2,
			"upon": 1,
			"on": 2,
			"ye": 1,
			"out": 18,
			"and": 3,
			"thou": 1,
			"from": 2,
			"with": 3,
			"till": 1,
			"your": 2,
			"happy": 1,
			"me": 1,
			"at": 1,
			"o": 1,
			"the": 4,
			"in": 10
		},
		"died": {
			"amidst": 1,
			"by": 1,
			"land": 1,
			"wise": 1,
			"away": 2,
			"together": 1,
			"about": 1,
			"pale": 1,
			"those": 1,
			"where": 1,
			"for": 14,
			"tonight": 1,
			"sir": 1,
			"god": 1,
			"was": 1,
			"that": 1,
			"an": 1,
			"field": 1,
			"a": 3,
			"upon": 3,
			"love": 1,
			"on": 5,
			"but": 3,
			"poor": 1,
			"perhaps": 1,
			"ay": 1,
			"out": 2,
			"and": 7,
			"march": 1,
			"quick": 1,
			"i": 1,
			"thou": 1,
			"here": 1,
			"each": 1,
			"henry": 1,
			"with": 1,
			"then": 1,
			"large": 1,
			"thomas": 1,
			"before": 1,
			"yet": 1,
			"to": 5,
			"religion": 1,
			"as": 2,
			"at": 3,
			"the": 2,
			"there": 1,
			"in": 12
		},
		"lot": {
			"taught": 1,
			"since": 1,
			"beside": 1,
			"this": 1,
			"nor": 1,
			"is": 3,
			"than": 1,
			"thy": 1,
			"god": 1,
			"was": 1,
			"have": 1,
			"tears": 1,
			"but": 3,
			"and": 1,
			"now": 1,
			"all": 1,
			"then": 1,
			"behind": 1,
			"our": 1,
			"shall": 1,
			"to": 4,
			"the": 3
		},
		"ours": {
			"sweet": 1,
			"which": 1,
			"nor": 1,
			"is": 3,
			"away": 1,
			"tomorrow": 1,
			"comes": 1,
			"half": 1,
			"hands": 1,
			"bitter": 1,
			"their": 1,
			"a": 2,
			"hath": 1,
			"on": 1,
			"but": 1,
			"and": 5,
			"from": 1,
			"with": 2,
			"all": 2,
			"then": 1,
			"thomas": 1,
			"to": 5,
			"we": 1,
			"he": 1,
			"the": 1,
			"in": 2
		},
		"within": {
			"itself": 2,
			"us": 7,
			"thine": 1,
			"his": 6,
			"him": 8,
			"which": 2,
			"this": 4,
			"daughter": 1,
			"beyond": 1,
			"nor": 1,
			"sight": 1,
			"not": 1,
			"it": 2,
			"ever": 1,
			"they": 1,
			"its": 5,
			"for": 1,
			"theres": 1,
			"my": 13,
			"thy": 7,
			"wall": 1,
			"because": 1,
			"reach": 1,
			"can": 1,
			"that": 6,
			"sit": 1,
			"an": 4,
			"or": 1,
			"their": 1,
			"a": 7,
			"them": 2,
			"leave": 1,
			"on": 2,
			"celestial": 1,
			"but": 1,
			"thee": 2,
			"be": 2,
			"and": 10,
			"do": 1,
			"myself": 1,
			"i": 2,
			"each": 1,
			"how": 1,
			"would": 1,
			"these": 1,
			"drew": 1,
			"some": 1,
			"himself": 2,
			"all": 1,
			"our": 1,
			"to": 1,
			"answer": 1,
			"whose": 2,
			"as": 1,
			"me": 7,
			"the": 43,
			"her": 6,
			"there": 1,
			"in": 1
		},
		"wife": {
			"look": 1,
			"free": 1,
			"aye": 1,
			"who": 2,
			"of": 2,
			"is": 2,
			"like": 1,
			"children": 1,
			"good": 1,
			"they": 1,
			"smile": 1,
			"for": 2,
			"thy": 1,
			"can": 1,
			"was": 1,
			"a": 4,
			"on": 1,
			"but": 3,
			"thee": 1,
			"when": 1,
			"ay": 1,
			"and": 7,
			"i": 1,
			"from": 3,
			"with": 2,
			"some": 1,
			"thats": 1,
			"turned": 1,
			"to": 2,
			"round": 1,
			"he": 1,
			"sat": 1,
			"the": 2,
			"in": 2
		},
		"ready": {
			"aye": 1,
			"mouth": 1,
			"not": 1,
			"why": 1,
			"where": 1,
			"for": 2,
			"hand": 1,
			"my": 1,
			"any": 1,
			"god": 1,
			"make": 1,
			"be": 1,
			"and": 1,
			"i": 1,
			"with": 1,
			"now": 1,
			"then": 1,
			"to": 8,
			"store": 1,
			"been": 1,
			"fire": 1,
			"in": 1
		},
		"unseen": {
			"of": 1,
			"beyond": 1,
			"part": 1,
			"spirits": 1,
			"by": 2,
			"why": 1,
			"fingers": 1,
			"thy": 1,
			"shore": 1,
			"can": 1,
			"both": 1,
			"or": 1,
			"hands": 1,
			"their": 1,
			"many": 1,
			"when": 1,
			"feet": 1,
			"close": 1,
			"and": 3,
			"fate": 1,
			"unknown": 2,
			"with": 2,
			"some": 1,
			"grief": 1,
			"through": 1,
			"to": 3,
			"as": 1,
			"he": 1,
			"at": 1,
			"the": 3
		},
		"england": {
			"come": 1,
			"england": 1,
			"of": 1,
			"keep": 1,
			"grew": 1,
			"every": 1,
			"sword": 1,
			"care": 1,
			"where": 1,
			"my": 1,
			"again": 1,
			"wheels": 1,
			"shore": 1,
			"if": 2,
			"show": 1,
			"go": 1,
			"must": 1,
			"what": 1,
			"or": 1,
			"a": 2,
			"green": 1,
			"never": 1,
			"when": 2,
			"raise": 1,
			"and": 7,
			"i": 1,
			"how": 1,
			"from": 2,
			"with": 2,
			"has": 1,
			"king": 1,
			"neer": 1,
			"shall": 3,
			"to": 5,
			"round": 4,
			"o": 1,
			"the": 3,
			"tis": 1,
			"fight": 1,
			"stood": 1,
			"in": 2
		},
		"blessings": {
			"come": 1,
			"breathing": 1,
			"which": 1,
			"of": 3,
			"star": 1,
			"ever": 1,
			"speak": 1,
			"standing": 1,
			"thy": 1,
			"ere": 1,
			"even": 1,
			"whence": 1,
			"love": 1,
			"on": 5,
			"known": 1,
			"be": 1,
			"and": 1,
			"from": 1,
			"flow": 2,
			"we": 1,
			"as": 1
		},
		"dust": {
			"his": 1,
			"james": 1,
			"who": 1,
			"men": 1,
			"of": 4,
			"cast": 1,
			"once": 1,
			"shakespeare": 1,
			"nor": 1,
			"burn": 1,
			"it": 2,
			"alone": 1,
			"is": 1,
			"like": 1,
			"return": 1,
			"together": 1,
			"they": 1,
			"swept": 1,
			"robert": 1,
			"where": 1,
			"for": 1,
			"my": 1,
			"thy": 1,
			"better": 1,
			"sudden": 1,
			"immortal": 1,
			"was": 2,
			"that": 3,
			"or": 1,
			"trod": 1,
			"their": 1,
			"a": 2,
			"so": 2,
			"on": 1,
			"maryland": 1,
			"above": 1,
			"but": 1,
			"thee": 1,
			"when": 2,
			"be": 2,
			"and": 11,
			"i": 1,
			"thou": 3,
			"against": 1,
			"from": 1,
			"beneath": 1,
			"while": 1,
			"no": 1,
			"with": 3,
			"around": 1,
			"give": 1,
			"gods": 1,
			"could": 1,
			"songs": 1,
			"well": 1,
			"fear": 2,
			"shall": 1,
			"your": 1,
			"yet": 1,
			"to": 8,
			"cut": 1,
			"may": 1,
			"we": 2,
			"he": 1,
			"o": 1,
			"the": 7,
			"in": 3
		},
		"going": {
			"by": 1,
			"away": 1,
			"you": 1,
			"did": 1,
			"let": 1,
			"on": 1,
			"and": 1,
			"i": 2,
			"home": 3,
			"sad": 1,
			"all": 2,
			"to": 5,
			"hence": 1,
			"we": 1
		},
		"curse": {
			"come": 1,
			"which": 2,
			"of": 3,
			"this": 1,
			"not": 1,
			"is": 1,
			"like": 1,
			"better": 1,
			"that": 1,
			"make": 1,
			"or": 1,
			"upon": 2,
			"on": 4,
			"but": 1,
			"and": 2,
			"each": 1,
			"from": 1,
			"to": 1,
			"the": 4
		},
		"blew": {
			"his": 3,
			"who": 1,
			"it": 1,
			"oer": 2,
			"a": 1,
			"so": 1,
			"out": 1,
			"and": 4,
			"such": 1,
			"against": 1,
			"from": 1,
			"still": 1,
			"loud": 1,
			"keen": 1,
			"the": 2
		},
		"justice": {
			"more": 1,
			"right": 1,
			"of": 1,
			"lift": 1,
			"every": 1,
			"praise": 1,
			"by": 1,
			"long": 1,
			"for": 1,
			"take": 1,
			"god": 1,
			"even": 1,
			"or": 1,
			"have": 1,
			"a": 1,
			"on": 1,
			"but": 2,
			"be": 2,
			"and": 4,
			"such": 1,
			"gifts": 1,
			"would": 1,
			"with": 2,
			"will": 1,
			"strong": 1,
			"then": 1,
			"fear": 1,
			"we": 1,
			"the": 2,
			"passed": 1,
			"in": 1
		},
		"loves": {
			"more": 1,
			"walks": 1,
			"light": 1,
			"his": 6,
			"are": 2,
			"warm": 1,
			"sake": 3,
			"of": 2,
			"morning": 1,
			"joy": 1,
			"fruit": 1,
			"two": 1,
			"eyes": 1,
			"alone": 1,
			"something": 1,
			"is": 1,
			"gift": 1,
			"you": 1,
			"glowing": 1,
			"without": 1,
			"for": 2,
			"should": 1,
			"breath": 1,
			"my": 1,
			"came": 1,
			"garden": 1,
			"noble": 1,
			"that": 2,
			"what": 1,
			"or": 2,
			"a": 1,
			"so": 1,
			"pains": 1,
			"cruel": 1,
			"delight": 2,
			"love": 2,
			"memory": 1,
			"but": 1,
			"thee": 1,
			"heart": 1,
			"paradise": 1,
			"and": 3,
			"truth": 1,
			"one": 1,
			"arts": 1,
			"each": 1,
			"honor": 1,
			"voice": 1,
			"with": 4,
			"around": 1,
			"wild": 1,
			"service": 1,
			"shall": 1,
			"golden": 1,
			"yet": 1,
			"best": 1,
			"to": 6,
			"flame": 2,
			"hence": 1,
			"may": 1,
			"he": 1,
			"me": 3,
			"the": 7,
			"her": 1,
			"dead": 1,
			"first": 1,
			"in": 1
		},
		"went": {
			"since": 1,
			"his": 2,
			"mad": 1,
			"high": 1,
			"up": 4,
			"nor": 1,
			"forth": 4,
			"over": 1,
			"by": 1,
			"away": 1,
			"abroad": 1,
			"wide": 1,
			"slow": 1,
			"for": 2,
			"vain": 1,
			"wandering": 1,
			"along": 1,
			"forward": 1,
			"oer": 1,
			"that": 1,
			"an": 1,
			"a": 1,
			"on": 6,
			"merry": 1,
			"out": 6,
			"and": 7,
			"i": 1,
			"down": 5,
			"home": 2,
			"from": 1,
			"ill": 1,
			"with": 3,
			"singing": 1,
			"till": 1,
			"our": 1,
			"to": 20,
			"into": 2,
			"at": 1,
			"the": 5,
			"her": 3,
			"in": 3
		},
		"im": {
			"come": 1,
			"jean": 1,
			"going": 5,
			"im": 1,
			"weary": 3,
			"aye": 1,
			"very": 2,
			"toward": 1,
			"fresh": 1,
			"sick": 1,
			"not": 3,
			"neither": 1,
			"far": 2,
			"alone": 1,
			"good": 1,
			"about": 1,
			"you": 2,
			"for": 1,
			"become": 1,
			"lonely": 1,
			"my": 2,
			"again": 1,
			"enough": 1,
			"always": 1,
			"what": 1,
			"think": 1,
			"a": 1,
			"on": 2,
			"gone": 1,
			"and": 1,
			"told": 1,
			"too": 1,
			"no": 2,
			"with": 2,
			"king": 1,
			"still": 2,
			"to": 25,
			"round": 1,
			"thinking": 1,
			"growing": 8,
			"happy": 1,
			"the": 1,
			"sure": 1,
			"safe": 1,
			"dead": 1,
			"in": 2
		},
		"parting": {
			"his": 1,
			"kiss": 1,
			"seen": 1,
			"of": 1,
			"hymn": 1,
			"is": 2,
			"lovers": 2,
			"for": 1,
			"past": 1,
			"hand": 1,
			"cry": 1,
			"breath": 2,
			"hour": 1,
			"soul": 5,
			"was": 3,
			"if": 1,
			"love": 1,
			"groan": 2,
			"when": 1,
			"rhyme": 1,
			"and": 2,
			"guest": 2,
			"with": 1,
			"day": 2,
			"to": 1,
			"clouds": 1,
			"may": 1,
			"at": 1,
			"ghost": 1,
			"there": 1
		},
		"virtues": {
			"which": 1,
			"greece": 1,
			"of": 2,
			"land": 1,
			"glow": 1,
			"were": 1,
			"cause": 1,
			"had": 1,
			"bright": 1,
			"have": 1,
			"love": 1,
			"content": 1,
			"but": 1,
			"self": 1,
			"prize": 1,
			"thou": 1,
			"less": 1,
			"blossom": 1,
			"with": 1,
			"strong": 1,
			"shall": 1,
			"best": 1,
			"we": 1,
			"simple": 1,
			"tis": 1,
			"in": 1
		},
		"christ": {
			"footnote": 1,
			"his": 1,
			"of": 1,
			"hung": 1,
			"once": 1,
			"she": 1,
			"not": 1,
			"by": 1,
			"is": 6,
			"for": 2,
			"should": 1,
			"take": 1,
			"my": 1,
			"thy": 1,
			"god": 1,
			"were": 1,
			"indeed": 1,
			"did": 1,
			"was": 1,
			"that": 3,
			"had": 1,
			"must": 1,
			"a": 1,
			"hath": 1,
			"on": 1,
			"above": 1,
			"be": 1,
			"say": 1,
			"and": 3,
			"thou": 1,
			"from": 2,
			"would": 1,
			"will": 2,
			"himself": 1,
			"has": 1,
			"our": 3,
			"to": 2,
			"whose": 1,
			"he": 3,
			"at": 1,
			"o": 1,
			"the": 7,
			"jesus": 2,
			"in": 4
		},
		"gates": {
			"appear": 1,
			"are": 1,
			"of": 15,
			"by": 1,
			"long": 1,
			"is": 1,
			"ground": 1,
			"let": 1,
			"walk": 1,
			"on": 1,
			"but": 1,
			"and": 3,
			"might": 1,
			"no": 1,
			"roll": 1,
			"shall": 1,
			"to": 2,
			"we": 1,
			"o": 1,
			"the": 1
		},
		"worn": {
			"him": 1,
			"by": 2,
			"my": 1,
			"soul": 1,
			"what": 1,
			"spirit": 1,
			"out": 5,
			"and": 6,
			"each": 1,
			"with": 4,
			"some": 1,
			"to": 1,
			"the": 3
		},
		"wish": {
			"amidst": 1,
			"beyond": 1,
			"nor": 1,
			"is": 1,
			"away": 1,
			"they": 1,
			"you": 2,
			"where": 1,
			"for": 1,
			"my": 3,
			"thy": 1,
			"can": 1,
			"was": 1,
			"that": 3,
			"or": 2,
			"them": 2,
			"joys": 1,
			"but": 1,
			"thee": 2,
			"mothers": 1,
			"i": 4,
			"thou": 1,
			"no": 2,
			"himself": 1,
			"all": 1,
			"couch": 1,
			"only": 1,
			"to": 16,
			"he": 1,
			"the": 2,
			"there": 1
		},
		"river": {
			"flower": 1,
			"come": 1,
			"mad": 1,
			"which": 1,
			"of": 6,
			"up": 1,
			"beyond": 1,
			"nor": 1,
			"praise": 1,
			"it": 1,
			"over": 2,
			"is": 1,
			"like": 1,
			"they": 1,
			"those": 2,
			"where": 1,
			"charge": 1,
			"my": 2,
			"shore": 1,
			"was": 1,
			"that": 1,
			"willie": 3,
			"ran": 1,
			"a": 1,
			"so": 1,
			"whence": 1,
			"roaring": 1,
			"but": 2,
			"be": 1,
			"and": 13,
			"ask": 1,
			"rush": 1,
			"while": 1,
			"with": 2,
			"then": 2,
			"lake": 2,
			"stay": 1,
			"still": 1,
			"to": 1,
			"he": 1,
			"at": 1,
			"below": 1,
			"the": 7,
			"her": 1,
			"there": 1,
			"in": 4
		},
		"fierce": {
			"war": 1,
			"of": 1,
			"it": 1,
			"native": 1,
			"about": 1,
			"they": 1,
			"shook": 1,
			"speech": 1,
			"rolled": 1,
			"for": 2,
			"came": 1,
			"passion": 1,
			"remember": 1,
			"glow": 1,
			"god": 1,
			"stroke": 1,
			"that": 1,
			"rolling": 1,
			"both": 1,
			"have": 1,
			"upon": 1,
			"delight": 2,
			"red": 2,
			"but": 1,
			"when": 1,
			"heart": 1,
			"anguish": 1,
			"and": 7,
			"sun": 1,
			"south": 1,
			"fiery": 1,
			"our": 1,
			"to": 2,
			"round": 1,
			"as": 1,
			"chorus": 1,
			"the": 1,
			"though": 1,
			"her": 2,
			"young": 1,
			"saith": 1
		},
		"chase": {
			"his": 1,
			"this": 1,
			"off": 1,
			"is": 1,
			"een": 1,
			"my": 1,
			"tears": 1,
			"cruel": 1,
			"but": 1,
			"and": 1,
			"how": 1,
			"from": 1,
			"give": 1,
			"our": 1,
			"shall": 1,
			"me": 1,
			"the": 8
		},
		"free": {
			"come": 1,
			"jean": 1,
			"more": 1,
			"free": 2,
			"his": 2,
			"s": 1,
			"tell": 1,
			"are": 1,
			"men": 1,
			"of": 4,
			"beheld": 1,
			"not": 2,
			"it": 1,
			"shake": 1,
			"by": 3,
			"is": 1,
			"like": 1,
			"forever": 1,
			"they": 2,
			"speech": 1,
			"you": 1,
			"thus": 1,
			"than": 1,
			"where": 1,
			"press": 1,
			"for": 5,
			"breath": 1,
			"my": 3,
			"blow": 1,
			"winds": 1,
			"again": 3,
			"themselves": 1,
			"thy": 2,
			"yes": 1,
			"whom": 1,
			"mary": 1,
			"soul": 1,
			"hope": 1,
			"power": 1,
			"were": 1,
			"oer": 1,
			"that": 2,
			"if": 1,
			"let": 4,
			"gives": 1,
			"what": 1,
			"or": 1,
			"soil": 1,
			"a": 1,
			"lay": 1,
			"never": 1,
			"spirit": 2,
			"love": 1,
			"on": 1,
			"but": 4,
			"when": 4,
			"heart": 1,
			"and": 25,
			"i": 4,
			"too": 1,
			"draw": 1,
			"hearts": 1,
			"from": 10,
			"while": 1,
			"bound": 1,
			"bid": 1,
			"with": 2,
			"sad": 1,
			"will": 5,
			"strong": 1,
			"all": 1,
			"patient": 1,
			"has": 2,
			"angels": 1,
			"well": 1,
			"our": 1,
			"only": 1,
			"wind": 1,
			"natures": 2,
			"to": 6,
			"art": 1,
			"may": 1,
			"as": 5,
			"he": 1,
			"flag": 1,
			"at": 2,
			"o": 1,
			"the": 7,
			"tis": 1,
			"sure": 1,
			"her": 1,
			"in": 3,
			"choice": 1,
			"air": 1
		},
		"laws": {
			"ring": 1,
			"are": 1,
			"made": 1,
			"of": 2,
			"wise": 1,
			"they": 1,
			"for": 1,
			"were": 1,
			"let": 1,
			"what": 1,
			"or": 1,
			"eye": 1,
			"lay": 1,
			"and": 3,
			"each": 1,
			"as": 1,
			"the": 4
		},
		"light": {
			"come": 1,
			"us": 1,
			"more": 1,
			"died": 1,
			"within": 1,
			"his": 2,
			"save": 2,
			"means": 1,
			"none": 1,
			"hast": 1,
			"seemed": 1,
			"are": 3,
			"made": 1,
			"fell": 2,
			"very": 1,
			"who": 3,
			"which": 5,
			"ones": 1,
			"toward": 1,
			"of": 49,
			"brook": 1,
			"this": 1,
			"amid": 1,
			"up": 4,
			"she": 3,
			"beyond": 1,
			"nor": 1,
			"three": 1,
			"joy": 2,
			"played": 1,
			"serene": 1,
			"divine": 2,
			"it": 3,
			"brought": 1,
			"by": 1,
			"alone": 3,
			"cold": 1,
			"is": 11,
			"rise": 1,
			"like": 4,
			"lead": 1,
			"they": 3,
			"leaves": 1,
			"without": 1,
			"earths": 1,
			"its": 2,
			"used": 1,
			"welcome": 1,
			"for": 4,
			"charge": 1,
			"should": 2,
			"take": 1,
			"my": 4,
			"john": 1,
			"again": 1,
			"thy": 2,
			"yes": 1,
			"pray": 1,
			"makes": 1,
			"sits": 1,
			"closed": 1,
			"god": 1,
			"noble": 1,
			"stroke": 1,
			"immortal": 1,
			"was": 5,
			"that": 9,
			"if": 1,
			"let": 1,
			"leaf": 1,
			"full": 1,
			"make": 2,
			"half": 3,
			"had": 3,
			"must": 1,
			"what": 2,
			"or": 4,
			"have": 1,
			"fill": 2,
			"their": 2,
			"a": 10,
			"so": 4,
			"babe": 1,
			"brings": 1,
			"upon": 4,
			"never": 1,
			"on": 6,
			"wing": 1,
			"above": 1,
			"thee": 1,
			"ye": 1,
			"when": 3,
			"sigh": 1,
			"task": 1,
			"be": 1,
			"and": 53,
			"quick": 1,
			"ask": 1,
			"i": 5,
			"thou": 2,
			"marching": 1,
			"down": 2,
			"here": 1,
			"too": 2,
			"steel": 1,
			"one": 1,
			"shining": 1,
			"against": 1,
			"work": 1,
			"each": 2,
			"how": 3,
			"from": 8,
			"would": 1,
			"stronger": 1,
			"hidden": 1,
			"these": 1,
			"while": 1,
			"no": 2,
			"with": 2,
			"around": 1,
			"singing": 1,
			"now": 2,
			"give": 1,
			"shone": 4,
			"will": 2,
			"himself": 1,
			"all": 9,
			"then": 2,
			"doth": 2,
			"thread": 1,
			"turned": 1,
			"our": 3,
			"shall": 3,
			"before": 4,
			"wind": 1,
			"your": 1,
			"yet": 1,
			"to": 14,
			"ah": 1,
			"may": 3,
			"we": 3,
			"as": 10,
			"life": 2,
			"he": 1,
			"me": 1,
			"at": 2,
			"weight": 1,
			"the": 36,
			"her": 1,
			"there": 2,
			"in": 12,
			"forgive": 1,
			"step": 1
		},
		"earth": {
			"come": 1,
			"dying": 1,
			"more": 2,
			"ring": 1,
			"unseen": 1,
			"earth": 1,
			"his": 2,
			"him": 1,
			"woe": 1,
			"seemed": 2,
			"are": 8,
			"back": 1,
			"who": 3,
			"which": 2,
			"hide": 1,
			"of": 5,
			"this": 2,
			"alike": 1,
			"feels": 1,
			"up": 1,
			"she": 2,
			"nor": 1,
			"command": 1,
			"goes": 2,
			"rose": 1,
			"not": 2,
			"it": 2,
			"began": 1,
			"by": 2,
			"is": 17,
			"glittering": 1,
			"like": 1,
			"return": 1,
			"away": 2,
			"forever": 1,
			"about": 1,
			"they": 1,
			"mother": 1,
			"grant": 1,
			"strike": 1,
			"its": 5,
			"than": 2,
			"those": 1,
			"sea": 1,
			"where": 1,
			"for": 6,
			"heaven": 1,
			"should": 1,
			"my": 1,
			"short": 1,
			"again": 3,
			"yes": 1,
			"vain": 1,
			"peace": 1,
			"wheels": 2,
			"can": 3,
			"did": 2,
			"was": 6,
			"that": 7,
			"if": 1,
			"another": 1,
			"says": 1,
			"had": 2,
			"gives": 2,
			"an": 2,
			"or": 5,
			"have": 1,
			"their": 2,
			"fold": 1,
			"a": 7,
			"so": 1,
			"them": 1,
			"lord": 1,
			"hath": 3,
			"on": 5,
			"quite": 1,
			"but": 2,
			"ye": 2,
			"when": 1,
			"felt": 1,
			"be": 4,
			"and": 45,
			"order": 1,
			"cries": 1,
			"i": 2,
			"thou": 4,
			"broke": 1,
			"too": 1,
			"such": 1,
			"each": 2,
			"how": 1,
			"from": 1,
			"would": 2,
			"no": 6,
			"with": 10,
			"around": 2,
			"singing": 1,
			"will": 1,
			"all": 1,
			"blest": 3,
			"could": 1,
			"has": 3,
			"asleep": 1,
			"doth": 1,
			"dost": 1,
			"spring": 1,
			"our": 1,
			"shall": 3,
			"only": 1,
			"still": 1,
			"yet": 1,
			"to": 14,
			"into": 1,
			"lie": 1,
			"may": 5,
			"as": 5,
			"he": 5,
			"at": 2,
			"below": 3,
			"iii": 1,
			"o": 4,
			"the": 12,
			"tis": 1,
			"seems": 1,
			"her": 2,
			"been": 1,
			"there": 2,
			"in": 12,
			"grows": 1
		},
		"birds": {
			"sweet": 1,
			"are": 2,
			"which": 1,
			"of": 2,
			"amid": 1,
			"she": 1,
			"nor": 1,
			"fresh": 1,
			"away": 1,
			"they": 1,
			"thus": 1,
			"than": 1,
			"where": 1,
			"sang": 3,
			"sing": 1,
			"were": 1,
			"that": 3,
			"make": 1,
			"had": 1,
			"or": 2,
			"a": 3,
			"upon": 1,
			"wings": 1,
			"and": 7,
			"do": 1,
			"i": 1,
			"from": 1,
			"with": 1,
			"flying": 1,
			"will": 2,
			"pleasant": 1,
			"to": 2,
			"may": 1,
			"whose": 1,
			"the": 1,
			"in": 2,
			"flowers": 1
		},
		"pen": {
			"his": 1,
			"divine": 1,
			"pressed": 1,
			"is": 1,
			"where": 1,
			"was": 1,
			"that": 1,
			"or": 1,
			"on": 1,
			"lives": 1,
			"and": 6,
			"how": 1,
			"beneath": 1,
			"aside": 1,
			"he": 1,
			"the": 3
		},
		"forget": {
			"went": 1,
			"not": 4,
			"it": 1,
			"good": 1,
			"you": 2,
			"for": 1,
			"should": 1,
			"tomorrow": 1,
			"thy": 1,
			"ere": 2,
			"can": 1,
			"that": 1,
			"if": 1,
			"what": 2,
			"a": 1,
			"old": 2,
			"thee": 1,
			"when": 1,
			"lifes": 1,
			"mans": 1,
			"and": 2,
			"myself": 1,
			"robin": 1,
			"how": 1,
			"these": 1,
			"till": 1,
			"all": 1,
			"then": 1,
			"has": 1,
			"our": 1,
			"your": 1,
			"to": 2,
			"we": 2,
			"heavens": 1,
			"he": 1,
			"me": 1,
			"at": 1,
			"the": 16,
			"forgive": 1
		},
		"space": {
			"of": 1,
			"nor": 1,
			"twixt": 1,
			"land": 1,
			"is": 1,
			"few": 1,
			"than": 1,
			"where": 1,
			"did": 1,
			"was": 1,
			"that": 1,
			"had": 1,
			"an": 1,
			"above": 2,
			"between": 1,
			"with": 1,
			"all": 1,
			"doth": 1,
			"shall": 1,
			"before": 1,
			"to": 1,
			"whose": 1,
			"the": 2,
			"passed": 1
		},
		"forehead": {
			"bare": 1,
			"fell": 1,
			"of": 5,
			"thick": 1,
			"pressed": 1,
			"came": 1,
			"lay": 1,
			"on": 1,
			"when": 1,
			"and": 2,
			"would": 1,
			"set": 1,
			"to": 1,
			"fair": 1,
			"he": 1,
			"the": 3,
			"there": 1
		},
		"doubt": {
			"come": 1,
			"low": 1,
			"doubt": 1,
			"beside": 1,
			"pass": 1,
			"not": 3,
			"it": 2,
			"long": 1,
			"is": 6,
			"like": 1,
			"easy": 1,
			"believe": 2,
			"than": 1,
			"where": 1,
			"my": 2,
			"that": 4,
			"or": 1,
			"have": 1,
			"a": 3,
			"so": 1,
			"when": 1,
			"and": 12,
			"truth": 1,
			"i": 2,
			"thou": 1,
			"one": 1,
			"might": 1,
			"would": 1,
			"no": 1,
			"some": 1,
			"will": 1,
			"all": 1,
			"yet": 1,
			"as": 1,
			"me": 1,
			"the": 6,
			"been": 1,
			"there": 1,
			"in": 2
		},
		"touched": {
			"within": 2,
			"his": 4,
			"by": 3,
			"hallowed": 1,
			"my": 2,
			"was": 1,
			"a": 1,
			"them": 1,
			"and": 2,
			"with": 2,
			"your": 1,
			"to": 3,
			"as": 1,
			"the": 1,
			"aloud": 1
		},
		"pine": {
			"within": 1,
			"among": 1,
			"forth": 1,
			"long": 1,
			"is": 1,
			"away": 1,
			"they": 1,
			"where": 1,
			"for": 3,
			"that": 1,
			"towers": 1,
			"a": 1,
			"lord": 1,
			"and": 6,
			"beneath": 1,
			"with": 1,
			"to": 2,
			"as": 2,
			"at": 1,
			"o": 2,
			"the": 1,
			"there": 1,
			"in": 1
		},
		"die": {
			"sweet": 2,
			"since": 1,
			"ring": 1,
			"free": 1,
			"are": 1,
			"who": 3,
			"of": 4,
			"this": 1,
			"among": 1,
			"nor": 1,
			"it": 5,
			"over": 1,
			"by": 1,
			"alone": 1,
			"long": 1,
			"is": 6,
			"like": 3,
			"away": 1,
			"they": 2,
			"nature": 1,
			"thus": 1,
			"pale": 1,
			"without": 1,
			"robert": 1,
			"than": 2,
			"friends": 1,
			"where": 2,
			"for": 12,
			"theres": 1,
			"take": 1,
			"tomorrow": 1,
			"my": 1,
			"great": 1,
			"forgot": 1,
			"yes": 1,
			"sleep": 1,
			"ere": 2,
			"tonight": 4,
			"francis": 1,
			"william": 2,
			"that": 1,
			"if": 1,
			"let": 1,
			"full": 1,
			"must": 1,
			"or": 2,
			"have": 1,
			"a": 2,
			"so": 2,
			"green": 1,
			"lord": 2,
			"many": 1,
			"love": 2,
			"on": 3,
			"above": 1,
			"fast": 1,
			"but": 6,
			"death": 1,
			"perhaps": 1,
			"when": 2,
			"t": 2,
			"and": 15,
			"i": 3,
			"unknown": 1,
			"thou": 1,
			"here": 1,
			"too": 1,
			"one": 5,
			"against": 1,
			"how": 3,
			"from": 1,
			"ill": 1,
			"beneath": 1,
			"no": 1,
			"with": 6,
			"now": 2,
			"give": 1,
			"gaze": 1,
			"all": 2,
			"then": 6,
			"thomas": 1,
			"well": 1,
			"spring": 1,
			"our": 1,
			"passing": 1,
			"before": 5,
			"only": 1,
			"still": 1,
			"to": 6,
			"into": 1,
			"flame": 1,
			"ah": 4,
			"may": 1,
			"we": 5,
			"whose": 1,
			"stand": 1,
			"he": 1,
			"o": 4,
			"blessed": 1,
			"the": 10,
			"though": 1,
			"young": 2,
			"first": 1,
			"there": 4,
			"in": 6
		},
		"cloud": {
			"him": 1,
			"war": 1,
			"who": 1,
			"which": 1,
			"of": 10,
			"nor": 3,
			"serene": 1,
			"by": 2,
			"is": 1,
			"like": 1,
			"away": 1,
			"for": 1,
			"my": 2,
			"again": 1,
			"walls": 1,
			"that": 4,
			"or": 3,
			"a": 2,
			"upon": 1,
			"on": 1,
			"above": 1,
			"thee": 1,
			"and": 8,
			"here": 1,
			"raised": 1,
			"with": 1,
			"some": 1,
			"will": 1,
			"to": 5,
			"turn": 1,
			"as": 1,
			"the": 9,
			"scarce": 1,
			"in": 3
		},
		"mountains": {
			"look": 1,
			"crest": 2,
			"dance": 1,
			"are": 1,
			"of": 3,
			"high": 1,
			"yield": 1,
			"height": 1,
			"fresh": 1,
			"side": 3,
			"praise": 1,
			"breaks": 1,
			"away": 1,
			"they": 1,
			"heard": 1,
			"crown": 2,
			"where": 1,
			"bosom": 1,
			"burning": 1,
			"wear": 1,
			"glow": 2,
			"oer": 1,
			"that": 2,
			"make": 2,
			"so": 1,
			"on": 3,
			"ye": 1,
			"feet": 1,
			"and": 4,
			"down": 1,
			"secret": 1,
			"each": 1,
			"brow": 3,
			"with": 1,
			"now": 1,
			"upward": 1,
			"yet": 1,
			"to": 2,
			"into": 1,
			"throng": 1,
			"fair": 1,
			"point": 1
		},
		"his": {
			"sweet": 7,
			"books": 2,
			"tune": 1,
			"blue": 3,
			"sound": 1,
			"low": 2,
			"bow": 1,
			"cool": 1,
			"dying": 5,
			"bread": 3,
			"look": 3,
			"floor": 1,
			"woes": 3,
			"sighs": 2,
			"ain": 2,
			"wrought": 2,
			"since": 1,
			"blessd": 2,
			"lot": 1,
			"wife": 8,
			"ready": 3,
			"justice": 4,
			"parting": 3,
			"wish": 1,
			"fierce": 2,
			"free": 2,
			"light": 3,
			"forehead": 8,
			"cloud": 2,
			"mountains": 1,
			"his": 9,
			"save": 1,
			"dreary": 1,
			"him": 3,
			"fond": 1,
			"banner": 2,
			"crest": 2,
			"ear": 7,
			"book": 1,
			"midnight": 2,
			"sharp": 1,
			"charity": 1,
			"law": 1,
			"see": 2,
			"blood": 7,
			"narrow": 3,
			"wi": 1,
			"cheek": 5,
			"play": 2,
			"faithful": 1,
			"horn": 8,
			"thing": 1,
			"fit": 1,
			"creed": 6,
			"ages": 1,
			"white": 3,
			"science": 1,
			"shades": 1,
			"woe": 2,
			"silver": 3,
			"purple": 1,
			"war": 2,
			"weary": 1,
			"are": 7,
			"saints": 2,
			"story": 2,
			"aid": 1,
			"humble": 1,
			"right": 5,
			"back": 11,
			"made": 2,
			"word": 6,
			"fell": 1,
			"who": 10,
			"sweetest": 1,
			"silent": 2,
			"men": 4,
			"which": 2,
			"court": 1,
			"beam": 1,
			"deeds": 2,
			"holds": 2,
			"worth": 2,
			"call": 1,
			"country": 2,
			"steps": 3,
			"body": 10,
			"of": 21,
			"this": 4,
			"star": 2,
			"high": 4,
			"fame": 3,
			"amid": 1,
			"souls": 2,
			"wine": 3,
			"feels": 2,
			"up": 6,
			"off": 2,
			"food": 2,
			"triumph": 3,
			"tide": 1,
			"angel": 2,
			"she": 2,
			"rock": 1,
			"shakespeare": 1,
			"beyond": 1,
			"anonymous": 1,
			"nor": 4,
			"sons": 2,
			"sacred": 1,
			"command": 2,
			"three": 1,
			"sez": 1,
			"morning": 1,
			"grew": 1,
			"city": 1,
			"heavy": 2,
			"flood": 1,
			"sight": 7,
			"stormy": 2,
			"darkness": 1,
			"joy": 5,
			"forth": 2,
			"foam": 1,
			"fruit": 1,
			"wheel": 2,
			"height": 1,
			"brother": 1,
			"sheep": 2,
			"dreadful": 1,
			"dear": 6,
			"fresh": 1,
			"pain": 1,
			"mouth": 1,
			"thick": 1,
			"place": 3,
			"lift": 1,
			"part": 4,
			"chant": 1,
			"rose": 3,
			"beloved": 5,
			"limbs": 5,
			"mine": 1,
			"not": 3,
			"hours": 1,
			"constant": 2,
			"side": 11,
			"proud": 2,
			"hes": 1,
			"dry": 1,
			"praise": 4,
			"sword": 14,
			"it": 3,
			"over": 1,
			"army": 1,
			"host": 3,
			"magic": 1,
			"sins": 1,
			"shows": 1,
			"maiden": 2,
			"flight": 5,
			"image": 2,
			"eager": 1,
			"spirits": 1,
			"wisdom": 3,
			"child": 4,
			"bark": 2,
			"tongue": 6,
			"send": 1,
			"feeble": 3,
			"by": 11,
			"eyes": 29,
			"fathers": 12,
			"father": 6,
			"long": 5,
			"sorrows": 1,
			"kissed": 2,
			"cold": 3,
			"pride": 6,
			"land": 4,
			"wise": 1,
			"is": 13,
			"cross": 2,
			"rise": 1,
			"looked": 1,
			"few": 2,
			"unto": 2,
			"like": 4,
			"return": 1,
			"boy": 1,
			"farewell": 2,
			"glass": 2,
			"away": 4,
			"hoary": 1,
			"form": 4,
			"sway": 1,
			"children": 5,
			"native": 6,
			"people": 1,
			"immortality": 1,
			"kings": 1,
			"forever": 2,
			"good": 3,
			"pleased": 1,
			"hark": 2,
			"force": 1,
			"care": 6,
			"about": 1,
			"steed": 6,
			"they": 2,
			"prayer": 4,
			"easy": 1,
			"abroad": 1,
			"path": 4,
			"faint": 1,
			"funeral": 2,
			"wide": 2,
			"you": 2,
			"nature": 4,
			"guide": 1,
			"stern": 1,
			"glowing": 2,
			"mother": 8,
			"mild": 1,
			"thus": 1,
			"pale": 1,
			"new": 1,
			"rosy": 1,
			"sister": 3,
			"robert": 1,
			"slave": 2,
			"ranks": 1,
			"smile": 4,
			"slow": 2,
			"swift": 2,
			"kindly": 3,
			"pleasure": 2,
			"beams": 5,
			"song": 6,
			"those": 1,
			"crown": 2,
			"friends": 2,
			"where": 4,
			"yea": 1,
			"gentle": 1,
			"despair": 1,
			"run": 2,
			"train": 5,
			"church": 1,
			"holy": 3,
			"gray": 2,
			"for": 7,
			"past": 1,
			"judgment": 2,
			"hand": 41,
			"heaven": 4,
			"bosom": 8,
			"cup": 2,
			"lost": 1,
			"bloody": 1,
			"lonely": 1,
			"base": 2,
			"bowed": 1,
			"darling": 1,
			"theres": 1,
			"bride": 4,
			"breath": 7,
			"tomorrow": 2,
			"rest": 7,
			"my": 1,
			"blow": 1,
			"whats": 1,
			"fingers": 4,
			"band": 5,
			"words": 11,
			"hour": 3,
			"came": 3,
			"heroes": 1,
			"winds": 1,
			"great": 9,
			"john": 1,
			"tender": 1,
			"beauty": 4,
			"short": 1,
			"desire": 2,
			"burning": 2,
			"touch": 3,
			"thy": 1,
			"wall": 1,
			"greater": 1,
			"sleep": 6,
			"battle": 1,
			"peace": 2,
			"wheels": 3,
			"majesty": 1,
			"blows": 2,
			"ere": 1,
			"hopes": 1,
			"waves": 1,
			"birth": 3,
			"whom": 1,
			"ray": 1,
			"shore": 2,
			"dearest": 2,
			"soul": 36,
			"passion": 4,
			"hope": 4,
			"cease": 1,
			"senses": 4,
			"wandering": 1,
			"evening": 1,
			"rising": 2,
			"friend": 5,
			"wrath": 2,
			"name": 14,
			"door": 3,
			"clay": 1,
			"countrys": 6,
			"face": 27,
			"sin": 1,
			"battles": 2,
			"trembling": 2,
			"faith": 4,
			"whether": 1,
			"god": 6,
			"can": 2,
			"wit": 3,
			"foot": 2,
			"noble": 1,
			"power": 6,
			"were": 14,
			"oer": 1,
			"shell": 1,
			"indeed": 1,
			"did": 2,
			"was": 8,
			"runs": 1,
			"that": 9,
			"if": 1,
			"let": 1,
			"lips": 9,
			"drop": 1,
			"arm": 3,
			"daily": 1,
			"thin": 2,
			"embrace": 1,
			"full": 3,
			"make": 2,
			"victory": 1,
			"fall": 2,
			"steep": 2,
			"go": 1,
			"reign": 2,
			"half": 2,
			"trust": 5,
			"hang": 1,
			"desert": 1,
			"brothers": 5,
			"had": 3,
			"must": 1,
			"pure": 1,
			"what": 1,
			"beautiful": 1,
			"an": 3,
			"front": 2,
			"creatures": 2,
			"music": 5,
			"even": 1,
			"or": 8,
			"conscience": 1,
			"eye": 27,
			"hands": 11,
			"bright": 4,
			"study": 2,
			"tree": 2,
			"tears": 1,
			"trod": 1,
			"isle": 2,
			"horse": 9,
			"prey": 4,
			"ride": 1,
			"fill": 2,
			"bitter": 1,
			"soldiers": 2,
			"winter": 1,
			"their": 1,
			"a": 15,
			"so": 3,
			"pains": 1,
			"falls": 1,
			"joys": 2,
			"courage": 3,
			"true": 3,
			"flies": 1,
			"upon": 1,
			"gallant": 2,
			"lay": 4,
			"lord": 5,
			"whole": 5,
			"spirit": 8,
			"hath": 3,
			"ashes": 2,
			"leave": 1,
			"delight": 1,
			"love": 23,
			"tomb": 2,
			"on": 18,
			"saw": 1,
			"wing": 1,
			"maryland": 1,
			"own": 83,
			"red": 2,
			"shroud": 2,
			"brain": 5,
			"fast": 1,
			"chains": 1,
			"deep": 1,
			"memory": 4,
			"roaring": 1,
			"feast": 2,
			"old": 2,
			"but": 8,
			"iron": 1,
			"glance": 2,
			"brown": 1,
			"death": 6,
			"foes": 4,
			"time": 1,
			"poor": 2,
			"thee": 2,
			"ye": 1,
			"years": 2,
			"when": 4,
			"eat": 1,
			"deed": 2,
			"lifes": 1,
			"eternal": 2,
			"terror": 1,
			"thank": 1,
			"waters": 1,
			"length": 1,
			"dreams": 1,
			"felt": 1,
			"task": 2,
			"be": 6,
			"bed": 9,
			"van": 1,
			"feet": 18,
			"wondrous": 1,
			"wings": 6,
			"glory": 6,
			"having": 1,
			"line": 3,
			"out": 1,
			"kind": 1,
			"awful": 1,
			"earthly": 1,
			"brave": 4,
			"rage": 2,
			"heart": 39,
			"say": 2,
			"anguish": 1,
			"head": 49,
			"paradise": 1,
			"close": 1,
			"verse": 3,
			"and": 98,
			"bliss": 1,
			"thunder": 2,
			"bones": 9,
			"mothers": 7,
			"grace": 8,
			"truth": 2,
			"dark": 3,
			"doom": 4,
			"last": 13,
			"rays": 1,
			"lovely": 1,
			"black": 2,
			"dream": 3,
			"fate": 8,
			"wounded": 1,
			"days": 2,
			"grave": 15,
			"poem": 1,
			"fly": 1,
			"i": 6,
			"thou": 2,
			"haste": 1,
			"depths": 1,
			"down": 3,
			"less": 1,
			"western": 2,
			"bad": 1,
			"home": 6,
			"pay": 1,
			"dull": 1,
			"wretched": 1,
			"here": 1,
			"island": 2,
			"too": 3,
			"presence": 2,
			"mortal": 1,
			"one": 3,
			"might": 2,
			"chamber": 2,
			"shining": 1,
			"fatherland": 1,
			"against": 1,
			"secret": 2,
			"hate": 1,
			"state": 2,
			"work": 7,
			"pearl": 1,
			"looks": 4,
			"fields": 2,
			"broad": 2,
			"each": 1,
			"brow": 14,
			"how": 2,
			"hearts": 4,
			"help": 2,
			"from": 5,
			"sleeping": 1,
			"gifts": 1,
			"marble": 1,
			"mind": 9,
			"ill": 1,
			"blade": 3,
			"beat": 1,
			"beneath": 1,
			"rare": 1,
			"hidden": 1,
			"shield": 3,
			"while": 2,
			"breast": 22,
			"honor": 3,
			"present": 1,
			"no": 3,
			"early": 2,
			"worst": 2,
			"calm": 1,
			"voice": 11,
			"guest": 2,
			"dread": 1,
			"sphere": 1,
			"kingdom": 2,
			"guilty": 1,
			"mighty": 4,
			"ears": 1,
			"with": 17,
			"around": 2,
			"soft": 1,
			"drew": 1,
			"now": 2,
			"set": 1,
			"gaze": 1,
			"single": 2,
			"flying": 1,
			"some": 2,
			"hair": 7,
			"meet": 1,
			"will": 14,
			"strong": 2,
			"locks": 5,
			"prayers": 2,
			"all": 3,
			"chief": 1,
			"patient": 1,
			"grief": 4,
			"gay": 1,
			"gods": 3,
			"wild": 1,
			"comrades": 4,
			"then": 2,
			"room": 2,
			"harvest": 1,
			"flesh": 2,
			"thought": 4,
			"through": 2,
			"notes": 1,
			"foe": 4,
			"has": 2,
			"songs": 1,
			"laugh": 2,
			"service": 1,
			"rhine": 1,
			"thread": 2,
			"clear": 1,
			"king": 4,
			"master": 2,
			"ways": 6,
			"much": 1,
			"turned": 1,
			"begun": 1,
			"being": 1,
			"wealth": 2,
			"our": 4,
			"throne": 14,
			"day": 4,
			"sense": 3,
			"passing": 1,
			"works": 3,
			"gathered": 1,
			"open": 1,
			"fear": 2,
			"equal": 1,
			"mercy": 5,
			"loved": 2,
			"shall": 1,
			"before": 1,
			"only": 10,
			"golden": 2,
			"still": 4,
			"chance": 1,
			"natures": 1,
			"yet": 4,
			"best": 2,
			"way": 15,
			"mark": 1,
			"course": 5,
			"to": 30,
			"youth": 1,
			"poets": 1,
			"speed": 2,
			"knee": 4,
			"into": 2,
			"cut": 1,
			"round": 1,
			"wood": 1,
			"flame": 1,
			"keen": 2,
			"lie": 2,
			"little": 9,
			"rich": 2,
			"strain": 2,
			"backward": 1,
			"glorious": 4,
			"wounds": 1,
			"view": 1,
			"spear": 2,
			"know": 1,
			"prove": 1,
			"sore": 1,
			"art": 1,
			"harp": 2,
			"bold": 2,
			"may": 3,
			"withered": 1,
			"sign": 1,
			"ship": 3,
			"powers": 2,
			"we": 1,
			"simple": 1,
			"loss": 1,
			"spread": 1,
			"store": 6,
			"whose": 1,
			"falling": 1,
			"as": 9,
			"fair": 3,
			"happy": 1,
			"said": 2,
			"life": 14,
			"he": 23,
			"arms": 5,
			"sat": 1,
			"strength": 6,
			"son": 2,
			"flag": 1,
			"gleam": 2,
			"at": 6,
			"seat": 6,
			"o": 7,
			"coming": 4,
			"weight": 1,
			"left": 3,
			"blessed": 2,
			"the": 35,
			"ghost": 1,
			"though": 1,
			"fight": 1,
			"treasure": 2,
			"sure": 1,
			"world": 1,
			"bent": 1,
			"stood": 1,
			"house": 3,
			"labor": 1,
			"her": 1,
			"share": 1,
			"radiant": 2,
			"young": 6,
			"tread": 1,
			"thirst": 1,
			"fire": 2,
			"near": 1,
			"first": 6,
			"soldier": 1,
			"there": 2,
			"restless": 1,
			"in": 26,
			"choice": 4,
			"purpose": 1,
			"air": 2,
			"thoughts": 7
		},
		"appear": {
			"more": 1,
			"of": 1,
			"without": 1,
			"than": 1,
			"where": 1,
			"small": 1,
			"for": 3,
			"theres": 1,
			"deaths": 1,
			"thy": 1,
			"so": 1,
			"upon": 1,
			"lord": 1,
			"and": 4,
			"no": 1,
			"with": 1,
			"our": 2,
			"ah": 1,
			"as": 2,
			"o": 1,
			"the": 1,
			"in": 4
		},
		"stream": {
			"which": 2,
			"of": 6,
			"up": 1,
			"nor": 1,
			"divine": 2,
			"it": 1,
			"is": 1,
			"hard": 1,
			"its": 1,
			"where": 1,
			"sang": 1,
			"bears": 1,
			"oer": 1,
			"was": 1,
			"runs": 1,
			"that": 4,
			"had": 1,
			"or": 1,
			"ran": 1,
			"on": 2,
			"but": 1,
			"when": 2,
			"ay": 1,
			"and": 11,
			"quick": 1,
			"i": 1,
			"thou": 1,
			"with": 2,
			"could": 1,
			"through": 1,
			"still": 1,
			"your": 1,
			"lie": 1,
			"may": 1,
			"we": 1,
			"as": 2,
			"he": 1,
			"at": 1,
			"the": 7,
			"tis": 1,
			"in": 1
		},
		"james": {
			"hear": 1,
			"going": 1,
			"ii": 1,
			"of": 2,
			"darkness": 1,
			"father": 1,
			"you": 1,
			"heaven": 1,
			"autumn": 1,
			"did": 2,
			"that": 1,
			"both": 1,
			"make": 1,
			"a": 2,
			"on": 1,
			"i": 2,
			"from": 1,
			"virtue": 1,
			"now": 1,
			"all": 1,
			"king": 1,
			"our": 1,
			"way": 1,
			"to": 1,
			"he": 1,
			"the": 9,
			"in": 2
		},
		"save": {
			"us": 2,
			"his": 5,
			"save": 2,
			"him": 1,
			"worth": 1,
			"this": 1,
			"heavy": 1,
			"two": 1,
			"mine": 1,
			"it": 1,
			"over": 1,
			"by": 1,
			"is": 1,
			"form": 1,
			"why": 1,
			"you": 2,
			"those": 1,
			"where": 4,
			"base": 1,
			"my": 1,
			"again": 1,
			"thy": 4,
			"oer": 1,
			"that": 3,
			"if": 1,
			"let": 1,
			"general": 1,
			"what": 2,
			"oh": 1,
			"an": 1,
			"a": 2,
			"so": 2,
			"things": 1,
			"on": 2,
			"when": 3,
			"and": 3,
			"i": 1,
			"thou": 1,
			"one": 2,
			"from": 6,
			"now": 1,
			"all": 3,
			"king": 1,
			"our": 4,
			"only": 1,
			"to": 5,
			"art": 1,
			"he": 1,
			"me": 5,
			"o": 5,
			"the": 21,
			"in": 3
		},
		"happiness": {
			"which": 1,
			"of": 1,
			"not": 1,
			"is": 1,
			"where": 1,
			"fixed": 1,
			"ere": 1,
			"that": 1,
			"but": 3,
			"and": 5,
			"thou": 2,
			"will": 1,
			"all": 1,
			"neer": 1,
			"below": 1,
			"the": 1,
			"tis": 1,
			"in": 1
		},
		"mad": {
			"this": 1,
			"nor": 1,
			"sings": 1,
			"despair": 1,
			"blast": 1,
			"charge": 1,
			"my": 1,
			"john": 1,
			"times": 1,
			"that": 1,
			"and": 1,
			"i": 1,
			"rush": 1,
			"from": 2,
			"no": 1,
			"with": 2,
			"to": 1,
			"there": 1,
			"in": 1
		},
		"struck": {
			"more": 2,
			"this": 1,
			"up": 1,
			"by": 3,
			"for": 1,
			"my": 1,
			"earl": 1,
			"stretched": 1,
			"so": 1,
			"them": 1,
			"deep": 1,
			"with": 1,
			"as": 1,
			"the": 4,
			"in": 1
		},
		"endure": {
			"once": 1,
			"angel": 1,
			"not": 2,
			"song": 1,
			"sing": 1,
			"that": 1,
			"their": 1,
			"a": 1,
			"on": 1,
			"and": 6,
			"from": 1,
			"all": 1,
			"then": 1,
			"to": 2,
			"he": 1,
			"the": 5
		},
		"st": {
			"footnote": 1,
			"his": 1,
			"james": 1,
			"lady": 1,
			"of": 2,
			"keep": 1,
			"anonymous": 1,
			"cross": 1,
			"john": 1,
			"francis": 1,
			"met": 1,
			"and": 2,
			"island": 1,
			"with": 1,
			"shone": 1,
			"lake": 1,
			"day": 1,
			"translation": 2,
			"the": 1,
			"in": 1
		},
		"hell": {
			"itself": 2,
			"earth": 1,
			"surely": 1,
			"fell": 1,
			"who": 1,
			"of": 3,
			"keep": 2,
			"triumph": 1,
			"forth": 1,
			"two": 1,
			"not": 1,
			"it": 3,
			"over": 1,
			"try": 1,
			"is": 1,
			"good": 1,
			"than": 1,
			"for": 2,
			"thy": 1,
			"better": 1,
			"can": 1,
			"comfort": 1,
			"did": 1,
			"that": 2,
			"if": 1,
			"let": 1,
			"go": 1,
			"rode": 1,
			"a": 2,
			"never": 1,
			"iron": 1,
			"thee": 1,
			"when": 1,
			"t": 1,
			"and": 5,
			"myself": 1,
			"i": 3,
			"pay": 1,
			"one": 1,
			"with": 1,
			"all": 2,
			"then": 2,
			"through": 1,
			"has": 1,
			"doth": 1,
			"to": 4,
			"ah": 1,
			"as": 1,
			"leads": 1,
			"in": 1
		},
		"dreary": {
			"come": 1,
			"stream": 1,
			"dreary": 1,
			"of": 2,
			"hours": 2,
			"it": 3,
			"alone": 1,
			"hark": 1,
			"about": 1,
			"without": 1,
			"where": 2,
			"noise": 1,
			"my": 1,
			"hour": 2,
			"watch": 1,
			"shore": 1,
			"evening": 1,
			"name": 1,
			"a": 1,
			"green": 1,
			"dawn": 1,
			"when": 1,
			"task": 1,
			"be": 1,
			"west": 1,
			"henry": 1,
			"till": 1,
			"day": 1,
			"night": 1,
			"o": 1,
			"the": 2,
			"waste": 1
		},
		"him": {
			"come": 1,
			"low": 13,
			"caught": 1,
			"more": 1,
			"wrought": 1,
			"since": 1,
			"loves": 1,
			"free": 1,
			"die": 3,
			"his": 4,
			"him": 1,
			"see": 1,
			"learn": 1,
			"woe": 1,
			"tell": 1,
			"seemed": 1,
			"are": 3,
			"right": 4,
			"back": 5,
			"next": 2,
			"who": 45,
			"seen": 1,
			"which": 4,
			"hide": 1,
			"of": 1,
			"this": 1,
			"high": 1,
			"amid": 1,
			"keep": 1,
			"after": 1,
			"once": 5,
			"up": 6,
			"off": 2,
			"she": 2,
			"beyond": 1,
			"nor": 2,
			"three": 1,
			"act": 1,
			"joy": 1,
			"pass": 2,
			"rose": 1,
			"beloved": 1,
			"behold": 2,
			"not": 8,
			"put": 1,
			"today": 3,
			"every": 1,
			"it": 6,
			"over": 2,
			"shake": 1,
			"neither": 1,
			"far": 4,
			"by": 4,
			"jim": 1,
			"alone": 4,
			"long": 1,
			"mute": 1,
			"is": 4,
			"rise": 1,
			"author": 1,
			"few": 1,
			"like": 5,
			"away": 3,
			"why": 2,
			"good": 2,
			"lead": 1,
			"they": 1,
			"easy": 1,
			"you": 1,
			"without": 1,
			"smile": 1,
			"kindly": 1,
			"those": 2,
			"friends": 1,
			"where": 4,
			"yea": 1,
			"run": 1,
			"just": 1,
			"for": 14,
			"read": 5,
			"charge": 1,
			"take": 1,
			"speak": 1,
			"didst": 1,
			"my": 3,
			"again": 2,
			"thy": 3,
			"sleep": 2,
			"ere": 1,
			"whom": 1,
			"mary": 1,
			"most": 1,
			"sir": 1,
			"longer": 1,
			"forward": 1,
			"god": 1,
			"can": 2,
			"noble": 1,
			"were": 2,
			"oer": 3,
			"cause": 1,
			"was": 4,
			"that": 18,
			"if": 6,
			"let": 1,
			"daily": 1,
			"both": 2,
			"full": 1,
			"make": 1,
			"go": 4,
			"cried": 1,
			"trust": 1,
			"had": 1,
			"climb": 1,
			"what": 4,
			"sit": 1,
			"an": 3,
			"wait": 1,
			"or": 7,
			"think": 1,
			"have": 1,
			"prey": 1,
			"their": 1,
			"a": 8,
			"so": 9,
			"falls": 1,
			"true": 2,
			"upon": 1,
			"lay": 2,
			"lord": 1,
			"whole": 1,
			"never": 2,
			"hath": 1,
			"love": 2,
			"groan": 1,
			"on": 8,
			"above": 2,
			"fast": 3,
			"but": 10,
			"foes": 1,
			"perhaps": 1,
			"ye": 1,
			"canst": 1,
			"when": 4,
			"until": 1,
			"knows": 1,
			"be": 6,
			"t": 2,
			"out": 4,
			"sweetly": 1,
			"say": 2,
			"and": 42,
			"last": 2,
			"west": 1,
			"lovely": 1,
			"myself": 1,
			"ask": 1,
			"wounded": 1,
			"i": 12,
			"unknown": 1,
			"worthy": 1,
			"thou": 4,
			"down": 4,
			"home": 3,
			"pay": 1,
			"here": 4,
			"mortal": 1,
			"one": 2,
			"such": 2,
			"shining": 1,
			"how": 1,
			"from": 11,
			"gifts": 1,
			"beat": 1,
			"while": 4,
			"no": 7,
			"with": 20,
			"singing": 1,
			"soft": 2,
			"soggarth": 1,
			"now": 3,
			"give": 2,
			"will": 1,
			"follow": 3,
			"himself": 1,
			"all": 9,
			"then": 1,
			"poured": 1,
			"blest": 1,
			"through": 1,
			"thomas": 1,
			"has": 1,
			"asleep": 1,
			"laugh": 1,
			"well": 3,
			"shine": 1,
			"fiery": 1,
			"being": 1,
			"our": 4,
			"day": 1,
			"frame": 1,
			"shall": 2,
			"before": 2,
			"still": 4,
			"your": 1,
			"yet": 3,
			"best": 3,
			"to": 40,
			"turn": 2,
			"lie": 1,
			"live": 1,
			"use": 1,
			"gently": 2,
			"hence": 1,
			"sore": 1,
			"ah": 1,
			"we": 3,
			"whose": 5,
			"as": 16,
			"fair": 1,
			"borne": 2,
			"stand": 2,
			"happy": 2,
			"said": 2,
			"he": 13,
			"me": 2,
			"at": 6,
			"o": 1,
			"east": 2,
			"gain": 1,
			"chorus": 1,
			"the": 18,
			"tis": 1,
			"waste": 1,
			"though": 2,
			"scarce": 1,
			"her": 1,
			"change": 1,
			"dead": 2,
			"near": 1,
			"there": 9,
			"in": 32
		},
		"fond": {
			"perchance": 1,
			"more": 1,
			"earth": 1,
			"kiss": 3,
			"voices": 1,
			"of": 5,
			"does": 1,
			"prayer": 1,
			"nature": 1,
			"despair": 1,
			"for": 1,
			"bride": 1,
			"desire": 2,
			"hopes": 1,
			"man": 2,
			"had": 1,
			"must": 1,
			"tears": 1,
			"courage": 1,
			"love": 1,
			"weeping": 1,
			"heart": 1,
			"and": 3,
			"myself": 1,
			"hearts": 1,
			"breast": 1,
			"all": 1,
			"smiled": 1,
			"as": 1,
			"arms": 1,
			"fancy": 1,
			"the": 1,
			"world": 1,
			"oft": 1,
			"grows": 1
		},
		"banner": {
			"more": 1,
			"white": 2,
			"of": 6,
			"rose": 1,
			"is": 1,
			"for": 1,
			"cry": 1,
			"waves": 1,
			"torn": 1,
			"god": 1,
			"oer": 2,
			"that": 2,
			"must": 1,
			"true": 1,
			"and": 2,
			"do": 1,
			"down": 1,
			"softly": 1,
			"with": 1,
			"wave": 1,
			"shone": 1,
			"our": 1,
			"before": 1,
			"still": 1,
			"yet": 1,
			"spread": 1,
			"o": 1,
			"in": 4
		},
		"crest": {
			"made": 1,
			"of": 5,
			"is": 1,
			"leaves": 1,
			"gray": 1,
			"short": 1,
			"that": 1,
			"a": 1,
			"and": 5,
			"with": 1,
			"he": 1,
			"the": 2,
			"stood": 1,
			"in": 2
		},
		"ear": {
			"his": 1,
			"none": 1,
			"which": 1,
			"of": 6,
			"is": 6,
			"like": 4,
			"why": 1,
			"they": 2,
			"where": 1,
			"for": 1,
			"should": 1,
			"comes": 1,
			"whether": 1,
			"that": 3,
			"what": 2,
			"music": 1,
			"or": 1,
			"a": 4,
			"hath": 1,
			"on": 1,
			"but": 3,
			"turns": 1,
			"be": 1,
			"close": 1,
			"and": 12,
			"i": 3,
			"such": 1,
			"against": 1,
			"while": 1,
			"with": 1,
			"doth": 1,
			"to": 4,
			"may": 1,
			"we": 1,
			"as": 3,
			"life": 1,
			"at": 1,
			"o": 1,
			"the": 3,
			"in": 5
		},
		"book": {
			"itself": 1,
			"ii": 1,
			"alas": 1,
			"of": 9,
			"not": 1,
			"divine": 1,
			"lights": 1,
			"although": 1,
			"where": 1,
			"words": 1,
			"was": 1,
			"that": 1,
			"or": 1,
			"a": 1,
			"on": 1,
			"and": 6,
			"i": 2,
			"too": 1,
			"some": 1,
			"through": 1,
			"to": 2,
			"live": 1,
			"may": 1,
			"he": 1,
			"the": 5,
			"though": 1,
			"first": 1,
			"in": 1
		},
		"midnight": {
			"his": 1,
			"lady": 1,
			"ago": 5,
			"of": 1,
			"hours": 1,
			"brought": 2,
			"by": 2,
			"is": 1,
			"rise": 1,
			"past": 1,
			"hour": 1,
			"or": 1,
			"a": 3,
			"hath": 1,
			"bell": 1,
			"terror": 1,
			"and": 4,
			"i": 1,
			"from": 1,
			"with": 1,
			"clear": 1,
			"throne": 1,
			"still": 1,
			"to": 1,
			"we": 1,
			"there": 2,
			"in": 5,
			"air": 2,
			"sky": 2
		},
		"sharp": {
			"look": 1,
			"his": 1,
			"war": 1,
			"are": 1,
			"of": 3,
			"command": 1,
			"winds": 1,
			"blows": 1,
			"had": 1,
			"a": 2,
			"and": 3,
			"with": 1,
			"as": 3,
			"the": 1,
			"sure": 1,
			"there": 1,
			"air": 1
		},
		"crossed": {
			"men": 1,
			"this": 1,
			"nor": 1,
			"by": 1,
			"few": 1,
			"oer": 2,
			"both": 1,
			"ceased": 1,
			"on": 1,
			"above": 1,
			"and": 1,
			"with": 3,
			"to": 1,
			"the": 4,
			"her": 2,
			"in": 3
		},
		"charity": {
			"itself": 1,
			"his": 1,
			"under": 1,
			"she": 1,
			"is": 1,
			"soon": 1,
			"thy": 1,
			"makes": 1,
			"was": 1,
			"that": 2,
			"what": 1,
			"when": 1,
			"and": 1,
			"do": 2,
			"no": 1,
			"as": 1,
			"at": 1,
			"o": 1,
			"the": 2,
			"there": 1,
			"in": 1
		},
		"law": {
			"justice": 2,
			"are": 1,
			"who": 1,
			"which": 1,
			"of": 3,
			"once": 1,
			"sez": 1,
			"joy": 1,
			"it": 2,
			"by": 1,
			"is": 1,
			"unto": 1,
			"good": 1,
			"pleased": 1,
			"they": 1,
			"for": 2,
			"john": 2,
			"strive": 1,
			"can": 1,
			"that": 4,
			"what": 2,
			"or": 1,
			"awake": 1,
			"so": 1,
			"lord": 1,
			"but": 2,
			"when": 1,
			"and": 10,
			"i": 1,
			"one": 1,
			"between": 1,
			"honor": 1,
			"no": 1,
			"now": 1,
			"all": 1,
			"then": 1,
			"doth": 1,
			"shall": 1,
			"to": 4,
			"freedoms": 1,
			"hail": 1,
			"we": 1,
			"at": 1,
			"the": 1,
			"though": 1,
			"in": 3
		},
		"see": {
			"come": 1,
			"look": 1,
			"saviour": 1,
			"im": 1,
			"christ": 1,
			"his": 8,
			"him": 15,
			"play": 1,
			"lady": 1,
			"white": 1,
			"none": 1,
			"are": 1,
			"right": 1,
			"made": 1,
			"who": 2,
			"which": 1,
			"ones": 1,
			"of": 4,
			"hymn": 1,
			"pass": 1,
			"not": 5,
			"proud": 1,
			"it": 11,
			"over": 1,
			"by": 3,
			"father": 1,
			"nations": 1,
			"soon": 1,
			"forever": 1,
			"they": 2,
			"wide": 1,
			"you": 3,
			"nature": 1,
			"its": 3,
			"than": 1,
			"where": 5,
			"for": 2,
			"read": 1,
			"heaven": 1,
			"stones": 1,
			"theres": 1,
			"boys": 1,
			"my": 13,
			"again": 1,
			"enough": 1,
			"thy": 11,
			"teach": 1,
			"ere": 2,
			"whom": 1,
			"better": 1,
			"most": 1,
			"sir": 1,
			"william": 1,
			"face": 1,
			"god": 1,
			"indeed": 1,
			"cause": 1,
			"was": 1,
			"that": 15,
			"if": 3,
			"jerusalem": 1,
			"what": 10,
			"oh": 3,
			"an": 1,
			"nothing": 1,
			"or": 1,
			"de": 2,
			"winter": 1,
			"their": 5,
			"a": 10,
			"so": 1,
			"them": 10,
			"love": 2,
			"on": 4,
			"saw": 2,
			"but": 9,
			"thee": 18,
			"lifes": 1,
			"and": 11,
			"march": 1,
			"lone": 1,
			"i": 9,
			"thou": 1,
			"less": 1,
			"robin": 1,
			"one": 1,
			"such": 1,
			"how": 15,
			"from": 3,
			"would": 1,
			"these": 1,
			"no": 8,
			"with": 6,
			"around": 1,
			"soft": 1,
			"now": 2,
			"till": 1,
			"all": 3,
			"gods": 2,
			"then": 4,
			"through": 1,
			"clear": 1,
			"behind": 1,
			"our": 4,
			"future": 1,
			"wind": 1,
			"your": 5,
			"yet": 2,
			"to": 4,
			"clouds": 1,
			"we": 4,
			"whose": 1,
			"as": 2,
			"life": 1,
			"he": 4,
			"me": 8,
			"at": 1,
			"below": 2,
			"o": 6,
			"yonder": 4,
			"the": 86,
			"her": 11,
			"there": 4,
			"in": 6
		},
		"means": {
			"of": 4,
			"this": 2,
			"dear": 1,
			"soon": 1,
			"unto": 1,
			"found": 1,
			"you": 1,
			"thy": 1,
			"what": 1,
			"almost": 1,
			"but": 1,
			"and": 1,
			"i": 1,
			"ill": 1,
			"well": 1,
			"to": 8,
			"use": 1,
			"get": 1,
			"may": 1,
			"the": 3
		},
		"blood": {
			"more": 1,
			"christ": 1,
			"his": 1,
			"war": 1,
			"who": 1,
			"which": 2,
			"of": 17,
			"once": 1,
			"silence": 1,
			"nor": 2,
			"does": 1,
			"sez": 1,
			"not": 1,
			"it": 1,
			"alone": 1,
			"is": 9,
			"like": 1,
			"away": 1,
			"about": 1,
			"they": 2,
			"stern": 1,
			"where": 1,
			"welcome": 1,
			"for": 2,
			"drops": 1,
			"should": 1,
			"came": 1,
			"thy": 1,
			"did": 1,
			"was": 3,
			"runs": 1,
			"that": 7,
			"bear": 1,
			"make": 2,
			"often": 1,
			"must": 1,
			"what": 1,
			"or": 2,
			"have": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"upon": 1,
			"on": 6,
			"fast": 1,
			"old": 1,
			"death": 1,
			"ye": 1,
			"out": 1,
			"and": 22,
			"i": 2,
			"thou": 2,
			"might": 1,
			"such": 1,
			"from": 3,
			"would": 1,
			"while": 1,
			"no": 1,
			"with": 3,
			"some": 1,
			"all": 2,
			"has": 3,
			"our": 2,
			"shall": 2,
			"before": 1,
			"still": 1,
			"yet": 1,
			"to": 2,
			"springs": 1,
			"th": 1,
			"hail": 1,
			"we": 1,
			"glad": 1,
			"whose": 1,
			"as": 3,
			"fair": 1,
			"at": 1,
			"o": 1,
			"the": 5,
			"though": 1,
			"her": 1,
			"in": 3
		},
		"valley": {
			"shades": 1,
			"of": 3,
			"sod": 1,
			"mother": 1,
			"where": 1,
			"for": 1,
			"came": 2,
			"whom": 1,
			"was": 1,
			"so": 1,
			"flies": 1,
			"and": 2,
			"down": 1,
			"with": 2,
			"still": 1,
			"below": 1,
			"in": 2
		},
		"leap": {
			"his": 1,
			"see": 1,
			"over": 1,
			"is": 1,
			"like": 1,
			"for": 1,
			"on": 2,
			"when": 1,
			"and": 1,
			"down": 1,
			"from": 1,
			"would": 1,
			"then": 1,
			"through": 1,
			"our": 1,
			"to": 2,
			"the": 3,
			"in": 1
		},
		"narrow": {
			"space": 1,
			"him": 1,
			"of": 2,
			"act": 1,
			"alone": 1,
			"twixt": 2,
			"forever": 1,
			"sea": 2,
			"where": 1,
			"my": 1,
			"walls": 1,
			"that": 1,
			"field": 1,
			"bed": 1,
			"and": 4,
			"each": 1,
			"with": 2,
			"way": 2,
			"human": 1,
			"lie": 1,
			"as": 1,
			"straight": 1,
			"the": 2,
			"house": 1,
			"seas": 1,
			"in": 2
		},
		"hero": {
			"forget": 1,
			"fell": 1,
			"of": 1,
			"is": 2,
			"few": 1,
			"gray": 1,
			"comes": 1,
			"born": 1,
			"were": 1,
			"shell": 1,
			"or": 1,
			"but": 1,
			"when": 1,
			"and": 2,
			"from": 1,
			"bound": 1,
			"has": 1,
			"we": 1,
			"as": 1,
			"lies": 1,
			"o": 1,
			"the": 2,
			"stood": 1,
			"in": 1
		},
		"precious": {
			"more": 1,
			"blood": 2,
			"which": 1,
			"worth": 1,
			"of": 2,
			"load": 1,
			"care": 1,
			"than": 2,
			"my": 1,
			"stone": 2,
			"tears": 1,
			"and": 2,
			"brow": 1,
			"gifts": 1,
			"to": 3,
			"hill": 1,
			"into": 1,
			"the": 1,
			"treasure": 2,
			"in": 1,
			"thoughts": 1
		},
		"wi": {
			"very": 1,
			"this": 2,
			"care": 1,
			"you": 1,
			"its": 1,
			"een": 1,
			"breath": 1,
			"my": 2,
			"shame": 1,
			"that": 1,
			"tears": 3,
			"their": 2,
			"a": 8,
			"on": 1,
			"thee": 1,
			"roses": 1,
			"heart": 1,
			"and": 2,
			"hearts": 1,
			"will": 1,
			"has": 1,
			"our": 1,
			"wind": 1,
			"store": 1,
			"as": 2,
			"me": 3,
			"o": 1,
			"the": 5,
			"flowers": 1
		},
		"begin": {
			"of": 1,
			"breathe": 1,
			"my": 1,
			"that": 1,
			"so": 2,
			"and": 6,
			"i": 1,
			"with": 1,
			"then": 1,
			"our": 1,
			"yet": 1,
			"to": 6,
			"may": 1,
			"the": 2
		},
		"temple": {
			"of": 6,
			"nor": 1,
			"dear": 1,
			"is": 1,
			"shines": 1,
			"door": 1,
			"was": 1,
			"if": 2,
			"given": 1,
			"never": 1,
			"bend": 1,
			"and": 2,
			"one": 1,
			"meet": 1,
			"begun": 1,
			"to": 1
		},
		"cheek": {
			"save": 1,
			"cheek": 1,
			"are": 1,
			"of": 3,
			"amid": 1,
			"she": 1,
			"put": 1,
			"it": 1,
			"by": 1,
			"is": 4,
			"like": 1,
			"where": 1,
			"for": 1,
			"was": 4,
			"what": 1,
			"a": 5,
			"so": 2,
			"love": 1,
			"on": 1,
			"maryland": 1,
			"but": 1,
			"ye": 1,
			"and": 13,
			"i": 1,
			"how": 1,
			"no": 1,
			"will": 1,
			"all": 2,
			"has": 1,
			"still": 1,
			"to": 2,
			"he": 1,
			"at": 1,
			"grow": 1,
			"the": 2,
			"change": 1,
			"young": 1,
			"there": 1,
			"in": 1,
			"grows": 1
		},
		"play": {
			"us": 1,
			"hear": 1,
			"his": 2,
			"are": 1,
			"amidst": 1,
			"of": 2,
			"this": 1,
			"it": 1,
			"is": 1,
			"rise": 1,
			"good": 1,
			"pleased": 1,
			"where": 1,
			"for": 2,
			"thy": 1,
			"oer": 1,
			"was": 2,
			"that": 1,
			"half": 1,
			"an": 1,
			"lest": 1,
			"have": 1,
			"a": 2,
			"upon": 2,
			"on": 2,
			"but": 1,
			"ye": 1,
			"when": 1,
			"and": 5,
			"i": 1,
			"thou": 1,
			"one": 1,
			"such": 1,
			"with": 2,
			"some": 1,
			"then": 1,
			"to": 2,
			"know": 1,
			"as": 4,
			"he": 2,
			"at": 3,
			"o": 2,
			"the": 9
		},
		"lady": {
			"went": 1,
			"of": 12,
			"she": 1,
			"mine": 1,
			"not": 1,
			"like": 1,
			"mother": 3,
			"where": 1,
			"should": 1,
			"my": 1,
			"ere": 1,
			"a": 1,
			"upon": 1,
			"on": 2,
			"lives": 1,
			"vere": 8,
			"close": 1,
			"and": 1,
			"i": 2,
			"home": 1,
			"hearts": 1,
			"with": 2,
			"to": 4,
			"may": 1,
			"we": 1,
			"fair": 1,
			"he": 2,
			"o": 3,
			"the": 2,
			"bent": 1,
			"her": 1,
			"dead": 2,
			"in": 3
		},
		"bare": {
			"thine": 1,
			"his": 1,
			"who": 2,
			"of": 3,
			"away": 1,
			"about": 1,
			"where": 1,
			"bosom": 1,
			"hushed": 1,
			"god": 1,
			"walls": 1,
			"them": 1,
			"waters": 1,
			"head": 1,
			"and": 6,
			"as": 2,
			"the": 5,
			"fight": 1
		},
		"kiss": {
			"his": 1,
			"him": 1,
			"which": 1,
			"of": 4,
			"off": 1,
			"fresh": 1,
			"it": 1,
			"you": 2,
			"its": 1,
			"my": 1,
			"thy": 3,
			"therefore": 1,
			"cease": 1,
			"william": 1,
			"can": 1,
			"was": 3,
			"that": 2,
			"what": 1,
			"think": 1,
			"a": 3,
			"them": 1,
			"hath": 1,
			"love": 1,
			"on": 2,
			"and": 4,
			"ask": 1,
			"each": 1,
			"from": 2,
			"no": 1,
			"will": 1,
			"our": 1,
			"before": 1,
			"to": 2,
			"we": 1,
			"me": 4,
			"at": 1,
			"the": 11,
			"her": 5
		},
		"women": {
			"are": 1,
			"who": 3,
			"of": 1,
			"forth": 1,
			"two": 1,
			"it": 1,
			"by": 1,
			"guide": 1,
			"for": 1,
			"standing": 1,
			"wept": 1,
			"false": 1,
			"closed": 1,
			"show": 1,
			"bear": 1,
			"have": 1,
			"trod": 1,
			"a": 1,
			"never": 1,
			"love": 1,
			"but": 1,
			"when": 1,
			"and": 1,
			"then": 1,
			"ten": 1,
			"feel": 1,
			"only": 1,
			"to": 1,
			"know": 1,
			"at": 1,
			"the": 1,
			"there": 1,
			"in": 3
		},
		"faithful": {
			"loves": 1,
			"word": 1,
			"of": 2,
			"up": 1,
			"angel": 1,
			"it": 1,
			"child": 1,
			"is": 1,
			"found": 1,
			"prayer": 1,
			"guide": 1,
			"friends": 2,
			"sing": 1,
			"watch": 1,
			"friend": 2,
			"that": 1,
			"pure": 1,
			"so": 1,
			"love": 2,
			"onward": 1,
			"t": 1,
			"and": 2,
			"hearts": 1,
			"works": 1,
			"shall": 1,
			"only": 1,
			"to": 2,
			"art": 1,
			"bold": 1,
			"english": 1,
			"done": 1,
			"in": 1
		},
		"breathing": {
			"since": 1,
			"laws": 1,
			"book": 1,
			"of": 2,
			"after": 1,
			"good": 1,
			"lovers": 1,
			"a": 1,
			"so": 1,
			"love": 1,
			"sigh": 1,
			"down": 1,
			"might": 1,
			"from": 2,
			"with": 1,
			"soft": 1,
			"through": 1,
			"spring": 1,
			"in": 2
		},
		"horn": {
			"of": 2,
			"hung": 2,
			"she": 1,
			"silence": 1,
			"nor": 1,
			"they": 2,
			"for": 1,
			"earl": 1,
			"william": 1,
			"oer": 1,
			"oh": 1,
			"have": 1,
			"on": 1,
			"but": 2,
			"thee": 1,
			"and": 6,
			"no": 1,
			"our": 1,
			"to": 1,
			"at": 2,
			"led": 1,
			"the": 2,
			"tis": 1,
			"in": 1
		},
		"thousand": {
			"sweet": 1,
			"more": 6,
			"died": 1,
			"birds": 1,
			"him": 1,
			"thousand": 1,
			"voices": 3,
			"ages": 1,
			"none": 1,
			"are": 2,
			"fell": 1,
			"under": 2,
			"men": 6,
			"which": 2,
			"of": 2,
			"worlds": 2,
			"once": 1,
			"up": 1,
			"lines": 1,
			"far": 1,
			"wars": 1,
			"ships": 1,
			"leaves": 1,
			"robert": 1,
			"summers": 1,
			"bloody": 1,
			"should": 2,
			"deaths": 1,
			"times": 7,
			"bells": 1,
			"that": 3,
			"make": 1,
			"brothers": 1,
			"stars": 2,
			"charms": 1,
			"waiting": 1,
			"start": 1,
			"making": 1,
			"horse": 1,
			"soldiers": 1,
			"their": 1,
			"pains": 1,
			"but": 1,
			"foes": 1,
			"ye": 1,
			"lives": 1,
			"years": 15,
			"and": 4,
			"rays": 1,
			"days": 1,
			"i": 1,
			"greet": 1,
			"here": 1,
			"shadows": 1,
			"hearts": 1,
			"from": 2,
			"nigh": 1,
			"meet": 1,
			"strong": 2,
			"fires": 1,
			"slain": 1,
			"angels": 1,
			"spring": 1,
			"storms": 1,
			"shall": 2,
			"before": 1,
			"still": 1,
			"to": 2,
			"springs": 1,
			"keen": 1,
			"little": 1,
			"glorious": 1,
			"bold": 1,
			"english": 1,
			"he": 1,
			"arms": 1,
			"gleam": 1,
			"at": 1,
			"the": 2,
			"seas": 1,
			"in": 3
		},
		"voices": {
			"sound": 2,
			"are": 4,
			"hollow": 1,
			"silent": 2,
			"of": 7,
			"keep": 1,
			"not": 1,
			"far": 1,
			"heard": 1,
			"stir": 1,
			"for": 1,
			"cry": 1,
			"forgot": 1,
			"hushed": 1,
			"rising": 1,
			"god": 1,
			"their": 1,
			"gone": 1,
			"and": 2,
			"from": 1,
			"no": 1,
			"bid": 1,
			"lose": 1,
			"clear": 1,
			"shall": 1,
			"still": 1,
			"to": 2,
			"answer": 1,
			"whisper": 1,
			"we": 1,
			"the": 1,
			"in": 2
		},
		"tennyson": {
			"pen": 1,
			"made": 1,
			"up": 1,
			"praise": 1,
			"by": 1,
			"song": 1,
			"for": 1,
			"my": 1,
			"god": 2,
			"were": 1,
			"on": 1,
			"out": 1,
			"and": 1,
			"down": 1,
			"too": 1,
			"how": 1,
			"all": 1,
			"has": 1,
			"day": 1,
			"to": 1,
			"life": 1,
			"he": 1,
			"o": 1,
			"browning": 1,
			"the": 4,
			"flowers": 1
		},
		"thing": {
			"save": 1,
			"are": 1,
			"who": 1,
			"men": 1,
			"which": 1,
			"of": 4,
			"once": 1,
			"beyond": 1,
			"nor": 1,
			"constant": 1,
			"it": 5,
			"is": 6,
			"they": 2,
			"you": 2,
			"new": 1,
			"weakness": 1,
			"than": 1,
			"for": 1,
			"can": 1,
			"was": 2,
			"that": 6,
			"willie": 1,
			"a": 4,
			"so": 1,
			"upon": 1,
			"on": 1,
			"mountain": 1,
			"but": 1,
			"death": 1,
			"ye": 1,
			"when": 1,
			"and": 3,
			"bliss": 1,
			"i": 4,
			"thou": 1,
			"too": 1,
			"drink": 1,
			"ill": 1,
			"beneath": 2,
			"with": 2,
			"now": 1,
			"our": 1,
			"only": 2,
			"to": 8,
			"apart": 1,
			"we": 2,
			"whose": 1,
			"as": 5,
			"said": 1,
			"he": 2,
			"o": 1,
			"the": 2,
			"in": 10
		},
		"deeper": {
			"woe": 1,
			"are": 1,
			"of": 1,
			"souls": 1,
			"grew": 1,
			"mouth": 1,
			"than": 2,
			"for": 1,
			"rest": 1,
			"tone": 1,
			"wear": 1,
			"on": 1,
			"heart": 1,
			"sorrow": 1,
			"and": 1,
			"i": 1,
			"feeling": 1,
			"roll": 1,
			"grief": 1,
			"to": 1,
			"into": 1,
			"as": 1,
			"slumber": 1,
			"lies": 1,
			"in": 2
		},
		"fit": {
			"his": 1,
			"of": 2,
			"find": 1,
			"for": 6,
			"garden": 1,
			"that": 1,
			"so": 1,
			"love": 1,
			"to": 6,
			"bold": 1,
			"as": 1,
			"in": 1
		},
		"creed": {
			"of": 2,
			"she": 1,
			"morning": 1,
			"bloody": 1,
			"a": 1,
			"but": 1,
			"be": 1,
			"i": 4,
			"from": 1,
			"would": 1,
			"with": 1,
			"our": 1,
			"yet": 1,
			"to": 2,
			"into": 1,
			"religion": 1,
			"he": 1,
			"the": 1
		},
		"ii": {
			"come": 1,
			"england": 1,
			"parting": 1,
			"of": 1,
			"three": 2,
			"over": 1,
			"prayer": 1,
			"sc": 3,
			"freedom": 1,
			"reach": 1,
			"god": 1,
			"and": 4,
			"thou": 1,
			"here": 1,
			"our": 1,
			"loud": 1,
			"fair": 1,
			"o": 1,
			"the": 4
		},
		"passions": {
			"come": 1,
			"low": 1,
			"are": 1,
			"under": 1,
			"of": 1,
			"find": 1,
			"rise": 1,
			"birth": 1,
			"held": 1,
			"that": 1,
			"be": 1,
			"and": 3,
			"fly": 1,
			"down": 1,
			"no": 1,
			"with": 1,
			"then": 1,
			"yet": 1,
			"to": 1
		},
		"s": {
			"sez": 14,
			"power": 2,
			"broken": 1,
			"nothing": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"and": 2,
			"at": 2,
			"the": 3,
			"her": 1,
			"there": 1
		},
		"ages": {
			"come": 1,
			"blood": 1,
			"of": 4,
			"long": 2,
			"away": 1,
			"they": 3,
			"earths": 1,
			"its": 1,
			"gray": 1,
			"for": 8,
			"past": 5,
			"heaven": 1,
			"thy": 1,
			"sits": 1,
			"sin": 1,
			"that": 1,
			"crowd": 1,
			"on": 1,
			"old": 1,
			"but": 1,
			"and": 1,
			"here": 1,
			"one": 2,
			"such": 1,
			"breast": 1,
			"roll": 1,
			"all": 1,
			"grief": 1,
			"has": 1,
			"neer": 1,
			"shall": 1,
			"whose": 1,
			"as": 1,
			"borne": 1,
			"left": 1,
			"the": 3,
			"in": 4
		},
		"learn": {
			"more": 1,
			"who": 1,
			"of": 1,
			"nor": 1,
			"not": 1,
			"it": 1,
			"that": 1,
			"what": 1,
			"their": 1,
			"never": 1,
			"but": 1,
			"and": 2,
			"how": 2,
			"from": 1,
			"all": 1,
			"shine": 1,
			"to": 7,
			"art": 1,
			"there": 1,
			"in": 2
		},
		"white": {
			"come": 1,
			"cloud": 1,
			"his": 2,
			"crest": 1,
			"cheek": 1,
			"white": 1,
			"wonder": 1,
			"are": 1,
			"under": 1,
			"which": 1,
			"of": 3,
			"every": 1,
			"it": 1,
			"long": 1,
			"is": 2,
			"like": 3,
			"pleased": 1,
			"you": 1,
			"thus": 1,
			"than": 1,
			"where": 1,
			"gray": 1,
			"for": 1,
			"blown": 1,
			"bosom": 2,
			"theres": 1,
			"waves": 1,
			"face": 1,
			"were": 1,
			"that": 2,
			"what": 1,
			"moon": 2,
			"stars": 1,
			"or": 2,
			"a": 3,
			"so": 2,
			"green": 1,
			"lay": 1,
			"hath": 1,
			"love": 1,
			"on": 2,
			"when": 1,
			"mans": 1,
			"roses": 1,
			"feet": 2,
			"wings": 3,
			"out": 1,
			"head": 1,
			"and": 24,
			"black": 3,
			"i": 3,
			"snow": 2,
			"down": 1,
			"swell": 1,
			"brow": 1,
			"from": 1,
			"these": 1,
			"solitude": 1,
			"with": 7,
			"hair": 1,
			"then": 1,
			"foe": 1,
			"street": 1,
			"doth": 1,
			"shine": 1,
			"wake": 1,
			"our": 1,
			"throne": 2,
			"before": 1,
			"mark": 1,
			"to": 1,
			"hill": 1,
			"we": 1,
			"as": 7,
			"said": 1,
			"arms": 1,
			"below": 1,
			"o": 1,
			"the": 8,
			"radiant": 1,
			"in": 3
		},
		"glen": {
			"of": 1,
			"by": 1,
			"cross": 1,
			"where": 2,
			"that": 1,
			"what": 1,
			"an": 1,
			"when": 1,
			"and": 5,
			"while": 1,
			"ho": 1,
			"through": 1,
			"our": 1,
			"stand": 1,
			"the": 1,
			"fight": 1
		},
		"rule": {
			"his": 2,
			"rule": 2,
			"who": 1,
			"of": 5,
			"it": 1,
			"by": 1,
			"is": 2,
			"welcome": 1,
			"that": 1,
			"a": 1,
			"them": 1,
			"thee": 1,
			"be": 1,
			"and": 3,
			"from": 1,
			"while": 1,
			"will": 1,
			"our": 1,
			"still": 1,
			"to": 2,
			"the": 7,
			"in": 2
		},
		"science": {
			"his": 1,
			"hast": 1,
			"worth": 1,
			"of": 3,
			"not": 1,
			"moves": 1,
			"just": 1,
			"that": 2,
			"never": 1,
			"and": 3,
			"truth": 1,
			"while": 1,
			"now": 1,
			"only": 1,
			"to": 1,
			"round": 1,
			"the": 2,
			"her": 1
		},
		"none": {
			"else": 1,
			"dare": 1,
			"look": 2,
			"more": 1,
			"since": 1,
			"save": 1,
			"are": 4,
			"who": 2,
			"of": 6,
			"among": 1,
			"nor": 2,
			"it": 1,
			"ever": 2,
			"heard": 1,
			"without": 2,
			"than": 1,
			"for": 2,
			"lost": 1,
			"should": 1,
			"my": 1,
			"whom": 1,
			"can": 14,
			"stroke": 1,
			"was": 3,
			"if": 1,
			"go": 1,
			"had": 1,
			"oh": 1,
			"or": 1,
			"think": 1,
			"have": 1,
			"so": 2,
			"lay": 1,
			"on": 1,
			"but": 14,
			"knows": 1,
			"be": 1,
			"say": 1,
			"and": 1,
			"i": 1,
			"one": 1,
			"other": 3,
			"from": 2,
			"would": 3,
			"ill": 1,
			"with": 2,
			"now": 1,
			"will": 1,
			"could": 2,
			"shall": 1,
			"to": 10,
			"he": 1,
			"o": 2,
			"the": 4,
			"tis": 1,
			"there": 1
		},
		"shades": {
			"his": 1,
			"see": 1,
			"fit": 1,
			"of": 7,
			"that": 1,
			"must": 1,
			"what": 1,
			"ye": 2,
			"and": 2,
			"from": 1,
			"will": 1,
			"peaceful": 1,
			"before": 1,
			"the": 3
		},
		"hast": {
			"come": 1,
			"sent": 1,
			"won": 2,
			"died": 2,
			"within": 1,
			"made": 4,
			"seen": 2,
			"which": 1,
			"joy": 1,
			"not": 4,
			"put": 1,
			"it": 1,
			"brought": 1,
			"is": 1,
			"ever": 1,
			"laid": 1,
			"for": 1,
			"lost": 2,
			"bowed": 1,
			"my": 1,
			"spent": 1,
			"thy": 3,
			"power": 1,
			"that": 1,
			"daily": 1,
			"both": 1,
			"had": 2,
			"trod": 1,
			"a": 3,
			"given": 2,
			"them": 1,
			"never": 1,
			"but": 1,
			"death": 1,
			"gone": 1,
			"and": 2,
			"thou": 31,
			"here": 2,
			"fought": 2,
			"from": 1,
			"sought": 1,
			"beneath": 1,
			"rare": 1,
			"no": 5,
			"bound": 1,
			"called": 1,
			"with": 1,
			"set": 2,
			"all": 3,
			"our": 1,
			"loved": 1,
			"only": 1,
			"to": 3,
			"done": 3,
			"said": 2,
			"me": 3,
			"left": 1,
			"the": 5,
			"been": 4,
			"in": 2
		},
		"woe": {
			"his": 2,
			"him": 1,
			"woe": 3,
			"once": 1,
			"she": 1,
			"shakespeare": 1,
			"anonymous": 1,
			"three": 1,
			"by": 1,
			"land": 1,
			"is": 2,
			"they": 1,
			"than": 1,
			"those": 1,
			"where": 1,
			"for": 3,
			"thy": 1,
			"god": 1,
			"was": 1,
			"that": 4,
			"if": 2,
			"gives": 1,
			"what": 1,
			"an": 1,
			"or": 2,
			"a": 1,
			"lord": 1,
			"love": 1,
			"but": 2,
			"deed": 1,
			"burst": 1,
			"and": 20,
			"i": 2,
			"thou": 1,
			"down": 1,
			"each": 1,
			"from": 1,
			"no": 1,
			"with": 5,
			"give": 1,
			"till": 2,
			"then": 1,
			"through": 1,
			"doth": 1,
			"shine": 1,
			"before": 1,
			"to": 10,
			"lie": 1,
			"know": 1,
			"ah": 1,
			"we": 2,
			"glad": 1,
			"as": 2,
			"at": 1,
			"o": 1,
			"greek": 1,
			"the": 6,
			"though": 1,
			"there": 2,
			"in": 2
		},
		"silver": {
			"bow": 1,
			"light": 1,
			"mountains": 1,
			"crest": 1,
			"horn": 4,
			"voices": 1,
			"star": 1,
			"tide": 1,
			"place": 1,
			"sands": 1,
			"lo": 1,
			"its": 1,
			"sea": 1,
			"yea": 1,
			"drops": 1,
			"sleep": 1,
			"tone": 2,
			"hope": 1,
			"streets": 1,
			"face": 1,
			"rain": 1,
			"moon": 1,
			"stars": 1,
			"leave": 1,
			"on": 3,
			"bell": 1,
			"wings": 1,
			"head": 1,
			"and": 4,
			"move": 1,
			"snow": 1,
			"here": 1,
			"with": 1,
			"virtue": 1,
			"hair": 3,
			"will": 1,
			"street": 1,
			"course": 1,
			"clouds": 1,
			"the": 2,
			"seas": 1,
			"in": 2
		},
		"purple": {
			"dying": 1,
			"light": 2,
			"blood": 1,
			"which": 1,
			"mist": 1,
			"of": 3,
			"shows": 1,
			"pride": 1,
			"leaves": 1,
			"crown": 1,
			"twilight": 1,
			"morn": 1,
			"were": 1,
			"or": 1,
			"brings": 1,
			"on": 1,
			"shroud": 1,
			"feet": 1,
			"and": 4,
			"bloom": 1,
			"west": 1,
			"i": 1,
			"rush": 1,
			"from": 1,
			"with": 1,
			"now": 1,
			"all": 1,
			"thought": 1,
			"spread": 1,
			"as": 2,
			"east": 1,
			"the": 3,
			"seas": 1
		},
		"surely": {
			"come": 1,
			"died": 1,
			"die": 1,
			"his": 1,
			"cast": 1,
			"yield": 1,
			"it": 2,
			"by": 1,
			"make": 1,
			"so": 1,
			"on": 1,
			"be": 1,
			"and": 1,
			"knew": 1,
			"thou": 1,
			"no": 1,
			"some": 1,
			"thought": 1,
			"through": 1,
			"know": 1,
			"may": 1,
			"we": 1,
			"the": 3,
			"though": 1
		},
		"tell": {
			"us": 11,
			"his": 2,
			"him": 5,
			"who": 2,
			"of": 8,
			"once": 1,
			"good": 1,
			"about": 1,
			"you": 10,
			"where": 3,
			"my": 5,
			"john": 1,
			"thy": 4,
			"that": 1,
			"if": 2,
			"what": 4,
			"oh": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"them": 1,
			"thee": 7,
			"when": 3,
			"and": 4,
			"truth": 1,
			"i": 2,
			"thou": 1,
			"such": 1,
			"how": 4,
			"no": 1,
			"some": 1,
			"then": 1,
			"your": 4,
			"to": 5,
			"round": 1,
			"yon": 1,
			"as": 1,
			"said": 1,
			"he": 2,
			"me": 33,
			"blessed": 1,
			"the": 14,
			"her": 2,
			"there": 1,
			"in": 1
		},
		"war": {
			"look": 1,
			"within": 1,
			"his": 3,
			"war": 1,
			"dance": 1,
			"seemed": 1,
			"are": 1,
			"which": 1,
			"of": 5,
			"this": 1,
			"blossoms": 1,
			"by": 1,
			"try": 1,
			"alone": 1,
			"is": 6,
			"hurrah": 1,
			"they": 1,
			"without": 1,
			"song": 1,
			"blast": 1,
			"bowed": 1,
			"take": 1,
			"my": 4,
			"battle": 1,
			"pretty": 1,
			"blows": 1,
			"along": 1,
			"was": 1,
			"that": 3,
			"let": 1,
			"says": 1,
			"victory": 1,
			"or": 1,
			"a": 2,
			"upon": 2,
			"hath": 1,
			"saw": 1,
			"but": 2,
			"death": 1,
			"onward": 1,
			"and": 19,
			"i": 1,
			"thou": 1,
			"might": 1,
			"such": 1,
			"against": 1,
			"how": 1,
			"from": 4,
			"ill": 1,
			"no": 1,
			"with": 4,
			"around": 1,
			"all": 1,
			"gods": 1,
			"ho": 1,
			"through": 1,
			"george": 1,
			"our": 1,
			"needs": 1,
			"shall": 1,
			"to": 5,
			"clouds": 1,
			"we": 2,
			"as": 2,
			"array": 1,
			"done": 1,
			"he": 1,
			"me": 1,
			"o": 1,
			"the": 5,
			"in": 1
		},
		"wail": {
			"sweet": 1,
			"come": 1,
			"ring": 1,
			"of": 8,
			"is": 1,
			"its": 1,
			"my": 1,
			"their": 1,
			"above": 1,
			"and": 1,
			"from": 1,
			"through": 1,
			"as": 2,
			"o": 1,
			"in": 1
		},
		"weary": {
			"lot": 4,
			"pen": 1,
			"woe": 1,
			"weary": 1,
			"are": 1,
			"men": 2,
			"of": 7,
			"this": 1,
			"she": 1,
			"sight": 1,
			"grown": 1,
			"wheel": 1,
			"race": 3,
			"limbs": 1,
			"not": 1,
			"hours": 4,
			"it": 1,
			"far": 2,
			"load": 1,
			"eyes": 2,
			"found": 1,
			"children": 1,
			"for": 1,
			"hand": 2,
			"my": 1,
			"soul": 2,
			"that": 2,
			"man": 1,
			"waiting": 1,
			"ride": 1,
			"a": 1,
			"spirit": 1,
			"wing": 1,
			"poor": 1,
			"years": 2,
			"task": 1,
			"line": 1,
			"say": 1,
			"and": 7,
			"march": 2,
			"year": 1,
			"days": 1,
			"i": 2,
			"thou": 1,
			"haste": 1,
			"mortal": 1,
			"work": 2,
			"hearts": 4,
			"drink": 1,
			"with": 4,
			"singing": 1,
			"road": 3,
			"ways": 1,
			"behind": 1,
			"day": 4,
			"sense": 1,
			"neer": 1,
			"night": 3,
			"yet": 1,
			"way": 5,
			"to": 2,
			"round": 1,
			"art": 2,
			"strife": 2,
			"whose": 1,
			"as": 1,
			"life": 2,
			"o": 2,
			"the": 4,
			"fight": 2,
			"world": 2,
			"tread": 1,
			"in": 1
		},
		"wonder": {
			"his": 1,
			"of": 5,
			"beheld": 1,
			"not": 1,
			"far": 1,
			"is": 2,
			"why": 2,
			"that": 4,
			"if": 2,
			"when": 1,
			"and": 2,
			"how": 2,
			"around": 1,
			"then": 1,
			"much": 1,
			"still": 1,
			"yet": 1,
			"mid": 1,
			"vast": 1,
			"the": 2,
			"in": 1
		},
		"dance": {
			"see": 1,
			"of": 2,
			"among": 1,
			"by": 1,
			"soon": 1,
			"about": 1,
			"thus": 1,
			"thy": 1,
			"let": 1,
			"upon": 1,
			"on": 1,
			"t": 1,
			"and": 7,
			"i": 1,
			"how": 1,
			"beneath": 1,
			"while": 1,
			"no": 1,
			"with": 3,
			"through": 1,
			"to": 1,
			"we": 1,
			"as": 2,
			"the": 2
		},
		"seemed": {
			"itself": 1,
			"his": 1,
			"silent": 1,
			"of": 3,
			"two": 1,
			"not": 1,
			"it": 2,
			"long": 1,
			"like": 2,
			"for": 1,
			"my": 2,
			"full": 1,
			"their": 1,
			"a": 3,
			"so": 1,
			"true": 2,
			"on": 1,
			"gone": 1,
			"and": 2,
			"too": 1,
			"then": 1,
			"to": 30,
			"as": 3,
			"the": 5,
			"scarce": 1,
			"oft": 1,
			"in": 3
		},
		"are": {
			"sweet": 3,
			"books": 1,
			"blue": 1,
			"come": 3,
			"low": 2,
			"caught": 3,
			"fled": 2,
			"foolish": 1,
			"breaking": 3,
			"dying": 8,
			"woes": 1,
			"us": 1,
			"more": 5,
			"sent": 2,
			"taught": 1,
			"wrought": 1,
			"won": 1,
			"thine": 7,
			"ours": 5,
			"within": 2,
			"dust": 2,
			"going": 2,
			"worn": 1,
			"free": 6,
			"light": 2,
			"earth": 1,
			"touched": 1,
			"his": 6,
			"save": 1,
			"fond": 1,
			"crossed": 3,
			"bare": 1,
			"fit": 1,
			"none": 2,
			"surely": 1,
			"weary": 2,
			"seemed": 1,
			"are": 2,
			"right": 2,
			"warm": 2,
			"made": 6,
			"very": 1,
			"who": 2,
			"seen": 7,
			"men": 5,
			"which": 3,
			"deeds": 1,
			"worth": 1,
			"of": 18,
			"cast": 3,
			"high": 2,
			"souls": 1,
			"alike": 1,
			"hills": 1,
			"up": 2,
			"triumph": 1,
			"beyond": 1,
			"gold": 1,
			"three": 2,
			"morning": 1,
			"heavy": 2,
			"grown": 2,
			"forth": 1,
			"dear": 8,
			"two": 5,
			"fresh": 2,
			"thick": 1,
			"sands": 3,
			"slaves": 1,
			"mine": 6,
			"not": 39,
			"rapture": 1,
			"dry": 1,
			"it": 1,
			"over": 5,
			"eager": 1,
			"neither": 1,
			"far": 2,
			"spirits": 1,
			"by": 17,
			"long": 1,
			"cold": 2,
			"is": 2,
			"few": 2,
			"unto": 1,
			"like": 5,
			"away": 3,
			"hoary": 2,
			"found": 3,
			"idle": 1,
			"why": 1,
			"sung": 3,
			"good": 2,
			"ever": 5,
			"together": 3,
			"they": 24,
			"laughing": 1,
			"funeral": 1,
			"wide": 1,
			"you": 6,
			"mother": 1,
			"seven": 1,
			"rosy": 1,
			"heard": 3,
			"without": 2,
			"laid": 4,
			"its": 3,
			"than": 2,
			"slow": 3,
			"swift": 1,
			"song": 1,
			"those": 5,
			"where": 2,
			"brief": 1,
			"rolled": 1,
			"just": 2,
			"for": 7,
			"past": 2,
			"hand": 1,
			"heaven": 1,
			"stones": 1,
			"charge": 1,
			"lost": 4,
			"worse": 1,
			"bowed": 2,
			"my": 5,
			"words": 2,
			"great": 3,
			"tender": 1,
			"deaths": 1,
			"enough": 1,
			"thy": 15,
			"smiles": 2,
			"vain": 2,
			"tonight": 1,
			"whom": 1,
			"better": 1,
			"seek": 1,
			"born": 4,
			"most": 1,
			"torn": 3,
			"rising": 1,
			"fools": 2,
			"stretched": 1,
			"clay": 1,
			"false": 1,
			"battles": 1,
			"whether": 1,
			"shame": 1,
			"waking": 1,
			"oer": 5,
			"crowned": 1,
			"that": 6,
			"if": 1,
			"let": 3,
			"man": 2,
			"poems": 1,
			"both": 1,
			"fain": 3,
			"always": 1,
			"full": 2,
			"busy": 1,
			"often": 3,
			"broken": 3,
			"half": 1,
			"brothers": 2,
			"pure": 1,
			"beautiful": 1,
			"an": 1,
			"music": 3,
			"pleasures": 1,
			"charms": 1,
			"or": 3,
			"waiting": 4,
			"sweeter": 1,
			"bright": 1,
			"late": 1,
			"am": 1,
			"tears": 1,
			"trod": 2,
			"sae": 1,
			"their": 4,
			"a": 14,
			"so": 8,
			"given": 3,
			"sometimes": 1,
			"joys": 1,
			"true": 3,
			"green": 5,
			"upon": 1,
			"things": 2,
			"lord": 1,
			"never": 5,
			"many": 4,
			"almost": 1,
			"cruel": 1,
			"met": 1,
			"love": 1,
			"on": 9,
			"quite": 1,
			"red": 2,
			"fast": 2,
			"deep": 1,
			"old": 5,
			"filled": 3,
			"but": 23,
			"wet": 3,
			"foes": 1,
			"poor": 1,
			"empty": 1,
			"buried": 1,
			"known": 1,
			"ye": 4,
			"moving": 1,
			"when": 5,
			"gone": 17,
			"april": 2,
			"merry": 1,
			"roses": 1,
			"wondrous": 1,
			"out": 8,
			"kind": 2,
			"dumb": 10,
			"tried": 1,
			"naught": 1,
			"close": 2,
			"and": 41,
			"dark": 2,
			"lovely": 2,
			"i": 4,
			"worthy": 1,
			"marching": 3,
			"told": 3,
			"less": 1,
			"broke": 2,
			"dull": 1,
			"here": 5,
			"too": 1,
			"raised": 2,
			"one": 9,
			"shining": 2,
			"shadows": 2,
			"work": 1,
			"looks": 1,
			"each": 2,
			"hearts": 1,
			"from": 11,
			"living": 1,
			"ill": 1,
			"beat": 2,
			"beneath": 1,
			"hidden": 1,
			"these": 8,
			"nigh": 1,
			"no": 16,
			"bound": 2,
			"worst": 1,
			"calm": 1,
			"called": 1,
			"with": 24,
			"singing": 2,
			"soft": 1,
			"now": 5,
			"set": 3,
			"flying": 2,
			"some": 2,
			"till": 1,
			"strong": 2,
			"lying": 3,
			"all": 25,
			"gay": 1,
			"gods": 4,
			"wild": 2,
			"comrades": 1,
			"then": 4,
			"slain": 2,
			"poured": 1,
			"blest": 4,
			"through": 1,
			"ten": 1,
			"songs": 1,
			"well": 4,
			"doth": 1,
			"clear": 2,
			"turned": 2,
			"our": 13,
			"passing": 1,
			"gathered": 1,
			"equal": 1,
			"before": 1,
			"only": 1,
			"still": 9,
			"your": 4,
			"natures": 1,
			"mingled": 1,
			"yet": 7,
			"best": 3,
			"to": 37,
			"loud": 1,
			"into": 3,
			"round": 2,
			"thinking": 1,
			"little": 1,
			"rich": 1,
			"homes": 2,
			"backward": 2,
			"harp": 1,
			"apart": 1,
			"powers": 2,
			"we": 9,
			"glad": 2,
			"loss": 1,
			"spread": 2,
			"whose": 1,
			"falling": 2,
			"as": 8,
			"fair": 3,
			"borne": 1,
			"stand": 1,
			"happy": 1,
			"done": 2,
			"said": 2,
			"he": 3,
			"me": 3,
			"at": 8,
			"coming": 7,
			"left": 1,
			"rings": 1,
			"blessed": 1,
			"common": 1,
			"the": 104,
			"tis": 2,
			"sure": 2,
			"bent": 2,
			"scarce": 3,
			"drawn": 1,
			"her": 4,
			"passed": 1,
			"weak": 3,
			"young": 2,
			"dead": 4,
			"fire": 1,
			"near": 5,
			"first": 2,
			"there": 12,
			"in": 43,
			"flowers": 1
		},
		"saints": {
			"who": 2,
			"of": 2,
			"up": 1,
			"they": 1,
			"whom": 1,
			"immortal": 1,
			"that": 1,
			"jerusalem": 1,
			"have": 2,
			"upon": 1,
			"above": 1,
			"but": 1,
			"and": 2,
			"do": 1,
			"i": 2,
			"with": 1,
			"shall": 1,
			"only": 1,
			"to": 2,
			"answer": 1,
			"we": 1,
			"whose": 1,
			"o": 1,
			"the": 1,
			"in": 6
		},
		"story": {
			"tell": 1,
			"of": 6,
			"behold": 1,
			"not": 1,
			"praise": 1,
			"weep": 1,
			"is": 1,
			"for": 1,
			"short": 1,
			"oer": 1,
			"if": 1,
			"or": 1,
			"their": 1,
			"so": 1,
			"but": 1,
			"when": 2,
			"and": 3,
			"i": 1,
			"told": 1,
			"how": 2,
			"then": 1,
			"mount": 1,
			"we": 1,
			"as": 1,
			"o": 1,
			"the": 2,
			"though": 1,
			"her": 1,
			"in": 3
		},
		"fears": {
			"are": 3,
			"who": 1,
			"of": 2,
			"it": 2,
			"fool": 1,
			"pride": 1,
			"than": 1,
			"brief": 1,
			"for": 2,
			"my": 1,
			"oer": 1,
			"did": 1,
			"that": 1,
			"what": 1,
			"or": 1,
			"a": 2,
			"so": 1,
			"pains": 1,
			"love": 1,
			"but": 1,
			"dreams": 1,
			"be": 1,
			"and": 5,
			"do": 1,
			"thou": 1,
			"how": 2,
			"from": 1,
			"no": 1,
			"with": 1,
			"now": 1,
			"our": 2,
			"shall": 1,
			"your": 1,
			"to": 5,
			"may": 1,
			"we": 1,
			"he": 2,
			"grow": 1,
			"the": 4,
			"in": 1
		},
		"aid": {
			"us": 1,
			"him": 1,
			"who": 1,
			"of": 1,
			"star": 2,
			"she": 1,
			"it": 1,
			"is": 1,
			"they": 1,
			"my": 1,
			"if": 1,
			"or": 1,
			"love": 1,
			"but": 1,
			"from": 1,
			"no": 1,
			"with": 1,
			"to": 3,
			"he": 1,
			"the": 3,
			"in": 1
		},
		"beside": {
			"his": 2,
			"him": 3,
			"s": 1,
			"this": 1,
			"it": 1,
			"where": 1,
			"for": 1,
			"heaven": 1,
			"my": 5,
			"thy": 2,
			"longer": 1,
			"an": 1,
			"or": 1,
			"their": 1,
			"a": 2,
			"smiling": 1,
			"but": 1,
			"and": 2,
			"i": 1,
			"one": 1,
			"no": 1,
			"ears": 1,
			"some": 1,
			"all": 1,
			"being": 1,
			"to": 1,
			"me": 3,
			"sat": 1,
			"the": 23,
			"her": 4,
			"seem": 1
		},
		"humble": {
			"virtues": 1,
			"thing": 1,
			"graves": 1,
			"thyself": 1,
			"spirits": 1,
			"is": 1,
			"prayer": 2,
			"cry": 1,
			"melancholy": 1,
			"birth": 1,
			"that": 1,
			"cares": 1,
			"stone": 1,
			"charms": 2,
			"spirit": 1,
			"and": 3,
			"christian": 1,
			"mind": 1,
			"then": 1,
			"thought": 1,
			"the": 1,
			"first": 1,
			"there": 2,
			"in": 1,
			"shed": 1
		},
		"six": {
			"thousand": 2,
			"times": 3,
			"foot": 2,
			"years": 2,
			"when": 1,
			"brave": 1,
			"and": 1,
			"hundred": 10,
			"to": 1,
			"the": 1
		},
		"alas": {
			"since": 1,
			"his": 1,
			"fond": 1,
			"alas": 1,
			"fell": 1,
			"of": 1,
			"she": 1,
			"dear": 4,
			"not": 1,
			"by": 1,
			"forever": 2,
			"they": 1,
			"you": 1,
			"for": 8,
			"my": 2,
			"can": 1,
			"that": 4,
			"what": 1,
			"or": 1,
			"and": 1,
			"i": 2,
			"thou": 1,
			"too": 3,
			"how": 4,
			"no": 2,
			"all": 1,
			"has": 1,
			"yet": 1,
			"to": 1,
			"we": 1,
			"fair": 1,
			"he": 1,
			"me": 2,
			"the": 4,
			"tis": 1,
			"there": 1,
			"in": 4
		},
		"right": {
			"since": 1,
			"ring": 1,
			"his": 1,
			"ive": 1,
			"which": 1,
			"of": 5,
			"up": 2,
			"sez": 1,
			"hes": 1,
			"praise": 2,
			"it": 2,
			"over": 1,
			"by": 2,
			"wise": 1,
			"is": 5,
			"takes": 1,
			"form": 1,
			"they": 3,
			"those": 1,
			"for": 3,
			"hand": 10,
			"should": 1,
			"theres": 1,
			"john": 1,
			"thy": 1,
			"pray": 1,
			"therefore": 1,
			"faith": 1,
			"were": 2,
			"that": 2,
			"let": 1,
			"arm": 2,
			"man": 1,
			"must": 1,
			"oh": 1,
			"or": 2,
			"a": 2,
			"on": 1,
			"but": 1,
			"when": 1,
			"onward": 6,
			"wondrous": 1,
			"and": 17,
			"order": 1,
			"move": 1,
			"i": 3,
			"here": 1,
			"might": 1,
			"feeling": 1,
			"no": 1,
			"with": 3,
			"now": 3,
			"till": 1,
			"will": 1,
			"then": 1,
			"through": 1,
			"pleasant": 1,
			"has": 1,
			"well": 3,
			"doth": 2,
			"shall": 1,
			"way": 1,
			"to": 6,
			"knee": 1,
			"into": 1,
			"little": 1,
			"we": 1,
			"whose": 1,
			"stand": 1,
			"he": 5,
			"arms": 1,
			"at": 1,
			"iii": 1,
			"the": 6,
			"though": 1,
			"sure": 1,
			"dead": 1
		},
		"back": {
			"more": 1,
			"his": 4,
			"s": 1,
			"she": 2,
			"among": 1,
			"nor": 2,
			"over": 1,
			"is": 1,
			"unto": 4,
			"they": 1,
			"its": 3,
			"for": 2,
			"tomorrow": 1,
			"my": 2,
			"john": 1,
			"again": 13,
			"was": 1,
			"that": 3,
			"both": 1,
			"another": 1,
			"or": 1,
			"danger": 1,
			"fill": 1,
			"their": 3,
			"a": 2,
			"upon": 2,
			"lord": 1,
			"on": 4,
			"maryland": 1,
			"but": 4,
			"when": 1,
			"and": 14,
			"i": 2,
			"looks": 1,
			"how": 1,
			"from": 7,
			"bid": 1,
			"with": 5,
			"will": 1,
			"all": 1,
			"then": 1,
			"ho": 1,
			"could": 1,
			"through": 1,
			"our": 1,
			"before": 1,
			"your": 3,
			"to": 22,
			"we": 1,
			"as": 3,
			"he": 3,
			"at": 7,
			"o": 1,
			"the": 15,
			"her": 1,
			"dead": 1,
			"oft": 1,
			"in": 4
		},
		"warm": {
			"sweet": 1,
			"within": 1,
			"his": 1,
			"ear": 1,
			"cheek": 1,
			"of": 2,
			"it": 1,
			"alone": 1,
			"earths": 1,
			"for": 1,
			"theres": 1,
			"my": 1,
			"words": 1,
			"god": 1,
			"perfume": 1,
			"a": 1,
			"upon": 1,
			"on": 1,
			"but": 1,
			"when": 1,
			"and": 8,
			"sun": 1,
			"sunshine": 1,
			"i": 1,
			"south": 1,
			"work": 1,
			"with": 6,
			"couch": 1,
			"shade": 1,
			"to": 1,
			"we": 1,
			"whose": 1,
			"the": 3,
			"there": 1,
			"in": 2,
			"air": 1
		},
		"made": {
			"sweet": 1,
			"bow": 1,
			"us": 5,
			"more": 2,
			"ready": 1,
			"light": 1,
			"his": 8,
			"stream": 1,
			"him": 9,
			"war": 1,
			"which": 1,
			"of": 11,
			"this": 2,
			"high": 1,
			"up": 1,
			"not": 3,
			"hes": 1,
			"it": 4,
			"by": 6,
			"soon": 1,
			"good": 1,
			"ever": 1,
			"you": 3,
			"nature": 1,
			"pale": 1,
			"new": 2,
			"without": 1,
			"its": 3,
			"song": 1,
			"those": 2,
			"where": 1,
			"looking": 1,
			"richard": 1,
			"for": 10,
			"heaven": 1,
			"my": 3,
			"thy": 1,
			"morn": 1,
			"better": 1,
			"most": 1,
			"sudden": 1,
			"that": 1,
			"man": 2,
			"what": 1,
			"an": 1,
			"even": 1,
			"or": 1,
			"their": 4,
			"a": 15,
			"so": 2,
			"them": 7,
			"love": 1,
			"red": 1,
			"but": 4,
			"known": 1,
			"thee": 3,
			"years": 1,
			"when": 1,
			"head": 1,
			"and": 8,
			"i": 1,
			"thou": 2,
			"haste": 1,
			"one": 4,
			"such": 1,
			"perfect": 1,
			"work": 1,
			"each": 1,
			"how": 1,
			"these": 1,
			"honor": 1,
			"no": 1,
			"with": 4,
			"some": 1,
			"himself": 1,
			"all": 2,
			"desolate": 1,
			"familiar": 1,
			"then": 1,
			"room": 1,
			"well": 1,
			"our": 2,
			"shall": 1,
			"echo": 1,
			"still": 1,
			"way": 5,
			"to": 5,
			"poetry": 1,
			"round": 1,
			"answer": 2,
			"glorious": 1,
			"bold": 1,
			"as": 1,
			"life": 2,
			"he": 2,
			"me": 5,
			"the": 24,
			"her": 9,
			"fire": 1,
			"lowly": 1,
			"in": 6
		},
		"aye": {
			"justice": 1,
			"his": 1,
			"which": 1,
			"she": 1,
			"nor": 1,
			"for": 1,
			"remain": 1,
			"most": 1,
			"jerusalem": 1,
			"an": 1,
			"so": 1,
			"eternal": 1,
			"be": 1,
			"and": 3,
			"broke": 1,
			"from": 1,
			"night": 1,
			"still": 1,
			"to": 3,
			"we": 1,
			"glad": 1,
			"fair": 1,
			"the": 3,
			"in": 1
		},
		"ive": {
			"his": 1,
			"seen": 4,
			"it": 1,
			"is": 1,
			"heard": 2,
			"laid": 1,
			"for": 1,
			"read": 1,
			"my": 2,
			"win": 1,
			"wit": 1,
			"that": 1,
			"often": 1,
			"had": 1,
			"never": 1,
			"watched": 1,
			"told": 3,
			"some": 1,
			"to": 2,
			"wandered": 4,
			"lived": 1,
			"borne": 2,
			"done": 3,
			"me": 1,
			"the": 1,
			"been": 4
		},
		"amidst": {
			"the": 16,
			"bright": 1,
			"in": 1,
			"your": 1,
			"their": 1,
			"that": 2,
			"his": 2,
			"them": 1,
			"a": 1
		},
		"word": {
			"come": 1,
			"more": 1,
			"christ": 1,
			"his": 1,
			"hell": 1,
			"aye": 1,
			"who": 2,
			"which": 1,
			"country": 1,
			"of": 19,
			"nor": 1,
			"act": 1,
			"rose": 1,
			"not": 1,
			"it": 1,
			"by": 2,
			"bring": 1,
			"is": 4,
			"unto": 2,
			"they": 2,
			"for": 1,
			"should": 1,
			"beauty": 1,
			"again": 1,
			"thy": 2,
			"ere": 1,
			"because": 1,
			"whether": 1,
			"did": 1,
			"was": 1,
			"that": 8,
			"had": 1,
			"what": 1,
			"or": 3,
			"a": 3,
			"but": 4,
			"thee": 1,
			"when": 1,
			"and": 11,
			"truth": 1,
			"do": 1,
			"i": 3,
			"too": 1,
			"between": 1,
			"would": 2,
			"no": 1,
			"with": 1,
			"some": 1,
			"till": 1,
			"will": 1,
			"all": 1,
			"could": 1,
			"thomas": 1,
			"well": 1,
			"still": 1,
			"to": 4,
			"we": 2,
			"as": 2,
			"he": 3,
			"me": 1,
			"at": 1,
			"o": 3,
			"the": 5,
			"sure": 1,
			"her": 1,
			"in": 2,
			"seem": 1
		},
		"fell": {
			"his": 1,
			"beside": 1,
			"fell": 1,
			"who": 2,
			"of": 2,
			"off": 1,
			"nor": 2,
			"sick": 1,
			"englands": 1,
			"by": 2,
			"like": 3,
			"away": 1,
			"they": 1,
			"without": 1,
			"where": 1,
			"for": 1,
			"rest": 1,
			"my": 1,
			"deaths": 1,
			"yes": 1,
			"bells": 1,
			"stroke": 1,
			"oer": 1,
			"was": 1,
			"that": 3,
			"man": 1,
			"another": 1,
			"had": 1,
			"a": 3,
			"upon": 2,
			"love": 1,
			"on": 10,
			"above": 1,
			"but": 2,
			"death": 1,
			"when": 1,
			"be": 1,
			"t": 2,
			"glory": 1,
			"out": 2,
			"and": 12,
			"i": 1,
			"down": 3,
			"softly": 1,
			"from": 10,
			"beneath": 1,
			"while": 1,
			"no": 2,
			"with": 2,
			"all": 1,
			"then": 1,
			"thomas": 1,
			"asleep": 4,
			"before": 1,
			"yet": 1,
			"to": 4,
			"into": 2,
			"mid": 1,
			"gently": 1,
			"ah": 1,
			"apart": 1,
			"as": 3,
			"he": 1,
			"at": 4,
			"o": 1,
			"the": 15,
			"drawn": 1,
			"dead": 3,
			"thirst": 1,
			"there": 1,
			"in": 3
		},
		"very": {
			"sweet": 2,
			"earth": 1,
			"thing": 1,
			"word": 1,
			"very": 1,
			"of": 10,
			"up": 1,
			"joy": 1,
			"it": 1,
			"evil": 1,
			"far": 3,
			"long": 1,
			"cold": 1,
			"is": 1,
			"few": 1,
			"good": 2,
			"they": 1,
			"leaves": 1,
			"brief": 1,
			"welcome": 1,
			"heaven": 2,
			"lonely": 1,
			"great": 1,
			"hopes": 1,
			"soul": 2,
			"rough": 1,
			"name": 1,
			"faith": 1,
			"did": 1,
			"lips": 1,
			"man": 1,
			"gladness": 1,
			"stone": 1,
			"stars": 1,
			"a": 1,
			"true": 1,
			"love": 1,
			"memory": 1,
			"but": 1,
			"time": 1,
			"poor": 1,
			"feet": 1,
			"kind": 1,
			"heart": 2,
			"and": 1,
			"dark": 1,
			"presence": 1,
			"one": 1,
			"looks": 1,
			"from": 1,
			"worst": 1,
			"sweetness": 1,
			"large": 1,
			"thought": 1,
			"notes": 1,
			"well": 1,
			"much": 1,
			"storms": 1,
			"day": 1,
			"night": 1,
			"echo": 1,
			"wind": 1,
			"to": 1,
			"flame": 1,
			"thinking": 1,
			"little": 1,
			"fair": 2,
			"life": 1,
			"end": 1,
			"grand": 1,
			"near": 1,
			"first": 1,
			"in": 1,
			"step": 1,
			"air": 1
		},
		"under": {
			"his": 4,
			"him": 1,
			"this": 2,
			"by": 1,
			"heard": 1,
			"those": 1,
			"heaven": 1,
			"my": 2,
			"thy": 1,
			"ground": 6,
			"foot": 5,
			"show": 1,
			"their": 1,
			"a": 6,
			"true": 1,
			"green": 1,
			"many": 1,
			"deep": 1,
			"thee": 1,
			"banners": 1,
			"feet": 1,
			"snow": 1,
			"fiery": 1,
			"our": 1,
			"night": 1,
			"to": 1,
			"heavens": 1,
			"arms": 1,
			"me": 1,
			"the": 71,
			"world": 2,
			"her": 1,
			"trees": 1
		},
		"next": {
			"within": 1,
			"went": 1,
			"fierce": 1,
			"right": 1,
			"of": 1,
			"worlds": 1,
			"morning": 2,
			"news": 1,
			"not": 1,
			"where": 1,
			"my": 1,
			"waking": 1,
			"was": 1,
			"what": 1,
			"a": 1,
			"on": 1,
			"when": 1,
			"sun": 1,
			"year": 2,
			"with": 1,
			"our": 1,
			"day": 4,
			"night": 1,
			"best": 1,
			"to": 5,
			"thinking": 1,
			"we": 3,
			"noon": 1,
			"he": 1,
			"o": 1,
			"the": 1,
			"step": 2
		},
		"who": {
			"come": 5,
			"else": 1,
			"dare": 3,
			"look": 1,
			"us": 1,
			"hear": 1,
			"sent": 1,
			"taught": 3,
			"wrought": 1,
			"ring": 1,
			"died": 13,
			"within": 1,
			"loves": 4,
			"went": 1,
			"touched": 2,
			"die": 1,
			"his": 7,
			"him": 1,
			"see": 1,
			"hast": 5,
			"tell": 1,
			"are": 11,
			"alas": 1,
			"made": 9,
			"fell": 7,
			"who": 1,
			"guard": 1,
			"men": 1,
			"suffer": 1,
			"holds": 2,
			"dies": 2,
			"hide": 1,
			"tired": 1,
			"of": 5,
			"this": 6,
			"high": 1,
			"yield": 1,
			"kept": 1,
			"after": 2,
			"once": 10,
			"up": 2,
			"among": 1,
			"does": 2,
			"darkness": 1,
			"joy": 1,
			"forth": 1,
			"played": 1,
			"goes": 2,
			"part": 1,
			"pass": 2,
			"rose": 2,
			"behold": 1,
			"sings": 1,
			"not": 8,
			"dwell": 1,
			"serve": 1,
			"put": 1,
			"today": 2,
			"every": 1,
			"pressed": 2,
			"it": 1,
			"over": 2,
			"sins": 1,
			"neither": 2,
			"brought": 1,
			"bless": 1,
			"weep": 4,
			"by": 9,
			"bade": 3,
			"alone": 1,
			"long": 2,
			"breaks": 3,
			"is": 15,
			"cross": 1,
			"unto": 1,
			"like": 2,
			"takes": 4,
			"return": 1,
			"found": 3,
			"sung": 1,
			"good": 1,
			"lead": 1,
			"they": 1,
			"shook": 1,
			"moves": 1,
			"thus": 1,
			"heard": 1,
			"its": 2,
			"for": 17,
			"read": 1,
			"lost": 1,
			"cry": 2,
			"should": 1,
			"cannot": 3,
			"speak": 2,
			"fixed": 1,
			"my": 5,
			"bore": 4,
			"came": 1,
			"themselves": 1,
			"thy": 6,
			"teach": 1,
			"comes": 5,
			"least": 1,
			"dearest": 1,
			"seek": 2,
			"born": 1,
			"strive": 2,
			"makes": 1,
			"most": 4,
			"held": 1,
			"sits": 1,
			"along": 3,
			"god": 1,
			"can": 20,
			"noble": 1,
			"were": 5,
			"bears": 2,
			"oer": 4,
			"need": 2,
			"did": 5,
			"was": 10,
			"runs": 1,
			"that": 6,
			"if": 1,
			"cares": 2,
			"man": 1,
			"daily": 1,
			"both": 1,
			"says": 1,
			"always": 1,
			"make": 2,
			"fall": 1,
			"go": 1,
			"spake": 1,
			"reign": 1,
			"trust": 1,
			"rode": 2,
			"had": 13,
			"gives": 6,
			"must": 1,
			"what": 1,
			"wait": 1,
			"hold": 2,
			"nothing": 1,
			"or": 6,
			"think": 1,
			"ran": 1,
			"finds": 1,
			"pause": 1,
			"have": 15,
			"late": 1,
			"am": 1,
			"gave": 12,
			"their": 2,
			"a": 6,
			"so": 3,
			"brings": 2,
			"falls": 1,
			"them": 2,
			"sometimes": 1,
			"sink": 1,
			"never": 11,
			"spirit": 1,
			"hath": 5,
			"leave": 2,
			"met": 2,
			"walk": 1,
			"love": 8,
			"on": 9,
			"saw": 4,
			"break": 1,
			"sees": 4,
			"filled": 1,
			"but": 3,
			"death": 1,
			"knowledge": 1,
			"buried": 1,
			"thee": 1,
			"lives": 5,
			"when": 1,
			"lifes": 1,
			"turns": 1,
			"burst": 2,
			"dreams": 2,
			"felt": 4,
			"knows": 7,
			"merit": 1,
			"having": 1,
			"say": 2,
			"and": 11,
			"truth": 1,
			"do": 2,
			"cries": 1,
			"ask": 1,
			"fly": 1,
			"i": 2,
			"knew": 5,
			"thou": 1,
			"bids": 1,
			"broke": 1,
			"here": 1,
			"too": 1,
			"raised": 1,
			"fought": 7,
			"one": 2,
			"between": 1,
			"judge": 1,
			"rush": 1,
			"stands": 1,
			"looks": 3,
			"from": 7,
			"sought": 1,
			"would": 28,
			"living": 2,
			"reason": 1,
			"while": 1,
			"breast": 1,
			"no": 4,
			"took": 1,
			"called": 3,
			"with": 16,
			"now": 6,
			"set": 1,
			"give": 1,
			"will": 6,
			"himself": 2,
			"wore": 2,
			"all": 6,
			"chief": 1,
			"then": 3,
			"blest": 1,
			"thought": 1,
			"could": 6,
			"through": 2,
			"has": 10,
			"toil": 1,
			"doth": 1,
			"guess": 1,
			"dost": 4,
			"much": 1,
			"wake": 2,
			"being": 1,
			"our": 3,
			"walked": 1,
			"sleeps": 1,
			"neer": 5,
			"fear": 1,
			"loved": 5,
			"shall": 13,
			"only": 2,
			"still": 3,
			"your": 1,
			"yet": 3,
			"best": 1,
			"to": 11,
			"into": 1,
			"round": 1,
			"live": 4,
			"use": 1,
			"glorious": 1,
			"know": 1,
			"art": 12,
			"lived": 4,
			"may": 1,
			"hail": 1,
			"enter": 3,
			"as": 1,
			"throng": 1,
			"stand": 1,
			"said": 3,
			"life": 2,
			"he": 1,
			"me": 1,
			"sat": 3,
			"at": 2,
			"below": 1,
			"straight": 1,
			"lies": 2,
			"led": 2,
			"left": 3,
			"the": 27,
			"though": 1,
			"bent": 1,
			"stood": 3,
			"seems": 1,
			"her": 7,
			"leads": 1,
			"first": 5,
			"oft": 1,
			"there": 2,
			"in": 30,
			"north": 1,
			"saith": 1
		},
		"seen": {
			"look": 1,
			"his": 2,
			"him": 3,
			"see": 1,
			"lady": 1,
			"back": 1,
			"which": 1,
			"nor": 1,
			"two": 1,
			"proud": 1,
			"it": 1,
			"by": 2,
			"although": 1,
			"like": 2,
			"they": 1,
			"for": 1,
			"my": 4,
			"great": 1,
			"thy": 3,
			"better": 1,
			"sir": 1,
			"that": 2,
			"what": 2,
			"de": 1,
			"their": 1,
			"a": 4,
			"lord": 1,
			"on": 1,
			"but": 3,
			"when": 2,
			"and": 13,
			"i": 1,
			"too": 1,
			"while": 1,
			"no": 2,
			"with": 1,
			"some": 1,
			"through": 4,
			"before": 4,
			"your": 1,
			"yet": 3,
			"to": 4,
			"we": 1,
			"done": 1,
			"at": 1,
			"the": 15,
			"her": 3,
			"there": 1,
			"in": 10
		},
		"hollow": {
			"are": 1,
			"aid": 1,
			"of": 5,
			"that": 1,
			"field": 2,
			"eye": 1,
			"so": 2,
			"roaring": 1,
			"and": 2,
			"from": 1,
			"while": 1,
			"no": 1,
			"some": 1,
			"our": 1,
			"wind": 3,
			"to": 1,
			"round": 1,
			"ah": 1,
			"we": 1,
			"heavens": 1,
			"he": 1,
			"o": 1,
			"the": 3,
			"though": 1
		},
		"sweetest": {
			"flower": 1,
			"kiss": 1,
			"thing": 2,
			"of": 1,
			"rock": 1,
			"joy": 1,
			"sings": 1,
			"by": 1,
			"gift": 1,
			"heard": 1,
			"leaves": 1,
			"without": 1,
			"pleasure": 1,
			"song": 2,
			"melancholy": 1,
			"beauty": 1,
			"soul": 1,
			"friend": 1,
			"rain": 1,
			"bud": 1,
			"that": 1,
			"taste": 1,
			"isle": 1,
			"joys": 1,
			"things": 3,
			"girl": 1,
			"waters": 1,
			"bed": 1,
			"and": 1,
			"last": 1,
			"maid": 1,
			"with": 1,
			"to": 3,
			"slowly": 1,
			"o": 1,
			"the": 1,
			"in": 1,
			"flowers": 1,
			"air": 1
		},
		"silent": {
			"within": 1,
			"dust": 2,
			"his": 1,
			"are": 1,
			"made": 1,
			"who": 1,
			"of": 6,
			"angel": 1,
			"solemn": 1,
			"awe": 2,
			"by": 1,
			"alone": 5,
			"long": 1,
			"trace": 1,
			"land": 8,
			"away": 1,
			"they": 1,
			"shook": 1,
			"prayer": 2,
			"sea": 3,
			"hand": 1,
			"should": 3,
			"fingers": 1,
			"sleep": 1,
			"moan": 1,
			"shore": 2,
			"town": 1,
			"evening": 1,
			"can": 1,
			"did": 1,
			"if": 2,
			"man": 1,
			"tear": 2,
			"must": 1,
			"oh": 1,
			"stars": 2,
			"or": 1,
			"tree": 1,
			"awake": 1,
			"a": 1,
			"tomb": 1,
			"on": 1,
			"sees": 1,
			"deep": 2,
			"but": 2,
			"be": 1,
			"and": 5,
			"grave": 2,
			"i": 7,
			"unknown": 1,
			"thou": 2,
			"stands": 2,
			"saint": 1,
			"how": 2,
			"from": 1,
			"breast": 1,
			"no": 1,
			"with": 1,
			"now": 5,
			"till": 1,
			"all": 1,
			"thought": 1,
			"mount": 1,
			"sleeps": 1,
			"gathered": 1,
			"night": 5,
			"only": 1,
			"still": 1,
			"way": 1,
			"to": 3,
			"into": 1,
			"we": 1,
			"as": 3,
			"throng": 1,
			"stand": 1,
			"o": 1,
			"the": 5,
			"though": 1,
			"stood": 1,
			"house": 1,
			"tread": 2,
			"scene": 1,
			"in": 4,
			"air": 2,
			"sky": 1
		},
		"guard": {
			"his": 2,
			"him": 1,
			"of": 1,
			"it": 1,
			"for": 2,
			"my": 1,
			"thy": 2,
			"was": 1,
			"their": 1,
			"them": 1,
			"thee": 1,
			"against": 1,
			"while": 1,
			"with": 1,
			"our": 3,
			"your": 1,
			"me": 1,
			"the": 8
		},
		"gate": {
			"who": 1,
			"men": 1,
			"of": 6,
			"she": 2,
			"nor": 1,
			"not": 1,
			"is": 2,
			"god": 1,
			"was": 1,
			"what": 1,
			"a": 1,
			"lord": 1,
			"on": 2,
			"and": 4,
			"i": 1,
			"stands": 1,
			"how": 1,
			"with": 3,
			"himself": 1,
			"through": 1,
			"our": 1,
			"to": 1,
			"said": 1,
			"he": 2,
			"at": 2,
			"iii": 1,
			"led": 1,
			"the": 1,
			"her": 1,
			"in": 1
		},
		"men": {
			"come": 2,
			"bow": 1,
			"look": 1,
			"hear": 1,
			"taught": 1,
			"free": 3,
			"his": 1,
			"endure": 1,
			"book": 1,
			"see": 1,
			"are": 11,
			"beside": 1,
			"who": 9,
			"men": 1,
			"suffer": 1,
			"which": 1,
			"deeds": 1,
			"call": 2,
			"of": 23,
			"this": 3,
			"talk": 2,
			"after": 2,
			"up": 1,
			"among": 1,
			"nor": 1,
			"sez": 1,
			"sick": 1,
			"not": 2,
			"put": 1,
			"proud": 1,
			"it": 2,
			"weep": 1,
			"by": 4,
			"long": 1,
			"is": 3,
			"soon": 1,
			"like": 6,
			"why": 2,
			"people": 1,
			"care": 1,
			"they": 2,
			"you": 1,
			"grant": 1,
			"than": 3,
			"smile": 1,
			"where": 2,
			"holy": 1,
			"for": 4,
			"heaven": 1,
			"should": 4,
			"worse": 1,
			"speak": 1,
			"my": 3,
			"great": 1,
			"thy": 1,
			"wept": 1,
			"better": 1,
			"makes": 1,
			"most": 1,
			"face": 1,
			"can": 2,
			"were": 5,
			"was": 1,
			"that": 2,
			"bear": 1,
			"full": 1,
			"make": 3,
			"often": 1,
			"go": 1,
			"tear": 1,
			"had": 1,
			"must": 4,
			"what": 1,
			"sit": 1,
			"oh": 1,
			"or": 1,
			"think": 1,
			"start": 1,
			"have": 6,
			"their": 2,
			"a": 2,
			"so": 1,
			"true": 1,
			"upon": 1,
			"lay": 2,
			"hath": 1,
			"love": 3,
			"on": 4,
			"saw": 1,
			"but": 4,
			"thee": 1,
			"ye": 1,
			"when": 2,
			"sigh": 1,
			"out": 2,
			"dumb": 1,
			"say": 2,
			"and": 42,
			"thunder": 1,
			"do": 2,
			"i": 5,
			"knew": 1,
			"down": 1,
			"too": 3,
			"fought": 1,
			"might": 3,
			"work": 1,
			"from": 2,
			"sleeping": 1,
			"would": 1,
			"these": 1,
			"present": 1,
			"no": 1,
			"with": 14,
			"drew": 1,
			"now": 1,
			"till": 1,
			"will": 3,
			"all": 2,
			"then": 2,
			"has": 1,
			"george": 1,
			"clear": 1,
			"spring": 1,
			"behind": 6,
			"our": 1,
			"aside": 1,
			"neer": 1,
			"fear": 1,
			"shall": 7,
			"before": 2,
			"only": 2,
			"still": 3,
			"your": 2,
			"yet": 1,
			"to": 15,
			"thinking": 1,
			"lie": 1,
			"know": 2,
			"art": 1,
			"may": 8,
			"whisper": 1,
			"we": 2,
			"whose": 1,
			"as": 2,
			"stand": 1,
			"said": 2,
			"he": 2,
			"at": 3,
			"below": 1,
			"o": 1,
			"the": 15,
			"devil": 1,
			"there": 3,
			"in": 9
		},
		"lover": {
			"his": 1,
			"of": 3,
			"sick": 1,
			"is": 1,
			"burns": 1,
			"thy": 1,
			"friendship": 1,
			"be": 1,
			"and": 2,
			"from": 1,
			"yet": 1,
			"east": 1,
			"the": 1,
			"there": 1,
			"lowly": 2,
			"in": 2
		},
		"suffer": {
			"joy": 1,
			"not": 2,
			"where": 1,
			"for": 3,
			"my": 1,
			"thy": 1,
			"wet": 1,
			"and": 3,
			"here": 1,
			"such": 1,
			"these": 1,
			"wrong": 1,
			"still": 1,
			"the": 2,
			"seems": 1
		},
		"which": {
			"come": 1,
			"else": 2,
			"dying": 1,
			"itself": 1,
			"us": 2,
			"suffering": 1,
			"wrought": 2,
			"died": 2,
			"laws": 1,
			"earth": 1,
			"die": 1,
			"his": 5,
			"struck": 1,
			"him": 3,
			"means": 1,
			"blood": 1,
			"kiss": 1,
			"war": 1,
			"are": 12,
			"made": 5,
			"next": 1,
			"who": 1,
			"men": 6,
			"call": 1,
			"of": 7,
			"this": 2,
			"fame": 1,
			"keep": 1,
			"calls": 1,
			"hung": 1,
			"kept": 3,
			"hills": 1,
			"once": 4,
			"she": 5,
			"three": 1,
			"does": 1,
			"grew": 1,
			"joy": 1,
			"forth": 1,
			"rose": 2,
			"not": 7,
			"it": 5,
			"evil": 1,
			"over": 1,
			"shows": 1,
			"twas": 1,
			"neither": 1,
			"brought": 1,
			"by": 4,
			"alone": 3,
			"breaks": 1,
			"is": 26,
			"soon": 1,
			"like": 10,
			"found": 1,
			"forms": 1,
			"kings": 1,
			"forever": 1,
			"pleased": 1,
			"ever": 3,
			"they": 11,
			"wide": 2,
			"you": 6,
			"moves": 1,
			"nature": 3,
			"pale": 1,
			"swept": 1,
			"without": 1,
			"its": 1,
			"beams": 2,
			"song": 1,
			"those": 1,
			"gentle": 1,
			"others": 1,
			"press": 1,
			"for": 1,
			"should": 6,
			"theres": 1,
			"take": 1,
			"my": 3,
			"heroes": 1,
			"deaths": 1,
			"shines": 1,
			"thy": 3,
			"comes": 1,
			"ourselves": 1,
			"rang": 1,
			"makes": 8,
			"most": 3,
			"held": 1,
			"wrath": 1,
			"stretched": 1,
			"god": 5,
			"can": 2,
			"were": 3,
			"bears": 2,
			"oer": 1,
			"did": 1,
			"was": 6,
			"runs": 1,
			"that": 2,
			"if": 1,
			"show": 1,
			"man": 3,
			"bear": 1,
			"says": 1,
			"always": 1,
			"full": 1,
			"make": 2,
			"spake": 1,
			"cried": 1,
			"had": 4,
			"gives": 1,
			"must": 1,
			"what": 1,
			"even": 2,
			"or": 1,
			"ran": 1,
			"have": 3,
			"study": 1,
			"gave": 1,
			"their": 4,
			"a": 10,
			"so": 2,
			"brings": 1,
			"falls": 1,
			"them": 2,
			"sometimes": 1,
			"flies": 1,
			"upon": 2,
			"lay": 1,
			"things": 1,
			"never": 3,
			"many": 2,
			"hath": 4,
			"leave": 1,
			"love": 3,
			"on": 7,
			"fast": 1,
			"but": 5,
			"lives": 1,
			"when": 3,
			"lifes": 2,
			"be": 1,
			"roses": 1,
			"having": 1,
			"out": 1,
			"and": 4,
			"truth": 1,
			"bloom": 1,
			"do": 3,
			"fate": 2,
			"i": 33,
			"knew": 2,
			"thou": 13,
			"down": 2,
			"bids": 1,
			"here": 2,
			"one": 3,
			"might": 1,
			"softly": 1,
			"perfect": 1,
			"hate": 1,
			"looks": 2,
			"each": 1,
			"from": 3,
			"would": 3,
			"living": 1,
			"reason": 1,
			"these": 1,
			"nigh": 1,
			"while": 1,
			"no": 6,
			"called": 1,
			"with": 8,
			"around": 1,
			"drew": 1,
			"now": 4,
			"give": 1,
			"some": 3,
			"shone": 1,
			"will": 2,
			"all": 7,
			"fires": 2,
			"could": 2,
			"through": 1,
			"has": 3,
			"doth": 7,
			"king": 1,
			"being": 3,
			"our": 6,
			"gathered": 1,
			"neer": 1,
			"loved": 1,
			"shall": 1,
			"before": 3,
			"echo": 1,
			"hundred": 1,
			"only": 4,
			"still": 1,
			"yet": 1,
			"way": 3,
			"to": 10,
			"poetry": 1,
			"mid": 1,
			"lie": 1,
			"hence": 1,
			"may": 4,
			"eve": 1,
			"we": 23,
			"as": 2,
			"said": 1,
			"life": 1,
			"he": 30,
			"me": 4,
			"at": 5,
			"fancy": 1,
			"grow": 1,
			"the": 68,
			"stood": 1,
			"seems": 1,
			"her": 2,
			"leads": 1,
			"first": 2,
			"oft": 1,
			"there": 1,
			"in": 13,
			"seem": 1,
			"grows": 1
		},
		"sake": {
			"murmur": 1,
			"of": 8,
			"this": 2,
			"it": 1,
			"by": 1,
			"its": 1,
			"for": 4,
			"my": 3,
			"john": 1,
			"that": 1,
			"if": 1,
			"wilt": 1,
			"trod": 1,
			"a": 2,
			"upon": 1,
			"on": 1,
			"but": 1,
			"and": 6,
			"i": 7,
			"henry": 1,
			"how": 1,
			"now": 1,
			"then": 1,
			"our": 1,
			"to": 1,
			"we": 2,
			"he": 1,
			"o": 1,
			"the": 3,
			"in": 3
		},
		"mist": {
			"of": 2,
			"nor": 1,
			"is": 2,
			"they": 1,
			"my": 1,
			"or": 1,
			"them": 1,
			"on": 3,
			"and": 5,
			"hid": 1,
			"behind": 1,
			"falling": 1,
			"the": 3,
			"in": 1
		},
		"court": {
			"im": 1,
			"lady": 1,
			"of": 4,
			"news": 1,
			"where": 1,
			"church": 1,
			"my": 1,
			"an": 1,
			"or": 1,
			"courage": 1,
			"and": 4,
			"all": 1,
			"we": 1,
			"he": 1,
			"the": 4
		},
		"beam": {
			"which": 1,
			"of": 8,
			"hung": 1,
			"nor": 1,
			"is": 4,
			"glittering": 1,
			"lost": 1,
			"were": 1,
			"oer": 1,
			"that": 3,
			"falls": 1,
			"upon": 1,
			"when": 1,
			"and": 3,
			"i": 1,
			"with": 1,
			"to": 2,
			"art": 1,
			"he": 1,
			"me": 1,
			"the": 3,
			"in": 2
		},
		"greece": {
			"up": 1,
			"beheld": 1,
			"about": 1,
			"mother": 1,
			"where": 1,
			"thy": 1,
			"a": 1,
			"but": 1,
			"and": 2,
			"one": 2,
			"might": 1,
			"from": 2,
			"no": 1,
			"sad": 1,
			"to": 1,
			"the": 2,
			"her": 1,
			"change": 1,
			"in": 2
		},
		"ones": {
			"crossed": 1,
			"cheek": 1,
			"are": 1,
			"who": 1,
			"sake": 1,
			"tired": 2,
			"of": 1,
			"scorn": 1,
			"two": 1,
			"not": 1,
			"weep": 1,
			"like": 1,
			"they": 1,
			"rest": 1,
			"most": 1,
			"name": 1,
			"stroke": 1,
			"that": 1,
			"cried": 1,
			"must": 1,
			"have": 1,
			"their": 1,
			"lay": 1,
			"cruel": 1,
			"on": 1,
			"head": 1,
			"and": 2,
			"i": 1,
			"sublime": 1,
			"while": 1,
			"lying": 1,
			"all": 1,
			"future": 1,
			"to": 5,
			"wounds": 1,
			"stand": 1,
			"life": 1,
			"left": 1,
			"the": 2,
			"there": 2,
			"in": 2
		},
		"deeds": {
			"look": 1,
			"more": 1,
			"are": 2,
			"which": 1,
			"of": 10,
			"not": 1,
			"it": 1,
			"is": 1,
			"thus": 1,
			"than": 1,
			"crown": 1,
			"where": 1,
			"speak": 1,
			"makes": 1,
			"that": 5,
			"upon": 1,
			"and": 3,
			"do": 1,
			"thou": 1,
			"each": 1,
			"from": 1,
			"sublime": 2,
			"with": 1,
			"some": 1,
			"will": 1,
			"all": 1,
			"clear": 1,
			"to": 2,
			"we": 2,
			"done": 1,
			"he": 1,
			"at": 1,
			"though": 1,
			"in": 1
		},
		"holds": {
			"us": 1,
			"his": 2,
			"save": 1,
			"men": 1,
			"by": 1,
			"its": 1,
			"my": 1,
			"nothing": 1,
			"a": 4,
			"them": 1,
			"fast": 1,
			"out": 2,
			"and": 1,
			"while": 1,
			"no": 2,
			"with": 3,
			"some": 1,
			"all": 1,
			"to": 1,
			"me": 4,
			"the": 2
		},
		"dies": {
			"come": 1,
			"she": 1,
			"among": 1,
			"not": 1,
			"like": 3,
			"farewell": 1,
			"where": 2,
			"for": 2,
			"ere": 1,
			"was": 1,
			"that": 2,
			"if": 1,
			"another": 1,
			"or": 1,
			"fill": 1,
			"a": 1,
			"upon": 1,
			"but": 1,
			"when": 1,
			"and": 3,
			"all": 3,
			"still": 1,
			"your": 1,
			"into": 1,
			"slowly": 1,
			"at": 2,
			"the": 10,
			"in": 2
		},
		"ago": {
			"since": 1,
			"within": 1,
			"dwell": 1,
			"it": 1,
			"twas": 1,
			"its": 1,
			"for": 1,
			"cannot": 1,
			"comes": 1,
			"were": 1,
			"that": 1,
			"oh": 1,
			"a": 1,
			"on": 1,
			"when": 3,
			"and": 1,
			"no": 1,
			"alfred": 1,
			"now": 1,
			"said": 1,
			"he": 4,
			"at": 1,
			"the": 1,
			"in": 2
		},
		"worth": {
			"come": 1,
			"since": 1,
			"save": 1,
			"of": 1,
			"this": 2,
			"worlds": 1,
			"by": 1,
			"is": 2,
			"they": 1,
			"my": 2,
			"thy": 1,
			"peace": 1,
			"immortal": 1,
			"was": 1,
			"that": 1,
			"if": 1,
			"gives": 1,
			"an": 1,
			"nothing": 1,
			"or": 1,
			"their": 1,
			"a": 7,
			"so": 1,
			"whole": 1,
			"and": 3,
			"i": 2,
			"here": 1,
			"steel": 1,
			"one": 1,
			"from": 2,
			"living": 1,
			"till": 1,
			"then": 1,
			"ten": 1,
			"has": 1,
			"being": 2,
			"our": 1,
			"your": 1,
			"yet": 1,
			"to": 1,
			"we": 2,
			"the": 6,
			"though": 1
		},
		"hide": {
			"sweet": 1,
			"look": 1,
			"thine": 1,
			"within": 1,
			"him": 1,
			"this": 1,
			"it": 3,
			"those": 1,
			"my": 1,
			"themselves": 1,
			"thy": 1,
			"waves": 1,
			"trust": 1,
			"what": 1,
			"their": 3,
			"thee": 2,
			"and": 4,
			"myself": 7,
			"i": 1,
			"from": 2,
			"ill": 1,
			"foul": 1,
			"no": 1,
			"with": 2,
			"all": 1,
			"could": 1,
			"our": 2,
			"your": 1,
			"to": 1,
			"me": 2,
			"o": 1,
			"the": 6,
			"though": 1,
			"her": 1,
			"in": 1
		},
		"tired": {
			"earth": 1,
			"tired": 1,
			"of": 6,
			"limbs": 2,
			"child": 2,
			"eyes": 1,
			"drops": 1,
			"waves": 1,
			"queen": 1,
			"that": 1,
			"their": 1,
			"feet": 2,
			"out": 1,
			"head": 2,
			"and": 1,
			"with": 2,
			"heads": 1,
			"natures": 1,
			"cities": 1
		},
		"call": {
			"come": 1,
			"us": 2,
			"his": 2,
			"dreary": 1,
			"him": 2,
			"back": 3,
			"who": 2,
			"call": 1,
			"of": 2,
			"up": 2,
			"she": 1,
			"forth": 1,
			"mine": 1,
			"divine": 1,
			"today": 1,
			"it": 11,
			"spirits": 1,
			"by": 1,
			"like": 1,
			"they": 2,
			"you": 2,
			"afar": 1,
			"than": 1,
			"those": 1,
			"for": 7,
			"speak": 1,
			"my": 1,
			"came": 1,
			"thy": 2,
			"william": 1,
			"god": 1,
			"that": 1,
			"what": 1,
			"their": 3,
			"a": 3,
			"them": 2,
			"lay": 1,
			"on": 3,
			"old": 1,
			"death": 1,
			"thee": 3,
			"ye": 1,
			"when": 1,
			"be": 1,
			"and": 8,
			"i": 1,
			"home": 1,
			"how": 1,
			"with": 2,
			"virtue": 1,
			"till": 3,
			"will": 1,
			"clear": 1,
			"our": 4,
			"day": 1,
			"chance": 1,
			"your": 1,
			"to": 12,
			"human": 1,
			"as": 2,
			"life": 1,
			"he": 2,
			"me": 16,
			"the": 10,
			"her": 1,
			"dead": 2,
			"fire": 1,
			"first": 1,
			"in": 2
		},
		"shout": {
			"his": 1,
			"are": 1,
			"of": 3,
			"among": 2,
			"nor": 1,
			"they": 1,
			"for": 1,
			"great": 1,
			"god": 1,
			"that": 2,
			"upon": 1,
			"but": 1,
			"ye": 1,
			"and": 9,
			"no": 1,
			"with": 1,
			"all": 1,
			"shall": 1,
			"to": 1,
			"round": 1,
			"as": 1,
			"at": 2,
			"the": 1,
			"there": 1,
			"in": 1
		},
		"country": {
			"since": 1,
			"his": 1,
			"save": 1,
			"dance": 1,
			"call": 1,
			"of": 2,
			"calls": 1,
			"city": 1,
			"place": 1,
			"mine": 1,
			"far": 2,
			"hangs": 1,
			"father": 2,
			"is": 2,
			"ever": 2,
			"they": 1,
			"afar": 1,
			"for": 1,
			"should": 1,
			"cannot": 1,
			"remain": 1,
			"great": 1,
			"peace": 1,
			"town": 1,
			"bears": 1,
			"oer": 1,
			"that": 2,
			"let": 1,
			"bear": 1,
			"a": 1,
			"true": 1,
			"on": 1,
			"red": 1,
			"but": 1,
			"thee": 1,
			"heart": 1,
			"and": 7,
			"dream": 1,
			"i": 1,
			"bids": 1,
			"might": 1,
			"each": 1,
			"from": 2,
			"maid": 1,
			"called": 1,
			"will": 2,
			"could": 2,
			"through": 1,
			"has": 1,
			"our": 2,
			"shall": 3,
			"yet": 1,
			"best": 1,
			"round": 1,
			"sign": 1,
			"he": 1,
			"the": 2,
			"tis": 1,
			"though": 1,
			"there": 1,
			"in": 1
		},
		"steps": {
			"come": 1,
			"right": 1,
			"of": 1,
			"behold": 1,
			"over": 1,
			"is": 1,
			"just": 1,
			"catch": 1,
			"ere": 1,
			"but": 1,
			"and": 6,
			"i": 1,
			"here": 1,
			"from": 1,
			"with": 1,
			"to": 2,
			"we": 1,
			"as": 1,
			"he": 1,
			"o": 2,
			"the": 4,
			"in": 2
		},
		"toward": {
			"christ": 1,
			"past": 1,
			"making": 1,
			"love": 1,
			"and": 1,
			"home": 1,
			"with": 1,
			"mankind": 1,
			"eve": 1,
			"heavens": 1,
			"me": 1,
			"the": 10
		},
		"body": {
			"of": 1,
			"once": 1,
			"nor": 1,
			"alone": 1,
			"is": 1,
			"soon": 1,
			"like": 2,
			"forever": 1,
			"about": 1,
			"nature": 1,
			"hand": 1,
			"friend": 1,
			"were": 1,
			"did": 1,
			"broken": 1,
			"so": 2,
			"heat": 1,
			"upon": 1,
			"almost": 1,
			"but": 1,
			"death": 1,
			"close": 1,
			"and": 10,
			"do": 1,
			"too": 1,
			"might": 1,
			"from": 2,
			"with": 2,
			"will": 1,
			"then": 1,
			"still": 1,
			"turning": 1,
			"may": 2,
			"at": 1,
			"lies": 2,
			"the": 1,
			"first": 1,
			"in": 1
		},
		"sounds": {
			"ring": 1,
			"which": 1,
			"of": 4,
			"not": 1,
			"far": 1,
			"like": 2,
			"ever": 1,
			"its": 1,
			"most": 1,
			"along": 1,
			"that": 5,
			"a": 1,
			"say": 1,
			"and": 4,
			"from": 1,
			"before": 1,
			"to": 1,
			"we": 1,
			"at": 1,
			"grow": 1,
			"the": 7
		},
		"of": {
			"sweet": 14,
			"books": 3,
			"tune": 2,
			"perchance": 1,
			"blue": 8,
			"come": 2,
			"sound": 6,
			"low": 3,
			"jean": 1,
			"footnote": 5,
			"cool": 1,
			"dying": 4,
			"bread": 7,
			"look": 2,
			"summer": 10,
			"itself": 5,
			"woes": 1,
			"sighs": 7,
			"us": 21,
			"suffering": 4,
			"more": 6,
			"sent": 1,
			"won": 2,
			"thine": 19,
			"blessd": 1,
			"ours": 7,
			"within": 3,
			"england": 15,
			"blessings": 1,
			"dust": 6,
			"blew": 1,
			"justice": 3,
			"loves": 5,
			"im": 1,
			"parting": 3,
			"christ": 9,
			"gates": 1,
			"fierce": 1,
			"free": 2,
			"light": 49,
			"earth": 29,
			"birds": 9,
			"doubt": 6,
			"pine": 1,
			"die": 1,
			"mountains": 3,
			"his": 164,
			"appear": 2,
			"james": 4,
			"save": 1,
			"happiness": 7,
			"st": 6,
			"hell": 15,
			"dreary": 1,
			"him": 31,
			"midnight": 2,
			"sharp": 1,
			"charity": 5,
			"law": 4,
			"see": 1,
			"means": 1,
			"blood": 18,
			"precious": 2,
			"begin": 1,
			"women": 4,
			"faithful": 2,
			"breathing": 1,
			"thousand": 2,
			"tennyson": 2,
			"thing": 1,
			"deeper": 2,
			"s": 1,
			"ages": 14,
			"white": 9,
			"rule": 1,
			"science": 4,
			"none": 1,
			"shades": 1,
			"hast": 1,
			"woe": 25,
			"silver": 3,
			"purple": 3,
			"tell": 1,
			"war": 42,
			"weary": 1,
			"wonder": 2,
			"are": 12,
			"saints": 2,
			"fears": 1,
			"humble": 2,
			"six": 1,
			"right": 6,
			"warm": 2,
			"made": 2,
			"fell": 1,
			"very": 1,
			"under": 1,
			"who": 8,
			"silent": 3,
			"men": 56,
			"which": 18,
			"greece": 5,
			"deeds": 2,
			"worth": 7,
			"tired": 1,
			"call": 1,
			"steps": 1,
			"body": 1,
			"of": 21,
			"this": 59,
			"blind": 1,
			"bonnie": 11,
			"star": 2,
			"season": 1,
			"high": 5,
			"graves": 2,
			"worlds": 1,
			"fame": 18,
			"amid": 1,
			"souls": 4,
			"keep": 1,
			"wine": 5,
			"learning": 4,
			"hills": 2,
			"longfellow": 2,
			"once": 1,
			"up": 1,
			"food": 1,
			"triumph": 3,
			"tide": 1,
			"breathe": 1,
			"she": 6,
			"rock": 3,
			"liberty": 13,
			"shakespeare": 1,
			"silence": 2,
			"nor": 3,
			"sacred": 2,
			"hymn": 1,
			"gold": 43,
			"three": 2,
			"does": 1,
			"morning": 8,
			"act": 1,
			"grew": 1,
			"thyself": 1,
			"flood": 1,
			"sight": 11,
			"age": 3,
			"darkness": 8,
			"joy": 29,
			"foam": 2,
			"fruit": 1,
			"bird": 2,
			"scorn": 6,
			"brother": 3,
			"beheld": 1,
			"race": 4,
			"spot": 1,
			"dear": 3,
			"two": 5,
			"fresh": 6,
			"pain": 31,
			"mourn": 1,
			"place": 4,
			"pass": 1,
			"fine": 2,
			"slaves": 6,
			"aught": 3,
			"mine": 24,
			"behold": 1,
			"solemn": 1,
			"news": 1,
			"not": 2,
			"awe": 1,
			"rapture": 2,
			"fade": 1,
			"divine": 1,
			"hours": 1,
			"dwell": 1,
			"englands": 7,
			"crimson": 1,
			"side": 1,
			"starry": 1,
			"today": 4,
			"every": 21,
			"praise": 14,
			"sword": 1,
			"it": 42,
			"evil": 6,
			"over": 4,
			"army": 2,
			"host": 1,
			"shake": 1,
			"magic": 4,
			"maiden": 2,
			"flight": 2,
			"twas": 1,
			"far": 3,
			"mean": 2,
			"spirits": 2,
			"wisdom": 1,
			"child": 2,
			"health": 5,
			"lights": 1,
			"tongue": 1,
			"weep": 1,
			"water": 5,
			"send": 1,
			"ease": 2,
			"by": 4,
			"eyes": 5,
			"jim": 1,
			"fathers": 1,
			"father": 1,
			"jove": 6,
			"nevermore": 3,
			"woods": 2,
			"alone": 1,
			"long": 7,
			"sorrows": 1,
			"bring": 1,
			"corn": 7,
			"nations": 12,
			"something": 4,
			"trace": 1,
			"quiet": 2,
			"matter": 2,
			"cold": 1,
			"pride": 5,
			"land": 3,
			"wars": 4,
			"is": 19,
			"vision": 1,
			"author": 2,
			"eternity": 6,
			"unto": 3,
			"like": 4,
			"takes": 1,
			"lo": 1,
			"hurrah": 3,
			"farewell": 1,
			"glass": 1,
			"away": 1,
			"form": 7,
			"sway": 2,
			"children": 2,
			"forms": 1,
			"native": 2,
			"people": 3,
			"sung": 1,
			"immortality": 7,
			"kings": 16,
			"forever": 2,
			"good": 24,
			"lead": 1,
			"ocean": 5,
			"hark": 2,
			"force": 3,
			"ever": 1,
			"either": 2,
			"care": 7,
			"about": 1,
			"they": 9,
			"speech": 8,
			"prayer": 23,
			"grain": 3,
			"laughing": 1,
			"funeral": 1,
			"wide": 1,
			"you": 9,
			"nature": 33,
			"shot": 1,
			"tyrants": 1,
			"glowing": 1,
			"mother": 1,
			"grant": 1,
			"mild": 1,
			"thus": 1,
			"new": 2,
			"strike": 1,
			"weakness": 6,
			"heard": 1,
			"leaves": 7,
			"without": 2,
			"sister": 1,
			"robert": 3,
			"earths": 4,
			"its": 30,
			"than": 3,
			"smile": 2,
			"kindly": 1,
			"pleasure": 14,
			"stir": 1,
			"song": 5,
			"those": 33,
			"sea": 3,
			"crown": 1,
			"friends": 10,
			"where": 12,
			"yea": 1,
			"gentle": 7,
			"others": 8,
			"despair": 7,
			"small": 3,
			"richard": 3,
			"rolled": 1,
			"church": 1,
			"holy": 4,
			"gray": 4,
			"just": 2,
			"welcome": 1,
			"for": 20,
			"noise": 1,
			"blown": 1,
			"past": 3,
			"judgment": 3,
			"hand": 3,
			"heaven": 71,
			"stones": 2,
			"charge": 1,
			"lost": 1,
			"bloody": 1,
			"should": 1,
			"surprise": 1,
			"suns": 1,
			"theres": 2,
			"take": 1,
			"melancholy": 2,
			"breath": 8,
			"spite": 1,
			"boys": 1,
			"tomorrow": 1,
			"autumn": 3,
			"fixed": 1,
			"didst": 1,
			"rest": 11,
			"my": 127,
			"band": 1,
			"words": 4,
			"came": 2,
			"note": 3,
			"heroes": 3,
			"twilight": 1,
			"winds": 1,
			"great": 12,
			"john": 13,
			"tender": 4,
			"beauty": 16,
			"again": 1,
			"deaths": 1,
			"desire": 3,
			"earl": 1,
			"themselves": 4,
			"burning": 3,
			"freedom": 19,
			"thy": 74,
			"yes": 1,
			"smiles": 2,
			"greater": 1,
			"morn": 8,
			"hushed": 1,
			"vain": 2,
			"sleep": 7,
			"battle": 20,
			"tone": 1,
			"peace": 32,
			"majesty": 5,
			"blows": 1,
			"ere": 6,
			"hopes": 2,
			"ourselves": 1,
			"birth": 2,
			"whom": 5,
			"better": 1,
			"ray": 2,
			"mary": 1,
			"ground": 2,
			"sadly": 1,
			"soul": 6,
			"passion": 4,
			"hope": 17,
			"born": 1,
			"various": 2,
			"because": 1,
			"cheer": 4,
			"any": 4,
			"most": 1,
			"sir": 8,
			"wandering": 3,
			"held": 1,
			"evening": 4,
			"yellow": 3,
			"rising": 2,
			"friend": 1,
			"wrath": 7,
			"bells": 3,
			"fools": 4,
			"friendship": 5,
			"stretched": 1,
			"name": 1,
			"clay": 7,
			"glow": 2,
			"william": 3,
			"false": 4,
			"sin": 16,
			"battles": 4,
			"dew": 4,
			"rain": 4,
			"faith": 16,
			"whether": 1,
			"god": 90,
			"wit": 6,
			"shame": 11,
			"noble": 5,
			"power": 18,
			"were": 4,
			"comfort": 4,
			"waking": 1,
			"oer": 2,
			"sudden": 1,
			"immortal": 1,
			"need": 4,
			"shell": 3,
			"did": 1,
			"walls": 2,
			"was": 8,
			"that": 107,
			"rolling": 3,
			"if": 4,
			"let": 3,
			"thorn": 1,
			"womans": 2,
			"cares": 4,
			"man": 35,
			"daily": 2,
			"both": 2,
			"another": 3,
			"leaf": 3,
			"make": 2,
			"victory": 6,
			"busy": 2,
			"ripe": 1,
			"broken": 2,
			"go": 4,
			"spake": 1,
			"gladness": 5,
			"half": 3,
			"trust": 2,
			"sail": 1,
			"rode": 1,
			"perfume": 1,
			"brothers": 1,
			"had": 3,
			"must": 1,
			"pure": 3,
			"what": 10,
			"oh": 1,
			"beautiful": 3,
			"an": 38,
			"repose": 4,
			"moon": 3,
			"creatures": 3,
			"stone": 7,
			"stars": 6,
			"music": 11,
			"pleasures": 3,
			"even": 1,
			"or": 34,
			"waiting": 2,
			"conscience": 1,
			"think": 1,
			"ran": 1,
			"de": 8,
			"eye": 1,
			"soil": 1,
			"sweeter": 2,
			"moved": 1,
			"bright": 2,
			"have": 4,
			"study": 5,
			"tears": 7,
			"isle": 1,
			"horse": 1,
			"prey": 1,
			"danger": 1,
			"ride": 1,
			"soldiers": 2,
			"winter": 4,
			"their": 67,
			"a": 285,
			"so": 12,
			"pains": 1,
			"faces": 2,
			"heat": 2,
			"them": 33,
			"sometimes": 1,
			"pines": 4,
			"joys": 4,
			"courage": 1,
			"true": 5,
			"green": 7,
			"flies": 1,
			"upon": 4,
			"gallant": 2,
			"lay": 1,
			"things": 16,
			"lord": 7,
			"never": 3,
			"many": 12,
			"dawn": 4,
			"spirit": 2,
			"hath": 1,
			"whence": 2,
			"delight": 6,
			"love": 83,
			"on": 21,
			"saw": 1,
			"wing": 2,
			"sees": 1,
			"maryland": 2,
			"red": 2,
			"evermore": 1,
			"mountain": 1,
			"above": 2,
			"deep": 1,
			"memory": 3,
			"celestial": 5,
			"old": 53,
			"naked": 1,
			"but": 15,
			"iron": 4,
			"bell": 1,
			"infinite": 1,
			"grass": 8,
			"brown": 4,
			"death": 76,
			"knowledge": 3,
			"self": 4,
			"foes": 1,
			"time": 47,
			"poor": 1,
			"empty": 1,
			"buried": 1,
			"thee": 25,
			"ye": 3,
			"years": 20,
			"when": 12,
			"deed": 1,
			"lifes": 7,
			"april": 2,
			"eternal": 9,
			"terror": 3,
			"honest": 4,
			"religious": 4,
			"merry": 1,
			"waters": 5,
			"mans": 5,
			"length": 2,
			"dreams": 3,
			"be": 5,
			"roses": 7,
			"weeping": 5,
			"feet": 5,
			"wings": 1,
			"t": 1,
			"glory": 27,
			"having": 2,
			"highest": 2,
			"line": 1,
			"out": 5,
			"earthly": 6,
			"brave": 2,
			"distant": 4,
			"naught": 1,
			"sweetly": 1,
			"heart": 15,
			"vere": 1,
			"sorrow": 21,
			"german": 2,
			"anguish": 7,
			"paradise": 10,
			"close": 2,
			"nobler": 3,
			"verse": 2,
			"and": 193,
			"order": 2,
			"bliss": 16,
			"thunder": 3,
			"bones": 1,
			"mothers": 1,
			"grace": 18,
			"sun": 4,
			"march": 3,
			"truth": 20,
			"do": 1,
			"dark": 3,
			"doom": 4,
			"sunshine": 4,
			"rays": 1,
			"christian": 3,
			"lovely": 4,
			"myself": 1,
			"move": 1,
			"fate": 12,
			"wounded": 1,
			"days": 7,
			"hid": 1,
			"i": 20,
			"snow": 12,
			"thou": 5,
			"woman": 5,
			"marching": 1,
			"down": 7,
			"sunny": 5,
			"less": 1,
			"western": 1,
			"home": 4,
			"wretched": 1,
			"here": 2,
			"south": 1,
			"mournful": 2,
			"too": 3,
			"steel": 19,
			"mirth": 4,
			"mortal": 10,
			"one": 29,
			"might": 6,
			"storm": 3,
			"such": 23,
			"shining": 1,
			"rocks": 1,
			"softly": 1,
			"against": 1,
			"perfect": 2,
			"rome": 6,
			"hate": 1,
			"arts": 4,
			"state": 3,
			"work": 3,
			"pearl": 4,
			"stands": 1,
			"fields": 1,
			"saint": 7,
			"each": 10,
			"henry": 3,
			"how": 1,
			"hearts": 5,
			"other": 4,
			"from": 20,
			"stranger": 1,
			"gifts": 1,
			"marble": 1,
			"across": 1,
			"would": 1,
			"living": 10,
			"feeling": 3,
			"mind": 9,
			"ill": 7,
			"endless": 2,
			"want": 5,
			"blade": 1,
			"reason": 6,
			"beat": 1,
			"beneath": 1,
			"maid": 1,
			"rare": 1,
			"ancient": 8,
			"these": 18,
			"duty": 3,
			"while": 4,
			"foul": 1,
			"honor": 8,
			"present": 2,
			"no": 12,
			"bound": 2,
			"early": 5,
			"calm": 3,
			"roll": 1,
			"maidens": 1,
			"dread": 1,
			"sand": 4,
			"solitude": 2,
			"decay": 3,
			"goodly": 1,
			"mighty": 3,
			"ears": 1,
			"with": 17,
			"singing": 1,
			"sad": 2,
			"sweetness": 2,
			"virtue": 4,
			"everlasting": 2,
			"soft": 2,
			"drew": 1,
			"now": 5,
			"set": 3,
			"give": 2,
			"single": 1,
			"foreign": 2,
			"some": 17,
			"till": 3,
			"hair": 4,
			"will": 4,
			"strong": 1,
			"himself": 3,
			"twenty": 1,
			"lying": 1,
			"all": 155,
			"patient": 1,
			"grief": 12,
			"desolate": 2,
			"gods": 10,
			"wild": 3,
			"loving": 2,
			"fires": 1,
			"then": 2,
			"room": 1,
			"harvest": 1,
			"ho": 2,
			"flesh": 3,
			"blest": 1,
			"thought": 20,
			"through": 6,
			"pleasant": 3,
			"thomas": 2,
			"ten": 5,
			"has": 1,
			"songs": 1,
			"asleep": 1,
			"toil": 7,
			"service": 2,
			"angels": 8,
			"well": 2,
			"clear": 2,
			"king": 1,
			"ways": 1,
			"peaceful": 1,
			"dost": 1,
			"spring": 7,
			"minds": 1,
			"wake": 1,
			"fiery": 4,
			"being": 10,
			"beauteous": 1,
			"wealth": 1,
			"our": 86,
			"smoke": 4,
			"storms": 1,
			"wrong": 7,
			"day": 47,
			"sense": 10,
			"hall": 7,
			"fortune": 3,
			"page": 1,
			"future": 2,
			"fear": 7,
			"night": 30,
			"patience": 4,
			"equal": 1,
			"mercy": 6,
			"loved": 1,
			"pity": 4,
			"shall": 3,
			"before": 2,
			"echo": 1,
			"hundred": 2,
			"only": 1,
			"golden": 5,
			"wind": 2,
			"still": 1,
			"chance": 2,
			"your": 36,
			"shade": 4,
			"natures": 3,
			"mingled": 2,
			"yet": 2,
			"way": 1,
			"course": 3,
			"to": 41,
			"loud": 1,
			"poetry": 23,
			"hill": 3,
			"clouds": 5,
			"youth": 25,
			"human": 23,
			"poets": 1,
			"speed": 1,
			"cities": 2,
			"springs": 2,
			"into": 4,
			"round": 2,
			"wood": 1,
			"flame": 12,
			"turn": 1,
			"lie": 2,
			"little": 3,
			"mankind": 17,
			"rich": 4,
			"religion": 7,
			"use": 2,
			"homes": 1,
			"heavenly": 9,
			"glorious": 5,
			"freedoms": 2,
			"wounds": 1,
			"growing": 1,
			"view": 1,
			"know": 1,
			"mould": 2,
			"sore": 1,
			"art": 5,
			"harp": 1,
			"flow": 2,
			"vast": 1,
			"may": 13,
			"th": 2,
			"strife": 8,
			"eve": 3,
			"withered": 1,
			"yon": 4,
			"skies": 1,
			"powers": 1,
			"we": 9,
			"gloom": 4,
			"glad": 1,
			"simple": 2,
			"whose": 11,
			"falling": 3,
			"as": 14,
			"fair": 5,
			"charles": 6,
			"borne": 1,
			"heavens": 8,
			"stand": 1,
			"english": 6,
			"happy": 5,
			"said": 1,
			"life": 109,
			"noon": 5,
			"he": 11,
			"arms": 3,
			"me": 24,
			"strength": 8,
			"at": 8,
			"fancy": 2,
			"deer": 1,
			"below": 1,
			"straight": 1,
			"slumber": 2,
			"seat": 1,
			"point": 1,
			"lies": 4,
			"led": 2,
			"o": 13,
			"coming": 2,
			"gain": 3,
			"browning": 1,
			"grow": 1,
			"yonder": 4,
			"translation": 31,
			"streams": 2,
			"common": 6,
			"the": 1549,
			"tis": 3,
			"though": 4,
			"fight": 4,
			"treasure": 1,
			"stood": 2,
			"house": 1,
			"labor": 3,
			"her": 72,
			"change": 3,
			"young": 3,
			"dead": 2,
			"thirst": 1,
			"fire": 17,
			"trees": 4,
			"seas": 6,
			"devil": 1,
			"jesus": 1,
			"there": 5,
			"lowly": 1,
			"in": 43,
			"flowers": 14,
			"harmony": 1,
			"purpose": 1,
			"dim": 1,
			"air": 13,
			"ruin": 4,
			"thoughts": 6,
			"sky": 2,
			"oak": 4
		},
		"brook": {
			"more": 1,
			"of": 1,
			"three": 1,
			"it": 1,
			"is": 1,
			"heard": 1,
			"than": 1,
			"where": 1,
			"for": 1,
			"can": 1,
			"runs": 1,
			"that": 4,
			"fall": 1,
			"or": 3,
			"ran": 1,
			"wilt": 1,
			"on": 1,
			"and": 2,
			"i": 1,
			"with": 1,
			"to": 1,
			"whose": 1,
			"in": 1
		},
		"this": {
			"sweet": 3,
			"flower": 1,
			"summer": 1,
			"suffering": 1,
			"england": 2,
			"dust": 2,
			"curse": 1,
			"justice": 1,
			"parting": 1,
			"earth": 7,
			"birds": 1,
			"doubt": 2,
			"mountains": 1,
			"his": 3,
			"stream": 1,
			"happiness": 1,
			"dreary": 1,
			"fond": 1,
			"book": 4,
			"narrow": 3,
			"precious": 1,
			"breathing": 1,
			"thing": 1,
			"creed": 1,
			"rule": 1,
			"woe": 1,
			"purple": 1,
			"war": 1,
			"wail": 1,
			"weary": 2,
			"wonder": 1,
			"dance": 1,
			"right": 1,
			"fell": 1,
			"very": 2,
			"who": 1,
			"hollow": 1,
			"men": 1,
			"which": 1,
			"body": 1,
			"of": 22,
			"this": 2,
			"star": 1,
			"season": 2,
			"high": 3,
			"rude": 1,
			"worlds": 3,
			"hung": 1,
			"after": 1,
			"food": 1,
			"rock": 2,
			"sacred": 1,
			"hymn": 1,
			"three": 1,
			"morning": 2,
			"flood": 1,
			"sight": 1,
			"stormy": 1,
			"fruit": 1,
			"bird": 1,
			"height": 1,
			"spot": 3,
			"dear": 2,
			"mouth": 1,
			"place": 1,
			"sands": 1,
			"solemn": 1,
			"not": 1,
			"divine": 1,
			"side": 3,
			"burden": 1,
			"it": 4,
			"maiden": 1,
			"eager": 1,
			"twas": 1,
			"child": 1,
			"water": 1,
			"by": 4,
			"long": 1,
			"quiet": 2,
			"cold": 1,
			"land": 13,
			"wise": 1,
			"is": 49,
			"cross": 3,
			"soon": 1,
			"like": 1,
			"sway": 1,
			"why": 1,
			"good": 1,
			"force": 1,
			"care": 2,
			"they": 3,
			"grain": 1,
			"wide": 2,
			"nature": 1,
			"pale": 2,
			"new": 5,
			"afar": 1,
			"without": 1,
			"slave": 1,
			"than": 1,
			"song": 4,
			"gentle": 1,
			"brief": 1,
			"just": 1,
			"for": 3,
			"past": 1,
			"hand": 3,
			"bosom": 1,
			"charge": 1,
			"cry": 1,
			"should": 2,
			"lonely": 2,
			"breath": 1,
			"rest": 2,
			"my": 6,
			"hour": 5,
			"great": 3,
			"freedom": 1,
			"thy": 7,
			"morn": 1,
			"sleep": 1,
			"teach": 1,
			"moan": 1,
			"tonight": 1,
			"shore": 2,
			"ground": 3,
			"soul": 2,
			"hope": 1,
			"remember": 1,
			"rough": 1,
			"most": 1,
			"sir": 1,
			"held": 1,
			"rising": 1,
			"face": 1,
			"can": 2,
			"moment": 1,
			"noble": 1,
			"were": 1,
			"bud": 1,
			"was": 11,
			"that": 4,
			"if": 3,
			"willie": 1,
			"let": 1,
			"same": 1,
			"man": 5,
			"leaf": 1,
			"full": 1,
			"fall": 1,
			"broken": 1,
			"go": 1,
			"desert": 1,
			"must": 1,
			"what": 1,
			"beautiful": 2,
			"repose": 1,
			"stone": 1,
			"music": 2,
			"or": 6,
			"field": 2,
			"soil": 1,
			"lest": 1,
			"bright": 1,
			"have": 1,
			"study": 2,
			"tree": 3,
			"isle": 2,
			"danger": 1,
			"ride": 1,
			"bitter": 1,
			"winter": 1,
			"their": 2,
			"a": 6,
			"green": 2,
			"upon": 1,
			"many": 1,
			"spirit": 1,
			"hath": 2,
			"cruel": 3,
			"love": 2,
			"tomb": 1,
			"on": 1,
			"above": 1,
			"deep": 1,
			"memory": 1,
			"feast": 1,
			"celestial": 1,
			"old": 2,
			"naked": 1,
			"but": 1,
			"self": 1,
			"time": 4,
			"poor": 4,
			"known": 2,
			"thee": 1,
			"ye": 2,
			"lives": 1,
			"when": 1,
			"eat": 1,
			"deed": 3,
			"lifes": 5,
			"eternal": 1,
			"plain": 1,
			"be": 9,
			"glory": 2,
			"kind": 2,
			"earthly": 4,
			"rage": 1,
			"heart": 7,
			"sorrow": 1,
			"anguish": 1,
			"head": 1,
			"close": 1,
			"verse": 1,
			"and": 21,
			"sun": 1,
			"march": 1,
			"truth": 4,
			"do": 2,
			"fever": 1,
			"dark": 7,
			"quick": 1,
			"last": 5,
			"lone": 1,
			"dream": 1,
			"fate": 1,
			"year": 1,
			"days": 1,
			"grave": 2,
			"poem": 5,
			"i": 14,
			"woman": 2,
			"sunny": 1,
			"tower": 1,
			"dull": 3,
			"here": 2,
			"island": 1,
			"mournful": 1,
			"too": 1,
			"mortal": 4,
			"one": 5,
			"storm": 1,
			"secret": 1,
			"state": 1,
			"work": 1,
			"rather": 1,
			"saint": 1,
			"brow": 1,
			"how": 1,
			"other": 2,
			"from": 4,
			"stranger": 1,
			"strange": 3,
			"would": 3,
			"mind": 1,
			"reason": 1,
			"ancient": 1,
			"these": 1,
			"while": 1,
			"breast": 1,
			"present": 2,
			"early": 1,
			"calm": 1,
			"dread": 1,
			"sphere": 2,
			"kingdom": 4,
			"mighty": 1,
			"with": 8,
			"singing": 1,
			"sad": 2,
			"soft": 2,
			"single": 1,
			"some": 1,
			"realm": 1,
			"meet": 1,
			"will": 1,
			"all": 2,
			"chief": 1,
			"desolate": 1,
			"wild": 1,
			"flesh": 2,
			"thought": 1,
			"could": 1,
			"through": 1,
			"has": 3,
			"thats": 1,
			"toil": 1,
			"angels": 1,
			"doth": 1,
			"spring": 1,
			"fiery": 2,
			"being": 2,
			"our": 5,
			"throne": 1,
			"day": 19,
			"passing": 1,
			"page": 1,
			"frame": 1,
			"night": 5,
			"shall": 1,
			"golden": 1,
			"still": 4,
			"yet": 1,
			"way": 2,
			"to": 9,
			"poetry": 3,
			"hill": 1,
			"youth": 1,
			"springs": 1,
			"into": 1,
			"round": 1,
			"little": 5,
			"strain": 2,
			"heavenly": 2,
			"harp": 1,
			"may": 1,
			"th": 1,
			"we": 2,
			"simple": 1,
			"as": 1,
			"fair": 8,
			"english": 2,
			"happy": 2,
			"life": 11,
			"end": 1,
			"he": 4,
			"me": 2,
			"at": 3,
			"seat": 1,
			"point": 1,
			"wound": 2,
			"o": 1,
			"weight": 1,
			"blessed": 1,
			"the": 25,
			"fight": 1,
			"world": 26,
			"scarce": 1,
			"house": 2,
			"her": 3,
			"weak": 1,
			"grand": 2,
			"young": 1,
			"been": 1,
			"scene": 2,
			"first": 1,
			"there": 1,
			"lowly": 1,
			"restless": 2,
			"in": 10,
			"purpose": 2,
			"dim": 1,
			"air": 3
		},
		"blind": {
			"us": 1,
			"his": 2,
			"him": 1,
			"none": 1,
			"of": 1,
			"among": 1,
			"behold": 1,
			"not": 1,
			"is": 1,
			"laughing": 1,
			"nature": 1,
			"than": 1,
			"for": 1,
			"cannot": 1,
			"boys": 1,
			"my": 2,
			"that": 2,
			"had": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"folly": 1,
			"on": 1,
			"old": 1,
			"but": 1,
			"mans": 1,
			"and": 8,
			"i": 1,
			"with": 2,
			"will": 1,
			"yet": 1,
			"to": 2,
			"he": 2,
			"the": 2,
			"in": 1
		},
		"cast": {
			"his": 2,
			"him": 1,
			"are": 1,
			"of": 1,
			"up": 1,
			"off": 3,
			"it": 2,
			"away": 4,
			"for": 1,
			"my": 2,
			"thy": 2,
			"that": 2,
			"if": 1,
			"have": 1,
			"their": 2,
			"a": 4,
			"them": 1,
			"upon": 2,
			"on": 2,
			"thee": 1,
			"ye": 2,
			"out": 2,
			"and": 4,
			"down": 2,
			"one": 2,
			"from": 2,
			"aside": 1,
			"still": 1,
			"your": 2,
			"to": 3,
			"as": 1,
			"me": 1,
			"at": 1,
			"the": 7,
			"in": 4
		},
		"bonnie": {
			"flower": 1,
			"come": 2,
			"s": 1,
			"she": 1,
			"bird": 2,
			"away": 1,
			"about": 1,
			"robert": 1,
			"just": 1,
			"for": 1,
			"theres": 1,
			"sir": 1,
			"face": 1,
			"what": 1,
			"a": 1,
			"so": 1,
			"lives": 1,
			"how": 1,
			"these": 1,
			"with": 1,
			"to": 1,
			"as": 1,
			"he": 2,
			"o": 1,
			"the": 1,
			"there": 1
		},
		"star": {
			"more": 1,
			"forget": 1,
			"amidst": 1,
			"holds": 1,
			"of": 16,
			"amid": 1,
			"she": 1,
			"forth": 1,
			"thick": 1,
			"it": 1,
			"by": 1,
			"alone": 1,
			"is": 2,
			"shot": 1,
			"new": 1,
			"than": 1,
			"slow": 1,
			"where": 1,
			"richard": 1,
			"lost": 1,
			"my": 1,
			"came": 1,
			"thy": 2,
			"william": 1,
			"were": 1,
			"crowned": 1,
			"that": 5,
			"what": 1,
			"or": 1,
			"have": 1,
			"a": 2,
			"so": 2,
			"hath": 2,
			"but": 2,
			"when": 2,
			"and": 9,
			"down": 1,
			"from": 2,
			"while": 1,
			"early": 1,
			"with": 3,
			"wave": 1,
			"has": 1,
			"doth": 2,
			"to": 2,
			"little": 1,
			"at": 1,
			"o": 2,
			"the": 4,
			"in": 7
		},
		"season": {
			"are": 2,
			"dies": 1,
			"of": 2,
			"find": 1,
			"fade": 1,
			"by": 1,
			"bade": 1,
			"is": 1,
			"form": 1,
			"for": 1,
			"comes": 1,
			"gone": 1,
			"t": 1,
			"out": 1,
			"and": 1,
			"i": 1,
			"too": 1,
			"all": 1,
			"then": 1,
			"wrong": 1,
			"spread": 1
		},
		"high": {
			"summer": 1,
			"hear": 1,
			"light": 1,
			"mountains": 1,
			"his": 5,
			"crest": 1,
			"blood": 1,
			"are": 1,
			"right": 2,
			"under": 2,
			"who": 1,
			"which": 1,
			"of": 5,
			"this": 1,
			"high": 1,
			"fame": 1,
			"amid": 1,
			"souls": 1,
			"keep": 1,
			"hills": 1,
			"up": 2,
			"off": 1,
			"tide": 2,
			"she": 1,
			"nor": 3,
			"sez": 1,
			"city": 1,
			"place": 1,
			"praise": 2,
			"it": 2,
			"over": 1,
			"magic": 1,
			"spirits": 1,
			"wisdom": 1,
			"by": 2,
			"alone": 1,
			"is": 1,
			"care": 1,
			"they": 1,
			"prayer": 1,
			"nature": 1,
			"its": 1,
			"where": 3,
			"for": 3,
			"heaven": 1,
			"become": 1,
			"my": 1,
			"note": 1,
			"sing": 1,
			"comes": 1,
			"hope": 2,
			"flung": 1,
			"streets": 1,
			"can": 1,
			"walls": 2,
			"that": 2,
			"man": 1,
			"jerusalem": 1,
			"what": 2,
			"oh": 1,
			"even": 2,
			"or": 2,
			"their": 3,
			"a": 1,
			"so": 2,
			"upon": 2,
			"things": 1,
			"on": 2,
			"above": 2,
			"but": 1,
			"when": 2,
			"be": 1,
			"veil": 1,
			"german": 1,
			"and": 24,
			"dark": 1,
			"fate": 1,
			"i": 4,
			"home": 1,
			"here": 2,
			"one": 1,
			"from": 2,
			"honor": 1,
			"no": 3,
			"with": 6,
			"shone": 1,
			"then": 2,
			"through": 1,
			"notes": 1,
			"george": 1,
			"well": 1,
			"shine": 1,
			"minds": 1,
			"hall": 2,
			"fortune": 1,
			"shall": 2,
			"before": 1,
			"your": 3,
			"to": 8,
			"thinking": 1,
			"rich": 1,
			"yon": 1,
			"as": 7,
			"life": 1,
			"noon": 2,
			"he": 3,
			"o": 2,
			"chorus": 1,
			"the": 20,
			"though": 1,
			"stood": 1,
			"her": 1,
			"in": 11,
			"thoughts": 4
		},
		"rude": {
			"stream": 1,
			"men": 1,
			"of": 2,
			"ocean": 1,
			"song": 1,
			"sea": 1,
			"theres": 1,
			"sing": 1,
			"rough": 1,
			"that": 2,
			"an": 1,
			"their": 1,
			"death": 1,
			"turns": 1,
			"and": 3,
			"last": 1,
			"ill": 1,
			"bound": 1,
			"till": 1,
			"before": 1,
			"your": 1,
			"lies": 2,
			"the": 2
		},
		"graves": {
			"are": 1,
			"of": 7,
			"by": 1,
			"long": 1,
			"where": 1,
			"sleep": 1,
			"hope": 1,
			"that": 2,
			"their": 1,
			"a": 1,
			"but": 1,
			"when": 1,
			"and": 1,
			"all": 1,
			"gods": 1,
			"shall": 1,
			"we": 1,
			"gloom": 1,
			"glad": 1,
			"o": 1,
			"the": 2,
			"tis": 1
		},
		"worlds": {
			"else": 1,
			"are": 2,
			"beside": 1,
			"which": 1,
			"tired": 1,
			"two": 1,
			"not": 1,
			"wisdom": 1,
			"load": 1,
			"wide": 1,
			"thus": 1,
			"new": 1,
			"theres": 1,
			"standing": 1,
			"desire": 1,
			"vain": 1,
			"peace": 1,
			"gladness": 1,
			"a": 2,
			"so": 1,
			"dawn": 1,
			"hath": 1,
			"delight": 1,
			"above": 2,
			"but": 1,
			"and": 3,
			"last": 1,
			"i": 1,
			"unknown": 1,
			"hate": 1,
			"broad": 1,
			"from": 1,
			"no": 1,
			"wild": 1,
			"laugh": 1,
			"spring": 1,
			"to": 2,
			"strife": 1,
			"fair": 1,
			"end": 3,
			"left": 1,
			"the": 2,
			"first": 1,
			"there": 1
		},
		"fame": {
			"footnote": 1,
			"since": 1,
			"die": 1,
			"his": 1,
			"which": 1,
			"of": 4,
			"this": 1,
			"fame": 1,
			"pour": 1,
			"nor": 1,
			"dear": 1,
			"fresh": 1,
			"not": 2,
			"fade": 1,
			"is": 10,
			"they": 2,
			"thus": 1,
			"than": 1,
			"my": 2,
			"great": 1,
			"forgot": 1,
			"ere": 1,
			"sir": 1,
			"held": 1,
			"can": 1,
			"were": 1,
			"did": 1,
			"was": 1,
			"that": 2,
			"let": 1,
			"or": 2,
			"their": 1,
			"a": 1,
			"true": 1,
			"on": 2,
			"but": 3,
			"when": 1,
			"be": 1,
			"and": 10,
			"i": 1,
			"unknown": 1,
			"while": 1,
			"with": 1,
			"will": 1,
			"king": 1,
			"shall": 2,
			"your": 1,
			"to": 3,
			"may": 1,
			"we": 1,
			"rings": 1,
			"the": 6,
			"tis": 1,
			"though": 3,
			"her": 1,
			"been": 1,
			"there": 1,
			"in": 2
		},
		"amid": {
			"fierce": 1,
			"of": 1,
			"its": 1,
			"that": 2,
			"their": 3,
			"a": 1,
			"years": 1,
			"and": 1,
			"these": 2,
			"all": 3,
			"our": 2,
			"cities": 1,
			"the": 41
		},
		"yield": {
			"us": 2,
			"his": 1,
			"him": 2,
			"this": 1,
			"high": 1,
			"up": 3,
			"she": 1,
			"forth": 1,
			"fruit": 1,
			"proud": 1,
			"twas": 1,
			"they": 1,
			"for": 3,
			"my": 1,
			"that": 1,
			"what": 1,
			"their": 4,
			"a": 2,
			"them": 1,
			"but": 1,
			"thee": 1,
			"and": 2,
			"i": 1,
			"one": 1,
			"till": 1,
			"to": 5,
			"as": 1,
			"at": 1,
			"the": 3,
			"her": 1
		},
		"souls": {
			"breathing": 1,
			"are": 4,
			"made": 1,
			"who": 3,
			"of": 8,
			"grew": 1,
			"dwell": 1,
			"far": 1,
			"like": 1,
			"they": 2,
			"afar": 1,
			"pleasure": 1,
			"for": 2,
			"desire": 3,
			"thy": 1,
			"therefore": 1,
			"most": 1,
			"can": 1,
			"immortal": 1,
			"did": 1,
			"was": 1,
			"that": 3,
			"let": 1,
			"full": 1,
			"must": 1,
			"sit": 1,
			"have": 2,
			"a": 4,
			"thee": 1,
			"out": 2,
			"anguish": 1,
			"and": 5,
			"do": 1,
			"black": 1,
			"i": 1,
			"thou": 1,
			"one": 1,
			"draw": 1,
			"how": 1,
			"from": 1,
			"calm": 1,
			"with": 1,
			"around": 1,
			"will": 1,
			"all": 1,
			"ho": 1,
			"large": 1,
			"through": 1,
			"george": 1,
			"wealth": 1,
			"neer": 1,
			"shall": 2,
			"to": 1,
			"into": 1,
			"may": 1,
			"we": 2,
			"whose": 2,
			"as": 1,
			"straight": 1,
			"the": 3,
			"tis": 1,
			"in": 7,
			"purpose": 1
		},
		"keep": {
			"sweet": 1,
			"tune": 1,
			"us": 1,
			"ring": 1,
			"within": 2,
			"virtues": 1,
			"his": 3,
			"him": 1,
			"see": 1,
			"faithful": 1,
			"back": 1,
			"who": 1,
			"of": 1,
			"nor": 1,
			"mine": 1,
			"not": 1,
			"dry": 1,
			"it": 5,
			"father": 1,
			"they": 1,
			"you": 2,
			"its": 1,
			"those": 1,
			"for": 3,
			"worse": 1,
			"my": 2,
			"themselves": 1,
			"thy": 7,
			"watch": 2,
			"was": 1,
			"that": 1,
			"if": 1,
			"bear": 1,
			"or": 2,
			"their": 3,
			"a": 3,
			"so": 1,
			"them": 1,
			"green": 1,
			"on": 1,
			"but": 2,
			"time": 1,
			"ye": 1,
			"when": 1,
			"gone": 1,
			"until": 1,
			"out": 1,
			"and": 4,
			"i": 2,
			"thou": 3,
			"down": 1,
			"here": 1,
			"one": 3,
			"from": 1,
			"reason": 1,
			"with": 1,
			"all": 1,
			"our": 1,
			"still": 1,
			"your": 6,
			"me": 3,
			"o": 2,
			"the": 22,
			"house": 1,
			"her": 2,
			"in": 4
		},
		"alike": {
			"are": 1,
			"they": 1,
			"for": 1,
			"thy": 1,
			"if": 1,
			"on": 1,
			"above": 1,
			"but": 1,
			"and": 1,
			"from": 3,
			"with": 2,
			"all": 1,
			"yet": 1,
			"to": 1,
			"the": 4,
			"theyre": 1,
			"in": 2
		},
		"calls": {
			"us": 2,
			"him": 1,
			"back": 1,
			"not": 1,
			"every": 1,
			"away": 1,
			"idle": 1,
			"for": 2,
			"seek": 1,
			"but": 1,
			"ye": 1,
			"out": 1,
			"and": 1,
			"from": 2,
			"no": 1,
			"some": 1,
			"to": 2,
			"me": 3,
			"the": 2,
			"her": 1
		},
		"pour": {
			"forth": 1,
			"it": 2,
			"long": 2,
			"thy": 1,
			"let": 1,
			"an": 1,
			"their": 1,
			"upon": 1,
			"on": 1,
			"poor": 1,
			"out": 1,
			"and": 3,
			"each": 1,
			"your": 1,
			"we": 1,
			"the": 4
		},
		"hung": {
			"his": 2,
			"up": 1,
			"it": 1,
			"over": 1,
			"like": 2,
			"oer": 1,
			"victory": 1,
			"must": 1,
			"an": 1,
			"them": 2,
			"upon": 3,
			"on": 4,
			"fast": 1,
			"when": 1,
			"t": 1,
			"and": 4,
			"dark": 1,
			"down": 2,
			"here": 1,
			"with": 3,
			"our": 2,
			"to": 1,
			"the": 2,
			"her": 2,
			"in": 1
		},
		"talk": {
			"his": 1,
			"six": 1,
			"who": 1,
			"of": 7,
			"nor": 1,
			"not": 1,
			"wise": 1,
			"that": 1,
			"lest": 1,
			"a": 1,
			"so": 2,
			"ye": 1,
			"down": 1,
			"with": 4,
			"till": 1,
			"only": 1,
			"to": 1,
			"as": 1,
			"the": 3
		},
		"wine": {
			"come": 2,
			"james": 1,
			"of": 4,
			"once": 1,
			"she": 1,
			"nor": 2,
			"they": 1,
			"you": 1,
			"than": 1,
			"beams": 1,
			"for": 1,
			"my": 1,
			"makes": 1,
			"can": 1,
			"was": 1,
			"that": 2,
			"go": 1,
			"what": 1,
			"an": 1,
			"or": 1,
			"a": 1,
			"lord": 1,
			"leave": 1,
			"on": 1,
			"roses": 1,
			"and": 5,
			"here": 1,
			"might": 1,
			"from": 2,
			"no": 1,
			"all": 1,
			"gay": 1,
			"gods": 1,
			"our": 1,
			"your": 1,
			"to": 1,
			"we": 5,
			"he": 1,
			"o": 2,
			"the": 3,
			"there": 1,
			"in": 4
		},
		"kept": {
			"free": 1,
			"his": 3,
			"him": 1,
			"men": 1,
			"up": 1,
			"aught": 1,
			"for": 3,
			"my": 1,
			"watch": 1,
			"battle": 1,
			"were": 1,
			"indeed": 1,
			"always": 1,
			"their": 2,
			"a": 1,
			"on": 2,
			"time": 1,
			"and": 2,
			"from": 1,
			"no": 1,
			"with": 4,
			"through": 1,
			"our": 1,
			"open": 1,
			"yet": 1,
			"to": 1,
			"as": 1,
			"me": 2,
			"at": 1,
			"the": 7
		},
		"learning": {
			"die": 1,
			"this": 1,
			"shows": 1,
			"by": 1,
			"is": 1,
			"you": 1,
			"lightly": 1,
			"must": 1,
			"a": 1,
			"hath": 1,
			"and": 2,
			"how": 1,
			"could": 1,
			"still": 1,
			"yet": 1,
			"to": 2,
			"lies": 1,
			"grow": 2,
			"in": 1
		},
		"after": {
			"summer": 2,
			"us": 1,
			"his": 2,
			"him": 4,
			"lady": 1,
			"weary": 1,
			"this": 1,
			"nor": 1,
			"it": 3,
			"by": 1,
			"long": 3,
			"immortality": 1,
			"its": 1,
			"theres": 1,
			"my": 2,
			"blow": 1,
			"hour": 1,
			"evening": 1,
			"rain": 2,
			"was": 1,
			"that": 1,
			"another": 1,
			"what": 1,
			"gave": 1,
			"a": 7,
			"so": 1,
			"them": 1,
			"many": 1,
			"dawn": 1,
			"death": 5,
			"years": 2,
			"when": 2,
			"lifes": 1,
			"sorrow": 1,
			"and": 2,
			"year": 2,
			"days": 1,
			"thou": 1,
			"wretched": 1,
			"one": 1,
			"storm": 1,
			"such": 1,
			"from": 1,
			"across": 1,
			"wave": 1,
			"some": 1,
			"all": 2,
			"day": 4,
			"hall": 1,
			"night": 1,
			"as": 1,
			"life": 1,
			"at": 1,
			"the": 21,
			"her": 1,
			"in": 2,
			"step": 1
		},
		"hills": {
			"bow": 1,
			"look": 1,
			"his": 1,
			"seemed": 1,
			"of": 12,
			"amid": 1,
			"beyond": 1,
			"grew": 1,
			"rose": 1,
			"began": 1,
			"far": 1,
			"alone": 1,
			"is": 1,
			"looked": 1,
			"away": 1,
			"they": 1,
			"where": 1,
			"for": 1,
			"my": 2,
			"again": 1,
			"were": 3,
			"oer": 1,
			"was": 1,
			"that": 2,
			"if": 1,
			"or": 1,
			"have": 2,
			"their": 1,
			"so": 1,
			"lay": 1,
			"on": 1,
			"above": 1,
			"and": 17,
			"i": 1,
			"thou": 1,
			"between": 1,
			"from": 1,
			"sublime": 1,
			"with": 5,
			"well": 1,
			"behind": 1,
			"our": 1,
			"shall": 2,
			"to": 3,
			"lie": 1,
			"we": 3,
			"he": 1,
			"at": 2,
			"the": 6,
			"her": 1,
			"in": 1
		},
		"wander": {
			"earth": 1,
			"wander": 1,
			"forth": 1,
			"far": 2,
			"by": 2,
			"alone": 1,
			"they": 1,
			"wide": 1,
			"where": 1,
			"burning": 1,
			"i": 1,
			"down": 1,
			"too": 1,
			"now": 1,
			"through": 2,
			"as": 1,
			"in": 2
		},
		"daughter": {
			"wife": 1,
			"of": 15,
			"by": 1,
			"father": 1,
			"thus": 1,
			"down": 1,
			"from": 1,
			"sought": 1,
			"loved": 1,
			"her": 1
		},
		"longfellow": {
			"beside": 1,
			"hollow": 1,
			"hymn": 1,
			"mother": 1,
			"my": 1,
			"times": 1,
			"an": 1,
			"or": 1,
			"a": 1,
			"whittier": 1,
			"and": 1,
			"i": 2,
			"one": 1,
			"saint": 1,
			"service": 1,
			"only": 1,
			"yet": 1,
			"happy": 1,
			"the": 3
		},
		"once": {
			"more": 58,
			"parting": 1,
			"his": 1,
			"creed": 1,
			"white": 1,
			"who": 1,
			"of": 1,
			"this": 1,
			"amid": 1,
			"hung": 1,
			"part": 1,
			"behold": 2,
			"not": 1,
			"put": 1,
			"it": 2,
			"bless": 1,
			"by": 3,
			"is": 3,
			"like": 1,
			"fairest": 1,
			"they": 2,
			"its": 1,
			"for": 4,
			"past": 1,
			"bride": 1,
			"my": 3,
			"again": 7,
			"thy": 1,
			"can": 1,
			"were": 3,
			"oer": 2,
			"did": 1,
			"was": 8,
			"both": 1,
			"says": 1,
			"full": 1,
			"had": 2,
			"an": 2,
			"or": 2,
			"have": 1,
			"gave": 1,
			"trod": 1,
			"their": 1,
			"a": 8,
			"so": 3,
			"upon": 2,
			"lay": 1,
			"met": 1,
			"on": 4,
			"own": 1,
			"red": 2,
			"fast": 2,
			"but": 1,
			"thee": 1,
			"when": 2,
			"having": 1,
			"kind": 1,
			"and": 11,
			"i": 6,
			"raised": 1,
			"one": 1,
			"how": 2,
			"from": 2,
			"ill": 1,
			"beat": 2,
			"while": 1,
			"with": 5,
			"now": 1,
			"then": 1,
			"through": 2,
			"ten": 1,
			"has": 1,
			"begun": 1,
			"wrong": 1,
			"open": 1,
			"loved": 2,
			"before": 1,
			"to": 8,
			"into": 1,
			"religion": 1,
			"know": 1,
			"we": 2,
			"as": 2,
			"he": 3,
			"me": 1,
			"at": 2,
			"led": 1,
			"chorus": 1,
			"the": 17,
			"tis": 2,
			"stood": 1,
			"her": 1,
			"been": 1,
			"dead": 2,
			"there": 2,
			"in": 11
		},
		"feels": {
			"his": 1,
			"feels": 1,
			"she": 1,
			"nor": 1,
			"not": 1,
			"it": 1,
			"new": 1,
			"for": 2,
			"sir": 1,
			"that": 1,
			"a": 4,
			"whole": 1,
			"on": 1,
			"and": 2,
			"less": 1,
			"from": 1,
			"at": 2,
			"left": 1,
			"the": 8,
			"in": 1
		},
		"up": {
			"more": 1,
			"thine": 1,
			"within": 1,
			"his": 14,
			"lady": 2,
			"war": 1,
			"of": 3,
			"amid": 1,
			"hung": 1,
			"once": 1,
			"up": 1,
			"she": 1,
			"among": 1,
			"nor": 1,
			"gold": 1,
			"grown": 1,
			"lift": 2,
			"rose": 2,
			"mine": 1,
			"side": 1,
			"every": 1,
			"over": 1,
			"hangs": 1,
			"by": 8,
			"sorrows": 1,
			"rise": 2,
			"like": 2,
			"children": 1,
			"forever": 1,
			"mother": 1,
			"new": 1,
			"without": 1,
			"its": 5,
			"those": 1,
			"where": 1,
			"for": 9,
			"charge": 1,
			"base": 1,
			"my": 10,
			"came": 2,
			"again": 2,
			"thy": 7,
			"pretty": 1,
			"comes": 1,
			"ere": 1,
			"friend": 1,
			"queen": 1,
			"sin": 1,
			"was": 2,
			"if": 1,
			"bear": 1,
			"both": 1,
			"another": 1,
			"full": 2,
			"half": 1,
			"gives": 1,
			"what": 3,
			"hold": 1,
			"de": 3,
			"lest": 1,
			"wilt": 1,
			"their": 2,
			"a": 16,
			"so": 2,
			"flies": 1,
			"lord": 1,
			"almost": 1,
			"on": 7,
			"above": 5,
			"when": 2,
			"lifes": 1,
			"wings": 1,
			"say": 1,
			"close": 1,
			"and": 40,
			"myself": 1,
			"days": 1,
			"grave": 1,
			"i": 2,
			"thou": 1,
			"against": 1,
			"from": 11,
			"these": 1,
			"while": 1,
			"honor": 1,
			"with": 19,
			"around": 1,
			"now": 1,
			"give": 1,
			"till": 3,
			"himself": 1,
			"comrades": 2,
			"loving": 1,
			"then": 1,
			"well": 1,
			"spoke": 1,
			"dost": 1,
			"our": 3,
			"wrong": 1,
			"aside": 1,
			"before": 2,
			"your": 4,
			"to": 46,
			"hill": 2,
			"round": 1,
			"slowly": 1,
			"get": 3,
			"as": 3,
			"fair": 1,
			"life": 1,
			"at": 3,
			"o": 1,
			"the": 75,
			"theyre": 1,
			"house": 1,
			"her": 3,
			"in": 31
		},
		"off": {
			"his": 2,
			"this": 1,
			"amid": 1,
			"calls": 1,
			"every": 2,
			"by": 1,
			"like": 2,
			"they": 1,
			"its": 1,
			"for": 1,
			"thy": 1,
			"ere": 1,
			"along": 2,
			"that": 1,
			"what": 1,
			"an": 1,
			"even": 1,
			"tears": 1,
			"their": 1,
			"a": 1,
			"on": 1,
			"old": 1,
			"and": 10,
			"i": 1,
			"each": 2,
			"from": 2,
			"ill": 1,
			"duty": 1,
			"with": 2,
			"all": 1,
			"well": 1,
			"shine": 1,
			"our": 3,
			"to": 5,
			"human": 1,
			"as": 1,
			"he": 1,
			"at": 2,
			"the": 12,
			"tis": 1,
			"there": 1,
			"in": 4
		},
		"food": {
			"of": 4,
			"up": 1,
			"it": 1,
			"why": 1,
			"for": 1,
			"my": 2,
			"what": 1,
			"but": 1,
			"when": 1,
			"and": 4,
			"i": 1,
			"such": 1,
			"has": 1,
			"as": 1,
			"he": 1,
			"o": 1,
			"the": 1
		},
		"triumph": {
			"more": 1,
			"won": 1,
			"die": 1,
			"mad": 1,
			"seemed": 1,
			"of": 3,
			"high": 1,
			"over": 3,
			"is": 1,
			"heard": 1,
			"for": 1,
			"held": 2,
			"were": 1,
			"oer": 5,
			"them": 1,
			"lord": 1,
			"ceased": 1,
			"be": 1,
			"and": 5,
			"rather": 1,
			"from": 1,
			"with": 1,
			"now": 2,
			"doth": 1,
			"shall": 1,
			"still": 3,
			"yet": 1,
			"at": 1,
			"led": 1,
			"the": 2,
			"share": 1,
			"in": 3
		},
		"tide": {
			"england": 1,
			"stream": 1,
			"of": 12,
			"beheld": 1,
			"lift": 1,
			"not": 1,
			"nevermore": 1,
			"small": 1,
			"heaven": 1,
			"theres": 1,
			"thy": 1,
			"was": 3,
			"or": 1,
			"have": 2,
			"so": 1,
			"but": 1,
			"when": 1,
			"and": 9,
			"i": 1,
			"broad": 1,
			"each": 1,
			"with": 1,
			"to": 3,
			"as": 3,
			"fair": 1,
			"he": 1,
			"at": 1,
			"the": 4,
			"scarce": 1,
			"in": 2
		},
		"breathe": {
			"within": 1,
			"breathe": 1,
			"not": 1,
			"its": 1,
			"slow": 1,
			"my": 1,
			"again": 1,
			"along": 1,
			"oer": 1,
			"let": 1,
			"go": 1,
			"their": 1,
			"a": 4,
			"so": 1,
			"and": 4,
			"truth": 1,
			"one": 1,
			"such": 1,
			"no": 1,
			"will": 1,
			"the": 7,
			"in": 4
		},
		"angel": {
			"caught": 1,
			"hear": 1,
			"who": 3,
			"of": 9,
			"high": 1,
			"she": 1,
			"by": 1,
			"like": 1,
			"gazed": 1,
			"mother": 1,
			"nay": 2,
			"robert": 1,
			"sang": 1,
			"came": 1,
			"can": 1,
			"bear": 1,
			"go": 1,
			"hands": 1,
			"bright": 1,
			"a": 1,
			"faces": 1,
			"brings": 1,
			"met": 1,
			"on": 1,
			"death": 2,
			"when": 1,
			"feet": 1,
			"wings": 1,
			"kind": 1,
			"sweetly": 1,
			"and": 7,
			"truth": 1,
			"thou": 1,
			"down": 2,
			"brow": 1,
			"from": 2,
			"took": 1,
			"with": 4,
			"now": 2,
			"spoke": 1,
			"neer": 1,
			"yet": 1,
			"gently": 2,
			"smiled": 1,
			"said": 5,
			"at": 1,
			"the": 2,
			"in": 4
		},
		"she": {
			"come": 1,
			"low": 1,
			"caught": 1,
			"fled": 1,
			"us": 1,
			"wrought": 1,
			"walks": 2,
			"since": 1,
			"died": 12,
			"loves": 6,
			"went": 9,
			"touched": 2,
			"his": 2,
			"james": 1,
			"him": 6,
			"crossed": 1,
			"means": 1,
			"seemed": 3,
			"fears": 2,
			"back": 2,
			"fell": 1,
			"who": 4,
			"which": 2,
			"of": 3,
			"calls": 1,
			"kept": 2,
			"wander": 1,
			"once": 1,
			"feels": 4,
			"she": 5,
			"liberty": 1,
			"nor": 1,
			"goes": 2,
			"dear": 1,
			"rose": 3,
			"sings": 6,
			"not": 6,
			"put": 1,
			"it": 3,
			"neither": 2,
			"far": 1,
			"brought": 2,
			"bade": 2,
			"alone": 1,
			"kissed": 2,
			"is": 33,
			"soon": 1,
			"looked": 8,
			"like": 2,
			"please": 1,
			"good": 1,
			"ever": 2,
			"either": 1,
			"shook": 2,
			"prayer": 1,
			"gazed": 2,
			"moves": 2,
			"heard": 5,
			"leaves": 1,
			"without": 1,
			"laid": 2,
			"those": 1,
			"where": 2,
			"used": 2,
			"for": 7,
			"past": 1,
			"bosom": 1,
			"should": 3,
			"sang": 3,
			"cannot": 5,
			"speak": 1,
			"my": 4,
			"bore": 3,
			"came": 2,
			"winds": 1,
			"great": 1,
			"wheels": 1,
			"comes": 4,
			"wept": 2,
			"whom": 1,
			"makes": 1,
			"most": 1,
			"held": 3,
			"sits": 6,
			"can": 3,
			"were": 2,
			"bears": 2,
			"oer": 3,
			"crowned": 1,
			"did": 6,
			"walls": 1,
			"was": 25,
			"that": 8,
			"fain": 1,
			"says": 6,
			"always": 1,
			"spake": 2,
			"cried": 11,
			"had": 16,
			"gives": 3,
			"must": 5,
			"what": 1,
			"oh": 1,
			"even": 1,
			"or": 2,
			"finds": 3,
			"moved": 2,
			"hands": 1,
			"gave": 8,
			"trod": 2,
			"a": 10,
			"so": 1,
			"upon": 1,
			"lay": 4,
			"never": 5,
			"hath": 5,
			"met": 1,
			"love": 1,
			"on": 3,
			"saw": 9,
			"sees": 5,
			"filled": 1,
			"but": 3,
			"perhaps": 1,
			"thee": 4,
			"lives": 5,
			"when": 3,
			"eat": 1,
			"onward": 1,
			"turns": 3,
			"felt": 3,
			"knows": 2,
			"be": 2,
			"out": 1,
			"watched": 1,
			"tried": 1,
			"and": 17,
			"do": 1,
			"cries": 3,
			"hid": 1,
			"i": 2,
			"knew": 6,
			"thou": 1,
			"down": 1,
			"told": 1,
			"bids": 2,
			"one": 1,
			"breathes": 1,
			"softly": 1,
			"hate": 1,
			"stands": 3,
			"looks": 3,
			"each": 4,
			"how": 1,
			"from": 4,
			"sought": 1,
			"would": 4,
			"while": 1,
			"no": 4,
			"bound": 1,
			"took": 4,
			"called": 2,
			"with": 10,
			"soft": 1,
			"drew": 1,
			"set": 2,
			"shone": 2,
			"will": 14,
			"wore": 2,
			"all": 2,
			"then": 1,
			"thought": 3,
			"could": 7,
			"through": 1,
			"has": 7,
			"spoke": 3,
			"doth": 2,
			"turned": 1,
			"our": 1,
			"walked": 2,
			"sleeps": 1,
			"open": 1,
			"loved": 6,
			"stay": 1,
			"shall": 5,
			"before": 2,
			"only": 4,
			"still": 2,
			"mingled": 2,
			"yet": 1,
			"to": 12,
			"wandered": 1,
			"into": 1,
			"backward": 1,
			"wounds": 1,
			"lived": 5,
			"ah": 1,
			"may": 2,
			"smiled": 3,
			"loss": 1,
			"spread": 1,
			"whose": 1,
			"as": 4,
			"fair": 1,
			"stand": 1,
			"said": 18,
			"he": 2,
			"me": 3,
			"sat": 3,
			"at": 3,
			"lies": 1,
			"led": 1,
			"o": 1,
			"left": 2,
			"rings": 1,
			"the": 23,
			"bent": 1,
			"stood": 11,
			"scarce": 1,
			"seems": 1,
			"her": 18,
			"passed": 5,
			"been": 1,
			"dead": 1,
			"there": 1,
			"in": 7,
			"saith": 1
		},
		"rock": {
			"us": 1,
			"him": 1,
			"hollow": 1,
			"of": 14,
			"by": 1,
			"they": 1,
			"where": 2,
			"run": 1,
			"were": 1,
			"that": 1,
			"or": 2,
			"their": 2,
			"on": 1,
			"and": 14,
			"i": 1,
			"sublime": 1,
			"with": 1,
			"then": 1,
			"ten": 1,
			"to": 4,
			"round": 1,
			"whose": 1,
			"as": 1,
			"tis": 1,
			"waste": 1
		},
		"liberty": {
			"james": 1,
			"of": 2,
			"this": 1,
			"it": 1,
			"alone": 1,
			"is": 1,
			"either": 1,
			"they": 1,
			"swift": 1,
			"een": 1,
			"richard": 1,
			"run": 1,
			"for": 2,
			"came": 1,
			"shines": 1,
			"battle": 1,
			"ere": 2,
			"sir": 1,
			"along": 1,
			"can": 1,
			"indeed": 1,
			"full": 1,
			"what": 1,
			"oh": 1,
			"stone": 1,
			"tree": 5,
			"old": 1,
			"when": 2,
			"and": 6,
			"with": 1,
			"thomas": 1,
			"to": 2,
			"lie": 1,
			"as": 2,
			"he": 2,
			"at": 1,
			"arise": 1,
			"the": 3
		},
		"among": {
			"his": 3,
			"women": 1,
			"fell": 1,
			"men": 1,
			"court": 1,
			"rude": 1,
			"she": 1,
			"nations": 1,
			"earths": 1,
			"its": 1,
			"those": 2,
			"false": 1,
			"what": 1,
			"de": 1,
			"their": 2,
			"a": 1,
			"them": 6,
			"and": 1,
			"lilies": 1,
			"gods": 1,
			"fallen": 1,
			"your": 1,
			"know": 1,
			"as": 1,
			"o": 1,
			"the": 53
		},
		"shakespeare": {
			"lady": 1,
			"of": 1,
			"put": 1,
			"like": 1,
			"my": 1,
			"mary": 1,
			"spake": 1,
			"what": 1,
			"when": 1,
			"and": 2,
			"from": 1,
			"then": 1,
			"lie": 1,
			"fair": 1,
			"the": 5,
			"in": 1
		},
		"silence": {
			"sound": 1,
			"breaking": 1,
			"wrought": 1,
			"under": 1,
			"of": 6,
			"alike": 1,
			"hung": 1,
			"three": 1,
			"lift": 1,
			"not": 1,
			"hangs": 1,
			"by": 1,
			"unto": 1,
			"like": 2,
			"heard": 1,
			"for": 1,
			"came": 1,
			"ground": 1,
			"seek": 1,
			"sin": 1,
			"faith": 1,
			"that": 4,
			"pure": 1,
			"what": 1,
			"or": 2,
			"hath": 1,
			"on": 1,
			"break": 1,
			"deep": 2,
			"but": 2,
			"ye": 1,
			"be": 1,
			"and": 12,
			"thou": 1,
			"broke": 1,
			"from": 1,
			"sought": 1,
			"no": 1,
			"bid": 1,
			"sad": 1,
			"meet": 1,
			"all": 2,
			"through": 3,
			"only": 1,
			"still": 1,
			"into": 1,
			"we": 2,
			"said": 1,
			"at": 1,
			"the": 4,
			"stood": 1,
			"there": 2,
			"in": 2,
			"shed": 1
		},
		"beyond": {
			"us": 2,
			"light": 1,
			"his": 2,
			"which": 2,
			"this": 6,
			"forth": 1,
			"height": 1,
			"today": 1,
			"it": 1,
			"something": 1,
			"is": 1,
			"for": 1,
			"tomorrow": 1,
			"my": 1,
			"deaths": 1,
			"thy": 1,
			"understand": 1,
			"their": 1,
			"a": 1,
			"them": 1,
			"and": 5,
			"ill": 1,
			"these": 2,
			"will": 1,
			"all": 6,
			"then": 1,
			"to": 1,
			"ah": 1,
			"lies": 1,
			"o": 1,
			"the": 55,
			"though": 1,
			"her": 2,
			"in": 1
		},
		"anonymous": {
			"fond": 1,
			"lady": 1,
			"war": 1,
			"of": 2,
			"long": 1,
			"forever": 1,
			"my": 3,
			"sir": 1,
			"what": 1,
			"oh": 1,
			"ride": 1,
			"paradise": 1,
			"from": 1,
			"give": 1,
			"minds": 1,
			"our": 1,
			"we": 1,
			"translation": 1,
			"the": 10,
			"in": 2
		},
		"nor": {
			"come": 1,
			"dare": 1,
			"look": 1,
			"woes": 1,
			"more": 3,
			"hear": 3,
			"walks": 2,
			"thine": 1,
			"dust": 1,
			"justice": 1,
			"light": 1,
			"space": 1,
			"doubt": 1,
			"cloud": 2,
			"his": 1,
			"save": 1,
			"mad": 1,
			"hell": 2,
			"him": 1,
			"see": 2,
			"means": 1,
			"none": 1,
			"war": 1,
			"weary": 1,
			"are": 2,
			"fears": 4,
			"word": 1,
			"silent": 1,
			"call": 1,
			"shout": 1,
			"of": 7,
			"brook": 1,
			"this": 2,
			"cast": 1,
			"high": 1,
			"fame": 2,
			"yield": 2,
			"talk": 1,
			"wine": 1,
			"after": 1,
			"wander": 1,
			"up": 2,
			"angel": 1,
			"nor": 15,
			"gold": 1,
			"roar": 1,
			"fruit": 1,
			"played": 1,
			"aught": 2,
			"mine": 3,
			"behold": 1,
			"hours": 1,
			"far": 1,
			"health": 1,
			"tongue": 1,
			"weep": 1,
			"ease": 1,
			"by": 2,
			"bade": 1,
			"jove": 1,
			"alone": 2,
			"breaks": 1,
			"land": 1,
			"wars": 1,
			"is": 2,
			"rise": 1,
			"looked": 2,
			"takes": 1,
			"boy": 1,
			"why": 2,
			"force": 1,
			"ever": 7,
			"care": 2,
			"they": 1,
			"prayer": 1,
			"faint": 1,
			"you": 1,
			"thus": 1,
			"heard": 2,
			"leaves": 1,
			"than": 1,
			"smile": 1,
			"pleasure": 1,
			"stir": 1,
			"een": 1,
			"song": 2,
			"those": 2,
			"sea": 1,
			"where": 1,
			"others": 1,
			"lovers": 1,
			"for": 7,
			"read": 1,
			"catch": 1,
			"cry": 1,
			"speak": 1,
			"my": 3,
			"words": 1,
			"great": 1,
			"deaths": 1,
			"sleep": 1,
			"tone": 1,
			"peace": 2,
			"wept": 2,
			"soul": 1,
			"hope": 4,
			"seek": 2,
			"because": 1,
			"makes": 1,
			"any": 2,
			"times": 1,
			"town": 1,
			"evening": 2,
			"rising": 1,
			"name": 2,
			"can": 6,
			"power": 2,
			"did": 1,
			"was": 4,
			"that": 7,
			"let": 7,
			"show": 1,
			"cares": 1,
			"man": 1,
			"always": 1,
			"leaf": 1,
			"cried": 1,
			"had": 2,
			"must": 1,
			"what": 2,
			"sit": 1,
			"oh": 1,
			"an": 1,
			"moon": 1,
			"even": 3,
			"think": 2,
			"wilt": 1,
			"moved": 1,
			"have": 4,
			"tree": 1,
			"winter": 1,
			"a": 5,
			"so": 1,
			"heat": 1,
			"given": 1,
			"sink": 2,
			"lay": 1,
			"never": 1,
			"hath": 1,
			"cruel": 1,
			"walk": 1,
			"love": 2,
			"groan": 1,
			"on": 2,
			"fast": 1,
			"deep": 1,
			"content": 1,
			"but": 2,
			"iron": 1,
			"death": 1,
			"time": 1,
			"perhaps": 1,
			"canst": 2,
			"until": 1,
			"sigh": 1,
			"be": 4,
			"t": 1,
			"out": 1,
			"dumb": 1,
			"rhyme": 1,
			"and": 6,
			"eer": 1,
			"order": 1,
			"sun": 1,
			"dark": 2,
			"move": 1,
			"dream": 1,
			"i": 3,
			"knew": 1,
			"haste": 1,
			"less": 6,
			"steel": 2,
			"one": 2,
			"might": 1,
			"breathes": 1,
			"such": 1,
			"hate": 1,
			"fields": 1,
			"how": 1,
			"from": 2,
			"would": 5,
			"living": 1,
			"reason": 1,
			"rare": 1,
			"these": 1,
			"calm": 1,
			"maidens": 1,
			"with": 2,
			"drew": 1,
			"now": 2,
			"set": 1,
			"foreign": 1,
			"meet": 1,
			"will": 2,
			"locks": 1,
			"prayers": 1,
			"all": 5,
			"flesh": 1,
			"could": 2,
			"spoke": 1,
			"doth": 1,
			"mount": 1,
			"wealth": 1,
			"day": 1,
			"works": 1,
			"fear": 3,
			"night": 3,
			"mercy": 1,
			"shall": 8,
			"still": 1,
			"your": 1,
			"yet": 12,
			"to": 5,
			"springs": 1,
			"round": 1,
			"written": 1,
			"wounds": 1,
			"know": 3,
			"soar": 1,
			"may": 1,
			"sign": 1,
			"as": 1,
			"stand": 1,
			"end": 1,
			"he": 2,
			"at": 2,
			"grow": 1,
			"the": 19,
			"tis": 1,
			"waste": 1,
			"though": 4,
			"bent": 1,
			"stood": 1,
			"scarce": 1,
			"her": 2,
			"change": 5,
			"tread": 2,
			"first": 1,
			"in": 12,
			"air": 1
		},
		"sons": {
			"s": 1,
			"are": 3,
			"who": 1,
			"of": 25,
			"dear": 1,
			"not": 1,
			"is": 1,
			"away": 1,
			"they": 1,
			"swift": 1,
			"again": 1,
			"thy": 1,
			"were": 3,
			"their": 1,
			"a": 1,
			"so": 1,
			"lay": 1,
			"maryland": 1,
			"own": 1,
			"but": 1,
			"when": 1,
			"and": 3,
			"i": 1,
			"thou": 1,
			"would": 1,
			"no": 1,
			"with": 1,
			"wave": 1,
			"will": 2,
			"behind": 1,
			"shall": 3,
			"before": 1,
			"to": 3,
			"ah": 1,
			"as": 1,
			"the": 2,
			"in": 2
		},
		"sacred": {
			"sweet": 1,
			"flower": 1,
			"dust": 1,
			"book": 1,
			"blood": 1,
			"of": 2,
			"blossoms": 1,
			"grew": 1,
			"city": 1,
			"height": 1,
			"spot": 1,
			"dear": 1,
			"place": 2,
			"over": 1,
			"sod": 1,
			"by": 1,
			"bring": 1,
			"land": 1,
			"wise": 1,
			"is": 1,
			"seven": 1,
			"song": 1,
			"hour": 1,
			"freedom": 1,
			"morn": 1,
			"ere": 1,
			"sabbath": 1,
			"cause": 1,
			"that": 1,
			"trust": 1,
			"must": 1,
			"fold": 1,
			"a": 1,
			"death": 1,
			"knowledge": 1,
			"line": 1,
			"naught": 1,
			"heart": 1,
			"head": 1,
			"and": 2,
			"truth": 1,
			"cries": 1,
			"presence": 1,
			"strand": 1,
			"with": 1,
			"songs": 1,
			"well": 2,
			"ways": 1,
			"page": 2,
			"shall": 1,
			"shade": 1,
			"way": 1,
			"to": 2,
			"youth": 1,
			"flame": 1,
			"life": 1,
			"frown": 1,
			"chorus": 1,
			"safe": 1,
			"fire": 1,
			"in": 1,
			"air": 1,
			"thoughts": 1
		},
		"hymn": {
			"of": 5,
			"it": 4,
			"sung": 1,
			"for": 1,
			"flung": 1,
			"was": 1,
			"brothers": 1,
			"or": 1,
			"on": 1,
			"be": 1,
			"and": 3,
			"thou": 2,
			"from": 1,
			"now": 1,
			"familiar": 1,
			"our": 1,
			"before": 1,
			"to": 1,
			"loud": 1,
			"o": 1,
			"the": 2,
			"in": 1,
			"grows": 1
		},
		"find": {
			"us": 1,
			"his": 1,
			"him": 7,
			"means": 1,
			"tell": 1,
			"are": 1,
			"who": 1,
			"which": 1,
			"of": 1,
			"nor": 2,
			"today": 1,
			"it": 13,
			"by": 2,
			"is": 1,
			"you": 1,
			"for": 2,
			"rest": 1,
			"my": 2,
			"themselves": 1,
			"thy": 2,
			"yes": 1,
			"sadly": 1,
			"comfort": 1,
			"that": 7,
			"another": 1,
			"what": 1,
			"an": 2,
			"a": 13,
			"them": 3,
			"but": 2,
			"time": 1,
			"thee": 3,
			"out": 2,
			"and": 5,
			"truth": 1,
			"lovely": 1,
			"thou": 1,
			"here": 1,
			"how": 1,
			"no": 2,
			"with": 2,
			"around": 1,
			"some": 1,
			"all": 2,
			"our": 1,
			"only": 1,
			"to": 4,
			"little": 1,
			"eve": 1,
			"we": 1,
			"whose": 1,
			"me": 5,
			"strength": 1,
			"straight": 1,
			"the": 21,
			"though": 1,
			"her": 1,
			"in": 11
		},
		"blossoms": {
			"white": 1,
			"are": 1,
			"of": 4,
			"new": 1,
			"than": 1,
			"for": 1,
			"wear": 1,
			"and": 4,
			"swell": 1,
			"how": 1,
			"all": 1,
			"doth": 1,
			"into": 1,
			"o": 1,
			"the": 1,
			"in": 2
		},
		"command": {
			"his": 1,
			"of": 2,
			"keep": 1,
			"should": 1,
			"hushed": 1,
			"teach": 1,
			"a": 1,
			"given": 1,
			"spirit": 1,
			"but": 1,
			"and": 1,
			"bids": 1,
			"from": 1,
			"called": 1,
			"all": 1,
			"to": 1,
			"hence": 1,
			"the": 6
		},
		"gold": {
			"more": 1,
			"ring": 2,
			"im": 1,
			"his": 1,
			"seemed": 1,
			"are": 1,
			"amidst": 1,
			"who": 2,
			"mist": 1,
			"of": 4,
			"she": 1,
			"gold": 6,
			"does": 2,
			"it": 1,
			"far": 1,
			"is": 3,
			"cross": 1,
			"although": 1,
			"away": 1,
			"why": 1,
			"good": 1,
			"they": 1,
			"mother": 1,
			"than": 2,
			"swift": 1,
			"for": 2,
			"cup": 1,
			"lonely": 1,
			"my": 1,
			"shines": 1,
			"peace": 2,
			"rough": 1,
			"were": 1,
			"oer": 1,
			"that": 2,
			"if": 1,
			"show": 1,
			"what": 1,
			"an": 1,
			"or": 2,
			"bright": 1,
			"their": 1,
			"a": 2,
			"so": 2,
			"upon": 2,
			"old": 1,
			"but": 3,
			"when": 2,
			"be": 1,
			"and": 22,
			"i": 2,
			"how": 1,
			"from": 3,
			"drink": 1,
			"while": 1,
			"no": 1,
			"calm": 1,
			"with": 3,
			"doth": 1,
			"still": 2,
			"to": 12,
			"ah": 1,
			"may": 1,
			"as": 2,
			"he": 1,
			"the": 14,
			"her": 3,
			"there": 3,
			"in": 6
		},
		"three": {
			"summer": 1,
			"women": 1,
			"thousand": 1,
			"of": 6,
			"this": 1,
			"high": 1,
			"pain": 1,
			"twas": 1,
			"cold": 1,
			"for": 2,
			"words": 1,
			"peace": 2,
			"times": 3,
			"were": 1,
			"cares": 1,
			"a": 1,
			"true": 1,
			"things": 1,
			"years": 6,
			"when": 1,
			"firm": 1,
			"brave": 1,
			"and": 4,
			"days": 2,
			"i": 1,
			"how": 1,
			"lilies": 1,
			"single": 1,
			"will": 1,
			"himself": 1,
			"angels": 1,
			"well": 1,
			"dost": 1,
			"our": 1,
			"hundred": 12,
			"to": 1,
			"as": 1,
			"at": 1,
			"the": 3,
			"there": 1,
			"in": 1
		},
		"does": {
			"sweet": 1,
			"his": 3,
			"tennyson": 1,
			"wail": 1,
			"which": 1,
			"this": 2,
			"she": 1,
			"mine": 1,
			"not": 12,
			"it": 8,
			"by": 1,
			"jove": 1,
			"bind": 1,
			"wars": 1,
			"its": 1,
			"where": 1,
			"past": 1,
			"heaven": 1,
			"my": 1,
			"thy": 2,
			"any": 2,
			"friendship": 1,
			"false": 1,
			"that": 1,
			"both": 1,
			"always": 2,
			"make": 3,
			"sit": 1,
			"a": 2,
			"but": 1,
			"thee": 1,
			"raise": 1,
			"and": 1,
			"one": 1,
			"no": 1,
			"give": 1,
			"all": 1,
			"being": 1,
			"to": 1,
			"he": 4,
			"the": 7,
			"first": 1,
			"there": 1
		},
		"sez": {
			"he": 29
		},
		"morning": {
			"sweet": 1,
			"walks": 1,
			"blew": 1,
			"light": 8,
			"wi": 1,
			"tell": 1,
			"are": 1,
			"which": 1,
			"of": 4,
			"star": 6,
			"hills": 1,
			"two": 1,
			"rose": 1,
			"it": 1,
			"shows": 1,
			"ease": 1,
			"breaks": 4,
			"rise": 1,
			"like": 2,
			"people": 1,
			"sung": 1,
			"you": 1,
			"thus": 1,
			"its": 2,
			"song": 1,
			"hour": 1,
			"came": 1,
			"comes": 1,
			"ray": 1,
			"shadow": 1,
			"hope": 1,
			"bells": 1,
			"glow": 1,
			"dew": 6,
			"god": 1,
			"waking": 1,
			"oer": 1,
			"that": 1,
			"full": 1,
			"fall": 1,
			"pure": 2,
			"what": 2,
			"stars": 1,
			"pleasures": 1,
			"upon": 2,
			"dawn": 3,
			"on": 3,
			"but": 3,
			"when": 5,
			"and": 6,
			"sun": 1,
			"dream": 1,
			"i": 2,
			"broke": 1,
			"stands": 1,
			"with": 3,
			"till": 1,
			"meet": 1,
			"thought": 1,
			"has": 1,
			"service": 1,
			"george": 1,
			"before": 1,
			"wind": 3,
			"fair": 1,
			"noon": 1,
			"o": 1,
			"the": 6,
			"though": 1,
			"world": 1,
			"young": 2,
			"in": 5,
			"air": 6,
			"sky": 2
		},
		"act": {
			"ii": 3,
			"of": 1,
			"is": 1,
			"sc": 6,
			"tomorrow": 1,
			"that": 2,
			"what": 1,
			"a": 1,
			"on": 1,
			"but": 1,
			"and": 1,
			"i": 6,
			"while": 1,
			"to": 1,
			"he": 1,
			"iii": 6,
			"the": 4
		},
		"grew": {
			"cool": 1,
			"light": 3,
			"white": 2,
			"weary": 1,
			"fell": 1,
			"up": 1,
			"not": 1,
			"long": 1,
			"cold": 1,
			"wise": 1,
			"why": 1,
			"they": 1,
			"faint": 1,
			"mild": 1,
			"pale": 2,
			"tender": 1,
			"thy": 1,
			"immortal": 1,
			"oh": 1,
			"bright": 1,
			"a": 1,
			"sometimes": 1,
			"green": 1,
			"and": 9,
			"dark": 2,
			"thou": 1,
			"would": 1,
			"beneath": 1,
			"these": 1,
			"with": 1,
			"around": 1,
			"soft": 1,
			"now": 1,
			"strong": 2,
			"still": 2,
			"to": 1,
			"into": 1,
			"as": 1,
			"the": 3,
			"dim": 1
		},
		"city": {
			"of": 8,
			"lift": 1,
			"is": 1,
			"wide": 1,
			"where": 1,
			"comes": 1,
			"queen": 1,
			"god": 1,
			"that": 1,
			"full": 1,
			"or": 1,
			"bright": 1,
			"a": 1,
			"and": 2,
			"i": 2,
			"stands": 1,
			"from": 1,
			"with": 1,
			"shall": 1,
			"to": 2,
			"ah": 1,
			"we": 1,
			"fair": 1,
			"at": 1,
			"the": 1,
			"tis": 1,
			"grows": 1
		},
		"heavy": {
			"sound": 2,
			"curse": 1,
			"christ": 1,
			"news": 1,
			"hours": 1,
			"burden": 1,
			"eyes": 1,
			"grain": 1,
			"for": 1,
			"my": 1,
			"sleep": 1,
			"oer": 1,
			"was": 1,
			"or": 1,
			"a": 1,
			"upon": 2,
			"on": 3,
			"task": 1,
			"and": 6,
			"looks": 1,
			"all": 1,
			"gale": 1,
			"night": 1,
			"to": 1,
			"as": 2,
			"chain": 1,
			"change": 1,
			"tread": 1,
			"seas": 1
		},
		"thyself": {
			"more": 1,
			"thine": 1,
			"see": 1,
			"hast": 5,
			"nor": 1,
			"not": 2,
			"alone": 2,
			"earths": 1,
			"for": 1,
			"my": 1,
			"did": 1,
			"that": 1,
			"what": 1,
			"or": 1,
			"lay": 1,
			"lord": 1,
			"on": 1,
			"and": 1,
			"last": 1,
			"thou": 3,
			"all": 2,
			"to": 5,
			"art": 2,
			"in": 2
		},
		"roar": {
			"within": 1,
			"his": 1,
			"of": 7,
			"like": 1,
			"charge": 1,
			"again": 1,
			"ere": 1,
			"were": 1,
			"oer": 1,
			"oh": 1,
			"on": 2,
			"but": 1,
			"when": 1,
			"out": 1,
			"and": 7,
			"do": 1,
			"mighty": 1,
			"with": 1,
			"around": 1,
			"thats": 1,
			"yet": 2,
			"to": 1,
			"the": 3,
			"in": 1,
			"grows": 1
		},
		"flood": {
			"of": 6,
			"this": 1,
			"over": 1,
			"land": 2,
			"they": 1,
			"thus": 1,
			"rolled": 1,
			"should": 1,
			"crowned": 1,
			"make": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"upon": 1,
			"and": 8,
			"i": 3,
			"how": 1,
			"while": 1,
			"no": 1,
			"with": 1,
			"poured": 1,
			"to": 1,
			"know": 1,
			"may": 1,
			"we": 1,
			"stand": 1,
			"at": 1,
			"seems": 1,
			"leads": 1,
			"in": 2
		},
		"sight": {
			"perchance": 1,
			"appear": 1,
			"struck": 1,
			"are": 1,
			"who": 2,
			"of": 13,
			"amid": 1,
			"after": 1,
			"once": 1,
			"not": 1,
			"it": 1,
			"by": 1,
			"is": 1,
			"like": 1,
			"away": 1,
			"they": 2,
			"robert": 1,
			"ranks": 1,
			"where": 1,
			"for": 3,
			"my": 2,
			"william": 1,
			"was": 1,
			"that": 3,
			"if": 1,
			"let": 2,
			"had": 1,
			"wait": 1,
			"hold": 1,
			"nothing": 1,
			"or": 3,
			"a": 2,
			"sometimes": 1,
			"green": 1,
			"many": 1,
			"on": 1,
			"but": 4,
			"ye": 1,
			"when": 4,
			"and": 8,
			"i": 4,
			"too": 1,
			"no": 1,
			"with": 2,
			"now": 1,
			"some": 1,
			"till": 1,
			"locks": 1,
			"all": 3,
			"familiar": 1,
			"then": 2,
			"angels": 1,
			"before": 1,
			"to": 7,
			"may": 1,
			"we": 1,
			"o": 8,
			"the": 6,
			"though": 1,
			"in": 2,
			"flowers": 1
		},
		"whatever": {
			"walks": 1,
			"thing": 1,
			"creed": 1,
			"none": 1,
			"of": 1,
			"it": 1,
			"is": 1,
			"they": 1,
			"heaven": 1,
			"can": 3,
			"or": 1,
			"a": 1,
			"falls": 1,
			"things": 1,
			"hath": 1,
			"and": 1,
			"fate": 1,
			"i": 1,
			"gods": 1,
			"could": 1,
			"wind": 1,
			"may": 1,
			"the": 1
		},
		"grown": {
			"more": 1,
			"are": 1,
			"sick": 1,
			"by": 3,
			"cold": 2,
			"sung": 1,
			"gray": 1,
			"for": 1,
			"door": 1,
			"god": 1,
			"a": 1,
			"old": 2,
			"and": 4,
			"each": 1,
			"strange": 1,
			"no": 1,
			"with": 1,
			"some": 1,
			"then": 1,
			"through": 1,
			"only": 2,
			"to": 3,
			"sore": 1,
			"the": 5,
			"weak": 1,
			"dim": 2
		},
		"age": {
			"im": 1,
			"light": 1,
			"ii": 1,
			"who": 1,
			"which": 1,
			"of": 8,
			"serene": 1,
			"it": 2,
			"by": 1,
			"twixt": 1,
			"is": 2,
			"without": 1,
			"for": 2,
			"speak": 1,
			"my": 1,
			"was": 1,
			"that": 2,
			"had": 1,
			"gives": 1,
			"what": 1,
			"an": 2,
			"wait": 1,
			"have": 2,
			"their": 1,
			"a": 3,
			"so": 1,
			"lord": 1,
			"never": 1,
			"hath": 1,
			"years": 1,
			"be": 1,
			"say": 1,
			"and": 7,
			"i": 4,
			"tower": 1,
			"from": 3,
			"would": 1,
			"while": 1,
			"no": 2,
			"now": 1,
			"has": 1,
			"yet": 1,
			"to": 6,
			"as": 1,
			"he": 1,
			"o": 1,
			"the": 5,
			"there": 1,
			"in": 3
		},
		"stormy": {
			"goes": 1,
			"sea": 2,
			"where": 1,
			"blast": 1,
			"past": 1,
			"winds": 1,
			"shore": 1,
			"main": 2,
			"steep": 1,
			"deep": 1,
			"march": 1,
			"i": 1,
			"no": 1,
			"wave": 1,
			"clouds": 1,
			"skies": 1,
			"life": 1,
			"world": 1,
			"seas": 1,
			"sky": 1
		},
		"darkness": {
			"dare": 1,
			"fled": 1,
			"light": 1,
			"his": 1,
			"tell": 1,
			"fell": 1,
			"who": 1,
			"which": 1,
			"hide": 1,
			"of": 7,
			"feels": 1,
			"silence": 1,
			"over": 4,
			"twixt": 1,
			"is": 6,
			"farewell": 1,
			"they": 1,
			"swept": 1,
			"where": 1,
			"holy": 1,
			"just": 1,
			"past": 1,
			"lost": 1,
			"rest": 1,
			"came": 1,
			"god": 1,
			"oer": 2,
			"that": 1,
			"if": 1,
			"let": 1,
			"go": 1,
			"late": 1,
			"a": 1,
			"so": 1,
			"lord": 1,
			"on": 1,
			"naught": 1,
			"close": 1,
			"and": 19,
			"do": 3,
			"hid": 1,
			"i": 1,
			"too": 2,
			"with": 2,
			"now": 1,
			"till": 1,
			"all": 2,
			"then": 1,
			"guess": 1,
			"ends": 1,
			"shall": 1,
			"before": 1,
			"to": 1,
			"into": 1,
			"as": 1,
			"the": 3,
			"there": 1
		},
		"joy": {
			"his": 3,
			"him": 1,
			"are": 1,
			"which": 1,
			"shout": 1,
			"of": 13,
			"she": 1,
			"it": 1,
			"alone": 1,
			"sorrows": 1,
			"is": 7,
			"looked": 1,
			"they": 2,
			"prayer": 1,
			"earths": 1,
			"its": 1,
			"than": 1,
			"where": 2,
			"used": 1,
			"for": 4,
			"hand": 1,
			"my": 4,
			"remain": 1,
			"thy": 2,
			"comes": 1,
			"most": 1,
			"friendship": 1,
			"trembling": 1,
			"can": 2,
			"immortal": 1,
			"was": 3,
			"that": 4,
			"if": 1,
			"let": 1,
			"go": 1,
			"what": 2,
			"or": 6,
			"bright": 2,
			"late": 1,
			"a": 2,
			"so": 3,
			"faces": 1,
			"on": 2,
			"celestial": 1,
			"old": 1,
			"but": 2,
			"canst": 1,
			"when": 2,
			"be": 2,
			"wings": 1,
			"sorrow": 1,
			"and": 31,
			"thunder": 1,
			"i": 4,
			"thou": 2,
			"too": 1,
			"each": 2,
			"from": 1,
			"while": 1,
			"no": 1,
			"with": 2,
			"around": 1,
			"now": 1,
			"till": 2,
			"has": 1,
			"thats": 2,
			"begun": 1,
			"shall": 1,
			"only": 1,
			"to": 12,
			"as": 3,
			"life": 1,
			"he": 3,
			"at": 1,
			"o": 1,
			"the": 11,
			"there": 1,
			"in": 5,
			"harmony": 1
		},
		"lightning": {
			"of": 3,
			"does": 1,
			"they": 1,
			"run": 1,
			"that": 1,
			"gave": 1,
			"a": 1,
			"on": 1,
			"but": 1,
			"glance": 1,
			"when": 1,
			"and": 6,
			"from": 1,
			"flash": 1,
			"the": 2,
			"in": 1
		},
		"cling": {
			"breathing": 1,
			"forward": 2,
			"a": 1,
			"but": 1,
			"heart": 1,
			"around": 1,
			"to": 11,
			"backward": 1,
			"as": 1,
			"life": 1,
			"the": 1
		},
		"forth": {
			"come": 1,
			"unseen": 2,
			"his": 5,
			"under": 1,
			"which": 2,
			"of": 2,
			"whatever": 1,
			"it": 1,
			"by": 1,
			"like": 1,
			"forever": 1,
			"earths": 1,
			"for": 3,
			"my": 3,
			"again": 3,
			"thy": 6,
			"most": 1,
			"along": 1,
			"god": 1,
			"bud": 1,
			"was": 2,
			"that": 1,
			"if": 1,
			"what": 1,
			"their": 3,
			"a": 6,
			"so": 2,
			"but": 2,
			"ye": 1,
			"when": 2,
			"and": 5,
			"i": 1,
			"thou": 1,
			"down": 1,
			"from": 10,
			"no": 1,
			"with": 4,
			"flash": 1,
			"all": 2,
			"before": 1,
			"your": 1,
			"to": 15,
			"as": 3,
			"he": 1,
			"at": 3,
			"the": 15,
			"her": 5,
			"fire": 1,
			"there": 1,
			"in": 13
		},
		"foam": {
			"see": 1,
			"right": 1,
			"of": 4,
			"nor": 1,
			"like": 1,
			"upon": 1,
			"on": 2,
			"but": 1,
			"when": 1,
			"and": 7,
			"thou": 1,
			"from": 1,
			"to": 3,
			"the": 1
		},
		"fruit": {
			"flower": 1,
			"which": 2,
			"of": 5,
			"she": 3,
			"divine": 1,
			"it": 1,
			"is": 2,
			"for": 1,
			"should": 1,
			"most": 1,
			"reach": 1,
			"that": 4,
			"or": 1,
			"and": 3,
			"i": 2,
			"thou": 3,
			"would": 1,
			"no": 2,
			"drew": 1,
			"then": 1,
			"our": 1,
			"shall": 1,
			"before": 1,
			"we": 1,
			"life": 1,
			"the": 1,
			"first": 1,
			"in": 2
		},
		"bird": {
			"come": 1,
			"doubt": 1,
			"seemed": 1,
			"which": 1,
			"of": 4,
			"nor": 1,
			"it": 1,
			"breaks": 1,
			"is": 4,
			"unto": 1,
			"they": 1,
			"sang": 1,
			"sing": 1,
			"sits": 1,
			"oer": 1,
			"that": 7,
			"always": 1,
			"oh": 1,
			"or": 3,
			"have": 1,
			"am": 1,
			"a": 1,
			"so": 2,
			"hath": 1,
			"on": 2,
			"be": 1,
			"wings": 1,
			"and": 7,
			"i": 1,
			"hate": 1,
			"no": 1,
			"with": 4,
			"will": 1,
			"all": 1,
			"comrades": 1,
			"thats": 1,
			"behind": 1,
			"to": 1,
			"as": 1,
			"at": 1,
			"the": 1,
			"her": 3
		},
		"wheel": {
			"went": 1,
			"of": 1,
			"three": 1,
			"wheel": 2,
			"is": 2,
			"my": 1,
			"john": 1,
			"runs": 1,
			"that": 1,
			"on": 1,
			"but": 1,
			"and": 3,
			"with": 1,
			"all": 1,
			"through": 2,
			"shall": 1,
			"to": 2,
			"me": 3,
			"the": 5,
			"in": 3
		},
		"scorn": {
			"his": 3,
			"dance": 1,
			"which": 1,
			"of": 4,
			"she": 1,
			"not": 2,
			"by": 2,
			"they": 1,
			"you": 1,
			"earths": 1,
			"for": 2,
			"whom": 1,
			"god": 1,
			"was": 1,
			"or": 2,
			"on": 1,
			"and": 10,
			"i": 1,
			"here": 1,
			"might": 1,
			"from": 1,
			"no": 1,
			"all": 1,
			"shall": 2,
			"before": 1,
			"yet": 1,
			"to": 8,
			"know": 1,
			"the": 6
		},
		"height": {
			"died": 1,
			"of": 7,
			"up": 1,
			"neither": 1,
			"by": 1,
			"why": 1,
			"wide": 1,
			"slow": 1,
			"where": 1,
			"gray": 1,
			"sleep": 1,
			"that": 1,
			"so": 1,
			"hath": 1,
			"deep": 1,
			"but": 1,
			"out": 1,
			"and": 2,
			"i": 1,
			"sublime": 1,
			"no": 1,
			"before": 1,
			"to": 1,
			"get": 1,
			"whose": 1,
			"he": 1,
			"the": 1,
			"her": 1,
			"in": 1
		},
		"brother": {
			"his": 1,
			"of": 6,
			"once": 1,
			"act": 1,
			"brother": 1,
			"dear": 2,
			"behold": 1,
			"every": 1,
			"why": 1,
			"they": 1,
			"for": 1,
			"should": 1,
			"francis": 1,
			"torn": 1,
			"friend": 1,
			"face": 2,
			"was": 1,
			"man": 1,
			"fall": 1,
			"trust": 1,
			"hold": 1,
			"or": 1,
			"on": 1,
			"lives": 1,
			"gone": 1,
			"and": 5,
			"i": 2,
			"thou": 1,
			"too": 1,
			"stands": 1,
			"how": 1,
			"from": 2,
			"would": 2,
			"no": 2,
			"roll": 1,
			"king": 1,
			"shall": 2,
			"your": 1,
			"to": 5,
			"as": 1,
			"happy": 1,
			"at": 1,
			"the": 1,
			"devil": 1,
			"there": 1,
			"in": 3
		},
		"sheep": {
			"look": 1,
			"are": 1,
			"by": 1,
			"is": 2,
			"was": 1,
			"that": 1,
			"climb": 1,
			"de": 2,
			"upon": 1,
			"but": 1,
			"and": 3,
			"thou": 1,
			"with": 1,
			"our": 1,
			"to": 1,
			"the": 2
		},
		"played": {
			"it": 2,
			"long": 1,
			"they": 2,
			"where": 1,
			"oer": 1,
			"when": 1,
			"out": 1,
			"brave": 1,
			"and": 2,
			"around": 1,
			"round": 2,
			"whose": 1,
			"me": 1,
			"at": 2,
			"the": 3,
			"in": 4
		},
		"beheld": {
			"his": 1,
			"of": 1,
			"where": 2,
			"thy": 1,
			"a": 3,
			"them": 1,
			"lifes": 1,
			"and": 2,
			"myself": 1,
			"i": 1,
			"with": 1,
			"all": 1,
			"to": 1,
			"at": 1,
			"the": 1,
			"young": 1,
			"there": 1,
			"in": 1
		},
		"race": {
			"his": 1,
			"wi": 1,
			"of": 11,
			"this": 1,
			"she": 2,
			"not": 2,
			"today": 1,
			"it": 1,
			"is": 4,
			"away": 1,
			"ever": 1,
			"they": 2,
			"run": 1,
			"thy": 2,
			"was": 1,
			"let": 1,
			"a": 1,
			"never": 1,
			"hath": 1,
			"on": 2,
			"poor": 1,
			"ye": 1,
			"be": 1,
			"and": 4,
			"last": 1,
			"from": 1,
			"no": 1,
			"give": 1,
			"all": 1,
			"could": 1,
			"shall": 1,
			"yet": 2,
			"to": 2,
			"he": 1,
			"the": 5
		},
		"goes": {
			"back": 1,
			"under": 1,
			"toward": 1,
			"up": 2,
			"among": 1,
			"it": 2,
			"by": 7,
			"like": 1,
			"away": 1,
			"without": 1,
			"for": 1,
			"a": 2,
			"on": 3,
			"out": 1,
			"and": 4,
			"down": 5,
			"whereer": 1,
			"how": 1,
			"with": 2,
			"now": 1,
			"all": 1,
			"through": 1,
			"only": 1,
			"to": 4,
			"youth": 1,
			"round": 1,
			"may": 1,
			"we": 1,
			"as": 1,
			"the": 2,
			"there": 1,
			"in": 1
		},
		"dreadful": {
			"word": 1,
			"race": 1,
			"host": 1,
			"sea": 1,
			"for": 1,
			"hour": 1,
			"note": 1,
			"faces": 1,
			"bell": 1,
			"and": 3,
			"i": 1,
			"judge": 1,
			"from": 1,
			"then": 1,
			"thought": 1,
			"king": 1,
			"day": 1,
			"shade": 1,
			"to": 3,
			"as": 1,
			"the": 1,
			"scene": 1,
			"harmony": 1
		},
		"spot": {
			"his": 1,
			"of": 6,
			"yield": 1,
			"she": 1,
			"is": 3,
			"than": 3,
			"where": 8,
			"for": 1,
			"thy": 1,
			"that": 2,
			"must": 1,
			"on": 1,
			"whateer": 1,
			"i": 1,
			"here": 1,
			"no": 1,
			"with": 1,
			"some": 1,
			"to": 2,
			"as": 1,
			"below": 1,
			"there": 1,
			"in": 2
		},
		"dear": {
			"come": 1,
			"jean": 1,
			"saviour": 1,
			"since": 1,
			"wife": 1,
			"loves": 1,
			"christ": 2,
			"light": 1,
			"glen": 1,
			"are": 1,
			"saints": 1,
			"sake": 4,
			"ones": 6,
			"country": 1,
			"of": 4,
			"this": 3,
			"keep": 1,
			"she": 1,
			"sons": 1,
			"brother": 1,
			"dear": 3,
			"two": 1,
			"it": 2,
			"child": 5,
			"eyes": 2,
			"fountain": 1,
			"land": 2,
			"is": 2,
			"return": 1,
			"farewell": 1,
			"away": 1,
			"form": 1,
			"good": 1,
			"steed": 1,
			"they": 1,
			"you": 1,
			"mother": 3,
			"sister": 1,
			"een": 1,
			"friends": 2,
			"lovers": 1,
			"for": 4,
			"hand": 1,
			"heaven": 1,
			"lost": 1,
			"cry": 1,
			"my": 4,
			"words": 1,
			"ere": 1,
			"hopes": 1,
			"whom": 1,
			"soul": 1,
			"friend": 4,
			"lords": 1,
			"god": 2,
			"can": 1,
			"power": 1,
			"immortal": 1,
			"was": 1,
			"that": 1,
			"bear": 1,
			"jerusalem": 2,
			"an": 1,
			"waiting": 1,
			"tears": 1,
			"isle": 1,
			"their": 1,
			"a": 1,
			"joys": 1,
			"green": 1,
			"lord": 8,
			"love": 1,
			"old": 11,
			"but": 2,
			"perhaps": 1,
			"when": 1,
			"be": 2,
			"and": 15,
			"grace": 1,
			"i": 7,
			"thou": 1,
			"presence": 1,
			"might": 1,
			"fatherland": 2,
			"secret": 1,
			"hearts": 2,
			"would": 1,
			"beneath": 1,
			"while": 1,
			"with": 2,
			"around": 1,
			"till": 1,
			"familiar": 1,
			"then": 1,
			"thought": 1,
			"beauteous": 1,
			"throne": 1,
			"hundred": 1,
			"shade": 2,
			"yet": 1,
			"to": 13,
			"youth": 1,
			"little": 1,
			"we": 2,
			"as": 11,
			"said": 1,
			"he": 1,
			"arms": 1,
			"me": 1,
			"o": 2,
			"the": 3,
			"tis": 2,
			"though": 1,
			"dead": 1,
			"jesus": 1,
			"in": 1
		},
		"two": {
			"blue": 1,
			"went": 3,
			"faithful": 1,
			"thousand": 1,
			"voices": 2,
			"are": 4,
			"next": 1,
			"which": 5,
			"of": 5,
			"worlds": 3,
			"souls": 2,
			"she": 1,
			"among": 1,
			"two": 2,
			"serve": 1,
			"it": 1,
			"eyes": 3,
			"long": 2,
			"nations": 1,
			"is": 1,
			"lo": 1,
			"found": 1,
			"children": 1,
			"either": 1,
			"together": 1,
			"they": 1,
			"you": 2,
			"pale": 1,
			"gray": 1,
			"drops": 1,
			"boys": 2,
			"my": 1,
			"words": 1,
			"great": 3,
			"thy": 1,
			"foot": 1,
			"were": 2,
			"did": 1,
			"that": 2,
			"swords": 1,
			"lips": 2,
			"poems": 1,
			"thin": 1,
			"brothers": 1,
			"had": 1,
			"an": 1,
			"creatures": 1,
			"or": 4,
			"hands": 3,
			"towers": 2,
			"a": 3,
			"so": 1,
			"faces": 2,
			"almost": 1,
			"walk": 2,
			"brown": 1,
			"lives": 1,
			"be": 1,
			"feet": 1,
			"t": 1,
			"watched": 1,
			"and": 5,
			"rays": 1,
			"i": 2,
			"such": 1,
			"hearts": 1,
			"join": 1,
			"would": 1,
			"mighty": 1,
			"with": 2,
			"now": 1,
			"meet": 1,
			"strong": 1,
			"comrades": 1,
			"then": 1,
			"angels": 1,
			"well": 1,
			"ways": 1,
			"minds": 1,
			"shall": 1,
			"hundred": 2,
			"still": 1,
			"to": 1,
			"hill": 1,
			"clouds": 1,
			"poets": 1,
			"little": 1,
			"glorious": 1,
			"may": 1,
			"fair": 2,
			"he": 3,
			"at": 2,
			"o": 1,
			"streams": 1,
			"the": 4,
			"seas": 3,
			"in": 11
		},
		"fresh": {
			"sweet": 1,
			"blew": 1,
			"cheek": 1,
			"who": 1,
			"of": 3,
			"nor": 1,
			"blossoms": 1,
			"woods": 1,
			"like": 1,
			"where": 1,
			"hope": 1,
			"an": 1,
			"courage": 1,
			"green": 1,
			"whence": 1,
			"roses": 1,
			"and": 18,
			"from": 2,
			"breeze": 1,
			"spring": 1,
			"fallen": 1,
			"wind": 1,
			"springs": 4,
			"into": 1,
			"we": 1,
			"as": 4,
			"array": 1,
			"at": 1,
			"o": 1,
			"the": 3,
			"flowers": 3
		},
		"pain": {
			"his": 1,
			"are": 2,
			"alas": 2,
			"who": 1,
			"men": 1,
			"which": 1,
			"of": 3,
			"this": 1,
			"she": 1,
			"darkness": 1,
			"forth": 1,
			"scorn": 1,
			"pass": 1,
			"it": 1,
			"long": 1,
			"is": 2,
			"like": 1,
			"they": 2,
			"you": 1,
			"nature": 1,
			"than": 2,
			"where": 1,
			"for": 2,
			"take": 1,
			"my": 2,
			"came": 1,
			"thy": 1,
			"therefore": 1,
			"strive": 1,
			"was": 2,
			"that": 6,
			"if": 1,
			"let": 1,
			"what": 1,
			"nothing": 1,
			"or": 2,
			"have": 1,
			"a": 4,
			"love": 1,
			"sees": 1,
			"but": 5,
			"ye": 1,
			"when": 3,
			"and": 23,
			"i": 2,
			"too": 1,
			"while": 1,
			"no": 1,
			"with": 3,
			"will": 1,
			"all": 2,
			"then": 2,
			"through": 1,
			"doth": 1,
			"our": 1,
			"wind": 1,
			"still": 1,
			"your": 1,
			"to": 10,
			"turn": 1,
			"ah": 4,
			"may": 1,
			"we": 1,
			"as": 1,
			"he": 3,
			"me": 1,
			"left": 1,
			"the": 11,
			"passed": 1,
			"there": 3,
			"in": 4
		},
		"mouth": {
			"of": 7,
			"alone": 1,
			"is": 2,
			"unto": 1,
			"that": 2,
			"or": 1,
			"but": 1,
			"be": 1,
			"kind": 1,
			"and": 5,
			"i": 1,
			"between": 1,
			"till": 1,
			"to": 2,
			"the": 1,
			"fight": 1,
			"her": 1,
			"in": 1
		},
		"thick": {
			"of": 3,
			"darkness": 1,
			"is": 1,
			"they": 1,
			"thy": 1,
			"wall": 2,
			"bright": 1,
			"upon": 1,
			"on": 1,
			"buried": 1,
			"and": 5,
			"broad": 1,
			"with": 2,
			"mount": 1,
			"shall": 1,
			"as": 2,
			"array": 1,
			"me": 1,
			"the": 2,
			"in": 2
		},
		"mourn": {
			"him": 1,
			"they": 1,
			"without": 1,
			"for": 1,
			"my": 1,
			"that": 1,
			"oh": 1,
			"a": 1,
			"them": 1,
			"but": 1,
			"time": 1,
			"and": 1,
			"i": 1,
			"thou": 1,
			"henry": 1,
			"no": 1,
			"with": 1,
			"we": 1,
			"o": 1,
			"the": 4,
			"though": 1,
			"her": 1,
			"in": 5
		},
		"place": {
			"within": 2,
			"his": 3,
			"of": 13,
			"beyond": 1,
			"not": 1,
			"by": 1,
			"is": 2,
			"like": 1,
			"found": 1,
			"strike": 1,
			"lightly": 1,
			"where": 9,
			"for": 5,
			"should": 1,
			"my": 2,
			"vain": 1,
			"sir": 1,
			"was": 2,
			"that": 4,
			"gives": 1,
			"or": 2,
			"bright": 1,
			"a": 3,
			"them": 1,
			"upon": 1,
			"but": 1,
			"ye": 1,
			"when": 4,
			"and": 17,
			"i": 4,
			"draw": 1,
			"from": 1,
			"beneath": 1,
			"with": 3,
			"all": 3,
			"desolate": 1,
			"ho": 1,
			"our": 2,
			"course": 1,
			"to": 3,
			"religion": 1,
			"we": 1,
			"whose": 1,
			"as": 3,
			"stand": 1,
			"he": 2,
			"me": 2,
			"o": 2,
			"the": 10,
			"her": 1,
			"been": 1,
			"there": 1,
			"in": 1
		},
		"serene": {
			"are": 1,
			"amidst": 1,
			"who": 1,
			"of": 1,
			"dear": 1,
			"where": 1,
			"thy": 1,
			"sing": 1,
			"bright": 1,
			"have": 1,
			"a": 1,
			"time": 1,
			"and": 5,
			"i": 1,
			"thou": 1,
			"rome": 1,
			"will": 1,
			"all": 1,
			"through": 1,
			"into": 1,
			"hail": 1,
			"he": 1,
			"the": 5
		},
		"lift": {
			"him": 1,
			"up": 6,
			"grew": 1,
			"unto": 1,
			"you": 1,
			"my": 4,
			"again": 2,
			"thy": 1,
			"that": 1,
			"willie": 1,
			"their": 2,
			"a": 1,
			"them": 2,
			"upon": 1,
			"on": 1,
			"from": 1,
			"no": 1,
			"upward": 1,
			"our": 1,
			"your": 1,
			"to": 1,
			"the": 4,
			"her": 4
		},
		"part": {
			"sweet": 1,
			"come": 1,
			"within": 1,
			"his": 3,
			"fond": 2,
			"are": 1,
			"back": 1,
			"ive": 1,
			"which": 1,
			"of": 13,
			"yield": 1,
			"up": 1,
			"she": 1,
			"two": 1,
			"it": 5,
			"send": 1,
			"is": 3,
			"why": 1,
			"forever": 1,
			"they": 1,
			"grant": 1,
			"without": 2,
			"where": 1,
			"for": 2,
			"my": 1,
			"again": 1,
			"makes": 1,
			"did": 1,
			"was": 2,
			"that": 1,
			"if": 1,
			"let": 1,
			"had": 1,
			"what": 1,
			"or": 1,
			"a": 2,
			"upon": 1,
			"thee": 1,
			"when": 2,
			"april": 1,
			"felt": 1,
			"be": 1,
			"and": 9,
			"i": 5,
			"down": 1,
			"such": 1,
			"each": 1,
			"from": 2,
			"maid": 1,
			"with": 4,
			"singing": 1,
			"now": 1,
			"give": 1,
			"then": 1,
			"our": 1,
			"only": 1,
			"still": 1,
			"to": 5,
			"whose": 1,
			"as": 1,
			"o": 3,
			"the": 2,
			"tis": 1,
			"her": 2,
			"first": 2,
			"there": 1,
			"in": 2
		},
		"pass": {
			"since": 1,
			"save": 1,
			"him": 1,
			"under": 1,
			"hide": 1,
			"of": 3,
			"among": 1,
			"pass": 1,
			"over": 2,
			"by": 1,
			"is": 1,
			"like": 3,
			"away": 13,
			"immortality": 1,
			"they": 1,
			"than": 1,
			"slow": 1,
			"for": 3,
			"my": 2,
			"strive": 1,
			"door": 1,
			"along": 1,
			"that": 1,
			"if": 1,
			"or": 2,
			"a": 2,
			"them": 1,
			"things": 1,
			"on": 1,
			"thee": 1,
			"ye": 1,
			"and": 5,
			"i": 2,
			"thou": 1,
			"from": 3,
			"beneath": 1,
			"with": 2,
			"then": 1,
			"through": 1,
			"well": 1,
			"our": 1,
			"before": 1,
			"your": 1,
			"to": 5,
			"into": 2,
			"round": 1,
			"as": 2,
			"the": 8,
			"her": 1,
			"there": 1,
			"in": 1
		},
		"lands": {
			"who": 1,
			"this": 1,
			"she": 1,
			"beyond": 1,
			"by": 1,
			"new": 1,
			"swift": 1,
			"where": 1,
			"that": 1,
			"oh": 1,
			"soil": 1,
			"be": 1,
			"and": 6,
			"unknown": 1,
			"between": 1,
			"rouse": 1,
			"now": 1,
			"thought": 1,
			"spring": 1,
			"we": 1,
			"happy": 1,
			"the": 4
		},
		"chant": {
			"his": 1,
			"of": 3,
			"forth": 1,
			"it": 1,
			"a": 2,
			"ye": 1,
			"when": 1,
			"and": 1,
			"from": 1,
			"ill": 1,
			"sublime": 1,
			"with": 2,
			"we": 1,
			"the": 3,
			"in": 1
		},
		"sick": {
			"im": 1,
			"his": 1,
			"wi": 1,
			"of": 5,
			"souls": 1,
			"where": 1,
			"for": 1,
			"that": 4,
			"man": 2,
			"a": 2,
			"and": 7,
			"i": 1,
			"with": 3,
			"minds": 1,
			"to": 1,
			"at": 3,
			"the": 1,
			"in": 1
		},
		"fine": {
			"bread": 1,
			"within": 1,
			"of": 1,
			"this": 1,
			"feels": 1,
			"not": 1,
			"by": 2,
			"care": 1,
			"than": 1,
			"thy": 1,
			"was": 1,
			"that": 1,
			"man": 1,
			"pure": 1,
			"and": 3,
			"robin": 1,
			"stands": 1,
			"from": 1,
			"with": 1,
			"thats": 1,
			"sense": 1,
			"still": 1,
			"round": 1,
			"as": 1,
			"said": 1,
			"the": 1,
			"in": 1
		},
		"sands": {
			"are": 2,
			"of": 5,
			"jim": 1,
			"alone": 2,
			"like": 1,
			"they": 1,
			"for": 1,
			"were": 1,
			"that": 1,
			"or": 1,
			"have": 1,
			"things": 1,
			"love": 1,
			"on": 1,
			"and": 4,
			"with": 1,
			"to": 1,
			"o": 2,
			"the": 3
		},
		"rose": {
			"sweet": 1,
			"made": 1,
			"of": 4,
			"this": 1,
			"up": 8,
			"she": 1,
			"it": 1,
			"is": 4,
			"like": 2,
			"they": 1,
			"you": 1,
			"than": 1,
			"just": 2,
			"welcome": 1,
			"for": 2,
			"blown": 1,
			"heaven": 1,
			"speak": 1,
			"again": 1,
			"flung": 1,
			"oer": 1,
			"indeed": 1,
			"that": 6,
			"make": 1,
			"an": 2,
			"or": 4,
			"a": 6,
			"so": 1,
			"true": 1,
			"upon": 2,
			"lay": 1,
			"on": 1,
			"red": 1,
			"above": 1,
			"old": 1,
			"but": 4,
			"burst": 1,
			"highest": 1,
			"out": 1,
			"and": 21,
			"i": 1,
			"from": 4,
			"no": 1,
			"with": 2,
			"all": 1,
			"then": 1,
			"has": 2,
			"thats": 1,
			"your": 1,
			"yet": 2,
			"to": 3,
			"rich": 1,
			"may": 1,
			"whose": 1,
			"as": 3,
			"at": 3,
			"o": 1,
			"the": 13,
			"her": 1,
			"in": 3
		},
		"slaves": {
			"james": 1,
			"of": 4,
			"once": 1,
			"place": 1,
			"cannot": 1,
			"seek": 1,
			"have": 1,
			"never": 1,
			"but": 1,
			"and": 1,
			"dull": 1,
			"might": 1,
			"would": 2,
			"bound": 1,
			"with": 2,
			"will": 1,
			"our": 1,
			"shall": 1,
			"may": 1,
			"he": 1,
			"at": 2,
			"the": 2
		},
		"lines": {
			"sound": 1,
			"surely": 1,
			"of": 10,
			"off": 1,
			"found": 1,
			"they": 1,
			"where": 2,
			"used": 1,
			"holy": 1,
			"just": 1,
			"read": 1,
			"stretched": 1,
			"were": 1,
			"have": 1,
			"gave": 1,
			"their": 1,
			"and": 4,
			"do": 1,
			"how": 1,
			"to": 1,
			"written": 1,
			"he": 1,
			"the": 3
		},
		"aught": {
			"else": 1,
			"within": 1,
			"which": 1,
			"of": 4,
			"not": 1,
			"like": 1,
			"found": 1,
			"for": 2,
			"should": 1,
			"thy": 2,
			"that": 3,
			"or": 1,
			"so": 1,
			"but": 1,
			"and": 1,
			"eer": 1,
			"do": 1,
			"other": 2,
			"through": 1,
			"in": 1
		},
		"beloved": {
			"more": 1,
			"ones": 1,
			"of": 2,
			"she": 2,
			"nor": 1,
			"by": 2,
			"land": 2,
			"is": 1,
			"sleep": 4,
			"face": 1,
			"what": 1,
			"a": 1,
			"but": 1,
			"out": 1,
			"and": 1,
			"i": 1,
			"home": 2,
			"one": 1,
			"how": 1,
			"no": 1,
			"with": 1,
			"till": 1,
			"still": 1,
			"to": 1,
			"we": 1,
			"at": 1,
			"the": 1,
			"though": 1,
			"her": 1,
			"seem": 1
		},
		"limbs": {
			"are": 3,
			"right": 1,
			"of": 1,
			"this": 1,
			"again": 1,
			"were": 1,
			"or": 1,
			"have": 2,
			"bitter": 1,
			"a": 1,
			"and": 7,
			"i": 1,
			"too": 1,
			"with": 1,
			"being": 1,
			"to": 2,
			"as": 1,
			"he": 1,
			"her": 1,
			"in": 1
		},
		"mine": {
			"come": 1,
			"dare": 1,
			"look": 1,
			"more": 1,
			"im": 1,
			"ear": 4,
			"wi": 1,
			"woe": 1,
			"are": 2,
			"amid": 1,
			"she": 1,
			"nor": 1,
			"age": 1,
			"mine": 1,
			"it": 1,
			"twas": 1,
			"ease": 1,
			"eyes": 14,
			"alone": 2,
			"is": 2,
			"farewell": 1,
			"een": 2,
			"yea": 1,
			"for": 3,
			"should": 1,
			"theres": 1,
			"my": 3,
			"ere": 1,
			"francis": 1,
			"sir": 1,
			"whether": 1,
			"can": 1,
			"were": 2,
			"indeed": 1,
			"was": 1,
			"if": 1,
			"arm": 2,
			"what": 3,
			"eye": 4,
			"a": 1,
			"so": 1,
			"hath": 1,
			"own": 10,
			"but": 1,
			"poor": 1,
			"when": 3,
			"eternal": 1,
			"be": 6,
			"t": 1,
			"out": 1,
			"earthly": 1,
			"head": 1,
			"and": 18,
			"i": 6,
			"down": 1,
			"too": 1,
			"one": 2,
			"how": 1,
			"from": 1,
			"ill": 1,
			"while": 1,
			"honor": 1,
			"no": 2,
			"ears": 2,
			"with": 3,
			"everlasting": 1,
			"now": 2,
			"will": 1,
			"all": 1,
			"through": 1,
			"has": 1,
			"well": 1,
			"shall": 1,
			"yet": 3,
			"to": 13,
			"into": 1,
			"art": 1,
			"may": 2,
			"we": 1,
			"said": 1,
			"he": 3,
			"at": 1,
			"o": 5,
			"the": 5,
			"tis": 1,
			"though": 2,
			"her": 1,
			"there": 1,
			"in": 6
		},
		"behold": {
			"look": 1,
			"him": 5,
			"which": 1,
			"of": 1,
			"not": 1,
			"it": 1,
			"like": 2,
			"without": 1,
			"than": 1,
			"for": 2,
			"my": 2,
			"thy": 3,
			"what": 2,
			"oh": 1,
			"an": 1,
			"bright": 1,
			"their": 1,
			"a": 4,
			"them": 1,
			"upon": 1,
			"hath": 1,
			"above": 1,
			"thee": 4,
			"and": 4,
			"i": 2,
			"might": 1,
			"whereer": 1,
			"how": 4,
			"while": 1,
			"no": 1,
			"with": 1,
			"some": 1,
			"through": 1,
			"our": 2,
			"your": 2,
			"to": 2,
			"yon": 1,
			"we": 1,
			"as": 1,
			"he": 3,
			"me": 1,
			"the": 13,
			"her": 6,
			"there": 1,
			"in": 5,
			"grows": 1
		},
		"rivers": {
			"summer": 1,
			"us": 1,
			"leap": 1,
			"of": 3,
			"rivers": 1,
			"side": 1,
			"run": 1,
			"for": 1,
			"cannot": 2,
			"moan": 1,
			"rising": 1,
			"did": 1,
			"that": 1,
			"a": 1,
			"be": 1,
			"and": 3,
			"i": 1,
			"down": 1,
			"join": 1,
			"clear": 1,
			"way": 1,
			"the": 1
		},
		"solemn": {
			"sweet": 1,
			"sound": 1,
			"midnight": 5,
			"creed": 1,
			"word": 1,
			"holds": 1,
			"of": 1,
			"silence": 3,
			"bird": 2,
			"praise": 2,
			"host": 1,
			"by": 4,
			"moves": 1,
			"where": 1,
			"judgment": 1,
			"words": 1,
			"makes": 1,
			"sir": 1,
			"oer": 1,
			"main": 1,
			"an": 1,
			"fill": 1,
			"lay": 1,
			"on": 1,
			"but": 1,
			"years": 1,
			"plain": 1,
			"and": 3,
			"black": 1,
			"one": 1,
			"between": 1,
			"state": 1,
			"with": 2,
			"all": 1,
			"thought": 1,
			"behind": 1,
			"hall": 1,
			"night": 4,
			"shall": 1,
			"round": 1,
			"strain": 1,
			"as": 2,
			"slumber": 1,
			"scene": 1,
			"near": 1,
			"step": 1
		},
		"news": {
			"back": 1,
			"toward": 1,
			"of": 5,
			"charge": 1,
			"came": 1,
			"was": 1,
			"if": 1,
			"had": 1,
			"hath": 1,
			"fast": 1,
			"down": 1,
			"from": 4,
			"thats": 1,
			"king": 1,
			"to": 1,
			"at": 1,
			"in": 1
		},
		"sings": {
			"itself": 1,
			"his": 1,
			"beside": 1,
			"of": 2,
			"by": 1,
			"hark": 1,
			"waves": 1,
			"that": 1,
			"let": 1,
			"a": 1,
			"but": 2,
			"and": 3,
			"do": 1,
			"with": 1,
			"all": 1,
			"then": 1,
			"yet": 1,
			"to": 4,
			"he": 3,
			"the": 4,
			"in": 3,
			"aloud": 1
		},
		"not": {
			"sweet": 2,
			"come": 5,
			"dare": 3,
			"cool": 1,
			"breaking": 1,
			"look": 8,
			"us": 1,
			"more": 10,
			"hear": 8,
			"thine": 4,
			"died": 1,
			"curse": 1,
			"worn": 1,
			"wish": 2,
			"chase": 1,
			"free": 3,
			"earth": 2,
			"pen": 1,
			"forget": 5,
			"die": 5,
			"his": 9,
			"stream": 1,
			"save": 3,
			"endure": 1,
			"him": 3,
			"ear": 1,
			"law": 1,
			"see": 14,
			"means": 1,
			"play": 2,
			"tell": 3,
			"are": 1,
			"back": 6,
			"made": 2,
			"very": 1,
			"under": 2,
			"who": 4,
			"seen": 11,
			"silent": 1,
			"men": 1,
			"worth": 4,
			"call": 3,
			"of": 25,
			"brook": 1,
			"this": 5,
			"blind": 2,
			"cast": 1,
			"high": 3,
			"yield": 5,
			"keep": 2,
			"alike": 1,
			"once": 2,
			"up": 1,
			"she": 6,
			"nor": 12,
			"act": 1,
			"thyself": 1,
			"forth": 1,
			"dear": 3,
			"two": 2,
			"fresh": 1,
			"lift": 1,
			"pass": 3,
			"slaves": 1,
			"mine": 8,
			"not": 6,
			"fade": 1,
			"burn": 1,
			"put": 1,
			"today": 1,
			"depart": 1,
			"proud": 2,
			"hes": 1,
			"praise": 2,
			"it": 6,
			"over": 2,
			"shake": 1,
			"perish": 1,
			"eager": 1,
			"far": 4,
			"mean": 1,
			"wisdom": 1,
			"child": 1,
			"weep": 5,
			"by": 20,
			"try": 1,
			"eyes": 1,
			"bade": 1,
			"alone": 8,
			"long": 9,
			"bring": 1,
			"mute": 1,
			"is": 2,
			"cross": 1,
			"unto": 2,
			"like": 13,
			"farewell": 1,
			"hoary": 1,
			"why": 6,
			"forever": 1,
			"good": 3,
			"ever": 6,
			"together": 1,
			"they": 4,
			"believe": 1,
			"you": 1,
			"nature": 1,
			"tyrants": 1,
			"mother": 1,
			"thus": 2,
			"new": 1,
			"afar": 1,
			"heard": 5,
			"without": 3,
			"slave": 1,
			"its": 7,
			"than": 1,
			"smile": 2,
			"slow": 1,
			"lightly": 1,
			"een": 2,
			"those": 3,
			"where": 10,
			"holy": 1,
			"just": 1,
			"for": 48,
			"past": 1,
			"read": 3,
			"heaven": 4,
			"become": 1,
			"lost": 4,
			"catch": 1,
			"should": 1,
			"lonely": 2,
			"take": 5,
			"speak": 10,
			"tomorrow": 1,
			"fixed": 1,
			"rest": 1,
			"my": 16,
			"whats": 1,
			"count": 1,
			"beauty": 1,
			"again": 2,
			"themselves": 1,
			"touch": 2,
			"enough": 5,
			"thy": 11,
			"sing": 4,
			"greater": 1,
			"pray": 2,
			"sleep": 5,
			"teach": 2,
			"wept": 1,
			"ere": 2,
			"better": 2,
			"therefore": 2,
			"hope": 2,
			"seek": 4,
			"born": 5,
			"because": 2,
			"cease": 2,
			"any": 3,
			"win": 1,
			"wrath": 1,
			"longer": 1,
			"face": 1,
			"sin": 1,
			"rain": 1,
			"god": 4,
			"shame": 1,
			"noble": 1,
			"power": 1,
			"waking": 1,
			"oer": 1,
			"need": 3,
			"indeed": 1,
			"that": 26,
			"rolling": 2,
			"if": 8,
			"let": 6,
			"show": 2,
			"drop": 1,
			"man": 3,
			"bear": 2,
			"always": 8,
			"taste": 1,
			"make": 4,
			"fall": 3,
			"go": 5,
			"half": 3,
			"trust": 4,
			"hang": 1,
			"tear": 1,
			"had": 3,
			"must": 2,
			"climb": 1,
			"what": 31,
			"an": 4,
			"moon": 1,
			"wait": 2,
			"hold": 1,
			"even": 4,
			"or": 7,
			"conscience": 1,
			"think": 5,
			"moved": 1,
			"have": 7,
			"study": 1,
			"blush": 1,
			"tears": 1,
			"making": 1,
			"bitter": 1,
			"winter": 1,
			"their": 8,
			"a": 68,
			"so": 32,
			"given": 1,
			"them": 1,
			"sometimes": 1,
			"sink": 1,
			"upon": 2,
			"things": 1,
			"lord": 2,
			"never": 1,
			"spirit": 1,
			"leave": 5,
			"whence": 2,
			"love": 11,
			"on": 14,
			"break": 5,
			"quite": 2,
			"own": 1,
			"memory": 1,
			"old": 1,
			"but": 22,
			"wet": 1,
			"death": 8,
			"time": 1,
			"known": 3,
			"thee": 5,
			"ye": 3,
			"years": 1,
			"when": 12,
			"gone": 2,
			"eternal": 1,
			"religious": 1,
			"until": 1,
			"sigh": 1,
			"be": 38,
			"wings": 1,
			"t": 2,
			"having": 1,
			"out": 2,
			"dumb": 1,
			"watched": 1,
			"brave": 1,
			"rage": 1,
			"tried": 3,
			"heart": 1,
			"say": 3,
			"sorrow": 1,
			"german": 1,
			"and": 21,
			"sun": 1,
			"do": 3,
			"prize": 1,
			"last": 3,
			"myself": 1,
			"move": 1,
			"ask": 13,
			"blaze": 1,
			"fly": 1,
			"i": 14,
			"unknown": 1,
			"thou": 12,
			"greet": 1,
			"down": 1,
			"less": 3,
			"home": 1,
			"pay": 1,
			"here": 7,
			"too": 5,
			"one": 19,
			"such": 8,
			"judge": 1,
			"against": 1,
			"rome": 1,
			"hate": 1,
			"rather": 2,
			"each": 1,
			"how": 8,
			"hearts": 1,
			"help": 1,
			"from": 10,
			"sleeping": 1,
			"sought": 1,
			"strange": 1,
			"would": 2,
			"living": 1,
			"want": 1,
			"beneath": 1,
			"these": 2,
			"no": 1,
			"solitude": 1,
			"guilty": 1,
			"with": 24,
			"sad": 3,
			"virtue": 1,
			"soft": 1,
			"now": 7,
			"set": 2,
			"give": 2,
			"single": 1,
			"some": 1,
			"till": 10,
			"meet": 1,
			"will": 1,
			"follow": 1,
			"strong": 1,
			"himself": 2,
			"all": 15,
			"chief": 1,
			"gods": 1,
			"then": 9,
			"harvest": 1,
			"lose": 1,
			"through": 6,
			"well": 4,
			"clear": 1,
			"shine": 1,
			"guess": 1,
			"much": 2,
			"wake": 1,
			"begun": 1,
			"being": 1,
			"our": 7,
			"throne": 1,
			"walked": 1,
			"feel": 5,
			"passing": 2,
			"aside": 1,
			"fortune": 2,
			"fear": 3,
			"patience": 1,
			"loved": 1,
			"stay": 3,
			"shall": 1,
			"before": 1,
			"only": 6,
			"golden": 1,
			"chance": 1,
			"your": 6,
			"yet": 15,
			"mark": 1,
			"to": 81,
			"loud": 3,
			"poetry": 1,
			"wandered": 1,
			"cities": 1,
			"live": 5,
			"get": 1,
			"know": 9,
			"prove": 3,
			"art": 1,
			"bold": 1,
			"flow": 1,
			"strife": 1,
			"enter": 1,
			"we": 3,
			"as": 21,
			"fair": 1,
			"heavens": 1,
			"stand": 3,
			"happy": 8,
			"life": 2,
			"end": 1,
			"he": 8,
			"me": 11,
			"strength": 1,
			"at": 10,
			"fancy": 1,
			"slumber": 1,
			"o": 6,
			"coming": 1,
			"browning": 1,
			"grow": 2,
			"left": 2,
			"the": 116,
			"tis": 1,
			"though": 5,
			"theyre": 1,
			"seems": 1,
			"her": 4,
			"change": 2,
			"dead": 6,
			"fire": 1,
			"fail": 2,
			"near": 1,
			"first": 1,
			"oft": 1,
			"there": 11,
			"in": 64,
			"dim": 1,
			"shed": 1,
			"seem": 1
		},
		"awe": {
			"of": 1,
			"she": 1,
			"jove": 1,
			"return": 1,
			"why": 1,
			"should": 1,
			"upon": 1,
			"but": 1,
			"and": 5,
			"i": 1,
			"such": 1,
			"to": 2,
			"sign": 1,
			"at": 1,
			"the": 1,
			"in": 1
		},
		"rapture": {
			"of": 3,
			"calls": 1,
			"behold": 1,
			"like": 1,
			"sleep": 1,
			"oer": 1,
			"a": 1,
			"and": 3,
			"fly": 1,
			"took": 1,
			"through": 7,
			"shall": 1,
			"to": 2,
			"o": 1,
			"in": 1
		},
		"fade": {
			"him": 1,
			"far": 1,
			"away": 6,
			"for": 1,
			"john": 1,
			"but": 1,
			"death": 1,
			"when": 2,
			"be": 2,
			"and": 5,
			"from": 1,
			"while": 1,
			"into": 2,
			"o": 1,
			"the": 2,
			"in": 1
		},
		"divine": {
			"within": 1,
			"christ": 1,
			"his": 1,
			"hell": 1,
			"precious": 1,
			"which": 1,
			"of": 4,
			"worlds": 1,
			"spot": 1,
			"not": 1,
			"wisdom": 1,
			"by": 1,
			"father": 1,
			"is": 1,
			"like": 1,
			"takes": 1,
			"they": 1,
			"song": 1,
			"where": 1,
			"despair": 1,
			"should": 1,
			"surprise": 1,
			"my": 1,
			"thy": 1,
			"that": 3,
			"had": 1,
			"what": 1,
			"or": 1,
			"a": 1,
			"brings": 1,
			"lord": 1,
			"spirit": 1,
			"hath": 1,
			"love": 1,
			"filled": 1,
			"but": 1,
			"when": 2,
			"and": 5,
			"i": 2,
			"thou": 1,
			"robin": 1,
			"presence": 1,
			"how": 1,
			"from": 2,
			"with": 2,
			"now": 1,
			"give": 1,
			"all": 1,
			"through": 1,
			"george": 1,
			"to": 4,
			"into": 1,
			"bold": 1,
			"we": 1,
			"fair": 2,
			"borne": 1,
			"he": 1,
			"o": 1,
			"chorus": 1,
			"the": 10,
			"sure": 1,
			"stood": 1,
			"her": 1,
			"in": 2,
			"dim": 1
		},
		"hours": {
			"come": 1,
			"begin": 1,
			"are": 1,
			"of": 13,
			"talk": 1,
			"she": 1,
			"nor": 1,
			"pass": 1,
			"behold": 1,
			"not": 1,
			"it": 1,
			"over": 1,
			"far": 1,
			"away": 1,
			"lead": 1,
			"they": 2,
			"laid": 1,
			"for": 2,
			"can": 1,
			"were": 1,
			"that": 2,
			"what": 1,
			"or": 2,
			"bright": 1,
			"so": 1,
			"never": 1,
			"love": 1,
			"on": 2,
			"be": 1,
			"weeping": 1,
			"and": 5,
			"whateer": 1,
			"i": 1,
			"thou": 1,
			"rocks": 1,
			"from": 1,
			"with": 5,
			"couch": 1,
			"to": 1,
			"speed": 1,
			"we": 1,
			"glad": 1,
			"as": 2,
			"sat": 1,
			"the": 3,
			"tis": 1,
			"her": 1,
			"there": 1,
			"in": 3
		},
		"dwell": {
			"next": 1,
			"high": 1,
			"two": 1,
			"alone": 1,
			"is": 1,
			"forever": 1,
			"about": 1,
			"hope": 1,
			"sir": 1,
			"that": 1,
			"if": 1,
			"or": 1,
			"a": 3,
			"on": 2,
			"deep": 1,
			"but": 3,
			"poor": 1,
			"and": 3,
			"i": 2,
			"strange": 1,
			"with": 5,
			"till": 1,
			"whose": 1,
			"at": 1,
			"o": 1,
			"the": 2,
			"there": 2,
			"in": 10
		},
		"burn": {
			"blue": 1,
			"low": 1,
			"toward": 1,
			"of": 1,
			"for": 1,
			"sang": 1,
			"francis": 1,
			"that": 1,
			"what": 1,
			"or": 1,
			"lest": 1,
			"bright": 1,
			"a": 1,
			"so": 1,
			"when": 2,
			"out": 1,
			"and": 3,
			"thou": 1,
			"one": 1,
			"higher": 1,
			"while": 1,
			"no": 1,
			"with": 1,
			"your": 2,
			"to": 1,
			"there": 1,
			"in": 2
		},
		"serve": {
			"more": 1,
			"his": 2,
			"him": 2,
			"who": 1,
			"two": 1,
			"today": 1,
			"for": 4,
			"theres": 1,
			"my": 2,
			"thy": 1,
			"god": 2,
			"on": 1,
			"but": 1,
			"thee": 3,
			"and": 2,
			"shall": 1,
			"to": 4,
			"the": 4,
			"in": 1
		},
		"englands": {
			"fled": 1,
			"sword": 1,
			"pride": 1,
			"wars": 1,
			"like": 1,
			"lost": 1,
			"shore": 2,
			"face": 1,
			"fall": 1,
			"cruel": 1,
			"foes": 1,
			"feet": 1,
			"glory": 1,
			"and": 1,
			"through": 1,
			"the": 2,
			"dead": 3
		},
		"constant": {
			"of": 1,
			"fresh": 1,
			"image": 1,
			"hope": 1,
			"oer": 1,
			"cares": 1,
			"never": 1,
			"love": 1,
			"feet": 1,
			"sun": 1,
			"too": 1,
			"mind": 2,
			"guest": 1,
			"flame": 1,
			"as": 2,
			"he": 1,
			"at": 1,
			"in": 2
		},
		"crimson": {
			"flower": 1,
			"blood": 1,
			"forth": 1,
			"leaves": 1,
			"comes": 1,
			"rain": 1,
			"was": 1,
			"on": 1,
			"wing": 1,
			"fast": 1,
			"glory": 1,
			"and": 3,
			"bloom": 1,
			"now": 1,
			"toil": 1,
			"life": 1,
			"rings": 1,
			"the": 1,
			"seas": 1,
			"in": 2,
			"sky": 1
		},
		"side": {
			"see": 1,
			"fell": 1,
			"under": 1,
			"of": 17,
			"this": 1,
			"amid": 1,
			"she": 4,
			"beheld": 1,
			"two": 1,
			"side": 1,
			"every": 1,
			"by": 12,
			"is": 2,
			"away": 2,
			"children": 1,
			"forever": 1,
			"mother": 1,
			"mild": 1,
			"een": 2,
			"where": 4,
			"peace": 1,
			"faith": 1,
			"oer": 1,
			"that": 2,
			"what": 2,
			"an": 1,
			"or": 2,
			"hands": 1,
			"their": 1,
			"a": 3,
			"never": 1,
			"love": 1,
			"on": 1,
			"but": 6,
			"when": 2,
			"and": 18,
			"dark": 1,
			"knew": 1,
			"thou": 1,
			"from": 1,
			"would": 1,
			"while": 2,
			"no": 1,
			"with": 3,
			"soft": 1,
			"wave": 1,
			"some": 1,
			"all": 1,
			"then": 1,
			"our": 1,
			"shall": 1,
			"to": 4,
			"springs": 1,
			"into": 1,
			"he": 2,
			"led": 1,
			"arise": 1,
			"the": 8,
			"tis": 2,
			"stood": 1,
			"her": 1,
			"grim": 1,
			"in": 3
		},
		"burden": {
			"of": 9,
			"this": 1,
			"breaks": 1,
			"is": 1,
			"that": 1,
			"or": 1,
			"on": 3,
			"choose": 1,
			"down": 1,
			"give": 1,
			"then": 1,
			"still": 1,
			"to": 2,
			"vast": 1
		},
		"put": {
			"his": 3,
			"him": 1,
			"back": 1,
			"of": 2,
			"this": 1,
			"up": 5,
			"off": 1,
			"forth": 4,
			"not": 1,
			"it": 2,
			"by": 2,
			"away": 1,
			"my": 1,
			"themselves": 1,
			"that": 2,
			"half": 1,
			"their": 1,
			"a": 4,
			"on": 10,
			"out": 3,
			"down": 3,
			"from": 1,
			"strange": 1,
			"all": 1,
			"aside": 2,
			"your": 5,
			"to": 2,
			"into": 1,
			"me": 2,
			"the": 4,
			"her": 1,
			"first": 1,
			"in": 1
		},
		"starry": {
			"banner": 2,
			"which": 1,
			"beam": 1,
			"angel": 1,
			"hangs": 1,
			"lights": 1,
			"they": 1,
			"train": 1,
			"that": 1,
			"but": 1,
			"wings": 1,
			"out": 1,
			"and": 2,
			"with": 1,
			"night": 1,
			"shade": 1,
			"flag": 3,
			"the": 1,
			"treasure": 1,
			"sky": 2
		},
		"today": {
			"walks": 1,
			"free": 1,
			"his": 1,
			"are": 1,
			"of": 1,
			"after": 1,
			"sons": 1,
			"heavy": 1,
			"whatever": 1,
			"not": 1,
			"fool": 1,
			"like": 1,
			"hark": 1,
			"new": 1,
			"than": 2,
			"for": 1,
			"tomorrow": 2,
			"my": 1,
			"john": 1,
			"that": 2,
			"cares": 1,
			"had": 1,
			"or": 1,
			"a": 2,
			"so": 1,
			"on": 1,
			"but": 2,
			"and": 7,
			"i": 3,
			"here": 1,
			"from": 1,
			"beneath": 1,
			"with": 2,
			"will": 1,
			"then": 2,
			"thats": 1,
			"well": 2,
			"day": 1,
			"feel": 1,
			"to": 1,
			"art": 1,
			"we": 3,
			"as": 1,
			"he": 1,
			"the": 6,
			"in": 2
		},
		"depart": {
			"more": 1,
			"him": 1,
			"alas": 1,
			"it": 1,
			"return": 1,
			"that": 1,
			"love": 1,
			"but": 2,
			"time": 1,
			"when": 1,
			"be": 1,
			"i": 1,
			"from": 2,
			"while": 1,
			"only": 1,
			"still": 1,
			"yet": 1,
			"to": 1,
			"as": 1,
			"the": 1,
			"though": 1,
			"her": 2
		},
		"proud": {
			"low": 2,
			"england": 1,
			"his": 3,
			"fond": 1,
			"crest": 1,
			"temple": 1,
			"science": 1,
			"purple": 1,
			"who": 1,
			"men": 1,
			"ones": 1,
			"of": 5,
			"this": 1,
			"cast": 1,
			"rock": 1,
			"city": 1,
			"lands": 1,
			"by": 1,
			"eyes": 2,
			"like": 1,
			"hurrah": 1,
			"hard": 1,
			"forms": 1,
			"you": 1,
			"than": 1,
			"for": 1,
			"hand": 1,
			"clime": 1,
			"my": 1,
			"william": 1,
			"face": 1,
			"god": 1,
			"foot": 1,
			"power": 1,
			"were": 1,
			"was": 1,
			"that": 2,
			"man": 2,
			"an": 1,
			"towers": 1,
			"their": 1,
			"a": 1,
			"courage": 1,
			"on": 1,
			"mans": 2,
			"and": 10,
			"sun": 1,
			"one": 1,
			"each": 1,
			"with": 2,
			"thought": 1,
			"foe": 1,
			"throne": 1,
			"shall": 2,
			"yet": 1,
			"to": 5,
			"youth": 1,
			"whose": 1,
			"as": 2,
			"throng": 1,
			"array": 1,
			"the": 3,
			"world": 3,
			"house": 1,
			"in": 1,
			"step": 1
		},
		"hes": {
			"dying": 1,
			"more": 1,
			"free": 1,
			"his": 1,
			"fond": 1,
			"cast": 1,
			"not": 2,
			"by": 1,
			"like": 1,
			"away": 1,
			"without": 2,
			"most": 1,
			"stretched": 1,
			"that": 1,
			"a": 2,
			"gone": 3,
			"and": 1,
			"one": 1,
			"lying": 1,
			"only": 5,
			"withered": 1,
			"the": 1,
			"her": 2,
			"been": 1,
			"dead": 2,
			"in": 2
		},
		"dry": {
			"wheel": 1,
			"mine": 1,
			"every": 1,
			"land": 1,
			"is": 1,
			"leaves": 1,
			"smile": 1,
			"my": 1,
			"that": 1,
			"if": 1,
			"lips": 1,
			"desert": 1,
			"their": 2,
			"ashes": 1,
			"grass": 1,
			"and": 4,
			"dark": 1,
			"i": 1,
			"till": 1,
			"our": 1,
			"as": 3,
			"life": 1,
			"at": 1,
			"left": 1,
			"the": 2
		},
		"every": {
			"flower": 4,
			"come": 2,
			"sound": 1,
			"else": 1,
			"look": 2,
			"summer": 1,
			"more": 1,
			"blessings": 1,
			"wish": 1,
			"fierce": 1,
			"light": 1,
			"pine": 1,
			"his": 1,
			"james": 1,
			"ear": 2,
			"bare": 1,
			"s": 1,
			"glen": 1,
			"woe": 2,
			"are": 1,
			"word": 3,
			"silent": 1,
			"gate": 2,
			"which": 1,
			"mist": 1,
			"of": 7,
			"star": 3,
			"keep": 1,
			"feels": 1,
			"nor": 1,
			"sacred": 1,
			"morning": 2,
			"age": 3,
			"joy": 3,
			"bird": 1,
			"scorn": 1,
			"pain": 1,
			"mouth": 1,
			"place": 2,
			"part": 5,
			"side": 8,
			"sword": 1,
			"host": 1,
			"image": 2,
			"spirits": 1,
			"tongue": 2,
			"sod": 1,
			"land": 6,
			"is": 2,
			"why": 1,
			"prayer": 1,
			"grain": 1,
			"path": 1,
			"you": 1,
			"nature": 1,
			"just": 1,
			"for": 1,
			"past": 1,
			"hand": 1,
			"clime": 5,
			"breath": 1,
			"fixed": 1,
			"didst": 1,
			"blow": 3,
			"hour": 5,
			"note": 1,
			"thy": 1,
			"moan": 1,
			"ere": 1,
			"shadow": 1,
			"shore": 1,
			"soul": 4,
			"passion": 3,
			"born": 1,
			"wandering": 1,
			"town": 1,
			"door": 3,
			"face": 2,
			"sin": 1,
			"god": 1,
			"can": 2,
			"moment": 1,
			"noble": 1,
			"stroke": 1,
			"were": 1,
			"main": 1,
			"was": 2,
			"that": 4,
			"let": 1,
			"thorn": 1,
			"drop": 1,
			"man": 7,
			"leaf": 4,
			"victory": 1,
			"fall": 1,
			"sail": 1,
			"tear": 1,
			"stone": 1,
			"waiting": 1,
			"field": 2,
			"eye": 2,
			"soil": 1,
			"tree": 1,
			"blush": 1,
			"isle": 1,
			"danger": 1,
			"winter": 1,
			"fold": 1,
			"a": 4,
			"so": 2,
			"falls": 1,
			"green": 1,
			"spirit": 2,
			"but": 4,
			"deed": 2,
			"weeping": 1,
			"line": 2,
			"kind": 1,
			"heart": 3,
			"and": 12,
			"bliss": 2,
			"grace": 1,
			"do": 1,
			"dark": 1,
			"lovely": 1,
			"days": 1,
			"grave": 1,
			"fly": 1,
			"tale": 2,
			"steel": 1,
			"one": 8,
			"storm": 1,
			"secret": 1,
			"brow": 1,
			"help": 1,
			"other": 1,
			"would": 1,
			"feeling": 1,
			"mind": 1,
			"beneath": 1,
			"hidden": 1,
			"breast": 2,
			"guest": 2,
			"breeze": 2,
			"wave": 2,
			"now": 1,
			"till": 1,
			"hair": 2,
			"grief": 1,
			"thought": 6,
			"foe": 2,
			"has": 1,
			"street": 2,
			"wake": 1,
			"beauteous": 1,
			"nearer": 1,
			"wrong": 2,
			"day": 9,
			"passing": 3,
			"open": 1,
			"night": 1,
			"shall": 1,
			"wind": 4,
			"yet": 2,
			"way": 1,
			"to": 1,
			"hill": 2,
			"human": 2,
			"turn": 1,
			"glorious": 1,
			"may": 1,
			"hail": 1,
			"ship": 1,
			"he": 3,
			"at": 1,
			"o": 1,
			"coming": 1,
			"chain": 1,
			"common": 1,
			"the": 3,
			"house": 1,
			"change": 2,
			"there": 1,
			"in": 1,
			"step": 1,
			"sky": 1
		},
		"praise": {
			"since": 1,
			"his": 2,
			"him": 2,
			"see": 1,
			"who": 2,
			"which": 1,
			"of": 4,
			"nor": 1,
			"two": 1,
			"praise": 3,
			"it": 1,
			"by": 1,
			"is": 3,
			"like": 1,
			"they": 2,
			"abroad": 1,
			"without": 1,
			"those": 1,
			"for": 3,
			"my": 1,
			"blow": 1,
			"again": 1,
			"enough": 1,
			"thy": 1,
			"ourselves": 1,
			"god": 1,
			"can": 1,
			"that": 2,
			"if": 1,
			"what": 1,
			"oh": 1,
			"or": 4,
			"awake": 1,
			"a": 2,
			"on": 1,
			"but": 1,
			"thee": 9,
			"ye": 16,
			"be": 1,
			"out": 1,
			"and": 11,
			"unknown": 1,
			"thou": 3,
			"rather": 1,
			"each": 2,
			"from": 4,
			"would": 1,
			"alfred": 1,
			"with": 3,
			"now": 1,
			"till": 1,
			"will": 1,
			"all": 2,
			"george": 1,
			"our": 1,
			"hall": 1,
			"shall": 1,
			"yet": 1,
			"to": 7,
			"loud": 1,
			"may": 1,
			"we": 1,
			"he": 1,
			"at": 1,
			"o": 1,
			"the": 12,
			"world": 1
		},
		"pressed": {
			"his": 1,
			"beside": 1,
			"by": 1,
			"strike": 1,
			"my": 1,
			"that": 1,
			"think": 1,
			"upon": 1,
			"on": 1,
			"head": 1,
			"and": 3,
			"nigh": 1,
			"with": 1,
			"till": 1,
			"may": 1,
			"heavens": 1,
			"the": 1,
			"tis": 1,
			"her": 1,
			"in": 1
		},
		"sword": {
			"come": 2,
			"us": 1,
			"his": 2,
			"of": 4,
			"this": 1,
			"she": 1,
			"nor": 1,
			"is": 1,
			"like": 1,
			"hurrah": 1,
			"why": 1,
			"thus": 1,
			"song": 1,
			"for": 2,
			"should": 1,
			"again": 1,
			"thy": 1,
			"can": 1,
			"was": 1,
			"that": 3,
			"had": 1,
			"oh": 1,
			"even": 1,
			"or": 1,
			"their": 2,
			"a": 1,
			"hath": 1,
			"on": 4,
			"but": 1,
			"poor": 1,
			"when": 1,
			"and": 14,
			"march": 1,
			"i": 1,
			"ill": 1,
			"beneath": 1,
			"with": 1,
			"now": 1,
			"will": 1,
			"has": 2,
			"fear": 1,
			"shall": 3,
			"to": 4,
			"mid": 1,
			"may": 2,
			"as": 1,
			"charles": 1,
			"he": 2,
			"gain": 1,
			"the": 6,
			"stood": 1,
			"her": 1,
			"in": 6
		},
		"it": {
			"sweet": 2,
			"come": 3,
			"else": 1,
			"caught": 1,
			"cool": 1,
			"look": 1,
			"summer": 1,
			"us": 2,
			"more": 5,
			"won": 1,
			"thine": 4,
			"ours": 1,
			"england": 2,
			"loves": 1,
			"die": 1,
			"his": 3,
			"appear": 2,
			"save": 1,
			"him": 2,
			"means": 2,
			"wi": 2,
			"fit": 1,
			"white": 2,
			"science": 1,
			"none": 2,
			"hast": 2,
			"surely": 1,
			"tell": 4,
			"seemed": 9,
			"are": 1,
			"fears": 2,
			"right": 1,
			"back": 2,
			"made": 5,
			"fell": 4,
			"very": 2,
			"who": 1,
			"which": 1,
			"worth": 1,
			"hide": 1,
			"sounds": 2,
			"of": 8,
			"this": 3,
			"high": 2,
			"fame": 1,
			"keep": 3,
			"alike": 1,
			"calls": 1,
			"hung": 1,
			"after": 1,
			"once": 1,
			"up": 7,
			"off": 1,
			"she": 3,
			"among": 1,
			"nor": 4,
			"does": 5,
			"act": 1,
			"grew": 1,
			"roar": 1,
			"forth": 3,
			"played": 1,
			"goes": 4,
			"two": 1,
			"pain": 1,
			"pass": 2,
			"rose": 1,
			"mine": 1,
			"sings": 1,
			"not": 24,
			"serve": 1,
			"put": 2,
			"dry": 1,
			"every": 2,
			"it": 6,
			"image": 1,
			"far": 1,
			"lights": 1,
			"weep": 1,
			"by": 4,
			"father": 1,
			"bade": 2,
			"alone": 1,
			"bring": 1,
			"breaks": 4,
			"cold": 1,
			"is": 190,
			"soon": 2,
			"rise": 1,
			"looked": 2,
			"like": 13,
			"takes": 2,
			"hard": 5,
			"away": 3,
			"why": 7,
			"sung": 1,
			"forever": 3,
			"good": 1,
			"pleased": 1,
			"ever": 2,
			"they": 2,
			"shook": 1,
			"wide": 2,
			"you": 5,
			"nature": 1,
			"thus": 2,
			"swept": 1,
			"leaves": 1,
			"without": 1,
			"its": 5,
			"than": 1,
			"smile": 1,
			"lightly": 2,
			"pleasure": 1,
			"those": 1,
			"where": 7,
			"looking": 1,
			"small": 1,
			"rolled": 2,
			"holy": 1,
			"just": 2,
			"welcome": 1,
			"for": 19,
			"burns": 1,
			"past": 1,
			"heaven": 1,
			"lost": 3,
			"should": 4,
			"bowed": 1,
			"theres": 1,
			"cannot": 5,
			"rest": 2,
			"my": 7,
			"blow": 1,
			"whats": 1,
			"came": 12,
			"great": 1,
			"again": 3,
			"shines": 3,
			"burning": 1,
			"vain": 1,
			"sleep": 1,
			"blows": 2,
			"comes": 5,
			"ere": 1,
			"better": 2,
			"sadly": 1,
			"wear": 1,
			"remember": 1,
			"makes": 8,
			"most": 1,
			"times": 1,
			"reach": 2,
			"friend": 1,
			"glow": 1,
			"sits": 1,
			"along": 2,
			"closed": 1,
			"god": 2,
			"can": 2,
			"were": 26,
			"flee": 1,
			"bears": 3,
			"oer": 7,
			"indeed": 1,
			"did": 5,
			"was": 124,
			"runs": 1,
			"that": 12,
			"if": 3,
			"let": 2,
			"man": 3,
			"both": 1,
			"says": 2,
			"taste": 1,
			"make": 1,
			"fall": 6,
			"go": 1,
			"half": 1,
			"had": 9,
			"gives": 8,
			"must": 11,
			"what": 2,
			"oh": 6,
			"an": 3,
			"hold": 1,
			"even": 1,
			"or": 14,
			"think": 3,
			"finds": 1,
			"lest": 1,
			"moved": 1,
			"have": 1,
			"gave": 1,
			"sae": 1,
			"making": 1,
			"awake": 1,
			"their": 2,
			"fold": 1,
			"a": 23,
			"so": 13,
			"brings": 2,
			"falls": 2,
			"them": 1,
			"sometimes": 1,
			"courage": 1,
			"true": 1,
			"flies": 5,
			"upon": 4,
			"folly": 1,
			"things": 1,
			"lord": 1,
			"never": 6,
			"many": 1,
			"hath": 8,
			"almost": 2,
			"love": 2,
			"on": 15,
			"break": 2,
			"charm": 1,
			"sees": 1,
			"above": 1,
			"fast": 1,
			"old": 1,
			"but": 9,
			"time": 1,
			"known": 2,
			"thee": 3,
			"when": 7,
			"onward": 1,
			"turns": 1,
			"plain": 2,
			"religious": 1,
			"be": 46,
			"weeping": 1,
			"out": 5,
			"tried": 1,
			"close": 1,
			"and": 65,
			"eer": 1,
			"grace": 1,
			"truth": 1,
			"do": 3,
			"last": 1,
			"west": 2,
			"myself": 1,
			"move": 1,
			"hid": 1,
			"i": 9,
			"knew": 2,
			"snow": 1,
			"thou": 4,
			"down": 4,
			"told": 3,
			"bids": 1,
			"home": 2,
			"swell": 1,
			"broke": 1,
			"here": 3,
			"too": 5,
			"raised": 2,
			"one": 2,
			"might": 11,
			"breathes": 1,
			"softly": 1,
			"against": 1,
			"blossom": 1,
			"stands": 1,
			"each": 1,
			"how": 1,
			"from": 18,
			"drink": 1,
			"strange": 1,
			"would": 13,
			"reason": 1,
			"beat": 1,
			"these": 1,
			"while": 3,
			"no": 4,
			"pitiful": 2,
			"calm": 1,
			"voice": 1,
			"solitude": 1,
			"with": 32,
			"around": 1,
			"everlasting": 1,
			"soft": 2,
			"wave": 1,
			"now": 8,
			"give": 1,
			"some": 1,
			"shone": 2,
			"till": 1,
			"will": 24,
			"wore": 1,
			"all": 20,
			"then": 7,
			"large": 1,
			"thought": 3,
			"could": 9,
			"through": 4,
			"has": 8,
			"well": 10,
			"doth": 5,
			"clear": 1,
			"much": 1,
			"turned": 1,
			"begun": 1,
			"being": 1,
			"nearer": 1,
			"our": 4,
			"works": 1,
			"aside": 2,
			"neer": 1,
			"needs": 1,
			"shall": 15,
			"before": 4,
			"only": 3,
			"wind": 1,
			"still": 6,
			"your": 1,
			"mark": 1,
			"to": 40,
			"poetry": 1,
			"springs": 1,
			"into": 2,
			"round": 2,
			"turn": 1,
			"mid": 1,
			"lie": 2,
			"written": 1,
			"rich": 2,
			"gently": 1,
			"prove": 1,
			"ah": 1,
			"flow": 3,
			"may": 20,
			"hail": 1,
			"smiled": 1,
			"we": 4,
			"store": 1,
			"as": 19,
			"fair": 3,
			"stand": 1,
			"happy": 1,
			"done": 3,
			"said": 4,
			"life": 1,
			"he": 9,
			"me": 6,
			"son": 1,
			"at": 7,
			"below": 1,
			"lies": 11,
			"iii": 1,
			"led": 1,
			"o": 2,
			"east": 2,
			"grow": 3,
			"rings": 1,
			"the": 58,
			"tis": 2,
			"though": 2,
			"fight": 1,
			"sure": 1,
			"stood": 3,
			"seems": 17,
			"leads": 1,
			"grand": 3,
			"been": 3,
			"near": 1,
			"first": 1,
			"soldier": 1,
			"there": 11,
			"lowly": 1,
			"in": 50,
			"shed": 1,
			"seem": 4,
			"grows": 3
		},
		"evil": {
			"come": 1,
			"us": 1,
			"wish": 1,
			"thing": 1,
			"men": 1,
			"deeds": 1,
			"of": 2,
			"news": 1,
			"side": 1,
			"pride": 1,
			"is": 3,
			"good": 3,
			"hour": 1,
			"better": 1,
			"soul": 2,
			"can": 1,
			"was": 1,
			"that": 1,
			"if": 1,
			"or": 1,
			"so": 1,
			"sink": 1,
			"things": 1,
			"but": 1,
			"time": 1,
			"be": 2,
			"and": 3,
			"days": 2,
			"thou": 1,
			"might": 1,
			"work": 1,
			"would": 1,
			"with": 1,
			"till": 1,
			"could": 1,
			"much": 1,
			"day": 2,
			"shall": 1,
			"yet": 1,
			"to": 1,
			"live": 1,
			"as": 1,
			"done": 1,
			"he": 1,
			"the": 2,
			"world": 1,
			"in": 3,
			"thoughts": 1
		},
		"over": {
			"books": 1,
			"us": 1,
			"wrought": 1,
			"went": 1,
			"free": 2,
			"his": 4,
			"him": 1,
			"ii": 1,
			"purple": 1,
			"greece": 1,
			"of": 4,
			"this": 1,
			"hills": 1,
			"beyond": 1,
			"mine": 1,
			"every": 1,
			"it": 5,
			"over": 4,
			"by": 2,
			"jim": 1,
			"long": 1,
			"land": 1,
			"like": 2,
			"you": 1,
			"its": 2,
			"those": 1,
			"for": 1,
			"my": 3,
			"thy": 3,
			"ere": 1,
			"whom": 2,
			"dearest": 1,
			"any": 1,
			"sir": 1,
			"that": 4,
			"drop": 1,
			"oh": 1,
			"their": 3,
			"a": 3,
			"them": 1,
			"green": 1,
			"flies": 1,
			"many": 1,
			"love": 1,
			"on": 1,
			"but": 1,
			"grass": 1,
			"and": 9,
			"grave": 1,
			"i": 4,
			"one": 1,
			"such": 1,
			"against": 1,
			"from": 1,
			"no": 1,
			"with": 4,
			"some": 1,
			"all": 15,
			"behind": 1,
			"our": 1,
			"wrong": 1,
			"hall": 1,
			"loved": 1,
			"golden": 1,
			"to": 1,
			"hill": 1,
			"wood": 1,
			"we": 2,
			"whose": 1,
			"as": 1,
			"me": 2,
			"at": 4,
			"common": 1,
			"the": 95,
			"waste": 1,
			"her": 8
		},
		"army": {
			"blue": 1,
			"of": 7,
			"is": 1,
			"that": 1,
			"a": 1,
			"and": 3,
			"last": 1,
			"broke": 1,
			"from": 1,
			"while": 1,
			"now": 1,
			"to": 1,
			"he": 1,
			"in": 1
		},
		"host": {
			"fled": 1,
			"his": 1,
			"of": 3,
			"high": 1,
			"keep": 1,
			"goes": 1,
			"it": 1,
			"by": 1,
			"like": 1,
			"ever": 1,
			"moves": 1,
			"for": 1,
			"need": 1,
			"did": 1,
			"was": 1,
			"that": 4,
			"had": 1,
			"or": 1,
			"a": 1,
			"upon": 1,
			"on": 3,
			"but": 1,
			"when": 1,
			"and": 4,
			"from": 1,
			"while": 1,
			"with": 2,
			"through": 1,
			"behind": 1,
			"may": 1,
			"as": 1,
			"he": 3,
			"the": 3,
			"though": 1,
			"in": 4
		},
		"smooth": {
			"stream": 1,
			"of": 2,
			"it": 2,
			"like": 1,
			"its": 1,
			"sleep": 1,
			"runs": 1,
			"music": 1,
			"green": 1,
			"but": 1,
			"wet": 1,
			"ye": 1,
			"and": 6,
			"i": 1,
			"soft": 1,
			"to": 1,
			"as": 1,
			"at": 1,
			"the": 2,
			"her": 1
		},
		"shake": {
			"us": 2,
			"his": 3,
			"off": 1,
			"nor": 1,
			"not": 1,
			"my": 1,
			"thy": 2,
			"trumpet": 1,
			"or": 1,
			"hands": 3,
			"their": 1,
			"so": 1,
			"when": 3,
			"rome": 1,
			"from": 2,
			"with": 2,
			"now": 1,
			"to": 1,
			"mankind": 1,
			"said": 1,
			"the": 5
		},
		"began": {
			"see": 1,
			"wonder": 1,
			"this": 1,
			"for": 1,
			"sing": 1,
			"have": 1,
			"a": 1,
			"when": 1,
			"and": 3,
			"too": 1,
			"how": 1,
			"give": 1,
			"all": 1,
			"to": 14,
			"as": 1,
			"o": 2,
			"the": 2,
			"there": 2,
			"aloud": 1
		},
		"magic": {
			"of": 5,
			"bark": 1,
			"they": 1,
			"song": 1,
			"touch": 1,
			"sleep": 1,
			"power": 1,
			"joys": 1,
			"on": 1,
			"chains": 1,
			"and": 3,
			"might": 1,
			"bound": 1,
			"round": 1,
			"strain": 1,
			"he": 1
		},
		"sins": {
			"sweet": 1,
			"him": 1,
			"beside": 1,
			"of": 2,
			"once": 1,
			"she": 1,
			"load": 1,
			"they": 1,
			"that": 1,
			"falls": 1,
			"but": 1,
			"against": 1,
			"with": 1,
			"before": 1,
			"to": 2,
			"as": 1,
			"the": 2,
			"been": 1
		},
		"shows": {
			"us": 1,
			"his": 1,
			"are": 1,
			"of": 1,
			"its": 1,
			"my": 1,
			"great": 1,
			"man": 1,
			"a": 2,
			"but": 3,
			"ye": 1,
			"when": 1,
			"and": 1,
			"how": 1,
			"as": 1,
			"the": 6,
			"her": 1,
			"in": 1
		},
		"maiden": {
			"white": 1,
			"alas": 1,
			"who": 1,
			"feels": 1,
			"she": 1,
			"is": 1,
			"sung": 1,
			"used": 1,
			"if": 1,
			"wait": 1,
			"when": 2,
			"and": 1,
			"from": 1,
			"while": 1,
			"with": 1,
			"will": 1,
			"yet": 1,
			"to": 2,
			"art": 1,
			"lived": 1,
			"me": 1,
			"sat": 2,
			"the": 2,
			"her": 1,
			"in": 3
		},
		"flight": {
			"hast": 1,
			"are": 1,
			"men": 1,
			"of": 7,
			"cast": 1,
			"beyond": 1,
			"fresh": 1,
			"is": 3,
			"farewell": 1,
			"they": 2,
			"than": 1,
			"for": 2,
			"again": 1,
			"waves": 1,
			"can": 1,
			"was": 2,
			"or": 3,
			"but": 2,
			"when": 1,
			"and": 3,
			"i": 1,
			"thou": 1,
			"from": 1,
			"while": 1,
			"with": 1,
			"now": 1,
			"will": 1,
			"through": 1,
			"to": 1,
			"into": 1,
			"ah": 1,
			"we": 1,
			"as": 1,
			"the": 2,
			"there": 1,
			"in": 1
		},
		"image": {
			"earth": 1,
			"of": 10,
			"for": 1,
			"bears": 1,
			"that": 1,
			"show": 1,
			"fill": 1,
			"lord": 1,
			"on": 1,
			"until": 1,
			"and": 1,
			"thou": 1,
			"drew": 1,
			"all": 1,
			"doth": 1,
			"to": 1,
			"at": 1,
			"the": 3,
			"seems": 1
		},
		"perish": {
			"of": 4,
			"like": 1,
			"if": 2,
			"or": 2,
			"never": 1,
			"and": 1,
			"too": 1,
			"one": 1,
			"rather": 1,
			"from": 1,
			"with": 1,
			"will": 1,
			"all": 1,
			"falling": 1,
			"at": 1,
			"in": 4
		},
		"eager": {
			"over": 1,
			"for": 3,
			"thy": 1,
			"face": 1,
			"or": 1,
			"eye": 1,
			"hands": 1,
			"but": 1,
			"glance": 1,
			"and": 2,
			"i": 1,
			"greet": 1,
			"raised": 1,
			"hearts": 1,
			"thought": 1,
			"bold": 1,
			"strife": 1,
			"led": 1,
			"air": 1
		},
		"fool": {
			"this": 1,
			"not": 1,
			"it": 1,
			"is": 2,
			"for": 1,
			"again": 1,
			"indeed": 1,
			"that": 2,
			"their": 1,
			"hath": 1,
			"and": 2,
			"i": 3,
			"with": 1,
			"all": 1,
			"thats": 1,
			"to": 1,
			"he": 1,
			"at": 2,
			"the": 6,
			"in": 2
		},
		"twas": {
			"free": 1,
			"his": 1,
			"silver": 1,
			"right": 1,
			"not": 1,
			"easy": 1,
			"for": 3,
			"pretty": 1,
			"an": 1,
			"a": 6,
			"so": 2,
			"things": 1,
			"never": 1,
			"on": 1,
			"own": 1,
			"red": 1,
			"but": 3,
			"i": 1,
			"too": 1,
			"no": 1,
			"all": 1,
			"then": 3,
			"could": 1,
			"spoke": 1,
			"much": 1,
			"fortune": 1,
			"neer": 1,
			"only": 2,
			"to": 2,
			"heavens": 1,
			"the": 6,
			"in": 2
		},
		"neither": {
			"hear": 2,
			"his": 1,
			"passions": 1,
			"of": 2,
			"feels": 1,
			"nor": 4,
			"praise": 1,
			"is": 1,
			"church": 1,
			"for": 2,
			"breath": 1,
			"my": 1,
			"hopes": 1,
			"were": 1,
			"immortal": 1,
			"man": 1,
			"or": 1,
			"moved": 1,
			"a": 2,
			"heat": 1,
			"work": 1,
			"toil": 1,
			"spoke": 1,
			"turned": 1,
			"being": 1,
			"fear": 1,
			"rich": 1,
			"the": 1
		},
		"far": {
			"come": 1,
			"look": 1,
			"more": 5,
			"hear": 1,
			"within": 1,
			"his": 2,
			"deeper": 1,
			"back": 1,
			"under": 1,
			"of": 1,
			"hills": 1,
			"up": 1,
			"off": 9,
			"beyond": 4,
			"over": 1,
			"far": 5,
			"land": 2,
			"is": 3,
			"vision": 1,
			"away": 34,
			"heard": 1,
			"its": 2,
			"than": 8,
			"where": 1,
			"for": 1,
			"bloody": 1,
			"worse": 1,
			"my": 1,
			"thy": 2,
			"hopes": 1,
			"tonight": 1,
			"better": 2,
			"times": 1,
			"along": 1,
			"can": 1,
			"that": 1,
			"an": 1,
			"stars": 1,
			"or": 2,
			"sweeter": 1,
			"have": 1,
			"their": 1,
			"a": 1,
			"upon": 1,
			"on": 1,
			"above": 5,
			"but": 3,
			"perhaps": 1,
			"out": 1,
			"distant": 1,
			"and": 18,
			"lone": 1,
			"hid": 1,
			"i": 1,
			"down": 2,
			"less": 3,
			"too": 4,
			"between": 4,
			"fields": 1,
			"from": 21,
			"while": 1,
			"with": 1,
			"foreign": 1,
			"all": 1,
			"poured": 1,
			"through": 2,
			"doth": 2,
			"behind": 1,
			"our": 3,
			"sleeps": 1,
			"shall": 2,
			"yet": 1,
			"to": 1,
			"into": 2,
			"round": 1,
			"mid": 1,
			"th": 1,
			"apart": 1,
			"skies": 1,
			"we": 1,
			"as": 4,
			"at": 1,
			"below": 1,
			"grow": 1,
			"the": 12,
			"tis": 1,
			"in": 5
		},
		"mean": {
			"are": 1,
			"who": 1,
			"nor": 1,
			"by": 1,
			"for": 1,
			"or": 1,
			"have": 1,
			"tears": 1,
			"a": 1,
			"so": 1,
			"when": 1,
			"and": 4,
			"dull": 1,
			"from": 1,
			"these": 1,
			"while": 1,
			"much": 1,
			"to": 5,
			"though": 1,
			"her": 1,
			"in": 1
		},
		"spirits": {
			"are": 1,
			"under": 1,
			"who": 2,
			"of": 4,
			"high": 2,
			"aught": 1,
			"fade": 1,
			"over": 1,
			"by": 1,
			"fairest": 1,
			"prayer": 1,
			"my": 1,
			"hopes": 1,
			"whom": 1,
			"can": 1,
			"shame": 1,
			"flee": 1,
			"if": 1,
			"have": 1,
			"rushed": 1,
			"when": 1,
			"out": 1,
			"sorrow": 1,
			"and": 1,
			"bloom": 1,
			"fever": 1,
			"swell": 1,
			"from": 4,
			"feeling": 1,
			"all": 1,
			"through": 1,
			"has": 1,
			"turned": 1,
			"hall": 1,
			"shall": 1,
			"yet": 1,
			"to": 4,
			"sweep": 1,
			"skies": 1,
			"powers": 1,
			"he": 1,
			"at": 1,
			"the": 1,
			"tread": 1,
			"fire": 1,
			"in": 3
		},
		"hangs": {
			"white": 1,
			"by": 1,
			"like": 1,
			"shines": 1,
			"oer": 1,
			"a": 2,
			"upon": 2,
			"on": 4,
			"above": 1,
			"and": 1,
			"with": 1,
			"as": 1,
			"the": 2,
			"her": 1,
			"in": 1
		},
		"wisdom": {
			"won": 1,
			"which": 1,
			"of": 3,
			"calls": 1,
			"beyond": 1,
			"find": 1,
			"dwell": 1,
			"by": 1,
			"is": 5,
			"good": 1,
			"without": 2,
			"for": 1,
			"shines": 1,
			"vain": 1,
			"born": 1,
			"wit": 1,
			"power": 1,
			"that": 2,
			"make": 1,
			"must": 1,
			"finds": 2,
			"love": 1,
			"but": 1,
			"and": 5,
			"how": 1,
			"from": 4,
			"these": 1,
			"honor": 1,
			"with": 2,
			"till": 1,
			"wore": 1,
			"all": 1,
			"has": 1,
			"wealth": 1,
			"still": 1,
			"yet": 1,
			"to": 4,
			"as": 1,
			"at": 1,
			"grows": 1
		},
		"child": {
			"see": 1,
			"seemed": 1,
			"beside": 1,
			"who": 2,
			"which": 1,
			"of": 19,
			"she": 2,
			"among": 1,
			"anonymous": 1,
			"grown": 1,
			"played": 1,
			"pressed": 1,
			"by": 2,
			"land": 2,
			"is": 1,
			"they": 1,
			"mother": 1,
			"for": 3,
			"drops": 1,
			"my": 1,
			"enough": 1,
			"thy": 1,
			"was": 1,
			"that": 3,
			"if": 1,
			"a": 3,
			"so": 1,
			"upon": 2,
			"never": 3,
			"on": 3,
			"but": 2,
			"poor": 2,
			"when": 1,
			"van": 1,
			"and": 5,
			"i": 4,
			"woman": 1,
			"too": 1,
			"henry": 1,
			"no": 1,
			"give": 4,
			"all": 2,
			"thats": 1,
			"asleep": 1,
			"neer": 2,
			"shall": 2,
			"before": 1,
			"yet": 1,
			"to": 3,
			"may": 1,
			"eve": 1,
			"whose": 2,
			"said": 2,
			"he": 2,
			"at": 1,
			"the": 9,
			"tis": 1,
			"jesus": 1,
			"in": 4
		},
		"health": {
			"of": 1,
			"this": 1,
			"nor": 1,
			"is": 3,
			"they": 1,
			"for": 1,
			"can": 1,
			"were": 1,
			"or": 1,
			"on": 1,
			"but": 1,
			"and": 4,
			"whateer": 1,
			"from": 1,
			"with": 2,
			"singing": 1,
			"spring": 1,
			"to": 6,
			"we": 2,
			"her": 2
		},
		"lights": {
			"come": 1,
			"begin": 1,
			"are": 2,
			"who": 1,
			"which": 2,
			"country": 1,
			"of": 1,
			"up": 1,
			"she": 1,
			"like": 1,
			"without": 1,
			"that": 2,
			"what": 1,
			"a": 1,
			"on": 3,
			"and": 5,
			"i": 2,
			"with": 1,
			"around": 1,
			"to": 1,
			"as": 1,
			"me": 1,
			"below": 1,
			"grow": 1,
			"the": 3,
			"her": 1,
			"in": 2
		},
		"brought": {
			"us": 1,
			"his": 2,
			"him": 2,
			"back": 1,
			"up": 1,
			"you": 1,
			"my": 1,
			"must": 1,
			"their": 1,
			"a": 3,
			"never": 1,
			"on": 1,
			"death": 1,
			"thee": 1,
			"down": 1,
			"one": 1,
			"against": 1,
			"from": 1,
			"bound": 1,
			"before": 1,
			"to": 7,
			"as": 1,
			"me": 5,
			"the": 3,
			"her": 2,
			"in": 2
		},
		"bark": {
			"sent": 1,
			"which": 1,
			"nor": 1,
			"farewell": 1,
			"my": 1,
			"a": 1,
			"on": 3,
			"deep": 1,
			"and": 2,
			"i": 1,
			"such": 1,
			"with": 1,
			"will": 1,
			"we": 1,
			"at": 2,
			"the": 2,
			"in": 1
		},
		"tongue": {
			"lover": 1,
			"which": 2,
			"sounds": 1,
			"of": 4,
			"up": 1,
			"she": 1,
			"not": 1,
			"dwell": 1,
			"is": 3,
			"they": 1,
			"for": 1,
			"sang": 1,
			"thy": 1,
			"can": 3,
			"that": 2,
			"if": 1,
			"go": 1,
			"or": 2,
			"their": 1,
			"brings": 2,
			"but": 1,
			"and": 6,
			"i": 1,
			"whereer": 1,
			"will": 1,
			"could": 1,
			"doth": 1,
			"our": 1,
			"shall": 1,
			"golden": 1,
			"to": 6,
			"may": 1,
			"as": 1,
			"he": 2,
			"the": 1,
			"there": 1
		},
		"bless": {
			"us": 1,
			"thine": 1,
			"christ": 1,
			"are": 1,
			"saints": 1,
			"this": 1,
			"after": 1,
			"it": 2,
			"you": 3,
			"those": 1,
			"my": 1,
			"thy": 2,
			"god": 2,
			"were": 1,
			"oer": 1,
			"let": 1,
			"have": 1,
			"a": 1,
			"but": 1,
			"thee": 5,
			"and": 2,
			"i": 1,
			"one": 1,
			"with": 1,
			"our": 2,
			"shall": 1,
			"your": 2,
			"yet": 1,
			"as": 1,
			"me": 3,
			"the": 10,
			"her": 1
		},
		"weep": {
			"his": 1,
			"save": 1,
			"are": 1,
			"who": 2,
			"nor": 1,
			"not": 2,
			"it": 3,
			"weep": 2,
			"away": 1,
			"why": 1,
			"they": 1,
			"thus": 1,
			"its": 1,
			"where": 1,
			"for": 14,
			"my": 1,
			"thy": 1,
			"sir": 1,
			"wandering": 1,
			"oer": 2,
			"that": 1,
			"if": 1,
			"let": 1,
			"full": 1,
			"or": 3,
			"their": 1,
			"a": 2,
			"on": 1,
			"saw": 1,
			"but": 1,
			"ye": 1,
			"when": 2,
			"dumb": 1,
			"and": 10,
			"thou": 1,
			"no": 10,
			"with": 3,
			"then": 1,
			"only": 1,
			"your": 1,
			"yet": 2,
			"to": 2,
			"we": 3,
			"as": 2,
			"o": 1,
			"the": 4,
			"her": 1,
			"in": 3
		},
		"water": {
			"cool": 1,
			"more": 2,
			"his": 1,
			"which": 1,
			"of": 1,
			"breaks": 1,
			"cold": 1,
			"is": 1,
			"unto": 1,
			"shook": 1,
			"its": 1,
			"where": 1,
			"for": 1,
			"thy": 1,
			"gather": 1,
			"glow": 1,
			"did": 1,
			"that": 2,
			"or": 1,
			"sae": 1,
			"saw": 1,
			"but": 1,
			"ye": 1,
			"be": 1,
			"out": 1,
			"and": 6,
			"shining": 1,
			"from": 2,
			"with": 1,
			"all": 1,
			"has": 1,
			"clear": 2,
			"mount": 1,
			"turned": 3,
			"only": 1,
			"yet": 1,
			"into": 1,
			"may": 1,
			"whose": 2,
			"said": 1,
			"at": 1,
			"the": 3,
			"stood": 1,
			"her": 1,
			"there": 1,
			"in": 6
		},
		"send": {
			"us": 2,
			"his": 2,
			"save": 1,
			"him": 1,
			"back": 2,
			"very": 1,
			"forth": 1,
			"news": 1,
			"it": 2,
			"forms": 1,
			"you": 1,
			"strike": 1,
			"its": 1,
			"for": 2,
			"if": 1,
			"danger": 1,
			"them": 2,
			"thee": 1,
			"out": 1,
			"down": 1,
			"home": 1,
			"ill": 1,
			"upward": 1,
			"he": 1,
			"me": 3,
			"o": 1,
			"the": 2
		},
		"ease": {
			"of": 1,
			"is": 1,
			"like": 1,
			"than": 1,
			"those": 1,
			"my": 2,
			"that": 1,
			"let": 1,
			"must": 1,
			"leave": 1,
			"but": 1,
			"when": 1,
			"and": 6,
			"i": 1,
			"one": 1,
			"while": 1,
			"with": 1,
			"will": 1,
			"through": 1,
			"thats": 1,
			"gathered": 1,
			"to": 1,
			"into": 1,
			"me": 1,
			"o": 1,
			"the": 6,
			"her": 1,
			"trees": 1,
			"in": 2,
			"grows": 1
		},
		"feeble": {
			"more": 1,
			"steps": 1,
			"souls": 1,
			"father": 1,
			"hand": 2,
			"note": 1,
			"cheer": 1,
			"friend": 1,
			"faith": 1,
			"head": 1,
			"mighty": 1,
			"with": 2,
			"now": 1,
			"wrong": 1,
			"sense": 1,
			"aside": 1,
			"way": 1,
			"the": 1,
			"in": 2
		},
		"sod": {
			"which": 1,
			"than": 2,
			"rolled": 1,
			"that": 1,
			"must": 1,
			"what": 1,
			"even": 1,
			"on": 1,
			"but": 1,
			"and": 15,
			"thou": 1,
			"till": 1,
			"at": 1,
			"in": 2
		},
		"load": {
			"which": 1,
			"of": 8,
			"they": 1,
			"again": 2,
			"along": 1,
			"a": 1,
			"them": 1,
			"upon": 1,
			"and": 1,
			"i": 2,
			"rocks": 1,
			"from": 1,
			"no": 1,
			"doth": 1,
			"whose": 1
		},
		"by": {
			"sweet": 2,
			"blue": 1,
			"come": 1,
			"low": 1,
			"dying": 1,
			"summer": 3,
			"itself": 2,
			"woes": 1,
			"us": 1,
			"more": 2,
			"since": 1,
			"thine": 3,
			"unseen": 3,
			"justice": 2,
			"loves": 1,
			"christ": 2,
			"doubt": 1,
			"die": 1,
			"cloud": 1,
			"mountains": 2,
			"his": 26,
			"stream": 3,
			"james": 1,
			"him": 11,
			"law": 2,
			"means": 1,
			"blood": 1,
			"leap": 1,
			"bare": 1,
			"thousand": 1,
			"passions": 2,
			"war": 1,
			"are": 2,
			"saints": 1,
			"fears": 1,
			"right": 1,
			"word": 1,
			"who": 1,
			"men": 3,
			"which": 14,
			"deeds": 1,
			"of": 11,
			"brook": 1,
			"this": 10,
			"bonnie": 1,
			"season": 2,
			"graves": 1,
			"fame": 1,
			"souls": 1,
			"after": 2,
			"off": 2,
			"angel": 1,
			"silence": 1,
			"sacred": 1,
			"gold": 1,
			"roar": 1,
			"sight": 1,
			"grown": 1,
			"lightning": 1,
			"dear": 1,
			"pain": 2,
			"fine": 1,
			"mine": 1,
			"rivers": 1,
			"not": 1,
			"divine": 2,
			"burn": 1,
			"crimson": 1,
			"side": 10,
			"every": 3,
			"sword": 1,
			"it": 2,
			"magic": 2,
			"sins": 1,
			"flight": 2,
			"far": 3,
			"wisdom": 1,
			"ease": 3,
			"feeble": 1,
			"by": 5,
			"jove": 3,
			"fountain": 3,
			"nations": 1,
			"cold": 2,
			"pride": 1,
			"land": 3,
			"is": 3,
			"like": 3,
			"hard": 3,
			"gift": 1,
			"forms": 1,
			"why": 1,
			"kings": 1,
			"forever": 1,
			"good": 1,
			"force": 6,
			"care": 2,
			"they": 2,
			"faint": 1,
			"you": 1,
			"nature": 5,
			"robert": 2,
			"its": 3,
			"than": 1,
			"slow": 2,
			"pleasure": 1,
			"those": 12,
			"sea": 1,
			"friends": 1,
			"where": 5,
			"gentle": 1,
			"others": 1,
			"despair": 3,
			"richard": 1,
			"summers": 1,
			"gray": 1,
			"just": 1,
			"for": 2,
			"heaven": 7,
			"bloody": 2,
			"lonely": 2,
			"surprise": 1,
			"take": 2,
			"breath": 1,
			"my": 16,
			"words": 1,
			"hour": 1,
			"winds": 3,
			"great": 2,
			"john": 2,
			"tender": 1,
			"sighing": 1,
			"beauty": 1,
			"desire": 1,
			"themselves": 2,
			"thy": 27,
			"smiles": 1,
			"battle": 2,
			"blows": 1,
			"hopes": 1,
			"whom": 6,
			"shore": 1,
			"any": 4,
			"sir": 1,
			"wandering": 1,
			"yellow": 1,
			"name": 1,
			"william": 1,
			"forward": 1,
			"sin": 2,
			"faith": 6,
			"god": 2,
			"shame": 1,
			"power": 1,
			"stroke": 1,
			"were": 1,
			"waking": 1,
			"sudden": 2,
			"walls": 1,
			"was": 1,
			"that": 22,
			"let": 2,
			"lips": 1,
			"cares": 1,
			"man": 7,
			"daily": 2,
			"poems": 1,
			"both": 2,
			"leaf": 2,
			"steep": 1,
			"pure": 1,
			"what": 6,
			"oh": 1,
			"an": 7,
			"moon": 1,
			"hold": 1,
			"nothing": 1,
			"stone": 1,
			"or": 13,
			"de": 1,
			"hands": 1,
			"bright": 1,
			"have": 2,
			"study": 3,
			"tears": 2,
			"making": 2,
			"bitter": 1,
			"their": 13,
			"a": 45,
			"so": 1,
			"pains": 1,
			"them": 3,
			"true": 2,
			"lay": 1,
			"lord": 1,
			"never": 1,
			"many": 8,
			"cruel": 3,
			"love": 5,
			"on": 3,
			"chains": 1,
			"but": 1,
			"glance": 1,
			"death": 4,
			"time": 2,
			"thee": 11,
			"ye": 1,
			"years": 3,
			"moving": 1,
			"when": 3,
			"turns": 5,
			"plain": 1,
			"waters": 1,
			"t": 1,
			"out": 1,
			"anguish": 1,
			"and": 50,
			"mothers": 1,
			"grace": 1,
			"truth": 3,
			"dark": 1,
			"fate": 5,
			"year": 3,
			"i": 6,
			"thou": 2,
			"tale": 1,
			"sunny": 1,
			"less": 1,
			"home": 1,
			"raised": 1,
			"mortal": 2,
			"one": 23,
			"storm": 2,
			"such": 2,
			"shining": 1,
			"rather": 1,
			"saint": 1,
			"broad": 2,
			"each": 4,
			"anothers": 1,
			"henry": 1,
			"how": 4,
			"higher": 1,
			"help": 1,
			"other": 1,
			"from": 4,
			"sleeping": 1,
			"stronger": 1,
			"living": 1,
			"ill": 1,
			"want": 1,
			"reason": 1,
			"ancient": 1,
			"these": 4,
			"foul": 1,
			"honor": 1,
			"no": 5,
			"with": 3,
			"around": 1,
			"sad": 1,
			"soft": 1,
			"some": 13,
			"till": 3,
			"will": 2,
			"follow": 1,
			"himself": 5,
			"all": 11,
			"patient": 1,
			"grief": 2,
			"gods": 3,
			"large": 1,
			"thought": 1,
			"toil": 2,
			"angels": 2,
			"george": 2,
			"well": 1,
			"lake": 1,
			"much": 1,
			"minds": 1,
			"fiery": 1,
			"being": 1,
			"wealth": 1,
			"our": 7,
			"wrong": 2,
			"day": 24,
			"works": 1,
			"gathered": 1,
			"future": 1,
			"fear": 1,
			"night": 19,
			"shall": 1,
			"only": 3,
			"wind": 1,
			"chance": 1,
			"your": 3,
			"shade": 1,
			"natures": 3,
			"yet": 1,
			"course": 1,
			"to": 10,
			"poetry": 1,
			"hill": 1,
			"clouds": 1,
			"youth": 1,
			"human": 3,
			"poets": 2,
			"springs": 1,
			"into": 1,
			"turn": 1,
			"thinking": 2,
			"little": 3,
			"use": 1,
			"backward": 1,
			"heavenly": 2,
			"art": 6,
			"th": 2,
			"yon": 2,
			"powers": 1,
			"we": 5,
			"whose": 6,
			"falling": 1,
			"as": 1,
			"charles": 1,
			"heavens": 3,
			"happy": 1,
			"life": 1,
			"end": 1,
			"he": 6,
			"me": 12,
			"strength": 1,
			"gleam": 1,
			"at": 1,
			"fancy": 1,
			"frown": 1,
			"seat": 1,
			"led": 1,
			"o": 1,
			"gain": 1,
			"rings": 1,
			"streams": 1,
			"the": 297,
			"stood": 1,
			"drawn": 1,
			"seems": 1,
			"labor": 1,
			"her": 16,
			"change": 2,
			"young": 1,
			"fire": 1,
			"first": 1,
			"there": 1,
			"in": 10,
			"aloud": 1,
			"thoughts": 2
		},
		"try": {
			"us": 1,
			"his": 2,
			"him": 1,
			"every": 1,
			"by": 1,
			"they": 1,
			"prayer": 1,
			"its": 1,
			"my": 1,
			"peace": 1,
			"what": 2,
			"on": 1,
			"but": 1,
			"thee": 1,
			"when": 1,
			"and": 2,
			"one": 1,
			"some": 1,
			"all": 1,
			"to": 4,
			"me": 2,
			"the": 1
		},
		"eyes": {
			"blue": 1,
			"come": 1,
			"look": 1,
			"since": 1,
			"im": 1,
			"light": 1,
			"forget": 2,
			"his": 3,
			"save": 1,
			"see": 3,
			"are": 11,
			"who": 1,
			"which": 4,
			"call": 1,
			"of": 13,
			"this": 1,
			"keep": 1,
			"up": 1,
			"she": 3,
			"nor": 2,
			"grew": 1,
			"grown": 1,
			"dear": 1,
			"behold": 4,
			"put": 1,
			"it": 2,
			"over": 2,
			"cold": 1,
			"is": 3,
			"looked": 2,
			"unto": 1,
			"like": 6,
			"away": 1,
			"why": 1,
			"sung": 1,
			"please": 1,
			"they": 2,
			"new": 1,
			"strike": 1,
			"than": 1,
			"for": 4,
			"blown": 1,
			"read": 1,
			"should": 2,
			"spite": 1,
			"my": 1,
			"again": 2,
			"desire": 1,
			"thy": 1,
			"yes": 1,
			"watch": 1,
			"forward": 1,
			"closed": 1,
			"can": 3,
			"power": 1,
			"were": 4,
			"that": 18,
			"let": 1,
			"full": 1,
			"what": 1,
			"nothing": 1,
			"or": 2,
			"lest": 1,
			"bright": 2,
			"have": 7,
			"tears": 1,
			"their": 2,
			"a": 5,
			"so": 3,
			"true": 1,
			"things": 1,
			"hath": 1,
			"met": 1,
			"delight": 1,
			"on": 3,
			"above": 2,
			"but": 6,
			"when": 1,
			"gone": 1,
			"close": 1,
			"and": 38,
			"i": 4,
			"thou": 1,
			"down": 1,
			"one": 2,
			"how": 2,
			"from": 2,
			"sought": 1,
			"these": 1,
			"no": 2,
			"ears": 1,
			"with": 13,
			"sad": 1,
			"soft": 1,
			"now": 4,
			"meet": 1,
			"will": 1,
			"familiar": 2,
			"then": 1,
			"could": 1,
			"well": 1,
			"clear": 1,
			"shine": 2,
			"turned": 1,
			"shall": 2,
			"before": 2,
			"still": 1,
			"your": 1,
			"to": 7,
			"into": 1,
			"get": 1,
			"may": 5,
			"we": 3,
			"as": 2,
			"said": 1,
			"he": 3,
			"me": 1,
			"at": 3,
			"below": 1,
			"o": 4,
			"grow": 1,
			"the": 18,
			"ghost": 1,
			"though": 1,
			"bent": 1,
			"her": 2,
			"in": 4,
			"dim": 1,
			"saith": 1
		},
		"jim": {
			"come": 1,
			"hear": 1,
			"right": 1,
			"up": 1,
			"sez": 1,
			"they": 1,
			"take": 5,
			"came": 1,
			"was": 4,
			"make": 1,
			"a": 1,
			"on": 1,
			"old": 1,
			"and": 6,
			"would": 1,
			"with": 1,
			"all": 1,
			"lived": 1,
			"he": 1,
			"at": 1
		},
		"fathers": {
			"floor": 1,
			"taught": 1,
			"died": 1,
			"curse": 1,
			"earth": 1,
			"his": 1,
			"aid": 1,
			"right": 1,
			"who": 1,
			"body": 1,
			"of": 2,
			"graves": 1,
			"fame": 2,
			"brother": 1,
			"place": 1,
			"not": 1,
			"side": 1,
			"sword": 2,
			"eyes": 1,
			"wise": 1,
			"rise": 1,
			"native": 1,
			"care": 1,
			"prayer": 1,
			"holy": 1,
			"welcome": 1,
			"for": 1,
			"bloody": 1,
			"sleep": 1,
			"wrath": 1,
			"fools": 1,
			"name": 2,
			"door": 2,
			"face": 1,
			"god": 3,
			"did": 1,
			"that": 1,
			"spake": 1,
			"field": 1,
			"lest": 1,
			"have": 3,
			"towers": 1,
			"so": 1,
			"love": 1,
			"wing": 1,
			"known": 1,
			"and": 2,
			"truth": 1,
			"grave": 1,
			"home": 2,
			"stands": 1,
			"would": 2,
			"kingdom": 1,
			"with": 1,
			"will": 1,
			"loving": 1,
			"then": 1,
			"throne": 1,
			"hall": 1,
			"knee": 1,
			"he": 1,
			"arms": 1,
			"left": 1,
			"the": 2,
			"house": 4,
			"first": 1,
			"there": 1,
			"in": 3
		},
		"father": {
			"hear": 2,
			"his": 3,
			"him": 1,
			"made": 3,
			"who": 4,
			"of": 8,
			"nor": 1,
			"three": 5,
			"dear": 3,
			"far": 1,
			"alone": 1,
			"cold": 1,
			"land": 4,
			"is": 1,
			"hard": 1,
			"why": 1,
			"mother": 4,
			"grant": 1,
			"without": 1,
			"cry": 1,
			"should": 1,
			"sang": 1,
			"speak": 1,
			"standing": 1,
			"thy": 6,
			"comes": 1,
			"sits": 1,
			"did": 1,
			"was": 2,
			"that": 2,
			"if": 1,
			"had": 2,
			"what": 2,
			"oh": 2,
			"or": 1,
			"so": 1,
			"them": 1,
			"never": 1,
			"hath": 1,
			"on": 1,
			"when": 2,
			"eternal": 1,
			"be": 1,
			"and": 14,
			"last": 2,
			"i": 6,
			"knew": 1,
			"such": 1,
			"perfect": 1,
			"work": 1,
			"from": 1,
			"would": 1,
			"with": 1,
			"everlasting": 1,
			"our": 1,
			"to": 1,
			"cut": 1,
			"lived": 1,
			"we": 1,
			"whose": 1,
			"he": 1,
			"me": 2,
			"sat": 1,
			"the": 1,
			"though": 1,
			"safe": 1,
			"in": 2
		},
		"bade": {
			"him": 1,
			"it": 2,
			"its": 1,
			"my": 1,
			"battles": 1,
			"awake": 1,
			"their": 1,
			"them": 1,
			"joys": 1,
			"time": 1,
			"no": 1,
			"me": 4,
			"the": 7
		},
		"jove": {
			"nor": 1,
			"fool": 1,
			"author": 1,
			"for": 2,
			"great": 1,
			"power": 1,
			"oer": 1,
			"or": 1,
			"but": 1,
			"and": 3,
			"i": 2,
			"would": 1,
			"himself": 2,
			"has": 1,
			"doth": 1,
			"as": 1,
			"the": 1,
			"young": 1,
			"in": 1
		},
		"nevermore": {
			"look": 1,
			"see": 1,
			"behold": 1,
			"it": 1,
			"for": 1,
			"can": 1,
			"that": 1,
			"what": 1,
			"upon": 1,
			"be": 1,
			"out": 1,
			"from": 3,
			"with": 2,
			"will": 1,
			"shall": 1,
			"may": 2,
			"o": 1,
			"the": 2
		},
		"woods": {
			"are": 2,
			"of": 1,
			"three": 1,
			"rivers": 1,
			"by": 2,
			"is": 1,
			"farewell": 1,
			"where": 2,
			"my": 4,
			"rang": 1,
			"rain": 1,
			"that": 1,
			"so": 1,
			"green": 1,
			"on": 2,
			"and": 16,
			"i": 1,
			"against": 1,
			"tall": 1,
			"from": 1,
			"ill": 1,
			"beneath": 2,
			"with": 2,
			"some": 1,
			"may": 2,
			"he": 2,
			"grow": 1,
			"streams": 1,
			"the": 2
		},
		"alone": {
			"perchance": 1,
			"look": 1,
			"more": 1,
			"since": 1,
			"im": 1,
			"save": 1,
			"are": 3,
			"aid": 1,
			"back": 1,
			"made": 1,
			"who": 1,
			"worth": 1,
			"of": 8,
			"once": 1,
			"she": 2,
			"nor": 4,
			"blossoms": 1,
			"thyself": 1,
			"not": 4,
			"burn": 1,
			"it": 1,
			"far": 1,
			"by": 9,
			"is": 8,
			"lead": 1,
			"they": 1,
			"mother": 1,
			"earths": 1,
			"those": 1,
			"where": 2,
			"for": 8,
			"should": 1,
			"cannot": 2,
			"my": 4,
			"remain": 1,
			"great": 1,
			"thy": 1,
			"yes": 1,
			"whom": 1,
			"least": 1,
			"can": 8,
			"was": 3,
			"that": 6,
			"if": 1,
			"let": 1,
			"man": 1,
			"embrace": 1,
			"make": 1,
			"must": 1,
			"what": 1,
			"sit": 1,
			"or": 1,
			"have": 1,
			"their": 1,
			"a": 4,
			"so": 3,
			"on": 5,
			"but": 8,
			"years": 1,
			"when": 2,
			"be": 1,
			"and": 10,
			"i": 8,
			"thou": 1,
			"too": 1,
			"one": 1,
			"each": 1,
			"how": 2,
			"from": 1,
			"ill": 1,
			"these": 2,
			"while": 1,
			"with": 7,
			"sad": 1,
			"some": 1,
			"all": 3,
			"then": 2,
			"could": 4,
			"through": 2,
			"has": 1,
			"walked": 1,
			"shall": 2,
			"yet": 3,
			"to": 6,
			"lie": 1,
			"whose": 2,
			"as": 2,
			"he": 3,
			"at": 2,
			"the": 29,
			"tis": 1,
			"though": 1,
			"fight": 1,
			"her": 3,
			"leads": 2,
			"there": 1,
			"in": 8
		},
		"shut": {
			"up": 3,
			"it": 1,
			"eyes": 2,
			"shut": 1,
			"my": 3,
			"out": 1,
			"and": 1,
			"from": 1,
			"our": 1,
			"to": 2,
			"ah": 1,
			"the": 4,
			"her": 1
		},
		"long": {
			"come": 1,
			"summer": 1,
			"since": 9,
			"thine": 1,
			"earth": 1,
			"fond": 1,
			"kiss": 2,
			"war": 1,
			"back": 1,
			"ive": 1,
			"which": 4,
			"ago": 13,
			"of": 12,
			"after": 1,
			"she": 1,
			"age": 2,
			"darkness": 1,
			"race": 2,
			"dear": 1,
			"lift": 1,
			"part": 1,
			"rivers": 1,
			"divine": 1,
			"hours": 1,
			"it": 2,
			"by": 3,
			"long": 7,
			"is": 1,
			"glittering": 1,
			"looked": 1,
			"farewell": 4,
			"together": 1,
			"they": 1,
			"prayer": 1,
			"easy": 1,
			"thus": 1,
			"new": 1,
			"robert": 1,
			"beams": 1,
			"een": 1,
			"train": 1,
			"rolled": 1,
			"gray": 1,
			"for": 2,
			"past": 4,
			"lost": 1,
			"should": 1,
			"my": 1,
			"enough": 1,
			"thy": 2,
			"pray": 1,
			"peace": 1,
			"ere": 6,
			"tonight": 1,
			"waves": 1,
			"shadow": 1,
			"cease": 1,
			"evening": 1,
			"reach": 1,
			"oer": 1,
			"that": 5,
			"if": 1,
			"drop": 1,
			"another": 1,
			"had": 2,
			"oh": 1,
			"an": 2,
			"even": 1,
			"or": 3,
			"de": 1,
			"bright": 2,
			"have": 4,
			"tears": 1,
			"a": 4,
			"so": 1,
			"pains": 1,
			"brings": 1,
			"upon": 3,
			"love": 2,
			"deep": 1,
			"but": 7,
			"grass": 1,
			"time": 3,
			"years": 8,
			"moving": 1,
			"when": 1,
			"until": 1,
			"be": 1,
			"wings": 1,
			"line": 2,
			"watched": 1,
			"and": 23,
			"march": 1,
			"do": 1,
			"rays": 1,
			"black": 1,
			"days": 2,
			"i": 4,
			"thou": 2,
			"home": 1,
			"shadows": 1,
			"saint": 1,
			"broad": 1,
			"how": 1,
			"from": 1,
			"beneath": 1,
			"hidden": 1,
			"no": 1,
			"roll": 1,
			"with": 2,
			"now": 1,
			"some": 1,
			"till": 1,
			"hair": 1,
			"realm": 1,
			"will": 1,
			"grief": 1,
			"through": 3,
			"has": 1,
			"nights": 4,
			"our": 2,
			"day": 4,
			"night": 6,
			"patience": 1,
			"loved": 1,
			"shall": 4,
			"before": 4,
			"still": 1,
			"yet": 1,
			"way": 2,
			"to": 18,
			"loud": 1,
			"live": 3,
			"backward": 1,
			"may": 6,
			"strife": 1,
			"apart": 1,
			"we": 3,
			"loss": 1,
			"as": 11,
			"array": 2,
			"life": 3,
			"end": 1,
			"he": 2,
			"arms": 1,
			"at": 5,
			"slumber": 1,
			"o": 1,
			"left": 1,
			"the": 13,
			"though": 3,
			"stood": 1,
			"her": 1,
			"passed": 2,
			"been": 1,
			"in": 4,
			"dim": 2
		},
		"sorrows": {
			"come": 1,
			"are": 2,
			"aye": 1,
			"of": 4,
			"bade": 1,
			"long": 1,
			"form": 1,
			"stir": 1,
			"crown": 2,
			"winds": 1,
			"thy": 1,
			"can": 1,
			"power": 1,
			"oer": 1,
			"that": 1,
			"fall": 1,
			"reign": 1,
			"had": 2,
			"eye": 1,
			"have": 2,
			"a": 1,
			"own": 1,
			"memory": 1,
			"known": 1,
			"and": 4,
			"hid": 1,
			"present": 2,
			"with": 1,
			"blest": 1,
			"wind": 1,
			"to": 1,
			"as": 1,
			"o": 1,
			"been": 1,
			"shed": 1
		},
		"fountain": {
			"stream": 1,
			"of": 5,
			"forth": 1,
			"thick": 1,
			"every": 1,
			"is": 1,
			"where": 2,
			"great": 1,
			"or": 2,
			"true": 1,
			"when": 1,
			"and": 4,
			"thou": 1,
			"some": 2,
			"shade": 1,
			"flow": 1,
			"we": 1,
			"at": 2,
			"the": 1
		},
		"bring": {
			"sweet": 2,
			"flower": 1,
			"us": 2,
			"his": 1,
			"him": 2,
			"wi": 1,
			"back": 2,
			"of": 2,
			"this": 1,
			"fame": 1,
			"forth": 2,
			"not": 1,
			"it": 2,
			"land": 1,
			"where": 1,
			"for": 2,
			"my": 1,
			"twilight": 1,
			"again": 1,
			"peace": 1,
			"can": 1,
			"that": 3,
			"another": 1,
			"jerusalem": 1,
			"gladness": 1,
			"or": 1,
			"their": 2,
			"a": 1,
			"them": 2,
			"but": 2,
			"thee": 2,
			"roses": 1,
			"and": 2,
			"i": 1,
			"home": 1,
			"gifts": 1,
			"these": 1,
			"foul": 1,
			"no": 3,
			"with": 1,
			"some": 1,
			"himself": 1,
			"grief": 1,
			"your": 1,
			"to": 14,
			"ah": 1,
			"me": 5,
			"o": 3,
			"the": 9,
			"tis": 1,
			"her": 1,
			"there": 1,
			"in": 1
		},
		"corn": {
			"it": 1,
			"by": 1,
			"is": 4,
			"lo": 1,
			"mother": 2,
			"for": 1,
			"my": 1,
			"yellow": 1,
			"was": 1,
			"that": 1,
			"ripe": 1,
			"their": 1,
			"lay": 2,
			"on": 1,
			"filled": 1,
			"and": 6,
			"no": 1,
			"with": 1,
			"clear": 1,
			"the": 2,
			"there": 1
		},
		"breaks": {
			"his": 3,
			"up": 1,
			"not": 1,
			"it": 1,
			"my": 1,
			"oer": 1,
			"what": 1,
			"a": 1,
			"upon": 1,
			"and": 4,
			"from": 2,
			"to": 1,
			"into": 2,
			"we": 1,
			"at": 3,
			"the": 7,
			"there": 1,
			"in": 1
		},
		"twixt": {
			"us": 2,
			"two": 4,
			"host": 1,
			"boy": 1,
			"kings": 1,
			"you": 2,
			"those": 1,
			"heaven": 1,
			"whom": 1,
			"shore": 1,
			"that": 1,
			"gladness": 1,
			"old": 1,
			"and": 2,
			"want": 1,
			"day": 1,
			"natures": 1,
			"may": 1,
			"the": 3,
			"her": 1,
			"fire": 1
		},
		"kissed": {
			"his": 4,
			"him": 1,
			"she": 1,
			"it": 2,
			"twas": 1,
			"new": 1,
			"again": 1,
			"that": 1,
			"both": 1,
			"another": 1,
			"sae": 1,
			"their": 1,
			"a": 1,
			"them": 2,
			"but": 1,
			"your": 1,
			"me": 1,
			"the": 3,
			"her": 3,
			"in": 1
		},
		"nations": {
			"us": 1,
			"see": 1,
			"creed": 1,
			"aid": 1,
			"who": 5,
			"of": 2,
			"sons": 1,
			"not": 1,
			"eyes": 1,
			"nations": 1,
			"shook": 1,
			"prayer": 1,
			"heard": 1,
			"for": 1,
			"came": 1,
			"thy": 1,
			"peace": 1,
			"soul": 1,
			"makes": 1,
			"name": 1,
			"were": 1,
			"cause": 1,
			"that": 1,
			"bear": 1,
			"on": 2,
			"heart": 1,
			"and": 2,
			"do": 1,
			"fly": 1,
			"ancient": 1,
			"with": 1,
			"around": 1,
			"now": 1,
			"will": 1,
			"your": 1,
			"answer": 1,
			"may": 1,
			"life": 1,
			"flag": 1,
			"at": 2,
			"blessed": 1,
			"the": 1,
			"there": 1,
			"in": 4
		},
		"mute": {
			"midnight": 1,
			"wonder": 1,
			"are": 1,
			"which": 1,
			"hung": 1,
			"is": 1,
			"farewell": 1,
			"my": 1,
			"lips": 1,
			"waiting": 1,
			"on": 1,
			"but": 1,
			"heart": 1,
			"and": 4,
			"here": 1,
			"with": 1,
			"then": 1,
			"to": 2,
			"we": 1,
			"at": 1,
			"the": 1,
			"though": 1
		},
		"something": {
			"else": 1,
			"more": 4,
			"light": 1,
			"of": 6,
			"after": 1,
			"beyond": 6,
			"every": 1,
			"far": 1,
			"by": 1,
			"is": 1,
			"good": 2,
			"about": 2,
			"new": 1,
			"afar": 1,
			"holy": 1,
			"lost": 2,
			"speak": 1,
			"my": 1,
			"greater": 1,
			"better": 2,
			"that": 3,
			"nothing": 1,
			"nobler": 1,
			"and": 1,
			"i": 1,
			"with": 1,
			"large": 1,
			"to": 7,
			"falling": 1,
			"the": 1,
			"in": 2
		},
		"trace": {
			"saviour": 1,
			"which": 1,
			"of": 4,
			"up": 1,
			"thus": 1,
			"thy": 1,
			"their": 2,
			"each": 2,
			"till": 1,
			"your": 2,
			"mark": 1,
			"to": 1,
			"the": 4,
			"in": 2
		},
		"bind": {
			"us": 2,
			"thine": 1,
			"him": 1,
			"of": 1,
			"not": 1,
			"it": 1,
			"my": 1,
			"that": 2,
			"fill": 1,
			"a": 1,
			"them": 1,
			"thee": 2,
			"and": 2,
			"down": 1,
			"me": 1,
			"o": 1,
			"the": 4
		},
		"quiet": {
			"earth": 1,
			"cheek": 1,
			"who": 1,
			"which": 1,
			"of": 2,
			"she": 1,
			"city": 1,
			"joy": 1,
			"race": 1,
			"is": 1,
			"sway": 1,
			"smile": 1,
			"for": 1,
			"take": 1,
			"breath": 1,
			"rest": 1,
			"my": 1,
			"tone": 1,
			"friendship": 1,
			"along": 4,
			"face": 1,
			"had": 1,
			"conscience": 2,
			"eye": 1,
			"a": 1,
			"bed": 1,
			"heart": 1,
			"and": 4,
			"mind": 1,
			"with": 1,
			"now": 2,
			"all": 1,
			"sense": 1,
			"night": 2,
			"way": 1,
			"to": 1,
			"we": 1,
			"as": 2,
			"english": 1,
			"he": 1,
			"led": 1,
			"the": 3,
			"though": 1,
			"in": 3
		},
		"matter": {
			"since": 1,
			"of": 1,
			"shakespeare": 1,
			"it": 1,
			"where": 3,
			"immortal": 1,
			"that": 1,
			"if": 3,
			"what": 2,
			"a": 2,
			"but": 1,
			"and": 5,
			"how": 2,
			"with": 1,
			"to": 1,
			"the": 1
		},
		"cold": {
			"look": 1,
			"light": 1,
			"earth": 1,
			"fond": 1,
			"ear": 1,
			"kiss": 1,
			"thing": 1,
			"white": 1,
			"who": 1,
			"which": 1,
			"of": 2,
			"this": 1,
			"flood": 2,
			"part": 2,
			"it": 1,
			"eyes": 1,
			"is": 2,
			"they": 1,
			"mother": 1,
			"its": 1,
			"friends": 1,
			"where": 3,
			"gray": 2,
			"for": 3,
			"hand": 2,
			"short": 1,
			"burning": 1,
			"thy": 2,
			"tonight": 1,
			"shadow": 1,
			"ground": 1,
			"rough": 1,
			"clay": 1,
			"face": 1,
			"did": 1,
			"was": 1,
			"that": 2,
			"if": 1,
			"let": 1,
			"lips": 1,
			"embrace": 1,
			"stone": 1,
			"or": 2,
			"bright": 1,
			"a": 1,
			"so": 2,
			"adieu": 1,
			"ashes": 1,
			"love": 2,
			"tomb": 2,
			"on": 1,
			"chains": 1,
			"but": 1,
			"iron": 1,
			"when": 1,
			"knows": 1,
			"bed": 1,
			"heart": 1,
			"and": 37,
			"sun": 1,
			"dark": 1,
			"i": 1,
			"thou": 2,
			"down": 1,
			"too": 1,
			"rocks": 1,
			"brow": 1,
			"marble": 2,
			"feeling": 1,
			"while": 2,
			"with": 1,
			"through": 1,
			"has": 2,
			"before": 2,
			"to": 4,
			"get": 1,
			"we": 1,
			"as": 8,
			"he": 1,
			"the": 6,
			"dead": 2,
			"in": 4
		},
		"pride": {
			"come": 1,
			"forget": 1,
			"touched": 1,
			"his": 1,
			"james": 1,
			"fell": 1,
			"men": 1,
			"which": 1,
			"of": 9,
			"fame": 1,
			"once": 1,
			"nor": 1,
			"beloved": 2,
			"by": 2,
			"alone": 1,
			"pride": 2,
			"is": 1,
			"soon": 1,
			"like": 1,
			"hurrah": 1,
			"why": 1,
			"they": 1,
			"you": 1,
			"nay": 1,
			"afar": 1,
			"where": 1,
			"theres": 1,
			"my": 2,
			"enough": 1,
			"did": 1,
			"that": 3,
			"what": 1,
			"or": 1,
			"have": 1,
			"their": 2,
			"but": 3,
			"onward": 1,
			"t": 1,
			"and": 11,
			"i": 1,
			"from": 1,
			"ill": 1,
			"while": 1,
			"no": 1,
			"with": 2,
			"now": 1,
			"george": 1,
			"king": 1,
			"our": 2,
			"still": 1,
			"yet": 1,
			"to": 5,
			"he": 1,
			"at": 2,
			"the": 3,
			"in": 5
		},
		"land": {
			"ring": 1,
			"ready": 1,
			"im": 1,
			"forget": 1,
			"his": 1,
			"are": 2,
			"aid": 1,
			"beside": 1,
			"who": 1,
			"men": 1,
			"which": 1,
			"of": 50,
			"amid": 1,
			"nor": 4,
			"does": 1,
			"brother": 1,
			"behold": 1,
			"today": 2,
			"praise": 1,
			"it": 3,
			"bless": 1,
			"by": 2,
			"long": 1,
			"breaks": 1,
			"twixt": 1,
			"land": 1,
			"is": 14,
			"looked": 1,
			"like": 2,
			"why": 1,
			"native": 1,
			"about": 1,
			"they": 4,
			"afar": 1,
			"than": 2,
			"where": 13,
			"for": 3,
			"should": 1,
			"theres": 1,
			"take": 1,
			"my": 1,
			"blow": 1,
			"john": 2,
			"thy": 4,
			"sing": 1,
			"because": 2,
			"stretched": 1,
			"william": 1,
			"can": 1,
			"was": 3,
			"that": 4,
			"let": 2,
			"show": 1,
			"lips": 1,
			"fall": 1,
			"or": 3,
			"have": 1,
			"awake": 1,
			"their": 1,
			"a": 2,
			"so": 2,
			"brings": 1,
			"adieu": 1,
			"on": 2,
			"deep": 1,
			"ye": 3,
			"when": 2,
			"be": 2,
			"kind": 1,
			"brave": 2,
			"and": 23,
			"i": 8,
			"unknown": 1,
			"thou": 3,
			"robin": 1,
			"such": 1,
			"looks": 1,
			"whereer": 2,
			"from": 5,
			"while": 1,
			"no": 1,
			"with": 9,
			"some": 1,
			"shone": 1,
			"all": 4,
			"then": 1,
			"has": 2,
			"our": 3,
			"shall": 2,
			"to": 6,
			"into": 2,
			"ah": 2,
			"hail": 1,
			"we": 8,
			"whose": 5,
			"as": 1,
			"fair": 1,
			"he": 3,
			"me": 1,
			"at": 4,
			"led": 1,
			"o": 15,
			"translation": 1,
			"the": 15,
			"though": 2,
			"there": 2,
			"in": 6
		},
		"wars": {
			"sound": 1,
			"mad": 1,
			"tell": 1,
			"of": 1,
			"lines": 1,
			"not": 1,
			"it": 1,
			"like": 1,
			"lost": 1,
			"great": 1,
			"thy": 1,
			"peace": 1,
			"were": 1,
			"that": 2,
			"what": 1,
			"or": 1,
			"a": 1,
			"hath": 1,
			"red": 1,
			"and": 1,
			"no": 1,
			"dread": 1,
			"with": 2,
			"tempest": 1,
			"wild": 2,
			"blest": 1,
			"rich": 1,
			"glorious": 1,
			"the": 2,
			"her": 1,
			"there": 1
		},
		"wise": {
			"im": 1,
			"his": 1,
			"who": 1,
			"men": 6,
			"she": 1,
			"wisdom": 1,
			"few": 1,
			"idle": 1,
			"kings": 1,
			"ever": 1,
			"for": 1,
			"enough": 1,
			"queen": 1,
			"along": 1,
			"william": 1,
			"that": 1,
			"man": 1,
			"make": 1,
			"what": 1,
			"oh": 1,
			"have": 3,
			"so": 2,
			"old": 1,
			"but": 1,
			"and": 14,
			"sun": 1,
			"one": 2,
			"such": 1,
			"beneath": 1,
			"alfred": 1,
			"with": 2,
			"your": 1,
			"natures": 1,
			"yet": 1,
			"to": 3,
			"we": 2,
			"as": 1,
			"me": 1,
			"at": 1,
			"the": 8,
			"tis": 1,
			"in": 1
		},
		"is": {
			"sweet": 16,
			"come": 7,
			"low": 3,
			"else": 1,
			"caught": 1,
			"fled": 6,
			"breaking": 3,
			"dying": 7,
			"look": 1,
			"summer": 1,
			"itself": 1,
			"more": 11,
			"hear": 1,
			"taught": 1,
			"wrought": 6,
			"won": 3,
			"thine": 16,
			"ours": 4,
			"wife": 1,
			"dust": 1,
			"going": 3,
			"virtues": 1,
			"christ": 1,
			"worn": 1,
			"river": 2,
			"fierce": 2,
			"free": 2,
			"light": 4,
			"touched": 2,
			"his": 21,
			"happiness": 3,
			"mad": 1,
			"struck": 1,
			"hell": 1,
			"dreary": 1,
			"charity": 1,
			"law": 1,
			"blood": 1,
			"precious": 1,
			"wi": 1,
			"bare": 2,
			"fit": 2,
			"none": 5,
			"woe": 2,
			"wail": 2,
			"weary": 3,
			"are": 2,
			"beside": 1,
			"humble": 1,
			"right": 8,
			"warm": 7,
			"made": 6,
			"aye": 2,
			"very": 5,
			"under": 2,
			"who": 2,
			"seen": 12,
			"sweetest": 6,
			"which": 1,
			"worth": 8,
			"tired": 3,
			"of": 32,
			"this": 24,
			"blind": 3,
			"cast": 3,
			"high": 2,
			"fame": 1,
			"hung": 1,
			"kept": 2,
			"after": 1,
			"once": 1,
			"up": 4,
			"angel": 1,
			"she": 8,
			"silence": 3,
			"beyond": 3,
			"nor": 3,
			"sacred": 2,
			"gold": 3,
			"does": 1,
			"heavy": 1,
			"thyself": 2,
			"grown": 2,
			"darkness": 2,
			"joy": 3,
			"brother": 1,
			"dear": 2,
			"pain": 1,
			"thick": 2,
			"place": 1,
			"serene": 1,
			"part": 1,
			"pass": 1,
			"sick": 4,
			"fine": 1,
			"beloved": 2,
			"mine": 16,
			"not": 126,
			"rapture": 1,
			"divine": 3,
			"englands": 1,
			"constant": 2,
			"put": 1,
			"today": 1,
			"proud": 2,
			"dry": 1,
			"every": 2,
			"praise": 1,
			"pressed": 1,
			"it": 72,
			"evil": 1,
			"over": 13,
			"host": 1,
			"neither": 1,
			"far": 5,
			"wisdom": 1,
			"tongue": 1,
			"water": 1,
			"by": 18,
			"alone": 5,
			"shut": 1,
			"long": 6,
			"mute": 3,
			"something": 4,
			"quiet": 1,
			"cold": 7,
			"pride": 3,
			"wise": 1,
			"is": 9,
			"joyous": 1,
			"glittering": 1,
			"rise": 1,
			"eternity": 1,
			"few": 1,
			"like": 26,
			"fairest": 1,
			"hard": 5,
			"away": 2,
			"found": 9,
			"gift": 1,
			"why": 2,
			"sung": 2,
			"hallowed": 1,
			"forever": 1,
			"good": 8,
			"pleased": 1,
			"ever": 12,
			"about": 1,
			"they": 3,
			"speech": 1,
			"prayer": 1,
			"abroad": 1,
			"faint": 1,
			"wide": 1,
			"you": 2,
			"nature": 2,
			"shot": 2,
			"stern": 1,
			"mild": 1,
			"thus": 3,
			"pale": 2,
			"swept": 1,
			"new": 4,
			"heard": 12,
			"robert": 1,
			"laid": 3,
			"its": 8,
			"than": 11,
			"slow": 5,
			"swift": 2,
			"lightly": 1,
			"pleasure": 1,
			"where": 5,
			"gentle": 1,
			"brief": 1,
			"small": 2,
			"run": 3,
			"rolled": 1,
			"holy": 3,
			"gray": 2,
			"just": 4,
			"welcome": 4,
			"for": 20,
			"blown": 1,
			"drops": 1,
			"past": 16,
			"read": 1,
			"heaven": 6,
			"cup": 1,
			"lost": 22,
			"bloody": 1,
			"lonely": 1,
			"base": 1,
			"tomorrow": 1,
			"autumn": 1,
			"rest": 4,
			"my": 24,
			"spent": 1,
			"blow": 1,
			"words": 1,
			"great": 6,
			"sighing": 2,
			"short": 2,
			"deaths": 1,
			"burning": 2,
			"enough": 1,
			"freedom": 1,
			"thy": 19,
			"sing": 1,
			"greater": 1,
			"hushed": 3,
			"vain": 3,
			"sleep": 1,
			"peace": 4,
			"wept": 1,
			"ourselves": 1,
			"better": 15,
			"least": 2,
			"mary": 1,
			"sadly": 1,
			"hope": 1,
			"born": 6,
			"rough": 1,
			"any": 1,
			"most": 8,
			"held": 1,
			"town": 1,
			"friend": 2,
			"friendship": 2,
			"stretched": 1,
			"clay": 1,
			"william": 1,
			"false": 2,
			"forward": 1,
			"faith": 3,
			"god": 6,
			"can": 1,
			"noble": 1,
			"power": 1,
			"comfort": 2,
			"oer": 20,
			"cause": 1,
			"was": 1,
			"that": 34,
			"rolling": 1,
			"if": 1,
			"let": 1,
			"womans": 1,
			"man": 12,
			"thin": 1,
			"fain": 1,
			"always": 7,
			"full": 9,
			"ripe": 1,
			"often": 3,
			"broken": 3,
			"half": 3,
			"had": 1,
			"pure": 5,
			"what": 4,
			"oh": 1,
			"beautiful": 1,
			"an": 13,
			"repose": 1,
			"nothing": 8,
			"music": 1,
			"or": 1,
			"waiting": 2,
			"think": 1,
			"lest": 1,
			"sweeter": 1,
			"bright": 7,
			"late": 1,
			"am": 1,
			"danger": 1,
			"awake": 1,
			"winter": 1,
			"their": 10,
			"a": 161,
			"so": 16,
			"given": 13,
			"courage": 1,
			"true": 10,
			"green": 3,
			"upon": 1,
			"gallant": 1,
			"folly": 1,
			"things": 1,
			"lord": 4,
			"never": 7,
			"many": 1,
			"dawn": 1,
			"spirit": 1,
			"almost": 3,
			"whence": 1,
			"love": 20,
			"on": 24,
			"quite": 2,
			"shroud": 1,
			"above": 2,
			"fast": 1,
			"deep": 2,
			"feast": 1,
			"old": 4,
			"filled": 1,
			"naked": 2,
			"but": 43,
			"wet": 2,
			"brown": 2,
			"death": 6,
			"time": 1,
			"poor": 2,
			"buried": 1,
			"known": 5,
			"when": 11,
			"gone": 23,
			"eternal": 1,
			"honest": 2,
			"plain": 2,
			"merry": 1,
			"mans": 2,
			"felt": 1,
			"knows": 1,
			"be": 1,
			"firm": 1,
			"whittier": 1,
			"wondrous": 1,
			"t": 3,
			"glory": 1,
			"out": 11,
			"kind": 4,
			"dumb": 2,
			"distant": 1,
			"tried": 2,
			"naught": 3,
			"sorrow": 2,
			"close": 1,
			"nobler": 1,
			"and": 67,
			"bliss": 3,
			"mothers": 1,
			"truth": 3,
			"do": 1,
			"dark": 4,
			"quick": 2,
			"last": 1,
			"sunshine": 1,
			"christian": 1,
			"lovely": 3,
			"fate": 1,
			"ask": 1,
			"hid": 2,
			"i": 15,
			"unknown": 2,
			"worthy": 1,
			"thou": 3,
			"woman": 3,
			"marching": 11,
			"down": 2,
			"told": 4,
			"sunny": 1,
			"less": 2,
			"bad": 1,
			"home": 1,
			"here": 15,
			"too": 5,
			"fought": 1,
			"one": 9,
			"might": 1,
			"such": 9,
			"shining": 1,
			"against": 1,
			"perfect": 1,
			"rome": 1,
			"shadows": 1,
			"hate": 1,
			"broad": 1,
			"each": 1,
			"anothers": 1,
			"how": 2,
			"other": 1,
			"from": 9,
			"sleeping": 1,
			"strange": 2,
			"would": 1,
			"stronger": 2,
			"living": 2,
			"mind": 1,
			"ill": 2,
			"want": 1,
			"hidden": 1,
			"nigh": 5,
			"while": 2,
			"no": 67,
			"bound": 4,
			"bid": 1,
			"calm": 2,
			"called": 4,
			"solitude": 2,
			"mighty": 1,
			"with": 31,
			"singing": 2,
			"sad": 1,
			"sweetness": 1,
			"virtue": 1,
			"everlasting": 1,
			"soft": 1,
			"now": 14,
			"set": 8,
			"some": 4,
			"learned": 1,
			"till": 3,
			"meet": 2,
			"strong": 5,
			"lying": 2,
			"all": 55,
			"desolate": 1,
			"gay": 1,
			"then": 3,
			"room": 1,
			"gale": 1,
			"slain": 2,
			"large": 1,
			"blest": 2,
			"thought": 2,
			"through": 2,
			"ten": 2,
			"songs": 1,
			"thats": 1,
			"asleep": 1,
			"well": 14,
			"clear": 7,
			"king": 1,
			"peaceful": 1,
			"much": 2,
			"upward": 1,
			"turned": 2,
			"behind": 1,
			"nearer": 1,
			"our": 22,
			"throne": 1,
			"wrong": 1,
			"day": 3,
			"passing": 4,
			"gathered": 1,
			"open": 3,
			"fear": 1,
			"night": 3,
			"fallen": 2,
			"mercy": 1,
			"loved": 1,
			"before": 2,
			"only": 8,
			"still": 25,
			"your": 8,
			"natures": 3,
			"mingled": 1,
			"yet": 8,
			"best": 13,
			"to": 76,
			"poetry": 3,
			"youth": 1,
			"human": 5,
			"cut": 1,
			"round": 2,
			"flame": 1,
			"thinking": 1,
			"little": 4,
			"rich": 2,
			"religion": 1,
			"turning": 2,
			"wounds": 1,
			"growing": 7,
			"sore": 1,
			"art": 1,
			"ah": 1,
			"may": 1,
			"withered": 2,
			"we": 4,
			"glad": 2,
			"loss": 1,
			"spread": 1,
			"as": 19,
			"fair": 9,
			"borne": 3,
			"heavens": 2,
			"happy": 1,
			"done": 35,
			"said": 4,
			"life": 11,
			"he": 19,
			"me": 3,
			"at": 22,
			"straight": 1,
			"led": 2,
			"o": 2,
			"coming": 12,
			"left": 9,
			"blessed": 1,
			"common": 1,
			"the": 296,
			"sure": 5,
			"bent": 1,
			"scarce": 1,
			"drawn": 4,
			"her": 8,
			"passed": 2,
			"change": 1,
			"safe": 2,
			"young": 2,
			"dead": 16,
			"near": 14,
			"first": 1,
			"jesus": 1,
			"there": 39,
			"in": 63,
			"dim": 2,
			"shed": 2
		},
		"cross": {
			"more": 1,
			"his": 1,
			"who": 1,
			"of": 5,
			"this": 1,
			"it": 2,
			"is": 3,
			"they": 1,
			"faint": 1,
			"without": 1,
			"for": 1,
			"again": 1,
			"shines": 1,
			"that": 2,
			"embrace": 1,
			"must": 1,
			"or": 1,
			"a": 1,
			"on": 1,
			"but": 1,
			"mans": 1,
			"be": 1,
			"and": 7,
			"lovely": 1,
			"i": 4,
			"stands": 1,
			"no": 1,
			"with": 3,
			"will": 1,
			"george": 1,
			"nearer": 1,
			"before": 1,
			"to": 4,
			"he": 2,
			"the": 9,
			"her": 2,
			"there": 1
		},
		"vision": {
			"blood": 1,
			"white": 1,
			"which": 1,
			"of": 13,
			"find": 1,
			"by": 1,
			"is": 4,
			"for": 1,
			"fixed": 1,
			"came": 1,
			"that": 2,
			"or": 2,
			"bright": 1,
			"true": 1,
			"religious": 1,
			"close": 2,
			"and": 1,
			"dull": 1,
			"raised": 1,
			"from": 1,
			"thats": 1,
			"clear": 1,
			"passing": 1,
			"ah": 1,
			"may": 2,
			"as": 1,
			"fair": 1,
			"he": 2,
			"the": 3,
			"in": 2
		},
		"joyous": {
			"dance": 1,
			"shout": 1,
			"hours": 1,
			"like": 1,
			"abroad": 1,
			"leaves": 1,
			"beams": 1,
			"song": 3,
			"train": 1,
			"hopes": 1,
			"shore": 1,
			"and": 2,
			"quick": 1,
			"with": 1,
			"some": 1,
			"our": 1,
			"night": 1,
			"youth": 1,
			"the": 1,
			"in": 1
		},
		"ships": {
			"his": 1,
			"are": 1,
			"of": 4,
			"side": 2,
			"by": 1,
			"like": 1,
			"they": 1,
			"were": 1,
			"that": 2,
			"go": 1,
			"have": 1,
			"upon": 1,
			"gone": 1,
			"and": 3,
			"how": 1,
			"hearts": 1,
			"with": 1,
			"to": 2,
			"may": 1,
			"at": 1,
			"the": 1,
			"in": 1
		},
		"soon": {
			"forget": 1,
			"his": 1,
			"kiss": 1,
			"made": 1,
			"who": 1,
			"after": 2,
			"among": 1,
			"beyond": 10,
			"grown": 1,
			"depart": 1,
			"far": 1,
			"by": 1,
			"soon": 1,
			"like": 1,
			"found": 1,
			"good": 1,
			"you": 1,
			"thus": 1,
			"than": 1,
			"those": 1,
			"for": 1,
			"blown": 1,
			"read": 1,
			"my": 1,
			"again": 2,
			"forgot": 1,
			"thy": 1,
			"god": 1,
			"was": 1,
			"that": 2,
			"make": 1,
			"go": 1,
			"or": 3,
			"have": 1,
			"gave": 1,
			"their": 1,
			"upon": 1,
			"love": 2,
			"but": 2,
			"when": 1,
			"be": 3,
			"sorrow": 1,
			"and": 5,
			"i": 2,
			"too": 2,
			"breathes": 1,
			"draw": 1,
			"rush": 1,
			"give": 1,
			"will": 1,
			"all": 1,
			"through": 1,
			"doth": 1,
			"shall": 5,
			"your": 1,
			"to": 4,
			"we": 1,
			"as": 10,
			"me": 1,
			"coming": 1,
			"the": 10,
			"bent": 1,
			"there": 1,
			"in": 2
		},
		"glittering": {
			"are": 1,
			"of": 1,
			"star": 2,
			"spot": 1,
			"lines": 1,
			"over": 1,
			"host": 1,
			"eyes": 1,
			"without": 1,
			"ranks": 1,
			"wit": 1,
			"that": 1,
			"on": 1,
			"from": 1,
			"with": 1,
			"through": 1,
			"th": 1,
			"me": 1,
			"tread": 1,
			"in": 2
		},
		"rise": {
			"more": 1,
			"law": 1,
			"are": 2,
			"men": 1,
			"of": 3,
			"up": 6,
			"nor": 2,
			"every": 1,
			"far": 1,
			"by": 5,
			"fathers": 1,
			"rise": 1,
			"like": 2,
			"pleased": 1,
			"than": 1,
			"count": 1,
			"again": 4,
			"thy": 4,
			"can": 1,
			"oer": 1,
			"crowned": 1,
			"that": 2,
			"says": 1,
			"nothing": 1,
			"or": 1,
			"their": 1,
			"upon": 3,
			"on": 5,
			"but": 1,
			"be": 1,
			"brave": 1,
			"heart": 1,
			"and": 26,
			"here": 1,
			"against": 1,
			"from": 5,
			"no": 3,
			"with": 5,
			"now": 1,
			"laugh": 1,
			"our": 3,
			"shall": 1,
			"before": 1,
			"your": 1,
			"yet": 1,
			"to": 10,
			"glorious": 1,
			"know": 1,
			"th": 1,
			"as": 1,
			"at": 2,
			"o": 3,
			"the": 8,
			"tis": 1,
			"though": 3,
			"dead": 1,
			"in": 7
		},
		"although": {
			"unseen": 1,
			"im": 1,
			"his": 1,
			"of": 1,
			"she": 1,
			"it": 3,
			"is": 1,
			"theres": 1,
			"thy": 1,
			"so": 1,
			"such": 1,
			"against": 1,
			"with": 1,
			"we": 1,
			"the": 5
		},
		"looked": {
			"cool": 1,
			"back": 3,
			"high": 1,
			"amid": 1,
			"up": 2,
			"forth": 2,
			"like": 2,
			"for": 2,
			"again": 1,
			"ere": 1,
			"what": 1,
			"a": 1,
			"so": 3,
			"upon": 8,
			"things": 1,
			"love": 1,
			"on": 9,
			"smiling": 1,
			"when": 1,
			"out": 4,
			"kind": 1,
			"and": 8,
			"down": 3,
			"how": 1,
			"from": 1,
			"sublime": 1,
			"with": 1,
			"around": 1,
			"upward": 2,
			"aside": 1,
			"before": 1,
			"to": 3,
			"at": 10,
			"the": 2,
			"first": 1,
			"in": 4
		},
		"author": {
			"of": 4,
			"nature": 1,
			"where": 1,
			"was": 2,
			"had": 1,
			"an": 1,
			"so": 1,
			"knows": 1,
			"and": 4,
			"from": 1,
			"will": 1,
			"to": 1,
			"whose": 1,
			"as": 1,
			"there": 1,
			"in": 1
		},
		"eternity": {
			"of": 2,
			"it": 1,
			"eternity": 1,
			"they": 1,
			"where": 1,
			"that": 1,
			"if": 1,
			"had": 1,
			"and": 3,
			"thou": 1,
			"too": 1,
			"one": 1,
			"meet": 1,
			"will": 1,
			"to": 6,
			"whose": 1,
			"o": 1,
			"the": 2,
			"in": 4
		},
		"few": {
			"more": 7,
			"are": 2,
			"of": 6,
			"sons": 1,
			"lines": 1,
			"hours": 1,
			"few": 2,
			"like": 1,
			"believe": 1,
			"my": 1,
			"words": 1,
			"short": 3,
			"thy": 1,
			"can": 1,
			"were": 5,
			"that": 2,
			"soldiers": 1,
			"on": 2,
			"but": 2,
			"feet": 1,
			"brave": 1,
			"and": 8,
			"do": 3,
			"days": 2,
			"unknown": 1,
			"thou": 2,
			"dull": 1,
			"from": 1,
			"with": 1,
			"sad": 1,
			"all": 1,
			"comrades": 1,
			"much": 1,
			"our": 1,
			"works": 1,
			"shall": 1,
			"to": 1,
			"know": 1,
			"we": 2,
			"as": 1,
			"left": 1,
			"the": 5,
			"there": 1,
			"in": 1
		},
		"unto": {
			"dying": 1,
			"us": 2,
			"thine": 2,
			"his": 1,
			"him": 2,
			"men": 1,
			"this": 3,
			"souls": 1,
			"wine": 1,
			"thyself": 1,
			"it": 2,
			"by": 1,
			"eternity": 1,
			"you": 2,
			"its": 1,
			"others": 2,
			"my": 3,
			"freedom": 1,
			"thy": 4,
			"god": 2,
			"walls": 1,
			"that": 3,
			"an": 2,
			"a": 3,
			"them": 1,
			"thee": 4,
			"rhyme": 1,
			"and": 3,
			"truth": 2,
			"island": 1,
			"one": 1,
			"sand": 1,
			"some": 2,
			"himself": 1,
			"all": 4,
			"king": 1,
			"our": 1,
			"your": 4,
			"glorious": 1,
			"as": 1,
			"life": 1,
			"me": 2,
			"common": 1,
			"the": 26,
			"her": 2
		},
		"like": {
			"sweet": 5,
			"bow": 1,
			"breaking": 1,
			"summer": 2,
			"us": 1,
			"more": 1,
			"thine": 4,
			"ours": 1,
			"free": 1,
			"light": 2,
			"birds": 2,
			"his": 4,
			"him": 3,
			"fond": 1,
			"kiss": 1,
			"voices": 1,
			"tell": 1,
			"are": 3,
			"seen": 1,
			"hollow": 1,
			"men": 1,
			"beam": 1,
			"of": 12,
			"this": 10,
			"souls": 1,
			"up": 1,
			"blossoms": 1,
			"gold": 2,
			"thyself": 1,
			"joy": 1,
			"lightning": 1,
			"foam": 1,
			"sheep": 1,
			"goes": 1,
			"two": 5,
			"mine": 2,
			"divine": 1,
			"it": 3,
			"over": 2,
			"spirits": 4,
			"water": 1,
			"jim": 1,
			"father": 1,
			"quiet": 2,
			"cold": 1,
			"ships": 2,
			"few": 2,
			"unto": 1,
			"children": 1,
			"good": 2,
			"ocean": 1,
			"they": 2,
			"funeral": 1,
			"you": 6,
			"nature": 2,
			"thus": 2,
			"pale": 1,
			"afar": 1,
			"leaves": 1,
			"its": 2,
			"those": 8,
			"others": 1,
			"for": 1,
			"drops": 3,
			"past": 1,
			"stones": 1,
			"should": 1,
			"autumn": 1,
			"my": 5,
			"words": 1,
			"great": 1,
			"beauty": 1,
			"again": 1,
			"themselves": 1,
			"enough": 1,
			"thy": 1,
			"yes": 1,
			"sleep": 1,
			"warrior": 1,
			"waves": 3,
			"mary": 1,
			"hope": 1,
			"any": 1,
			"torn": 1,
			"bells": 1,
			"friendship": 1,
			"along": 1,
			"dew": 2,
			"rain": 3,
			"god": 2,
			"shame": 1,
			"were": 1,
			"did": 2,
			"walls": 1,
			"was": 1,
			"that": 20,
			"show": 2,
			"thin": 1,
			"another": 1,
			"fall": 1,
			"ripe": 2,
			"broken": 1,
			"brothers": 1,
			"must": 1,
			"what": 1,
			"an": 23,
			"moon": 1,
			"stars": 6,
			"music": 1,
			"or": 2,
			"tears": 1,
			"their": 2,
			"a": 230,
			"so": 2,
			"them": 1,
			"joys": 1,
			"true": 2,
			"green": 1,
			"upon": 2,
			"lay": 1,
			"things": 1,
			"never": 2,
			"many": 2,
			"spirit": 1,
			"love": 3,
			"on": 7,
			"break": 1,
			"deep": 1,
			"old": 4,
			"but": 1,
			"grass": 2,
			"brown": 1,
			"death": 1,
			"thee": 3,
			"when": 1,
			"waters": 1,
			"dreams": 1,
			"wings": 1,
			"dumb": 1,
			"and": 10,
			"thunder": 1,
			"truth": 1,
			"sunshine": 2,
			"i": 5,
			"snow": 3,
			"dull": 1,
			"here": 1,
			"steel": 1,
			"one": 7,
			"rocks": 1,
			"rush": 1,
			"against": 1,
			"shadows": 4,
			"other": 2,
			"from": 3,
			"sleeping": 1,
			"lilies": 2,
			"ill": 1,
			"these": 6,
			"while": 1,
			"no": 1,
			"with": 2,
			"wave": 1,
			"flying": 1,
			"some": 7,
			"till": 2,
			"flash": 1,
			"himself": 1,
			"all": 4,
			"grief": 1,
			"gods": 1,
			"through": 2,
			"songs": 1,
			"angels": 2,
			"spring": 2,
			"our": 4,
			"smoke": 2,
			"passing": 1,
			"patience": 1,
			"mercy": 1,
			"before": 2,
			"your": 2,
			"to": 24,
			"clouds": 2,
			"youth": 1,
			"springs": 1,
			"round": 1,
			"flame": 2,
			"mid": 1,
			"little": 2,
			"hail": 1,
			"we": 1,
			"as": 3,
			"he": 2,
			"arms": 1,
			"me": 4,
			"at": 6,
			"deer": 1,
			"streams": 1,
			"the": 132,
			"her": 2,
			"dead": 2,
			"fire": 3,
			"there": 1,
			"grim": 1,
			"restless": 1,
			"in": 9,
			"flowers": 5,
			"harmony": 1,
			"thoughts": 1,
			"oak": 1
		},
		"takes": {
			"his": 3,
			"save": 1,
			"up": 2,
			"nor": 1,
			"not": 1,
			"it": 2,
			"away": 3,
			"its": 2,
			"my": 1,
			"again": 1,
			"thy": 1,
			"gives": 1,
			"or": 1,
			"their": 1,
			"a": 2,
			"them": 1,
			"thee": 1,
			"when": 1,
			"t": 1,
			"no": 1,
			"with": 1,
			"all": 1,
			"little": 1,
			"me": 1,
			"the": 5,
			"in": 1
		},
		"return": {
			"back": 1,
			"not": 1,
			"today": 1,
			"few": 1,
			"where": 1,
			"for": 1,
			"heaven": 1,
			"my": 1,
			"again": 1,
			"thy": 1,
			"that": 1,
			"or": 2,
			"love": 1,
			"break": 1,
			"but": 1,
			"thee": 1,
			"thank": 1,
			"and": 3,
			"how": 1,
			"would": 1,
			"soft": 1,
			"ho": 1,
			"to": 12,
			"as": 1,
			"he": 1,
			"me": 1,
			"the": 2,
			"though": 1,
			"in": 1
		},
		"lo": {
			"earth": 1,
			"body": 1,
			"she": 2,
			"among": 1,
			"it": 2,
			"is": 1,
			"they": 2,
			"its": 1,
			"where": 2,
			"my": 2,
			"thy": 1,
			"name": 1,
			"that": 2,
			"their": 1,
			"a": 3,
			"on": 1,
			"eternal": 1,
			"i": 3,
			"how": 1,
			"now": 1,
			"all": 3,
			"gay": 1,
			"then": 1,
			"through": 2,
			"our": 1,
			"before": 1,
			"to": 1,
			"as": 1,
			"he": 2,
			"yonder": 1,
			"the": 10,
			"tis": 1,
			"there": 3,
			"in": 3
		},
		"hurrah": {
			"once": 1,
			"hurrah": 6,
			"why": 1,
			"for": 15,
			"yes": 1,
			"let": 1,
			"a": 2,
			"and": 2,
			"thou": 1,
			"from": 1,
			"while": 1,
			"now": 2,
			"then": 2,
			"well": 1,
			"stay": 1,
			"o": 2,
			"the": 2
		},
		"boy": {
			"blessd": 1,
			"science": 1,
			"fell": 1,
			"who": 1,
			"of": 1,
			"nor": 1,
			"not": 1,
			"by": 2,
			"is": 1,
			"gazed": 1,
			"you": 1,
			"my": 1,
			"again": 1,
			"thy": 2,
			"was": 2,
			"that": 1,
			"if": 1,
			"full": 1,
			"go": 1,
			"had": 1,
			"an": 1,
			"a": 2,
			"upon": 1,
			"on": 1,
			"but": 2,
			"ye": 1,
			"when": 3,
			"and": 4,
			"year": 1,
			"thou": 1,
			"would": 1,
			"took": 1,
			"with": 1,
			"then": 1,
			"george": 1,
			"your": 1,
			"yet": 1,
			"to": 2,
			"bold": 1,
			"we": 2,
			"as": 1,
			"he": 4,
			"lies": 1,
			"o": 1,
			"the": 3,
			"in": 1
		},
		"farewell": {
			"since": 1,
			"beam": 1,
			"goes": 1,
			"it": 1,
			"is": 1,
			"unto": 1,
			"farewell": 5,
			"shot": 1,
			"friends": 1,
			"where": 1,
			"take": 1,
			"my": 2,
			"passion": 1,
			"hope": 1,
			"if": 1,
			"a": 3,
			"content": 1,
			"but": 3,
			"lives": 1,
			"when": 1,
			"gone": 1,
			"and": 2,
			"i": 3,
			"thou": 2,
			"down": 1,
			"forest": 1,
			"stands": 1,
			"all": 1,
			"fear": 1,
			"to": 15,
			"may": 1,
			"we": 1,
			"fair": 1,
			"said": 1,
			"life": 2,
			"he": 1,
			"o": 1,
			"the": 3
		},
		"fairest": {
			"thing": 5,
			"sweetest": 1,
			"of": 2,
			"star": 1,
			"among": 1,
			"lands": 1,
			"lines": 1,
			"forms": 1,
			"hand": 1,
			"born": 1,
			"show": 1,
			"eye": 1,
			"things": 1,
			"thee": 1,
			"when": 1,
			"and": 2,
			"bloom": 1,
			"pearl": 1,
			"at": 1,
			"flowers": 1
		},
		"glass": {
			"of": 5,
			"sword": 1,
			"eyes": 1,
			"is": 3,
			"they": 1,
			"where": 1,
			"charge": 1,
			"ere": 1,
			"was": 1,
			"that": 1,
			"gives": 1,
			"or": 1,
			"a": 1,
			"on": 1,
			"be": 1,
			"i": 1,
			"henry": 1,
			"aside": 1,
			"to": 3,
			"little": 1,
			"lies": 1,
			"in": 2,
			"dim": 1
		},
		"hard": {
			"blew": 1,
			"who": 1,
			"of": 1,
			"sez": 1,
			"every": 1,
			"it": 1,
			"by": 3,
			"cold": 1,
			"is": 2,
			"for": 1,
			"sir": 1,
			"times": 1,
			"that": 2,
			"man": 1,
			"broken": 1,
			"or": 1,
			"so": 1,
			"true": 1,
			"upon": 1,
			"hath": 1,
			"on": 1,
			"but": 4,
			"ye": 1,
			"when": 1,
			"head": 1,
			"and": 4,
			"steel": 1,
			"bound": 1,
			"all": 1,
			"gale": 1,
			"service": 1,
			"ways": 1,
			"our": 2,
			"course": 1,
			"to": 11,
			"we": 1,
			"at": 1,
			"o": 1,
			"the": 1,
			"dead": 1,
			"soldier": 1
		},
		"away": {
			"come": 2,
			"look": 1,
			"loves": 1,
			"went": 1,
			"earth": 1,
			"see": 1,
			"wi": 1,
			"kiss": 1,
			"back": 1,
			"under": 1,
			"who": 1,
			"men": 1,
			"of": 2,
			"this": 1,
			"amid": 1,
			"she": 2,
			"among": 1,
			"nor": 2,
			"rose": 1,
			"not": 1,
			"depart": 1,
			"it": 2,
			"over": 1,
			"far": 1,
			"by": 1,
			"is": 2,
			"looked": 1,
			"like": 4,
			"away": 6,
			"why": 1,
			"good": 1,
			"hark": 1,
			"they": 9,
			"you": 1,
			"robert": 1,
			"its": 1,
			"than": 1,
			"those": 1,
			"where": 2,
			"looking": 1,
			"richard": 1,
			"welcome": 1,
			"for": 4,
			"should": 1,
			"base": 1,
			"theres": 1,
			"take": 1,
			"tomorrow": 2,
			"my": 8,
			"whats": 1,
			"john": 2,
			"thy": 2,
			"pray": 1,
			"teach": 1,
			"comes": 1,
			"ere": 1,
			"sir": 1,
			"was": 1,
			"that": 5,
			"if": 1,
			"let": 2,
			"what": 3,
			"oh": 2,
			"an": 2,
			"nothing": 1,
			"de": 2,
			"hands": 1,
			"their": 1,
			"a": 2,
			"so": 1,
			"upon": 1,
			"lord": 1,
			"on": 8,
			"old": 1,
			"but": 6,
			"when": 3,
			"gone": 1,
			"merry": 1,
			"ay": 1,
			"and": 41,
			"i": 6,
			"thou": 2,
			"less": 2,
			"too": 1,
			"each": 1,
			"whereer": 1,
			"henry": 2,
			"from": 17,
			"would": 1,
			"beneath": 1,
			"these": 1,
			"while": 3,
			"no": 1,
			"with": 9,
			"sad": 1,
			"now": 1,
			"give": 1,
			"some": 2,
			"till": 1,
			"all": 4,
			"then": 1,
			"ho": 1,
			"could": 1,
			"thomas": 1,
			"well": 1,
			"behind": 1,
			"day": 1,
			"passing": 5,
			"before": 1,
			"only": 2,
			"still": 2,
			"to": 11,
			"into": 3,
			"may": 2,
			"we": 1,
			"glad": 1,
			"as": 3,
			"life": 1,
			"he": 3,
			"o": 4,
			"the": 32,
			"tis": 2,
			"though": 1,
			"her": 2,
			"passed": 1,
			"change": 1,
			"first": 1,
			"devil": 1,
			"in": 11
		},
		"hoary": {
			"more": 1,
			"his": 1,
			"of": 1,
			"behold": 1,
			"steed": 1,
			"crown": 1,
			"sadly": 2,
			"their": 1,
			"but": 1,
			"and": 1,
			"with": 2,
			"hair": 3,
			"locks": 1,
			"yet": 1,
			"youth": 1,
			"led": 1,
			"her": 1
		},
		"form": {
			"us": 1,
			"more": 1,
			"within": 1,
			"of": 8,
			"nor": 1,
			"place": 1,
			"divine": 1,
			"twas": 1,
			"alone": 1,
			"is": 1,
			"rise": 1,
			"hard": 1,
			"they": 1,
			"earths": 1,
			"for": 2,
			"again": 1,
			"indeed": 1,
			"did": 1,
			"was": 1,
			"that": 1,
			"or": 2,
			"their": 1,
			"a": 4,
			"so": 2,
			"but": 2,
			"time": 1,
			"and": 18,
			"i": 1,
			"too": 1,
			"from": 1,
			"with": 2,
			"all": 1,
			"then": 1,
			"shall": 4,
			"still": 1,
			"yet": 1,
			"to": 3,
			"vast": 1,
			"apart": 1,
			"we": 1,
			"he": 1,
			"at": 1,
			"the": 6,
			"passed": 2,
			"in": 1,
			"seem": 1
		},
		"found": {
			"his": 2,
			"him": 2,
			"made": 1,
			"of": 2,
			"this": 2,
			"among": 3,
			"place": 1,
			"not": 1,
			"it": 1,
			"by": 1,
			"they": 1,
			"than": 1,
			"where": 1,
			"for": 1,
			"my": 1,
			"freedom": 1,
			"ourselves": 1,
			"along": 1,
			"that": 2,
			"both": 1,
			"hang": 1,
			"had": 1,
			"what": 1,
			"an": 1,
			"repose": 2,
			"or": 1,
			"a": 10,
			"so": 3,
			"on": 1,
			"thee": 1,
			"weeping": 1,
			"and": 3,
			"thou": 1,
			"too": 1,
			"whereer": 1,
			"beneath": 1,
			"no": 3,
			"calm": 1,
			"with": 1,
			"now": 1,
			"some": 1,
			"shall": 2,
			"only": 1,
			"still": 1,
			"to": 2,
			"art": 1,
			"heavens": 1,
			"he": 1,
			"me": 2,
			"the": 7,
			"tis": 1,
			"there": 1,
			"in": 11
		},
		"sway": {
			"passions": 1,
			"it": 2,
			"themselves": 1,
			"thy": 1,
			"that": 2,
			"what": 2,
			"a": 2,
			"and": 4,
			"i": 1,
			"thou": 1,
			"with": 1,
			"could": 1,
			"the": 3,
			"her": 1,
			"there": 1,
			"in": 1
		},
		"gift": {
			"of": 7,
			"divine": 2,
			"is": 2,
			"without": 1,
			"my": 1,
			"god": 1,
			"that": 1,
			"what": 1,
			"or": 1,
			"upon": 1,
			"and": 2,
			"with": 1,
			"has": 1,
			"to": 5,
			"o": 1,
			"the": 1,
			"in": 1
		},
		"children": {
			"come": 2,
			"sent": 1,
			"free": 1,
			"play": 2,
			"tell": 1,
			"are": 2,
			"who": 1,
			"suffer": 1,
			"which": 1,
			"of": 7,
			"forth": 1,
			"played": 1,
			"dear": 1,
			"dwell": 1,
			"praise": 1,
			"far": 1,
			"those": 1,
			"run": 1,
			"catch": 1,
			"thy": 1,
			"sing": 1,
			"hope": 1,
			"were": 2,
			"did": 1,
			"go": 1,
			"wait": 2,
			"upon": 1,
			"never": 1,
			"on": 1,
			"weeping": 1,
			"and": 4,
			"eer": 1,
			"do": 1,
			"move": 1,
			"home": 2,
			"here": 1,
			"one": 1,
			"how": 1,
			"from": 2,
			"would": 1,
			"now": 2,
			"will": 1,
			"then": 1,
			"through": 1,
			"asleep": 1,
			"passing": 1,
			"fallen": 1,
			"to": 2,
			"know": 1,
			"he": 1,
			"at": 1,
			"the": 1,
			"tread": 1,
			"in": 4
		},
		"idle": {
			"birds": 1,
			"his": 1,
			"fears": 1,
			"talk": 1,
			"up": 1,
			"slaves": 1,
			"words": 2,
			"cheer": 1,
			"fools": 2,
			"oer": 1,
			"hands": 1,
			"tears": 2,
			"things": 1,
			"brain": 1,
			"rhyme": 1,
			"and": 1,
			"state": 1,
			"thought": 1,
			"doth": 1,
			"spear": 1,
			"o": 1,
			"the": 2,
			"waste": 1,
			"air": 1
		},
		"forms": {
			"more": 1,
			"unseen": 1,
			"are": 3,
			"which": 1,
			"of": 11,
			"she": 1,
			"beheld": 1,
			"shows": 1,
			"by": 1,
			"like": 1,
			"therefore": 1,
			"can": 1,
			"that": 4,
			"go": 1,
			"what": 1,
			"hath": 1,
			"on": 1,
			"and": 6,
			"i": 1,
			"all": 2,
			"only": 1,
			"poetry": 1,
			"may": 1,
			"the": 3,
			"in": 3
		},
		"why": {
			"wish": 1,
			"forget": 1,
			"are": 1,
			"who": 1,
			"of": 1,
			"this": 1,
			"talk": 1,
			"she": 1,
			"not": 3,
			"every": 1,
			"twas": 1,
			"bless": 1,
			"weep": 1,
			"is": 14,
			"why": 2,
			"they": 1,
			"abroad": 1,
			"thus": 2,
			"robert": 1,
			"small": 1,
			"for": 1,
			"should": 15,
			"theres": 1,
			"didst": 5,
			"rest": 1,
			"my": 3,
			"again": 1,
			"seek": 1,
			"shame": 1,
			"were": 1,
			"did": 4,
			"was": 1,
			"that": 1,
			"let": 1,
			"make": 1,
			"had": 1,
			"must": 1,
			"what": 4,
			"or": 1,
			"wilt": 1,
			"trod": 1,
			"so": 5,
			"sink": 1,
			"but": 3,
			"time": 2,
			"ye": 2,
			"t": 1,
			"out": 1,
			"and": 3,
			"do": 6,
			"i": 4,
			"thou": 7,
			"here": 1,
			"one": 1,
			"such": 1,
			"would": 1,
			"no": 1,
			"called": 1,
			"with": 2,
			"all": 2,
			"then": 5,
			"thats": 1,
			"doth": 1,
			"dost": 1,
			"our": 1,
			"your": 2,
			"to": 3,
			"speed": 1,
			"art": 5,
			"may": 1,
			"we": 6,
			"life": 1,
			"he": 4,
			"lies": 1,
			"o": 1,
			"left": 2,
			"the": 11,
			"seems": 1,
			"labor": 1,
			"change": 1,
			"there": 1,
			"in": 4
		},
		"native": {
			"which": 2,
			"country": 2,
			"of": 2,
			"it": 1,
			"sod": 1,
			"pride": 1,
			"land": 15,
			"ranks": 1,
			"shore": 3,
			"swords": 1,
			"music": 1,
			"soil": 3,
			"isle": 1,
			"grace": 1,
			"home": 4,
			"here": 1,
			"night": 1,
			"to": 2,
			"skies": 1,
			"as": 1,
			"air": 2,
			"sky": 1,
			"oak": 1
		},
		"people": {
			"war": 1,
			"are": 1,
			"who": 2,
			"of": 4,
			"rose": 1,
			"is": 1,
			"pleased": 1,
			"you": 1,
			"for": 1,
			"lost": 1,
			"should": 1,
			"whom": 1,
			"fools": 1,
			"that": 1,
			"crowd": 1,
			"what": 1,
			"an": 1,
			"a": 1,
			"so": 1,
			"lord": 1,
			"on": 1,
			"own": 1,
			"knowledge": 1,
			"raise": 1,
			"be": 1,
			"say": 1,
			"and": 5,
			"too": 1,
			"from": 1,
			"till": 1,
			"wake": 1,
			"to": 1,
			"we": 1,
			"as": 1,
			"he": 1,
			"the": 1,
			"young": 1,
			"in": 1
		},
		"sung": {
			"fell": 1,
			"under": 1,
			"of": 1,
			"nor": 1,
			"by": 7,
			"where": 1,
			"that": 1,
			"another": 1,
			"or": 3,
			"a": 1,
			"them": 1,
			"upon": 1,
			"on": 1,
			"above": 1,
			"when": 1,
			"and": 4,
			"while": 1,
			"with": 1,
			"till": 1,
			"only": 1,
			"to": 5,
			"as": 2,
			"me": 2,
			"at": 2,
			"the": 4,
			"there": 1,
			"in": 4
		},
		"please": {
			"us": 1,
			"him": 1,
			"alike": 1,
			"is": 1,
			"you": 1,
			"sir": 1,
			"god": 2,
			"can": 1,
			"that": 1,
			"must": 1,
			"and": 6,
			"give": 1,
			"himself": 1,
			"all": 1,
			"to": 3,
			"me": 1,
			"at": 1,
			"the": 1,
			"her": 1,
			"there": 1
		},
		"immortality": {
			"of": 1,
			"she": 1,
			"like": 1,
			"heaven": 2,
			"that": 1,
			"music": 1,
			"or": 2,
			"when": 1,
			"be": 1,
			"and": 4,
			"i": 1,
			"here": 1,
			"from": 2,
			"then": 2,
			"fear": 1,
			"to": 1,
			"the": 2
		},
		"hallowed": {
			"sent": 1,
			"spot": 2,
			"hours": 1,
			"where": 1,
			"ground": 6,
			"lips": 1,
			"be": 2,
			"bed": 1,
			"and": 1,
			"down": 1,
			"day": 2,
			"page": 1,
			"shade": 1,
			"mould": 2,
			"fire": 1
		},
		"kings": {
			"right": 1,
			"who": 1,
			"of": 2,
			"this": 1,
			"daughter": 2,
			"she": 1,
			"age": 1,
			"not": 1,
			"depart": 1,
			"it": 2,
			"image": 1,
			"shut": 1,
			"you": 1,
			"than": 1,
			"crown": 2,
			"for": 2,
			"my": 1,
			"seek": 1,
			"name": 2,
			"can": 1,
			"were": 1,
			"that": 2,
			"jerusalem": 1,
			"a": 1,
			"on": 1,
			"but": 2,
			"raise": 1,
			"be": 1,
			"and": 7,
			"do": 1,
			"thou": 1,
			"would": 1,
			"set": 1,
			"throne": 1,
			"know": 1,
			"hail": 1,
			"as": 1,
			"sat": 1,
			"the": 5,
			"in": 3
		},
		"forever": {
			"else": 1,
			"more": 1,
			"his": 1,
			"see": 1,
			"are": 2,
			"who": 1,
			"hide": 1,
			"of": 1,
			"this": 1,
			"keep": 1,
			"she": 1,
			"grew": 1,
			"wheel": 1,
			"not": 1,
			"it": 2,
			"by": 1,
			"twixt": 1,
			"mute": 1,
			"like": 1,
			"farewell": 1,
			"they": 1,
			"new": 1,
			"laid": 1,
			"for": 2,
			"lost": 1,
			"sighing": 1,
			"sir": 1,
			"rising": 1,
			"along": 1,
			"oer": 2,
			"that": 1,
			"had": 1,
			"what": 1,
			"oh": 1,
			"or": 1,
			"a": 1,
			"lay": 1,
			"love": 1,
			"on": 2,
			"deep": 2,
			"but": 1,
			"known": 1,
			"thee": 1,
			"when": 1,
			"and": 16,
			"i": 1,
			"thou": 2,
			"down": 3,
			"here": 1,
			"from": 4,
			"nigh": 1,
			"guilty": 1,
			"with": 6,
			"singing": 1,
			"wave": 1,
			"now": 1,
			"till": 1,
			"all": 1,
			"then": 1,
			"thomas": 1,
			"peaceful": 1,
			"fortune": 1,
			"still": 1,
			"yet": 1,
			"to": 3,
			"may": 1,
			"as": 1,
			"he": 1,
			"at": 1,
			"o": 1,
			"the": 5,
			"choice": 1
		},
		"douglas": {
			"come": 1,
			"die": 2,
			"this": 2,
			"she": 1,
			"not": 1,
			"burn": 1,
			"douglas": 8,
			"for": 1,
			"came": 1,
			"tender": 5,
			"was": 1,
			"drop": 1,
			"a": 1,
			"on": 2,
			"and": 1,
			"to": 1,
			"said": 1,
			"there": 1,
			"in": 1,
			"saith": 1
		},
		"good": {
			"us": 1,
			"ring": 1,
			"wife": 1,
			"christ": 1,
			"die": 1,
			"his": 1,
			"him": 1,
			"law": 1,
			"thing": 1,
			"ii": 1,
			"are": 1,
			"next": 1,
			"who": 1,
			"guard": 1,
			"men": 4,
			"sake": 1,
			"body": 1,
			"of": 7,
			"this": 3,
			"up": 2,
			"she": 4,
			"nor": 1,
			"find": 1,
			"sez": 1,
			"morning": 1,
			"news": 3,
			"not": 1,
			"sword": 4,
			"it": 1,
			"image": 1,
			"far": 1,
			"by": 4,
			"eyes": 1,
			"father": 1,
			"long": 1,
			"pride": 1,
			"is": 7,
			"away": 1,
			"hoary": 1,
			"why": 1,
			"people": 1,
			"good": 2,
			"they": 2,
			"easy": 1,
			"nature": 1,
			"tyrants": 1,
			"mother": 1,
			"its": 1,
			"than": 1,
			"friends": 2,
			"gray": 1,
			"for": 6,
			"heaven": 2,
			"cry": 1,
			"cannot": 1,
			"my": 1,
			"words": 3,
			"hour": 1,
			"came": 1,
			"great": 4,
			"john": 2,
			"thy": 2,
			"teach": 1,
			"ere": 1,
			"cheer": 5,
			"sir": 2,
			"held": 1,
			"friend": 3,
			"lords": 1,
			"name": 2,
			"queen": 2,
			"faith": 1,
			"god": 2,
			"can": 1,
			"walls": 1,
			"that": 6,
			"if": 1,
			"man": 5,
			"seed": 1,
			"gives": 1,
			"must": 1,
			"what": 3,
			"wait": 1,
			"stars": 1,
			"or": 9,
			"lest": 1,
			"a": 3,
			"things": 4,
			"lord": 1,
			"celestial": 1,
			"old": 8,
			"but": 3,
			"when": 1,
			"deed": 2,
			"honest": 1,
			"waters": 1,
			"mans": 3,
			"task": 1,
			"be": 1,
			"t": 1,
			"kind": 1,
			"brave": 1,
			"say": 1,
			"and": 40,
			"order": 1,
			"do": 1,
			"christian": 1,
			"black": 2,
			"days": 1,
			"i": 4,
			"unknown": 1,
			"thou": 1,
			"tall": 1,
			"broad": 1,
			"how": 1,
			"from": 3,
			"ill": 3,
			"blade": 1,
			"no": 1,
			"with": 6,
			"soft": 1,
			"now": 1,
			"will": 1,
			"has": 1,
			"angels": 1,
			"our": 1,
			"day": 2,
			"sense": 2,
			"hall": 1,
			"fortune": 1,
			"night": 14,
			"mercy": 1,
			"shall": 1,
			"still": 1,
			"to": 16,
			"poetry": 1,
			"round": 1,
			"may": 2,
			"we": 3,
			"whose": 2,
			"as": 7,
			"fair": 1,
			"stand": 1,
			"he": 4,
			"at": 4,
			"o": 1,
			"the": 10,
			"sure": 1,
			"world": 1,
			"seems": 1,
			"young": 2,
			"in": 8,
			"thoughts": 1
		},
		"lead": {
			"us": 3,
			"his": 2,
			"him": 2,
			"after": 1,
			"forth": 1,
			"it": 1,
			"kindly": 2,
			"thy": 2,
			"an": 1,
			"waiting": 1,
			"a": 1,
			"them": 2,
			"on": 3,
			"but": 1,
			"thee": 1,
			"and": 1,
			"thou": 4,
			"broke": 1,
			"dull": 1,
			"through": 1,
			"still": 1,
			"to": 5,
			"he": 1,
			"me": 11,
			"the": 6,
			"in": 1
		},
		"pleased": {
			"him": 2,
			"amidst": 1,
			"eyes": 1,
			"heaven": 1,
			"surprise": 1,
			"and": 1,
			"with": 6,
			"to": 2,
			"me": 2,
			"the": 4,
			"in": 1
		},
		"ocean": {
			"sweet": 1,
			"his": 1,
			"who": 1,
			"of": 2,
			"thick": 1,
			"by": 1,
			"woods": 1,
			"long": 1,
			"is": 1,
			"they": 1,
			"wide": 1,
			"without": 1,
			"where": 1,
			"for": 2,
			"theres": 1,
			"great": 1,
			"john": 1,
			"shore": 1,
			"rising": 1,
			"that": 1,
			"bear": 1,
			"stars": 1,
			"music": 1,
			"or": 2,
			"a": 1,
			"hath": 2,
			"deep": 2,
			"buried": 1,
			"bed": 1,
			"and": 6,
			"thou": 1,
			"swell": 1,
			"storm": 1,
			"against": 1,
			"broad": 1,
			"each": 1,
			"from": 3,
			"while": 1,
			"strand": 1,
			"roll": 1,
			"with": 2,
			"wave": 1,
			"now": 1,
			"flying": 1,
			"spring": 1,
			"shall": 1,
			"still": 1,
			"to": 2,
			"we": 1,
			"the": 1,
			"in": 3,
			"air": 1
		},
		"hark": {
			"his": 1,
			"she": 1,
			"it": 1,
			"like": 1,
			"hark": 5,
			"they": 1,
			"my": 1,
			"thy": 1,
			"rising": 1,
			"was": 1,
			"what": 2,
			"a": 2,
			"but": 1,
			"how": 5,
			"to": 7,
			"as": 1,
			"the": 9
		},
		"force": {
			"more": 1,
			"his": 1,
			"are": 1,
			"of": 7,
			"nor": 2,
			"not": 1,
			"divine": 1,
			"over": 1,
			"something": 1,
			"like": 1,
			"past": 1,
			"most": 1,
			"can": 1,
			"that": 1,
			"their": 2,
			"hath": 1,
			"but": 1,
			"and": 5,
			"move": 1,
			"i": 1,
			"with": 2,
			"give": 2,
			"to": 3,
			"the": 1,
			"fire": 1
		},
		"ever": {
			"sweet": 1,
			"come": 2,
			"caught": 1,
			"summer": 1,
			"more": 1,
			"hear": 1,
			"won": 2,
			"since": 1,
			"blessd": 1,
			"wife": 1,
			"going": 2,
			"his": 1,
			"endure": 1,
			"see": 3,
			"wi": 1,
			"fears": 1,
			"right": 1,
			"who": 2,
			"seen": 2,
			"suffer": 1,
			"hide": 1,
			"this": 1,
			"amid": 1,
			"after": 1,
			"she": 1,
			"sacred": 1,
			"does": 1,
			"behold": 1,
			"fade": 1,
			"sword": 1,
			"alone": 1,
			"something": 1,
			"is": 3,
			"rise": 2,
			"farewell": 2,
			"found": 1,
			"sung": 2,
			"douglas": 1,
			"lead": 1,
			"they": 1,
			"you": 2,
			"thus": 2,
			"new": 1,
			"heard": 1,
			"its": 1,
			"where": 1,
			"for": 2,
			"past": 3,
			"read": 1,
			"theres": 1,
			"my": 2,
			"bore": 1,
			"shines": 1,
			"thy": 1,
			"smiles": 1,
			"pray": 1,
			"teach": 1,
			"hope": 2,
			"win": 2,
			"oer": 1,
			"did": 2,
			"was": 1,
			"that": 4,
			"let": 1,
			"show": 1,
			"full": 1,
			"what": 2,
			"wait": 1,
			"hold": 1,
			"or": 1,
			"finds": 1,
			"wilt": 1,
			"bright": 1,
			"have": 1,
			"gave": 1,
			"trod": 2,
			"a": 4,
			"so": 2,
			"true": 1,
			"lay": 1,
			"lord": 1,
			"never": 1,
			"ceased": 1,
			"love": 1,
			"on": 2,
			"saw": 1,
			"bend": 1,
			"maryland": 1,
			"but": 1,
			"death": 1,
			"time": 1,
			"lives": 1,
			"when": 2,
			"be": 4,
			"tried": 1,
			"sorrow": 1,
			"and": 10,
			"do": 1,
			"last": 2,
			"i": 7,
			"knew": 1,
			"thou": 1,
			"one": 1,
			"such": 1,
			"from": 1,
			"join": 1,
			"nigh": 1,
			"no": 1,
			"roll": 1,
			"with": 3,
			"singing": 1,
			"soft": 1,
			"set": 1,
			"give": 1,
			"meet": 1,
			"will": 1,
			"strong": 1,
			"patient": 1,
			"gay": 1,
			"then": 1,
			"blest": 1,
			"could": 1,
			"shine": 1,
			"spring": 1,
			"day": 1,
			"loved": 1,
			"yet": 4,
			"to": 10,
			"loud": 1,
			"round": 1,
			"answer": 1,
			"live": 1,
			"soar": 1,
			"flow": 1,
			"may": 1,
			"ship": 1,
			"he": 4,
			"lies": 1,
			"blessed": 1,
			"the": 14,
			"world": 1,
			"seems": 2,
			"passed": 1,
			"been": 2,
			"near": 4,
			"first": 1,
			"there": 1,
			"in": 15
		},
		"either": {
			"his": 1,
			"of": 2,
			"side": 3,
			"it": 1,
			"host": 2,
			"good": 1,
			"for": 2,
			"hand": 2,
			"should": 1,
			"again": 1,
			"mary": 1,
			"were": 1,
			"that": 1,
			"gives": 1,
			"or": 2,
			"but": 1,
			"mans": 1,
			"i": 1,
			"these": 1,
			"with": 1,
			"our": 1,
			"to": 2,
			"we": 3,
			"life": 1,
			"the": 1,
			"in": 1
		},
		"care": {
			"sweet": 1,
			"jean": 1,
			"sighs": 1,
			"wife": 1,
			"chase": 1,
			"struck": 1,
			"seemed": 1,
			"who": 1,
			"which": 1,
			"of": 1,
			"keep": 1,
			"she": 2,
			"nor": 1,
			"not": 7,
			"depart": 1,
			"far": 1,
			"alone": 1,
			"is": 1,
			"like": 1,
			"they": 1,
			"where": 1,
			"for": 4,
			"my": 2,
			"themselves": 1,
			"thy": 1,
			"morn": 1,
			"most": 1,
			"along": 1,
			"whether": 1,
			"that": 7,
			"what": 1,
			"or": 3,
			"a": 4,
			"so": 3,
			"lord": 1,
			"on": 2,
			"break": 1,
			"but": 2,
			"time": 1,
			"when": 1,
			"be": 1,
			"and": 8,
			"i": 4,
			"thou": 2,
			"softly": 1,
			"each": 1,
			"how": 1,
			"help": 1,
			"from": 1,
			"no": 4,
			"has": 2,
			"shall": 1,
			"course": 1,
			"to": 7,
			"eve": 1,
			"we": 3,
			"whose": 1,
			"o": 1,
			"the": 9,
			"her": 1,
			"there": 1,
			"in": 1
		},
		"together": {
			"come": 2,
			"this": 1,
			"over": 1,
			"like": 2,
			"lead": 1,
			"they": 2,
			"heard": 1,
			"where": 1,
			"that": 1,
			"let": 2,
			"both": 1,
			"oh": 1,
			"them": 1,
			"on": 1,
			"but": 2,
			"rushed": 1,
			"when": 1,
			"be": 1,
			"out": 1,
			"and": 7,
			"how": 1,
			"from": 2,
			"no": 1,
			"with": 2,
			"all": 2,
			"through": 1,
			"asleep": 1,
			"our": 1,
			"shall": 1,
			"to": 2,
			"into": 1,
			"thinking": 1,
			"live": 1,
			"we": 1,
			"at": 3,
			"grow": 1,
			"the": 3,
			"in": 3
		},
		"about": {
			"dying": 1,
			"us": 6,
			"his": 3,
			"him": 3,
			"none": 1,
			"it": 1,
			"by": 1,
			"sung": 1,
			"either": 1,
			"its": 1,
			"for": 1,
			"tomorrow": 1,
			"my": 1,
			"thy": 1,
			"that": 1,
			"a": 2,
			"so": 1,
			"them": 2,
			"upon": 1,
			"thee": 4,
			"t": 1,
			"and": 3,
			"with": 2,
			"doth": 1,
			"our": 1,
			"shall": 1,
			"your": 1,
			"to": 3,
			"as": 1,
			"he": 1,
			"me": 3,
			"at": 1,
			"o": 1,
			"the": 23,
			"her": 8,
			"young": 1,
			"in": 3
		},
		"steed": {
			"within": 1,
			"his": 1,
			"which": 1,
			"of": 1,
			"this": 1,
			"kept": 1,
			"is": 1,
			"like": 1,
			"most": 1,
			"that": 4,
			"let": 1,
			"ran": 1,
			"wilt": 1,
			"a": 1,
			"rushed": 1,
			"and": 6,
			"down": 1,
			"how": 1,
			"while": 1,
			"with": 5,
			"our": 1,
			"to": 2,
			"as": 1,
			"he": 1,
			"the": 2,
			"in": 3
		},
		"they": {
			"perchance": 1,
			"come": 16,
			"bow": 1,
			"dare": 1,
			"fled": 1,
			"cool": 1,
			"us": 2,
			"hear": 4,
			"sent": 1,
			"won": 1,
			"since": 1,
			"ring": 1,
			"died": 7,
			"curse": 1,
			"went": 1,
			"im": 1,
			"wish": 3,
			"pine": 1,
			"die": 1,
			"his": 2,
			"him": 4,
			"crossed": 1,
			"see": 5,
			"bare": 1,
			"kiss": 2,
			"learn": 2,
			"rule": 1,
			"surely": 1,
			"tell": 4,
			"seemed": 2,
			"are": 77,
			"made": 7,
			"fell": 7,
			"who": 14,
			"hide": 1,
			"tired": 1,
			"call": 9,
			"of": 4,
			"this": 3,
			"blind": 1,
			"keep": 1,
			"alike": 1,
			"kept": 4,
			"wander": 1,
			"up": 3,
			"food": 1,
			"triumph": 1,
			"breathe": 2,
			"nor": 1,
			"find": 3,
			"grown": 1,
			"cling": 1,
			"wheel": 1,
			"scorn": 3,
			"played": 4,
			"mourn": 3,
			"part": 1,
			"pass": 9,
			"rose": 2,
			"behold": 1,
			"not": 11,
			"fade": 1,
			"dwell": 1,
			"burn": 1,
			"serve": 2,
			"put": 1,
			"depart": 2,
			"praise": 1,
			"it": 6,
			"began": 1,
			"perish": 2,
			"neither": 1,
			"mean": 2,
			"brought": 5,
			"bark": 1,
			"weep": 1,
			"send": 1,
			"load": 1,
			"by": 3,
			"alone": 1,
			"bring": 2,
			"kissed": 2,
			"cross": 1,
			"soon": 1,
			"rise": 6,
			"looked": 2,
			"away": 3,
			"form": 1,
			"found": 3,
			"sung": 1,
			"please": 1,
			"ever": 1,
			"care": 1,
			"together": 1,
			"they": 7,
			"shook": 1,
			"wide": 1,
			"grant": 1,
			"thus": 1,
			"pale": 2,
			"swept": 3,
			"strike": 3,
			"heard": 4,
			"without": 1,
			"laid": 4,
			"than": 2,
			"where": 2,
			"looking": 1,
			"run": 1,
			"holy": 1,
			"for": 5,
			"hand": 1,
			"become": 2,
			"catch": 2,
			"cry": 5,
			"should": 10,
			"sang": 4,
			"take": 4,
			"cannot": 2,
			"speak": 3,
			"fixed": 1,
			"rest": 5,
			"my": 1,
			"bore": 2,
			"came": 8,
			"remain": 1,
			"sighing": 1,
			"desire": 2,
			"themselves": 3,
			"touch": 1,
			"sing": 8,
			"watch": 3,
			"sleep": 2,
			"teach": 3,
			"wept": 1,
			"whom": 2,
			"hope": 1,
			"gather": 2,
			"cease": 1,
			"most": 2,
			"wandering": 1,
			"held": 2,
			"reach": 1,
			"along": 1,
			"closed": 2,
			"sin": 1,
			"god": 2,
			"can": 8,
			"were": 36,
			"flee": 1,
			"crowned": 1,
			"need": 2,
			"did": 9,
			"was": 1,
			"that": 13,
			"let": 3,
			"show": 1,
			"drop": 3,
			"bear": 2,
			"both": 3,
			"fain": 1,
			"always": 3,
			"full": 1,
			"make": 5,
			"fall": 2,
			"go": 12,
			"reign": 1,
			"trust": 1,
			"sail": 1,
			"rode": 3,
			"tear": 1,
			"had": 10,
			"must": 4,
			"climb": 1,
			"what": 2,
			"sit": 2,
			"an": 1,
			"wait": 2,
			"hold": 2,
			"nothing": 1,
			"or": 2,
			"ran": 3,
			"start": 3,
			"moved": 3,
			"have": 53,
			"gave": 3,
			"trod": 2,
			"fill": 2,
			"their": 14,
			"a": 5,
			"so": 5,
			"them": 2,
			"sink": 1,
			"upon": 2,
			"lay": 4,
			"lord": 1,
			"never": 7,
			"many": 2,
			"leave": 4,
			"met": 3,
			"love": 9,
			"on": 6,
			"saw": 5,
			"bend": 1,
			"break": 2,
			"own": 1,
			"above": 2,
			"old": 2,
			"filled": 1,
			"content": 1,
			"but": 8,
			"rushed": 2,
			"buried": 2,
			"when": 4,
			"eat": 2,
			"onward": 1,
			"burst": 1,
			"sigh": 1,
			"raise": 4,
			"be": 10,
			"watched": 2,
			"brave": 1,
			"say": 18,
			"close": 2,
			"and": 26,
			"eer": 1,
			"do": 9,
			"dream": 1,
			"ask": 1,
			"blaze": 1,
			"fly": 4,
			"i": 2,
			"knew": 3,
			"down": 7,
			"broke": 2,
			"too": 4,
			"raised": 1,
			"fought": 8,
			"one": 2,
			"might": 5,
			"draw": 3,
			"softly": 1,
			"rush": 3,
			"hate": 1,
			"broad": 1,
			"each": 1,
			"how": 1,
			"from": 8,
			"join": 3,
			"sought": 7,
			"drink": 2,
			"would": 5,
			"living": 1,
			"ill": 1,
			"want": 1,
			"while": 3,
			"no": 2,
			"bound": 2,
			"took": 3,
			"roll": 5,
			"with": 11,
			"wave": 1,
			"drew": 4,
			"now": 2,
			"set": 1,
			"give": 1,
			"gaze": 2,
			"meet": 1,
			"will": 10,
			"follow": 1,
			"flash": 1,
			"wore": 4,
			"all": 8,
			"then": 2,
			"lose": 1,
			"thought": 1,
			"could": 6,
			"through": 1,
			"laugh": 2,
			"spoke": 2,
			"shine": 3,
			"mount": 1,
			"spring": 3,
			"turned": 2,
			"our": 1,
			"feel": 1,
			"aside": 1,
			"gathered": 3,
			"neer": 3,
			"fear": 2,
			"loved": 4,
			"stay": 1,
			"shall": 13,
			"before": 2,
			"only": 6,
			"still": 2,
			"chance": 1,
			"mingled": 1,
			"yet": 4,
			"best": 1,
			"mark": 1,
			"to": 22,
			"loud": 1,
			"wandered": 1,
			"speed": 1,
			"into": 2,
			"round": 1,
			"turn": 2,
			"lie": 5,
			"little": 2,
			"live": 6,
			"view": 1,
			"get": 1,
			"know": 10,
			"lived": 1,
			"may": 8,
			"hail": 1,
			"whisper": 1,
			"smiled": 1,
			"we": 1,
			"spread": 2,
			"whose": 2,
			"as": 3,
			"stand": 6,
			"said": 8,
			"me": 2,
			"at": 3,
			"led": 1,
			"o": 1,
			"chain": 2,
			"gain": 1,
			"grow": 3,
			"left": 2,
			"blessed": 2,
			"the": 35,
			"waste": 1,
			"bent": 1,
			"stood": 2,
			"her": 3,
			"passed": 3,
			"share": 1,
			"change": 3,
			"been": 1,
			"dead": 1,
			"tread": 1,
			"thirst": 1,
			"fire": 1,
			"fail": 1,
			"first": 3,
			"there": 4,
			"in": 14,
			"step": 1,
			"shed": 1,
			"seem": 7
		},
		"shook": {
			"within": 1,
			"his": 5,
			"who": 1,
			"deeds": 1,
			"of": 1,
			"it": 1,
			"perfume": 1,
			"hands": 1,
			"a": 1,
			"and": 2,
			"one": 1,
			"from": 1,
			"all": 1,
			"through": 1,
			"to": 1,
			"as": 1,
			"me": 1,
			"o": 1,
			"the": 10,
			"her": 1
		},
		"speech": {
			"free": 1,
			"of": 5,
			"is": 3,
			"like": 1,
			"speech": 1,
			"for": 1,
			"because": 1,
			"that": 1,
			"had": 1,
			"a": 1,
			"so": 1,
			"but": 2,
			"and": 6,
			"from": 1,
			"with": 1,
			"could": 1,
			"to": 3,
			"we": 1,
			"at": 1,
			"the": 1
		},
		"prayer": {
			"appear": 1,
			"which": 1,
			"of": 3,
			"longfellow": 1,
			"once": 1,
			"she": 1,
			"rock": 2,
			"thyself": 1,
			"goes": 1,
			"dear": 1,
			"not": 1,
			"by": 2,
			"father": 1,
			"is": 10,
			"prayer": 2,
			"moves": 1,
			"without": 1,
			"where": 2,
			"for": 8,
			"speak": 1,
			"my": 2,
			"came": 1,
			"great": 1,
			"wept": 1,
			"can": 1,
			"was": 5,
			"that": 1,
			"let": 1,
			"full": 1,
			"had": 1,
			"gives": 1,
			"or": 2,
			"their": 1,
			"a": 2,
			"upon": 1,
			"hath": 1,
			"but": 3,
			"when": 4,
			"be": 4,
			"whittier": 1,
			"and": 13,
			"whateer": 1,
			"ask": 1,
			"i": 8,
			"thou": 1,
			"down": 2,
			"too": 1,
			"henry": 1,
			"from": 1,
			"with": 1,
			"soft": 2,
			"all": 1,
			"then": 1,
			"has": 1,
			"doth": 1,
			"shall": 1,
			"still": 1,
			"yet": 1,
			"to": 5,
			"we": 1,
			"glad": 1,
			"whose": 1,
			"as": 2,
			"at": 1,
			"o": 3,
			"arise": 1,
			"the": 4,
			"been": 1,
			"in": 5
		},
		"easy": {
			"won": 1,
			"leap": 1,
			"of": 1,
			"is": 1,
			"hard": 1,
			"for": 1,
			"friend": 1,
			"man": 1,
			"things": 1,
			"task": 1,
			"and": 2,
			"broke": 1,
			"one": 1,
			"ill": 1,
			"now": 2,
			"still": 1,
			"to": 12,
			"as": 3,
			"seat": 1
		},
		"grain": {
			"which": 1,
			"grew": 1,
			"is": 1,
			"theres": 1,
			"words": 1,
			"or": 1,
			"on": 1,
			"but": 1,
			"and": 2,
			"i": 1,
			"from": 1,
			"with": 1,
			"till": 1,
			"then": 1,
			"clouds": 1,
			"at": 1,
			"the": 4,
			"though": 1
		},
		"abroad": {
			"wine": 1,
			"wide": 1,
			"its": 1,
			"thy": 1,
			"that": 1,
			"what": 1,
			"or": 1,
			"a": 1,
			"on": 1,
			"and": 5,
			"too": 1,
			"how": 1,
			"with": 1,
			"our": 1,
			"shall": 1,
			"into": 1,
			"the": 2,
			"scarce": 1,
			"in": 3
		},
		"believe": {
			"of": 1,
			"not": 3,
			"it": 2,
			"by": 1,
			"they": 1,
			"those": 1,
			"that": 3,
			"an": 1,
			"them": 1,
			"old": 1,
			"thee": 1,
			"when": 1,
			"and": 1,
			"such": 1,
			"give": 1,
			"then": 1,
			"me": 3,
			"the": 2,
			"in": 3
		},
		"path": {
			"which": 1,
			"of": 10,
			"beloved": 1,
			"by": 2,
			"alone": 2,
			"guide": 1,
			"where": 1,
			"seek": 1,
			"runs": 1,
			"that": 2,
			"an": 1,
			"have": 1,
			"a": 1,
			"falls": 1,
			"but": 1,
			"when": 1,
			"and": 1,
			"i": 1,
			"from": 1,
			"across": 1,
			"with": 1,
			"through": 1,
			"neer": 1,
			"shall": 1,
			"before": 1,
			"to": 9,
			"round": 1,
			"ah": 2,
			"we": 2,
			"he": 1,
			"lies": 1,
			"led": 1,
			"the": 1,
			"world": 1,
			"there": 1,
			"in": 1
		},
		"laughing": {
			"loves": 1,
			"word": 1,
			"lands": 1,
			"water": 3,
			"by": 1,
			"together": 1,
			"along": 1,
			"eye": 1,
			"girl": 1,
			"and": 1,
			"i": 2,
			"to": 1,
			"said": 1,
			"at": 2,
			"the": 2,
			"in": 2
		},
		"faint": {
			"sweet": 1,
			"sent": 1,
			"thine": 1,
			"of": 2,
			"amid": 1,
			"nor": 1,
			"praise": 1,
			"smile": 1,
			"beams": 1,
			"my": 1,
			"ray": 1,
			"soul": 1,
			"that": 1,
			"make": 1,
			"their": 1,
			"a": 1,
			"so": 2,
			"when": 1,
			"heart": 1,
			"and": 8,
			"rays": 1,
			"thou": 1,
			"one": 1,
			"hearts": 1,
			"beneath": 1,
			"while": 2,
			"voice": 1,
			"with": 3,
			"behind": 1,
			"shall": 1,
			"as": 1,
			"at": 1,
			"the": 3,
			"in": 1,
			"harmony": 1
		},
		"gazed": {
			"who": 1,
			"which": 1,
			"a": 2,
			"upon": 4,
			"on": 4,
			"and": 1,
			"too": 1,
			"around": 2,
			"as": 1,
			"at": 4,
			"the": 1
		},
		"funeral": {
			"light": 1,
			"of": 1,
			"up": 1,
			"away": 1,
			"they": 1,
			"train": 2,
			"for": 1,
			"note": 1,
			"that": 1,
			"tears": 1,
			"bell": 1,
			"and": 2,
			"would": 1,
			"then": 1,
			"thomas": 1,
			"couch": 1,
			"to": 2,
			"the": 1,
			"in": 1
		},
		"wide": {
			"none": 1,
			"silent": 1,
			"of": 2,
			"high": 1,
			"she": 1,
			"nor": 1,
			"fresh": 1,
			"every": 1,
			"over": 1,
			"land": 1,
			"is": 1,
			"they": 1,
			"lightly": 1,
			"where": 1,
			"rolled": 1,
			"for": 1,
			"my": 1,
			"thy": 1,
			"waves": 1,
			"oer": 1,
			"was": 1,
			"that": 1,
			"if": 1,
			"hold": 1,
			"field": 1,
			"a": 3,
			"never": 1,
			"but": 2,
			"plain": 1,
			"be": 1,
			"wings": 3,
			"and": 12,
			"thou": 1,
			"each": 1,
			"how": 1,
			"beneath": 1,
			"sphere": 1,
			"with": 1,
			"realm": 2,
			"all": 1,
			"then": 1,
			"to": 3,
			"sweep": 1,
			"as": 7,
			"arms": 2,
			"o": 3,
			"the": 16,
			"world": 4,
			"her": 1,
			"scene": 1,
			"air": 1
		},
		"you": {
			"come": 3,
			"look": 4,
			"us": 1,
			"more": 3,
			"hear": 3,
			"taught": 2,
			"loves": 1,
			"went": 1,
			"wish": 1,
			"pine": 1,
			"his": 1,
			"endure": 1,
			"hell": 1,
			"him": 1,
			"see": 11,
			"play": 2,
			"kiss": 1,
			"thousand": 1,
			"s": 1,
			"learn": 1,
			"none": 1,
			"tell": 2,
			"wonder": 1,
			"are": 19,
			"made": 1,
			"who": 2,
			"seen": 1,
			"call": 1,
			"of": 3,
			"this": 2,
			"keep": 1,
			"pour": 1,
			"once": 2,
			"up": 2,
			"off": 1,
			"among": 1,
			"nor": 1,
			"find": 3,
			"forth": 2,
			"bird": 1,
			"dear": 2,
			"two": 1,
			"pass": 4,
			"behold": 1,
			"not": 6,
			"put": 1,
			"proud": 1,
			"hes": 1,
			"pressed": 2,
			"it": 1,
			"over": 1,
			"began": 1,
			"fool": 1,
			"twas": 1,
			"mean": 2,
			"health": 1,
			"by": 3,
			"nevermore": 1,
			"alone": 1,
			"bring": 1,
			"kissed": 1,
			"is": 1,
			"soon": 1,
			"rise": 3,
			"looked": 1,
			"few": 1,
			"like": 3,
			"please": 3,
			"douglas": 2,
			"good": 1,
			"lead": 1,
			"ever": 3,
			"care": 1,
			"they": 1,
			"believe": 1,
			"you": 4,
			"mother": 3,
			"thus": 1,
			"afar": 1,
			"laid": 2,
			"than": 2,
			"run": 1,
			"just": 1,
			"welcome": 1,
			"for": 12,
			"read": 1,
			"lost": 1,
			"should": 4,
			"darling": 4,
			"take": 7,
			"cannot": 11,
			"speak": 2,
			"fixed": 1,
			"my": 11,
			"came": 1,
			"standing": 1,
			"john": 1,
			"forgot": 1,
			"thy": 1,
			"watch": 3,
			"sleep": 1,
			"whom": 1,
			"better": 1,
			"mary": 1,
			"hope": 1,
			"remember": 1,
			"most": 1,
			"sir": 2,
			"held": 2,
			"fools": 1,
			"queen": 1,
			"can": 12,
			"were": 13,
			"need": 2,
			"indeed": 1,
			"did": 2,
			"was": 1,
			"that": 6,
			"if": 2,
			"let": 1,
			"both": 1,
			"make": 2,
			"go": 2,
			"had": 6,
			"must": 17,
			"what": 1,
			"sit": 1,
			"an": 12,
			"wait": 1,
			"understand": 1,
			"or": 4,
			"think": 6,
			"have": 22,
			"gave": 1,
			"their": 1,
			"a": 9,
			"so": 4,
			"them": 1,
			"upon": 1,
			"never": 2,
			"leave": 1,
			"love": 8,
			"groan": 1,
			"on": 2,
			"saw": 2,
			"above": 1,
			"but": 6,
			"ye": 4,
			"choose": 2,
			"when": 3,
			"eat": 1,
			"be": 3,
			"out": 3,
			"vere": 1,
			"say": 5,
			"and": 23,
			"eer": 1,
			"do": 11,
			"ask": 1,
			"grave": 1,
			"hid": 1,
			"i": 1,
			"knew": 4,
			"down": 1,
			"told": 1,
			"robin": 1,
			"pay": 1,
			"here": 2,
			"too": 2,
			"steel": 1,
			"mortal": 1,
			"might": 3,
			"work": 1,
			"how": 2,
			"from": 3,
			"sought": 1,
			"would": 6,
			"mind": 1,
			"want": 2,
			"no": 3,
			"called": 1,
			"guilty": 1,
			"with": 11,
			"sad": 2,
			"soggarth": 5,
			"now": 2,
			"set": 1,
			"give": 1,
			"some": 1,
			"meet": 2,
			"will": 16,
			"flash": 1,
			"all": 10,
			"grief": 1,
			"gods": 1,
			"then": 1,
			"thought": 1,
			"could": 1,
			"has": 1,
			"angels": 1,
			"well": 1,
			"our": 1,
			"smoke": 1,
			"feel": 1,
			"neer": 4,
			"needs": 1,
			"loved": 2,
			"pity": 1,
			"stay": 1,
			"shall": 6,
			"only": 3,
			"still": 3,
			"your": 3,
			"best": 1,
			"to": 14,
			"speed": 1,
			"lie": 1,
			"live": 4,
			"glorious": 1,
			"view": 1,
			"get": 2,
			"know": 12,
			"may": 15,
			"enter": 1,
			"smiled": 1,
			"we": 2,
			"whose": 1,
			"as": 3,
			"stand": 2,
			"english": 1,
			"said": 1,
			"life": 3,
			"he": 3,
			"me": 3,
			"at": 2,
			"fancy": 3,
			"frown": 1,
			"o": 5,
			"common": 1,
			"the": 12,
			"tis": 2,
			"though": 1,
			"sure": 3,
			"bent": 1,
			"stood": 2,
			"scarce": 1,
			"her": 1,
			"passed": 1,
			"share": 1,
			"change": 1,
			"safe": 1,
			"fail": 1,
			"first": 1,
			"oft": 1,
			"there": 2,
			"in": 9,
			"seem": 1
		},
		"moves": {
			"his": 1,
			"this": 1,
			"is": 1,
			"like": 2,
			"abroad": 1,
			"if": 1,
			"on": 3,
			"but": 1,
			"bliss": 1,
			"gods": 1,
			"to": 1,
			"mid": 1,
			"the": 5,
			"in": 1
		},
		"nature": {
			"taught": 1,
			"within": 1,
			"loves": 1,
			"him": 1,
			"are": 1,
			"made": 6,
			"which": 3,
			"holds": 1,
			"of": 4,
			"this": 1,
			"high": 1,
			"up": 2,
			"not": 2,
			"praise": 1,
			"sins": 1,
			"hangs": 1,
			"is": 9,
			"rise": 1,
			"form": 1,
			"they": 1,
			"pale": 1,
			"those": 1,
			"rolled": 1,
			"for": 3,
			"take": 1,
			"cannot": 2,
			"my": 1,
			"bore": 1,
			"great": 1,
			"john": 1,
			"hushed": 1,
			"cease": 1,
			"makes": 1,
			"false": 1,
			"forward": 1,
			"can": 1,
			"did": 2,
			"runs": 1,
			"that": 3,
			"let": 1,
			"show": 1,
			"half": 1,
			"had": 1,
			"gives": 1,
			"must": 1,
			"nothing": 1,
			"finds": 1,
			"gave": 2,
			"so": 3,
			"brings": 1,
			"given": 1,
			"sink": 1,
			"never": 1,
			"fast": 1,
			"but": 3,
			"infinite": 1,
			"ye": 1,
			"be": 1,
			"close": 1,
			"and": 21,
			"do": 1,
			"cries": 2,
			"i": 3,
			"between": 1,
			"looks": 1,
			"from": 1,
			"these": 1,
			"present": 1,
			"no": 1,
			"with": 5,
			"will": 1,
			"all": 1,
			"through": 2,
			"has": 1,
			"doth": 1,
			"equal": 1,
			"still": 1,
			"yet": 2,
			"to": 7,
			"gently": 1,
			"know": 2,
			"art": 1,
			"strife": 1,
			"we": 1,
			"he": 1,
			"at": 2,
			"the": 7,
			"though": 1,
			"seems": 1,
			"her": 1,
			"oft": 1,
			"there": 1,
			"in": 5
		},
		"shot": {
			"his": 1,
			"him": 1,
			"surely": 1,
			"forth": 1,
			"it": 1,
			"over": 1,
			"by": 2,
			"is": 1,
			"heard": 1,
			"john": 1,
			"oer": 1,
			"was": 1,
			"that": 1,
			"what": 1,
			"a": 1,
			"when": 1,
			"and": 3,
			"i": 1,
			"from": 1,
			"through": 2,
			"before": 1,
			"to": 1,
			"as": 1,
			"straight": 1,
			"the": 4,
			"dead": 1,
			"in": 3
		},
		"tyrants": {
			"wish": 1,
			"his": 1,
			"right": 1,
			"of": 2,
			"ever": 1,
			"hand": 1,
			"theres": 1,
			"watch": 1,
			"hope": 1,
			"lords": 1,
			"power": 1,
			"stroke": 1,
			"cause": 4,
			"if": 1,
			"fall": 2,
			"their": 1,
			"chains": 1,
			"but": 1,
			"feet": 1,
			"do": 1,
			"pay": 1,
			"from": 2,
			"voice": 1,
			"with": 1,
			"now": 1,
			"our": 1,
			"neer": 1,
			"use": 1,
			"chain": 1,
			"the": 2
		},
		"guide": {
			"us": 2,
			"his": 1,
			"none": 2,
			"she": 1,
			"hes": 1,
			"they": 1,
			"where": 2,
			"for": 1,
			"my": 5,
			"thy": 1,
			"their": 1,
			"a": 2,
			"them": 1,
			"on": 1,
			"thee": 1,
			"out": 1,
			"and": 4,
			"too": 1,
			"each": 1,
			"these": 1,
			"through": 2,
			"our": 1,
			"to": 1,
			"gently": 1,
			"as": 1,
			"he": 1,
			"o": 1,
			"the": 4,
			"in": 2
		},
		"stern": {
			"fell": 1,
			"who": 1,
			"high": 1,
			"daughter": 1,
			"rock": 1,
			"command": 1,
			"soon": 1,
			"earl": 1,
			"crowned": 1,
			"or": 1,
			"old": 1,
			"be": 1,
			"and": 7,
			"how": 1,
			"from": 1,
			"yet": 1,
			"to": 2,
			"whisper": 1,
			"as": 1,
			"array": 1,
			"the": 2
		},
		"glowing": {
			"of": 1,
			"tide": 1,
			"gold": 1,
			"fresh": 1,
			"not": 1,
			"hours": 1,
			"health": 1,
			"tone": 1,
			"along": 1,
			"hands": 2,
			"so": 1,
			"never": 1,
			"red": 1,
			"but": 1,
			"west": 1,
			"i": 1,
			"maid": 1,
			"with": 1,
			"clear": 1,
			"fiery": 1,
			"into": 1,
			"the": 2
		},
		"mother": {
			"come": 1,
			"dying": 2,
			"taught": 1,
			"within": 1,
			"im": 11,
			"earth": 3,
			"his": 2,
			"surely": 1,
			"are": 2,
			"fell": 1,
			"who": 4,
			"toward": 1,
			"of": 12,
			"this": 1,
			"daughter": 1,
			"up": 1,
			"she": 1,
			"nor": 1,
			"forth": 1,
			"brother": 1,
			"dear": 9,
			"not": 1,
			"tongue": 4,
			"kissed": 1,
			"is": 3,
			"care": 1,
			"those": 1,
			"where": 1,
			"just": 1,
			"for": 2,
			"my": 1,
			"tender": 1,
			"again": 2,
			"vain": 1,
			"ere": 1,
			"born": 1,
			"most": 1,
			"faith": 1,
			"that": 5,
			"man": 1,
			"both": 1,
			"always": 1,
			"had": 1,
			"what": 1,
			"or": 2,
			"have": 1,
			"gave": 1,
			"a": 1,
			"so": 1,
			"upon": 2,
			"lay": 1,
			"on": 1,
			"but": 2,
			"when": 2,
			"gone": 1,
			"turns": 1,
			"burst": 1,
			"be": 1,
			"weeping": 1,
			"heart": 1,
			"and": 10,
			"i": 4,
			"here": 1,
			"state": 1,
			"how": 1,
			"from": 3,
			"beneath": 1,
			"while": 1,
			"no": 1,
			"with": 1,
			"singing": 1,
			"now": 1,
			"give": 1,
			"will": 1,
			"all": 2,
			"night": 1,
			"only": 2,
			"still": 1,
			"to": 5,
			"ah": 1,
			"whose": 1,
			"as": 1,
			"charles": 1,
			"stand": 1,
			"happy": 1,
			"he": 3,
			"the": 5,
			"her": 1,
			"there": 1,
			"in": 2
		},
		"grant": {
			"us": 2,
			"him": 1,
			"thy": 1,
			"that": 3,
			"an": 1,
			"a": 1,
			"so": 1,
			"them": 1,
			"but": 1,
			"lifes": 1,
			"and": 2,
			"i": 1,
			"our": 1,
			"to": 1,
			"as": 1,
			"he": 1,
			"me": 4,
			"the": 4
		},
		"mild": {
			"sweet": 1,
			"summer": 1,
			"of": 3,
			"nor": 1,
			"ocean": 1,
			"they": 1,
			"even": 1,
			"and": 2,
			"all": 1,
			"then": 1,
			"minds": 1,
			"use": 1,
			"hail": 1,
			"as": 1,
			"son": 1,
			"the": 1,
			"in": 1,
			"air": 1
		},
		"thus": {
			"itself": 1,
			"ready": 1,
			"his": 1,
			"struck": 1,
			"hell": 1,
			"woe": 1,
			"alas": 1,
			"made": 2,
			"men": 1,
			"of": 1,
			"nor": 1,
			"not": 1,
			"every": 1,
			"it": 1,
			"began": 4,
			"far": 2,
			"by": 1,
			"alone": 1,
			"twixt": 1,
			"is": 1,
			"like": 1,
			"fairest": 1,
			"why": 1,
			"forever": 1,
			"they": 2,
			"thus": 1,
			"afar": 1,
			"laid": 1,
			"gentle": 1,
			"for": 1,
			"lost": 1,
			"sang": 1,
			"my": 2,
			"again": 1,
			"freedom": 1,
			"sing": 1,
			"seek": 1,
			"faith": 1,
			"were": 1,
			"did": 1,
			"that": 1,
			"man": 1,
			"conscience": 1,
			"finds": 1,
			"have": 1,
			"am": 1,
			"their": 2,
			"a": 1,
			"so": 2,
			"upon": 1,
			"leave": 3,
			"but": 1,
			"death": 1,
			"poor": 1,
			"when": 1,
			"be": 3,
			"having": 2,
			"out": 1,
			"and": 4,
			"do": 1,
			"i": 4,
			"unknown": 1,
			"thou": 1,
			"fought": 1,
			"one": 1,
			"help": 1,
			"from": 2,
			"would": 1,
			"ill": 1,
			"these": 1,
			"no": 1,
			"with": 10,
			"single": 1,
			"will": 1,
			"all": 1,
			"grief": 1,
			"thought": 1,
			"our": 1,
			"shall": 1,
			"only": 2,
			"to": 11,
			"sore": 1,
			"may": 2,
			"we": 1,
			"as": 2,
			"he": 5,
			"me": 1,
			"the": 9,
			"oft": 1,
			"in": 3,
			"saith": 1
		},
		"pale": {
			"sweet": 1,
			"blue": 1,
			"dying": 1,
			"suffering": 1,
			"more": 1,
			"light": 2,
			"his": 1,
			"cheek": 1,
			"women": 1,
			"shades": 1,
			"purple": 1,
			"are": 1,
			"which": 1,
			"mist": 1,
			"of": 2,
			"cast": 1,
			"star": 1,
			"grew": 1,
			"far": 1,
			"child": 1,
			"form": 1,
			"they": 1,
			"pale": 1,
			"lost": 1,
			"passion": 2,
			"face": 2,
			"god": 1,
			"that": 3,
			"thin": 1,
			"another": 1,
			"an": 1,
			"moon": 1,
			"stars": 2,
			"or": 1,
			"hands": 2,
			"have": 1,
			"horse": 1,
			"green": 1,
			"flies": 1,
			"on": 1,
			"death": 1,
			"feet": 1,
			"earthly": 1,
			"and": 16,
			"sun": 1,
			"i": 1,
			"each": 1,
			"from": 1,
			"beneath": 1,
			"ancient": 1,
			"while": 1,
			"no": 1,
			"with": 4,
			"now": 2,
			"grief": 1,
			"shade": 1,
			"course": 2,
			"to": 5,
			"we": 1,
			"as": 3,
			"at": 1,
			"the": 5,
			"young": 1,
			"fire": 1,
			"in": 1,
			"flowers": 1
		},
		"swept": {
			"perchance": 1,
			"us": 1,
			"within": 1,
			"back": 1,
			"grew": 1,
			"over": 1,
			"away": 1,
			"along": 2,
			"oer": 3,
			"on": 1,
			"out": 1,
			"and": 2,
			"down": 1,
			"from": 2,
			"across": 1,
			"around": 1,
			"all": 1,
			"as": 1,
			"the": 10
		},
		"seven": {
			"footnote": 1,
			"which": 1,
			"of": 2,
			"hills": 2,
			"hours": 1,
			"long": 2,
			"about": 1,
			"for": 1,
			"burning": 1,
			"times": 1,
			"that": 2,
			"brothers": 1,
			"pines": 1,
			"but": 1,
			"and": 2,
			"woman": 1,
			"ten": 1,
			"hundred": 1,
			"wounds": 1,
			"bold": 2,
			"the": 2
		},
		"new": {
			"ring": 1,
			"england": 4,
			"justice": 1,
			"loves": 1,
			"earth": 1,
			"science": 1,
			"are": 1,
			"fears": 1,
			"word": 1,
			"of": 2,
			"star": 1,
			"wine": 2,
			"after": 1,
			"city": 1,
			"joy": 1,
			"beheld": 1,
			"race": 1,
			"englands": 5,
			"began": 1,
			"twas": 1,
			"by": 1,
			"nations": 2,
			"is": 1,
			"like": 1,
			"people": 1,
			"ever": 1,
			"sister": 1,
			"song": 2,
			"friends": 1,
			"run": 1,
			"my": 1,
			"thy": 1,
			"pray": 1,
			"teach": 1,
			"born": 1,
			"name": 1,
			"shame": 1,
			"did": 1,
			"that": 3,
			"if": 1,
			"jerusalem": 1,
			"had": 1,
			"what": 1,
			"moon": 1,
			"music": 1,
			"or": 2,
			"their": 1,
			"a": 2,
			"given": 1,
			"falls": 1,
			"joys": 2,
			"upon": 1,
			"folly": 1,
			"delight": 1,
			"love": 1,
			"on": 3,
			"filled": 1,
			"but": 1,
			"grass": 1,
			"time": 1,
			"years": 1,
			"when": 1,
			"religious": 1,
			"and": 11,
			"grace": 1,
			"year": 1,
			"i": 2,
			"such": 1,
			"blossom": 1,
			"fields": 1,
			"each": 2,
			"from": 1,
			"took": 1,
			"with": 2,
			"singing": 1,
			"now": 2,
			"foreign": 1,
			"fires": 1,
			"flesh": 1,
			"through": 1,
			"king": 1,
			"begun": 1,
			"day": 1,
			"shall": 1,
			"before": 1,
			"to": 4,
			"springs": 1,
			"flow": 1,
			"ship": 1,
			"we": 1,
			"as": 1,
			"life": 5,
			"me": 1,
			"o": 1,
			"the": 2,
			"world": 2,
			"in": 2
		},
		"nay": {
			"his": 1,
			"women": 1,
			"not": 5,
			"it": 1,
			"they": 1,
			"you": 1,
			"nay": 2,
			"my": 1,
			"hope": 1,
			"god": 1,
			"that": 1,
			"if": 1,
			"let": 1,
			"what": 2,
			"so": 1,
			"never": 1,
			"but": 1,
			"when": 1,
			"t": 1,
			"i": 1,
			"no": 1,
			"sad": 1,
			"then": 1,
			"he": 1,
			"the": 1,
			"in": 1
		},
		"strike": {
			"men": 1,
			"you": 1,
			"strike": 1,
			"just": 1,
			"for": 2,
			"their": 1,
			"a": 3,
			"thee": 2,
			"and": 2,
			"thou": 1,
			"home": 3,
			"one": 1,
			"other": 1,
			"no": 1,
			"now": 1,
			"blest": 1,
			"through": 1,
			"pleasant": 1,
			"our": 1,
			"to": 2,
			"at": 2,
			"the": 9,
			"dead": 1
		},
		"weakness": {
			"which": 1,
			"of": 1,
			"pain": 1,
			"heaven": 1,
			"my": 1,
			"womans": 1,
			"nothing": 1,
			"waiting": 1,
			"have": 1,
			"and": 2,
			"i": 2,
			"how": 1,
			"want": 1,
			"to": 2,
			"we": 2,
			"strength": 1,
			"her": 1,
			"grows": 2
		},
		"afar": {
			"off": 1,
			"among": 1,
			"beyond": 2,
			"not": 1,
			"like": 2,
			"than": 1,
			"for": 2,
			"soul": 1,
			"if": 1,
			"let": 1,
			"or": 1,
			"bright": 1,
			"on": 1,
			"but": 1,
			"when": 1,
			"and": 4,
			"i": 1,
			"from": 3,
			"to": 1,
			"ah": 1,
			"the": 5,
			"in": 8
		},
		"rosy": {
			"light": 3,
			"cheek": 1,
			"steps": 1,
			"star": 1,
			"wine": 1,
			"morning": 1,
			"mouth": 1,
			"hand": 1,
			"darling": 1,
			"band": 1,
			"lips": 3,
			"half": 1,
			"upon": 1,
			"red": 3,
			"bound": 1,
			"may": 1,
			"east": 1
		},
		"heard": {
			"sweet": 1,
			"come": 1,
			"his": 4,
			"him": 3,
			"war": 1,
			"of": 6,
			"this": 1,
			"among": 1,
			"beyond": 1,
			"rose": 1,
			"solemn": 1,
			"not": 3,
			"it": 5,
			"over": 1,
			"by": 3,
			"alone": 1,
			"is": 1,
			"rise": 1,
			"laughing": 1,
			"you": 1,
			"strike": 1,
			"afar": 1,
			"its": 3,
			"where": 1,
			"my": 2,
			"words": 1,
			"again": 3,
			"thy": 3,
			"was": 1,
			"that": 8,
			"if": 1,
			"what": 1,
			"nothing": 1,
			"or": 2,
			"their": 3,
			"a": 3,
			"so": 2,
			"them": 1,
			"on": 1,
			"above": 2,
			"but": 1,
			"ye": 1,
			"and": 8,
			"i": 2,
			"too": 1,
			"one": 1,
			"such": 1,
			"from": 4,
			"across": 1,
			"would": 1,
			"beneath": 1,
			"no": 6,
			"with": 3,
			"then": 1,
			"wake": 1,
			"yet": 1,
			"to": 5,
			"round": 1,
			"little": 1,
			"as": 1,
			"he": 1,
			"me": 1,
			"at": 1,
			"the": 39,
			"though": 1,
			"her": 7,
			"near": 1,
			"in": 7
		},
		"leaves": {
			"us": 3,
			"his": 1,
			"him": 1,
			"hast": 1,
			"purple": 1,
			"seemed": 1,
			"are": 4,
			"fell": 1,
			"of": 12,
			"hung": 1,
			"off": 1,
			"among": 1,
			"it": 1,
			"by": 2,
			"about": 1,
			"new": 1,
			"its": 1,
			"for": 2,
			"were": 1,
			"was": 1,
			"that": 3,
			"fall": 2,
			"hang": 1,
			"gives": 1,
			"nothing": 3,
			"have": 3,
			"their": 3,
			"so": 1,
			"upon": 1,
			"on": 2,
			"memory": 1,
			"but": 1,
			"and": 10,
			"i": 1,
			"down": 2,
			"one": 1,
			"softly": 1,
			"from": 4,
			"no": 1,
			"with": 1,
			"through": 1,
			"well": 1,
			"shall": 1,
			"before": 1,
			"still": 1,
			"yet": 2,
			"to": 3,
			"may": 1,
			"apart": 1,
			"as": 1,
			"the": 13,
			"in": 3
		},
		"without": {
			"sound": 1,
			"more": 1,
			"earth": 1,
			"cloud": 1,
			"his": 3,
			"him": 1,
			"who": 1,
			"which": 1,
			"of": 1,
			"this": 1,
			"fruit": 1,
			"pain": 1,
			"not": 1,
			"it": 5,
			"is": 1,
			"like": 1,
			"form": 1,
			"care": 1,
			"they": 1,
			"you": 2,
			"afar": 1,
			"its": 3,
			"looking": 1,
			"breath": 1,
			"rest": 1,
			"my": 1,
			"whats": 1,
			"words": 3,
			"thy": 8,
			"teach": 1,
			"sadly": 1,
			"hope": 1,
			"sin": 1,
			"indeed": 1,
			"walls": 1,
			"was": 1,
			"another": 1,
			"an": 1,
			"or": 7,
			"hands": 1,
			"pause": 2,
			"their": 1,
			"a": 31,
			"them": 1,
			"leave": 2,
			"love": 1,
			"but": 1,
			"knowledge": 1,
			"thee": 9,
			"be": 1,
			"and": 5,
			"i": 2,
			"thou": 1,
			"woman": 1,
			"one": 1,
			"would": 1,
			"reason": 1,
			"now": 1,
			"all": 3,
			"then": 1,
			"thought": 1,
			"thats": 2,
			"pity": 1,
			"only": 1,
			"still": 1,
			"to": 3,
			"end": 3,
			"me": 1,
			"the": 18,
			"in": 1,
			"thoughts": 1
		},
		"sister": {
			"of": 3,
			"brother": 1,
			"not": 1,
			"proud": 1,
			"afar": 1,
			"for": 1,
			"had": 1,
			"have": 1,
			"so": 1,
			"green": 1,
			"ceased": 1,
			"spirit": 1,
			"but": 1,
			"when": 1,
			"weeping": 1,
			"sorrow": 1,
			"close": 1,
			"and": 1,
			"march": 1,
			"woman": 2,
			"hail": 1,
			"fair": 1,
			"at": 1,
			"the": 1,
			"in": 1
		},
		"robert": {
			"crossed": 1,
			"ii": 2,
			"who": 1,
			"of": 3,
			"grant": 2,
			"burns": 10,
			"peace": 1,
			"hope": 1,
			"times": 1,
			"faith": 1,
			"that": 1,
			"rode": 2,
			"what": 1,
			"tears": 2,
			"never": 1,
			"t": 1,
			"and": 1,
			"quick": 1,
			"henry": 1,
			"from": 2,
			"with": 1,
			"has": 1,
			"nearer": 1,
			"only": 1,
			"your": 1,
			"to": 2,
			"said": 1,
			"at": 1,
			"o": 1,
			"browning": 8,
			"the": 8,
			"in": 1
		},
		"slave": {
			"see": 1,
			"who": 1,
			"of": 4,
			"she": 1,
			"not": 1,
			"they": 1,
			"therefore": 1,
			"along": 1,
			"that": 1,
			"let": 1,
			"an": 1,
			"fill": 1,
			"a": 2,
			"so": 1,
			"but": 1,
			"poor": 1,
			"when": 1,
			"be": 1,
			"say": 1,
			"and": 5,
			"thou": 1,
			"home": 1,
			"whereer": 2,
			"from": 2,
			"while": 1,
			"no": 1,
			"to": 5,
			"may": 1,
			"whose": 1,
			"stood": 1,
			"in": 1
		},
		"earths": {
			"low": 1,
			"summer": 1,
			"space": 1,
			"thing": 1,
			"ones": 1,
			"once": 1,
			"wheel": 1,
			"not": 1,
			"by": 1,
			"wide": 1,
			"rosy": 1,
			"for": 1,
			"base": 1,
			"thy": 1,
			"vain": 1,
			"hopes": 1,
			"rough": 1,
			"face": 1,
			"were": 1,
			"must": 1,
			"a": 1,
			"given": 1,
			"joys": 1,
			"love": 1,
			"but": 1,
			"and": 3,
			"dark": 1,
			"dull": 2,
			"breast": 1,
			"roll": 1,
			"with": 1,
			"grief": 1,
			"then": 1,
			"has": 1,
			"spring": 1,
			"your": 1,
			"to": 2,
			"cities": 1,
			"springs": 1,
			"round": 1,
			"little": 1,
			"mould": 1,
			"powers": 2,
			"at": 1,
			"the": 2,
			"change": 1,
			"first": 1,
			"in": 1
		},
		"ranks": {
			"hell": 1,
			"are": 2,
			"of": 8,
			"they": 1,
			"for": 2,
			"can": 1,
			"were": 1,
			"upon": 1,
			"on": 1,
			"but": 2,
			"and": 5,
			"with": 2,
			"then": 1,
			"shall": 1,
			"your": 1,
			"shade": 1,
			"apart": 1,
			"at": 1,
			"the": 5,
			"stood": 1
		},
		"laid": {
			"come": 1,
			"low": 3,
			"his": 2,
			"him": 3,
			"men": 1,
			"up": 1,
			"nor": 1,
			"it": 3,
			"by": 1,
			"cold": 1,
			"you": 1,
			"its": 1,
			"my": 1,
			"fingers": 1,
			"thy": 1,
			"hushed": 1,
			"them": 6,
			"on": 3,
			"but": 1,
			"when": 1,
			"out": 1,
			"and": 2,
			"i": 1,
			"thou": 2,
			"down": 1,
			"each": 1,
			"with": 3,
			"around": 2,
			"some": 1,
			"aside": 2,
			"open": 1,
			"before": 2,
			"apart": 1,
			"o": 1,
			"the": 5,
			"waste": 2,
			"her": 3,
			"in": 4
		},
		"its": {
			"sweet": 1,
			"flower": 1,
			"low": 1,
			"jean": 1,
			"floor": 1,
			"more": 1,
			"ain": 5,
			"won": 1,
			"unseen": 1,
			"dust": 1,
			"gates": 1,
			"worn": 1,
			"light": 6,
			"earth": 1,
			"space": 1,
			"forehead": 1,
			"leap": 1,
			"play": 1,
			"breathing": 1,
			"white": 3,
			"woe": 1,
			"silver": 1,
			"are": 2,
			"saints": 1,
			"story": 1,
			"fears": 1,
			"right": 1,
			"very": 3,
			"next": 1,
			"hollow": 2,
			"sweetest": 2,
			"men": 1,
			"which": 1,
			"court": 1,
			"beam": 1,
			"worth": 3,
			"call": 1,
			"body": 1,
			"sounds": 1,
			"of": 19,
			"this": 1,
			"blind": 1,
			"star": 2,
			"high": 1,
			"fame": 1,
			"amid": 1,
			"souls": 1,
			"hills": 1,
			"once": 1,
			"feels": 2,
			"up": 1,
			"food": 1,
			"she": 1,
			"silence": 1,
			"nor": 1,
			"sons": 1,
			"sacred": 1,
			"blossoms": 1,
			"gold": 1,
			"heavy": 2,
			"roar": 1,
			"flood": 3,
			"whatever": 1,
			"grown": 2,
			"joy": 1,
			"forth": 1,
			"fruit": 2,
			"dreadful": 1,
			"dear": 1,
			"pain": 1,
			"mouth": 1,
			"place": 7,
			"pass": 1,
			"sands": 2,
			"not": 3,
			"crimson": 2,
			"depart": 1,
			"every": 2,
			"praise": 1,
			"it": 2,
			"flight": 3,
			"eager": 1,
			"far": 1,
			"child": 1,
			"load": 1,
			"by": 2,
			"woods": 1,
			"long": 1,
			"sorrows": 1,
			"bring": 1,
			"mute": 1,
			"trace": 1,
			"pride": 1,
			"is": 5,
			"vision": 1,
			"joyous": 1,
			"rise": 1,
			"author": 5,
			"like": 3,
			"return": 1,
			"fairest": 1,
			"hard": 2,
			"form": 1,
			"sway": 1,
			"forms": 1,
			"people": 1,
			"immortality": 1,
			"good": 1,
			"force": 2,
			"ever": 2,
			"abroad": 1,
			"path": 1,
			"wide": 1,
			"you": 1,
			"moves": 1,
			"nature": 2,
			"glowing": 1,
			"thus": 2,
			"weakness": 2,
			"rosy": 1,
			"leaves": 2,
			"its": 4,
			"slow": 1,
			"beams": 1,
			"sea": 1,
			"friends": 1,
			"gentle": 3,
			"looking": 1,
			"despair": 1,
			"holy": 2,
			"blast": 2,
			"gray": 2,
			"just": 1,
			"welcome": 1,
			"for": 3,
			"hand": 2,
			"bosom": 1,
			"cry": 2,
			"base": 1,
			"theres": 1,
			"autumn": 1,
			"rest": 1,
			"my": 1,
			"hour": 2,
			"twilight": 1,
			"great": 1,
			"tender": 2,
			"sighing": 1,
			"beauty": 2,
			"short": 1,
			"touch": 2,
			"wall": 1,
			"vain": 1,
			"tone": 3,
			"moan": 1,
			"peace": 1,
			"majesty": 1,
			"blows": 1,
			"hopes": 2,
			"birth": 2,
			"ray": 1,
			"shore": 1,
			"dearest": 1,
			"soul": 2,
			"various": 1,
			"cheer": 1,
			"rough": 1,
			"most": 3,
			"torn": 1,
			"yellow": 1,
			"reach": 1,
			"bells": 1,
			"streets": 1,
			"name": 2,
			"glow": 1,
			"face": 1,
			"sin": 1,
			"trembling": 1,
			"god": 2,
			"shame": 1,
			"power": 3,
			"stroke": 2,
			"were": 3,
			"bud": 1,
			"oer": 2,
			"shell": 1,
			"cause": 1,
			"walls": 3,
			"that": 3,
			"lips": 1,
			"fall": 2,
			"seed": 1,
			"perfume": 1,
			"had": 1,
			"must": 1,
			"general": 1,
			"pure": 2,
			"what": 1,
			"an": 1,
			"hold": 1,
			"music": 2,
			"pleasures": 1,
			"even": 1,
			"charms": 1,
			"eye": 2,
			"have": 1,
			"study": 2,
			"tree": 1,
			"blush": 1,
			"fill": 1,
			"bitter": 3,
			"their": 1,
			"a": 7,
			"so": 2,
			"joys": 1,
			"upon": 2,
			"folly": 1,
			"many": 1,
			"spirit": 1,
			"love": 3,
			"tomb": 1,
			"on": 2,
			"wing": 1,
			"own": 26,
			"red": 1,
			"shroud": 2,
			"chains": 1,
			"memory": 1,
			"old": 2,
			"filled": 1,
			"naked": 1,
			"but": 2,
			"iron": 1,
			"grass": 1,
			"death": 1,
			"foes": 1,
			"perhaps": 1,
			"banners": 1,
			"years": 1,
			"when": 1,
			"waters": 4,
			"task": 1,
			"bed": 1,
			"roses": 1,
			"wings": 2,
			"glory": 4,
			"having": 1,
			"highest": 2,
			"line": 1,
			"kind": 1,
			"awful": 2,
			"earthly": 2,
			"rhyme": 1,
			"rage": 1,
			"heart": 4,
			"sorrow": 2,
			"head": 6,
			"close": 2,
			"nobler": 1,
			"and": 35,
			"mothers": 2,
			"truth": 1,
			"bloom": 1,
			"doom": 1,
			"last": 6,
			"lone": 1,
			"rays": 3,
			"black": 1,
			"blaze": 1,
			"grave": 5,
			"i": 3,
			"knew": 1,
			"depths": 2,
			"tale": 2,
			"home": 2,
			"swell": 1,
			"dull": 1,
			"one": 4,
			"hate": 1,
			"state": 1,
			"blossom": 1,
			"brow": 2,
			"how": 1,
			"higher": 1,
			"from": 2,
			"sleeping": 1,
			"gifts": 1,
			"marble": 1,
			"living": 2,
			"mind": 2,
			"sublime": 1,
			"blade": 2,
			"beneath": 1,
			"ancient": 1,
			"hidden": 2,
			"breast": 4,
			"present": 1,
			"no": 1,
			"mystic": 1,
			"early": 1,
			"calm": 1,
			"solitude": 2,
			"goodly": 2,
			"guilty": 1,
			"with": 1,
			"around": 2,
			"sad": 3,
			"sweetness": 1,
			"soft": 1,
			"wave": 3,
			"now": 3,
			"till": 1,
			"will": 2,
			"twenty": 1,
			"all": 1,
			"gay": 1,
			"wild": 1,
			"familiar": 1,
			"fires": 1,
			"then": 1,
			"room": 1,
			"slain": 1,
			"blest": 1,
			"thought": 1,
			"has": 2,
			"songs": 1,
			"thread": 1,
			"clear": 1,
			"shine": 1,
			"lake": 2,
			"ways": 1,
			"peaceful": 2,
			"fiery": 1,
			"wealth": 1,
			"our": 1,
			"sense": 1,
			"frame": 2,
			"shall": 3,
			"before": 1,
			"echo": 1,
			"golden": 1,
			"still": 1,
			"your": 1,
			"shade": 3,
			"natures": 1,
			"best": 4,
			"way": 9,
			"course": 2,
			"to": 13,
			"poets": 1,
			"speed": 1,
			"springs": 1,
			"round": 3,
			"lie": 1,
			"little": 3,
			"heavenly": 2,
			"turning": 1,
			"know": 1,
			"art": 1,
			"flow": 2,
			"vast": 3,
			"strife": 1,
			"gloom": 2,
			"loss": 1,
			"store": 3,
			"as": 4,
			"fair": 2,
			"life": 4,
			"end": 3,
			"he": 2,
			"arms": 1,
			"strength": 2,
			"gleam": 1,
			"at": 2,
			"point": 1,
			"o": 1,
			"coming": 2,
			"chain": 1,
			"grow": 1,
			"weight": 3,
			"blessed": 1,
			"common": 2,
			"the": 23,
			"tis": 2,
			"though": 1,
			"treasure": 1,
			"bent": 1,
			"her": 1,
			"safe": 1,
			"dead": 2,
			"fire": 1,
			"first": 3,
			"there": 2,
			"in": 6,
			"flowers": 2,
			"dim": 1,
			"air": 3
		},
		"than": {
			"itself": 3,
			"thine": 2,
			"ours": 2,
			"river": 1,
			"fierce": 1,
			"light": 1,
			"earth": 1,
			"doubt": 2,
			"his": 6,
			"happiness": 1,
			"hell": 1,
			"him": 1,
			"blood": 1,
			"lady": 1,
			"horn": 1,
			"ages": 1,
			"are": 2,
			"made": 1,
			"under": 1,
			"who": 1,
			"men": 1,
			"of": 11,
			"this": 8,
			"star": 1,
			"fame": 1,
			"souls": 1,
			"wine": 1,
			"after": 1,
			"up": 1,
			"food": 1,
			"she": 2,
			"silence": 1,
			"sons": 1,
			"gold": 3,
			"thyself": 2,
			"foam": 1,
			"rose": 1,
			"mine": 5,
			"not": 2,
			"divine": 1,
			"serve": 1,
			"today": 1,
			"proud": 1,
			"praise": 1,
			"it": 3,
			"weep": 1,
			"load": 1,
			"by": 3,
			"wars": 1,
			"is": 1,
			"like": 1,
			"found": 1,
			"forever": 1,
			"force": 1,
			"ever": 5,
			"either": 1,
			"they": 7,
			"speech": 1,
			"grain": 1,
			"you": 2,
			"nature": 1,
			"new": 1,
			"leaves": 2,
			"its": 1,
			"those": 6,
			"where": 1,
			"others": 1,
			"despair": 1,
			"just": 1,
			"for": 3,
			"burns": 1,
			"heaven": 1,
			"should": 1,
			"breath": 1,
			"spite": 1,
			"boys": 1,
			"my": 7,
			"words": 4,
			"great": 1,
			"enough": 1,
			"thy": 4,
			"sing": 1,
			"better": 1,
			"any": 3,
			"town": 1,
			"can": 1,
			"shame": 1,
			"did": 1,
			"was": 1,
			"that": 13,
			"if": 1,
			"daily": 1,
			"half": 2,
			"perfume": 1,
			"had": 1,
			"repose": 1,
			"music": 1,
			"or": 3,
			"have": 1,
			"a": 15,
			"so": 3,
			"them": 3,
			"true": 1,
			"upon": 1,
			"love": 2,
			"on": 3,
			"brain": 1,
			"chains": 1,
			"but": 2,
			"death": 2,
			"ye": 1,
			"when": 9,
			"mans": 1,
			"sigh": 1,
			"be": 4,
			"feet": 1,
			"t": 1,
			"earthly": 1,
			"and": 4,
			"eer": 1,
			"grace": 1,
			"truth": 1,
			"do": 2,
			"fate": 2,
			"fly": 1,
			"i": 8,
			"snow": 1,
			"thou": 11,
			"less": 1,
			"steel": 1,
			"mortal": 1,
			"one": 4,
			"might": 1,
			"secret": 1,
			"looks": 1,
			"how": 1,
			"from": 3,
			"these": 6,
			"while": 1,
			"honor": 1,
			"voice": 1,
			"alfred": 1,
			"with": 1,
			"now": 1,
			"will": 1,
			"himself": 1,
			"prayers": 1,
			"lying": 1,
			"all": 23,
			"grief": 1,
			"then": 1,
			"lose": 1,
			"flesh": 1,
			"through": 1,
			"well": 1,
			"much": 1,
			"minds": 1,
			"our": 4,
			"day": 1,
			"fear": 2,
			"before": 2,
			"still": 1,
			"your": 6,
			"natures": 1,
			"yet": 1,
			"to": 16,
			"hill": 1,
			"lie": 1,
			"use": 1,
			"harp": 1,
			"we": 4,
			"falling": 1,
			"happy": 1,
			"done": 1,
			"life": 4,
			"he": 5,
			"strength": 1,
			"at": 1,
			"common": 1,
			"the": 62,
			"her": 1,
			"fire": 2,
			"first": 1,
			"seas": 1,
			"in": 7
		},
		"smile": {
			"more": 1,
			"parting": 1,
			"his": 3,
			"which": 2,
			"of": 14,
			"she": 1,
			"not": 1,
			"by": 1,
			"away": 1,
			"why": 1,
			"press": 1,
			"for": 2,
			"theres": 1,
			"came": 1,
			"thy": 1,
			"smiles": 1,
			"tonight": 1,
			"therefore": 1,
			"hope": 1,
			"along": 1,
			"can": 1,
			"immortal": 1,
			"was": 4,
			"that": 3,
			"if": 2,
			"or": 2,
			"their": 1,
			"a": 1,
			"upon": 5,
			"on": 8,
			"but": 2,
			"when": 3,
			"and": 19,
			"i": 1,
			"each": 1,
			"from": 1,
			"lilies": 1,
			"no": 2,
			"give": 1,
			"well": 1,
			"shall": 1,
			"to": 3,
			"we": 1,
			"spread": 1,
			"as": 4,
			"me": 1,
			"at": 9,
			"o": 1,
			"the": 10,
			"though": 1,
			"fight": 1,
			"her": 1,
			"in": 2
		},
		"slow": {
			"look": 1,
			"murmur": 2,
			"his": 2,
			"stream": 1,
			"under": 1,
			"which": 1,
			"worth": 1,
			"steps": 1,
			"of": 3,
			"this": 1,
			"sight": 1,
			"not": 1,
			"hours": 1,
			"by": 2,
			"they": 1,
			"for": 1,
			"my": 1,
			"rising": 1,
			"oer": 2,
			"moon": 1,
			"or": 1,
			"their": 1,
			"a": 2,
			"but": 2,
			"ye": 1,
			"years": 1,
			"when": 1,
			"length": 1,
			"and": 8,
			"dark": 1,
			"here": 1,
			"how": 1,
			"sought": 1,
			"decay": 2,
			"with": 1,
			"through": 2,
			"notes": 1,
			"our": 2,
			"to": 2,
			"falling": 1,
			"as": 1,
			"he": 1,
			"at": 1,
			"o": 1,
			"the": 10,
			"tread": 2,
			"in": 2
		},
		"swift": {
			"low": 1,
			"his": 1,
			"of": 2,
			"cling": 1,
			"wheel": 1,
			"rivers": 1,
			"sword": 1,
			"is": 1,
			"glass": 1,
			"my": 1,
			"what": 2,
			"their": 1,
			"on": 1,
			"and": 5,
			"fly": 1,
			"south": 1,
			"from": 1,
			"would": 1,
			"with": 2,
			"passing": 1,
			"equal": 1,
			"before": 1,
			"to": 5,
			"cut": 1,
			"round": 1,
			"little": 1,
			"as": 3,
			"the": 5
		},
		"sc": {
			"sound": 1,
			"cast": 1,
			"once": 1,
			"where": 1,
			"for": 1,
			"my": 1,
			"blow": 1,
			"sleep": 1,
			"womans": 1,
			"but": 1,
			"when": 1,
			"t": 1,
			"i": 7,
			"fear": 1,
			"hence": 1,
			"the": 3,
			"in": 1
		},
		"kindly": {
			"come": 1,
			"look": 1,
			"us": 1,
			"light": 2,
			"earth": 1,
			"law": 1,
			"voices": 1,
			"word": 1,
			"of": 2,
			"she": 1,
			"smooth": 1,
			"without": 1,
			"welcome": 1,
			"glow": 1,
			"face": 1,
			"that": 1,
			"go": 1,
			"brothers": 2,
			"had": 1,
			"gave": 1,
			"but": 1,
			"deed": 1,
			"heart": 1,
			"and": 2,
			"last": 1,
			"early": 1,
			"voice": 1,
			"with": 1,
			"much": 1,
			"to": 1,
			"may": 1,
			"the": 2
		},
		"lightly": {
			"talk": 1,
			"by": 1,
			"like": 1,
			"they": 1,
			"run": 1,
			"winds": 1,
			"rain": 1,
			"fall": 1,
			"ran": 1,
			"love": 1,
			"on": 1,
			"turns": 1,
			"and": 3,
			"thou": 2,
			"from": 2,
			"now": 1,
			"follow": 1,
			"to": 2,
			"turn": 1,
			"as": 2,
			"the": 1,
			"in": 2
		},
		"pleasure": {
			"fond": 1,
			"of": 3,
			"up": 1,
			"behold": 1,
			"praise": 1,
			"bring": 1,
			"is": 3,
			"soon": 1,
			"why": 1,
			"heaven": 1,
			"rest": 1,
			"thy": 1,
			"vain": 1,
			"seek": 1,
			"if": 1,
			"let": 1,
			"womans": 1,
			"must": 1,
			"pleasures": 1,
			"or": 3,
			"a": 1,
			"on": 1,
			"own": 1,
			"when": 1,
			"felt": 1,
			"and": 8,
			"thou": 1,
			"pay": 1,
			"each": 1,
			"endless": 1,
			"with": 1,
			"meet": 1,
			"all": 2,
			"your": 1,
			"to": 3,
			"flow": 1,
			"strife": 1,
			"at": 1,
			"o": 1,
			"the": 3,
			"world": 1,
			"her": 1,
			"in": 7
		},
		"beams": {
			"are": 1,
			"of": 5,
			"this": 1,
			"alone": 1,
			"without": 1,
			"its": 1,
			"were": 1,
			"that": 1,
			"pure": 1,
			"on": 3,
			"above": 1,
			"but": 1,
			"when": 1,
			"lifes": 1,
			"and": 3,
			"i": 1,
			"through": 1,
			"our": 1,
			"the": 2,
			"though": 1,
			"in": 1
		},
		"stir": {
			"of": 5,
			"up": 1,
			"abroad": 1,
			"my": 1,
			"god": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"and": 4,
			"i": 1,
			"our": 1,
			"as": 1,
			"the": 4
		},
		"een": {
			"wi": 2,
			"this": 2,
			"she": 1,
			"image": 1,
			"like": 1,
			"why": 1,
			"believe": 1,
			"thy": 1,
			"that": 1,
			"let": 1,
			"an": 2,
			"or": 2,
			"so": 4,
			"on": 1,
			"and": 1,
			"do": 1,
			"thou": 1,
			"such": 4,
			"from": 1,
			"now": 3,
			"before": 1,
			"natures": 1,
			"may": 1,
			"as": 4,
			"the": 5,
			"there": 1,
			"in": 1
		},
		"poet": {
			"loves": 1,
			"his": 2,
			"news": 1,
			"sings": 3,
			"is": 1,
			"for": 1,
			"cannot": 1,
			"that": 1,
			"must": 1,
			"or": 1,
			"so": 1,
			"them": 1,
			"be": 1,
			"and": 1,
			"here": 1,
			"from": 1,
			"took": 1,
			"singing": 1,
			"has": 1,
			"still": 1,
			"the": 1,
			"stood": 1,
			"near": 1,
			"in": 1
		},
		"song": {
			"blessd": 1,
			"died": 1,
			"save": 1,
			"endure": 1,
			"see": 1,
			"lady": 1,
			"made": 1,
			"which": 2,
			"of": 40,
			"this": 1,
			"calls": 1,
			"divine": 1,
			"sword": 1,
			"it": 1,
			"over": 1,
			"send": 1,
			"is": 3,
			"soon": 1,
			"they": 2,
			"than": 1,
			"song": 1,
			"where": 2,
			"for": 8,
			"should": 2,
			"my": 2,
			"deaths": 1,
			"thy": 1,
			"sing": 1,
			"most": 1,
			"god": 1,
			"was": 2,
			"that": 6,
			"if": 1,
			"let": 1,
			"oh": 1,
			"charms": 1,
			"awake": 1,
			"a": 4,
			"so": 1,
			"on": 1,
			"maryland": 1,
			"but": 1,
			"thee": 1,
			"ye": 2,
			"and": 24,
			"i": 2,
			"thou": 1,
			"here": 1,
			"how": 1,
			"from": 4,
			"would": 1,
			"with": 4,
			"around": 1,
			"singing": 1,
			"all": 1,
			"then": 1,
			"could": 1,
			"through": 1,
			"has": 2,
			"songs": 1,
			"our": 2,
			"shall": 5,
			"yet": 1,
			"to": 5,
			"loud": 2,
			"whose": 1,
			"as": 5,
			"he": 1,
			"o": 2,
			"the": 9,
			"though": 1,
			"first": 1,
			"oft": 1,
			"there": 1,
			"in": 10
		},
		"those": {
			"sweet": 4,
			"come": 1,
			"since": 1,
			"blessd": 1,
			"within": 1,
			"birds": 1,
			"thousand": 1,
			"passions": 1,
			"tell": 1,
			"are": 2,
			"ive": 1,
			"who": 43,
			"which": 8,
			"ones": 1,
			"call": 1,
			"toward": 1,
			"of": 24,
			"souls": 1,
			"hills": 3,
			"angel": 1,
			"she": 1,
			"among": 1,
			"sons": 1,
			"three": 1,
			"dreadful": 1,
			"dear": 3,
			"two": 2,
			"fresh": 1,
			"hours": 2,
			"starry": 1,
			"proud": 1,
			"it": 1,
			"far": 1,
			"spirits": 1,
			"lights": 2,
			"by": 2,
			"eyes": 4,
			"alone": 1,
			"quiet": 1,
			"glittering": 1,
			"hoary": 1,
			"children": 1,
			"about": 1,
			"they": 1,
			"faint": 1,
			"rosy": 1,
			"earths": 1,
			"than": 1,
			"swift": 2,
			"those": 3,
			"gentle": 1,
			"lovers": 1,
			"holy": 1,
			"just": 1,
			"for": 2,
			"stones": 1,
			"suns": 1,
			"fingers": 1,
			"words": 2,
			"heroes": 1,
			"great": 3,
			"tender": 1,
			"whom": 6,
			"times": 1,
			"bells": 1,
			"can": 1,
			"power": 1,
			"were": 1,
			"immortal": 1,
			"walls": 1,
			"that": 29,
			"if": 1,
			"lips": 3,
			"poems": 1,
			"pure": 3,
			"stars": 2,
			"charms": 1,
			"hands": 2,
			"bright": 3,
			"tears": 2,
			"their": 1,
			"things": 1,
			"cruel": 1,
			"on": 1,
			"evermore": 1,
			"above": 1,
			"chains": 1,
			"deep": 1,
			"old": 2,
			"poor": 2,
			"ye": 2,
			"years": 1,
			"feet": 2,
			"and": 4,
			"do": 2,
			"rays": 1,
			"move": 1,
			"black": 1,
			"days": 1,
			"hid": 1,
			"i": 3,
			"thou": 1,
			"guns": 1,
			"arts": 2,
			"hearts": 1,
			"other": 1,
			"from": 1,
			"ancient": 1,
			"no": 2,
			"dread": 1,
			"with": 1,
			"everlasting": 1,
			"wave": 1,
			"will": 1,
			"locks": 2,
			"prayers": 1,
			"all": 1,
			"gods": 1,
			"wild": 1,
			"blest": 1,
			"songs": 1,
			"clear": 1,
			"ways": 1,
			"fiery": 1,
			"passing": 2,
			"shall": 1,
			"only": 1,
			"to": 3,
			"poets": 1,
			"cities": 1,
			"heavenly": 2,
			"glorious": 4,
			"vows": 1,
			"bold": 1,
			"may": 1,
			"skies": 1,
			"powers": 1,
			"we": 5,
			"whose": 7,
			"as": 1,
			"fair": 3,
			"he": 5,
			"below": 1,
			"left": 2,
			"the": 5,
			"grand": 1,
			"first": 1,
			"in": 2,
			"flowers": 1,
			"thoughts": 2
		},
		"sea": {
			"come": 1,
			"within": 1,
			"earth": 1,
			"his": 3,
			"save": 1,
			"wi": 1,
			"are": 1,
			"under": 1,
			"who": 1,
			"which": 2,
			"of": 10,
			"this": 1,
			"pour": 1,
			"up": 1,
			"breathe": 1,
			"nor": 3,
			"fruit": 1,
			"brother": 1,
			"two": 1,
			"not": 1,
			"it": 1,
			"army": 1,
			"hangs": 1,
			"by": 1,
			"breaks": 1,
			"ocean": 1,
			"they": 2,
			"believe": 1,
			"robert": 1,
			"where": 1,
			"richard": 1,
			"just": 1,
			"for": 3,
			"theres": 1,
			"came": 2,
			"sir": 1,
			"queen": 1,
			"can": 2,
			"oer": 1,
			"was": 1,
			"that": 5,
			"both": 1,
			"what": 1,
			"oh": 1,
			"even": 1,
			"or": 3,
			"making": 1,
			"a": 2,
			"so": 1,
			"them": 1,
			"many": 1,
			"deep": 1,
			"but": 6,
			"when": 4,
			"be": 2,
			"t": 1,
			"rhyme": 1,
			"and": 31,
			"i": 3,
			"one": 1,
			"against": 1,
			"looks": 1,
			"fields": 1,
			"no": 3,
			"with": 3,
			"wave": 1,
			"give": 1,
			"till": 2,
			"will": 1,
			"all": 1,
			"then": 2,
			"foe": 1,
			"master": 1,
			"nearer": 1,
			"our": 2,
			"shall": 1,
			"still": 1,
			"yet": 2,
			"to": 4,
			"into": 1,
			"mid": 1,
			"ah": 1,
			"skies": 1,
			"we": 2,
			"whose": 1,
			"as": 2,
			"he": 2,
			"at": 2,
			"below": 1,
			"o": 4,
			"the": 12,
			"her": 2,
			"dead": 1,
			"there": 3,
			"in": 6,
			"grows": 1
		},
		"crown": {
			"within": 1,
			"loves": 1,
			"his": 5,
			"woe": 1,
			"six": 1,
			"of": 12,
			"nor": 1,
			"mine": 1,
			"it": 1,
			"is": 3,
			"they": 1,
			"kindly": 1,
			"my": 2,
			"makes": 1,
			"daily": 1,
			"must": 1,
			"a": 1,
			"upon": 1,
			"on": 2,
			"but": 1,
			"thee": 1,
			"and": 6,
			"against": 1,
			"hate": 1,
			"with": 3,
			"now": 1,
			"shall": 1,
			"to": 2,
			"fair": 1,
			"he": 3,
			"at": 1,
			"o": 1,
			"the": 6,
			"there": 1,
			"in": 2
		},
		"friends": {
			"come": 1,
			"low": 1,
			"more": 1,
			"faithful": 1,
			"voices": 1,
			"are": 6,
			"who": 2,
			"of": 3,
			"once": 1,
			"up": 1,
			"it": 1,
			"long": 1,
			"like": 1,
			"about": 1,
			"they": 2,
			"you": 1,
			"thy": 1,
			"peace": 1,
			"were": 1,
			"that": 3,
			"go": 1,
			"what": 1,
			"or": 3,
			"bright": 1,
			"them": 1,
			"flies": 1,
			"sees": 1,
			"but": 2,
			"be": 2,
			"out": 2,
			"and": 10,
			"i": 6,
			"thou": 1,
			"rather": 1,
			"would": 2,
			"while": 1,
			"with": 2,
			"till": 1,
			"will": 2,
			"all": 1,
			"our": 1,
			"shall": 1,
			"only": 1,
			"yet": 1,
			"to": 2,
			"as": 1,
			"the": 2,
			"though": 1,
			"there": 1,
			"in": 2
		},
		"where": {
			"sweet": 1,
			"sound": 1,
			"look": 1,
			"summer": 1,
			"since": 1,
			"justice": 1,
			"loves": 1,
			"christ": 1,
			"free": 1,
			"light": 1,
			"earth": 1,
			"doubt": 1,
			"die": 1,
			"his": 10,
			"charity": 2,
			"wi": 1,
			"white": 1,
			"none": 2,
			"hast": 3,
			"weary": 3,
			"are": 15,
			"saints": 1,
			"humble": 1,
			"fell": 2,
			"under": 1,
			"men": 6,
			"tired": 2,
			"of": 3,
			"this": 1,
			"souls": 2,
			"learning": 1,
			"hills": 1,
			"once": 5,
			"tide": 1,
			"breathe": 1,
			"she": 12,
			"nor": 1,
			"hymn": 1,
			"grew": 3,
			"joy": 1,
			"foam": 1,
			"scorn": 1,
			"two": 2,
			"fresh": 1,
			"thick": 3,
			"rose": 2,
			"slaves": 2,
			"not": 2,
			"hours": 1,
			"today": 1,
			"proud": 1,
			"hes": 1,
			"every": 7,
			"it": 11,
			"neither": 1,
			"spirits": 1,
			"lights": 1,
			"weep": 1,
			"water": 1,
			"by": 2,
			"jim": 1,
			"fathers": 1,
			"alone": 1,
			"cold": 1,
			"pride": 1,
			"wars": 1,
			"wise": 1,
			"is": 30,
			"rise": 1,
			"like": 2,
			"lo": 1,
			"away": 1,
			"please": 1,
			"forever": 1,
			"good": 1,
			"they": 22,
			"laughing": 1,
			"wide": 1,
			"you": 5,
			"nature": 2,
			"its": 1,
			"than": 1,
			"where": 1,
			"others": 1,
			"lovers": 1,
			"holy": 1,
			"just": 1,
			"for": 2,
			"heaven": 1,
			"suns": 1,
			"sang": 1,
			"breath": 1,
			"rest": 1,
			"my": 12,
			"heroes": 3,
			"winds": 1,
			"beauty": 4,
			"earl": 1,
			"burning": 1,
			"freedom": 1,
			"thy": 5,
			"sleep": 2,
			"peace": 2,
			"shadow": 1,
			"mary": 1,
			"hope": 2,
			"makes": 2,
			"any": 1,
			"most": 1,
			"friend": 1,
			"bells": 1,
			"sits": 1,
			"sin": 2,
			"faith": 2,
			"god": 2,
			"can": 2,
			"power": 1,
			"were": 2,
			"comfort": 1,
			"oer": 2,
			"was": 2,
			"that": 1,
			"if": 1,
			"show": 1,
			"man": 6,
			"crowd": 1,
			"perfume": 1,
			"had": 1,
			"an": 1,
			"nothing": 2,
			"music": 2,
			"or": 1,
			"bright": 1,
			"have": 2,
			"late": 1,
			"am": 1,
			"tears": 1,
			"gave": 1,
			"soldiers": 2,
			"their": 1,
			"a": 8,
			"so": 1,
			"green": 1,
			"lay": 1,
			"never": 5,
			"many": 2,
			"love": 7,
			"tomb": 1,
			"bend": 1,
			"red": 1,
			"above": 1,
			"naked": 1,
			"but": 2,
			"grass": 1,
			"death": 7,
			"ye": 1,
			"waters": 2,
			"dreams": 1,
			"be": 1,
			"roses": 2,
			"feet": 1,
			"glory": 1,
			"having": 1,
			"tried": 1,
			"sorrow": 4,
			"head": 1,
			"and": 12,
			"order": 1,
			"truth": 3,
			"do": 1,
			"cries": 1,
			"fate": 1,
			"blaze": 1,
			"grave": 1,
			"i": 26,
			"thou": 17,
			"woman": 1,
			"wretched": 1,
			"one": 1,
			"might": 1,
			"storm": 1,
			"breathes": 1,
			"stands": 1,
			"each": 1,
			"hearts": 9,
			"other": 1,
			"from": 2,
			"stranger": 1,
			"lilies": 1,
			"feeling": 1,
			"want": 1,
			"reason": 1,
			"no": 9,
			"with": 8,
			"sweetness": 1,
			"virtue": 1,
			"soft": 1,
			"now": 2,
			"some": 1,
			"meet": 1,
			"will": 1,
			"all": 13,
			"grief": 4,
			"gay": 1,
			"wild": 1,
			"then": 1,
			"could": 1,
			"through": 2,
			"foe": 1,
			"angels": 4,
			"clear": 1,
			"king": 1,
			"dost": 1,
			"spring": 1,
			"our": 9,
			"sleeps": 1,
			"fortune": 1,
			"neer": 1,
			"future": 1,
			"ends": 1,
			"fallen": 1,
			"shall": 6,
			"still": 1,
			"chance": 1,
			"your": 4,
			"natures": 2,
			"mingled": 1,
			"yet": 1,
			"to": 9,
			"youth": 1,
			"human": 3,
			"round": 1,
			"mid": 3,
			"slowly": 1,
			"lie": 2,
			"rich": 1,
			"art": 1,
			"may": 3,
			"th": 1,
			"sweep": 1,
			"yon": 1,
			"we": 21,
			"english": 2,
			"he": 24,
			"lies": 7,
			"led": 1,
			"rings": 1,
			"streams": 2,
			"the": 193,
			"tis": 1,
			"though": 1,
			"stood": 2,
			"her": 2,
			"dead": 1,
			"fire": 1,
			"first": 4,
			"jesus": 2,
			"there": 1,
			"in": 9
		},
		"yea": {
			"it": 2,
			"by": 1,
			"unto": 1,
			"for": 3,
			"better": 1,
			"hope": 1,
			"if": 1,
			"a": 1,
			"so": 1,
			"love": 1,
			"death": 1,
			"say": 1,
			"sun": 1,
			"truth": 1,
			"i": 1,
			"from": 1,
			"with": 1,
			"the": 1,
			"though": 2,
			"in": 1
		},
		"gentle": {
			"sound": 1,
			"murmur": 1,
			"light": 1,
			"kiss": 1,
			"voices": 1,
			"thing": 1,
			"rule": 1,
			"humble": 1,
			"alas": 1,
			"word": 2,
			"men": 1,
			"deeds": 1,
			"of": 2,
			"angel": 1,
			"pass": 1,
			"side": 1,
			"it": 1,
			"lights": 1,
			"by": 1,
			"is": 1,
			"soon": 1,
			"boy": 1,
			"sway": 1,
			"you": 1,
			"mother": 1,
			"hand": 3,
			"bosom": 2,
			"bride": 1,
			"winds": 1,
			"great": 1,
			"touch": 2,
			"sing": 1,
			"tone": 1,
			"peace": 2,
			"ray": 1,
			"senses": 1,
			"rain": 1,
			"oer": 1,
			"let": 1,
			"eye": 1,
			"tears": 1,
			"never": 1,
			"dawn": 1,
			"death": 2,
			"dumb": 1,
			"naught": 1,
			"and": 7,
			"presence": 1,
			"softly": 1,
			"looks": 1,
			"hearts": 1,
			"from": 2,
			"breast": 2,
			"voice": 1,
			"with": 2,
			"will": 1,
			"all": 1,
			"gale": 2,
			"through": 1,
			"spring": 1,
			"our": 1,
			"day": 1,
			"shall": 1,
			"way": 1,
			"hill": 1,
			"youth": 1,
			"as": 3,
			"heavens": 1,
			"he": 1,
			"son": 1,
			"the": 1,
			"ghost": 1,
			"though": 1,
			"tread": 1,
			"in": 2,
			"air": 1
		},
		"others": {
			"books": 1,
			"woe": 1,
			"are": 1,
			"who": 1,
			"which": 1,
			"sake": 1,
			"sight": 1,
			"pain": 3,
			"it": 1,
			"by": 1,
			"eyes": 1,
			"like": 1,
			"why": 1,
			"good": 2,
			"than": 1,
			"for": 1,
			"bowed": 1,
			"breath": 1,
			"touch": 1,
			"pray": 1,
			"can": 1,
			"did": 1,
			"that": 1,
			"show": 3,
			"what": 1,
			"an": 1,
			"their": 2,
			"so": 1,
			"never": 2,
			"love": 1,
			"on": 1,
			"deep": 1,
			"thee": 1,
			"i": 1,
			"might": 1,
			"drink": 1,
			"prayers": 1,
			"all": 1,
			"grief": 1,
			"well": 1,
			"wealth": 1,
			"only": 1,
			"still": 1,
			"to": 1,
			"use": 1,
			"apart": 1,
			"as": 2,
			"stand": 1,
			"he": 1,
			"arms": 1,
			"blessed": 1,
			"the": 2,
			"in": 3
		},
		"looking": {
			"back": 1,
			"toward": 1,
			"up": 2,
			"afar": 1,
			"so": 1,
			"upon": 1,
			"on": 5,
			"down": 4,
			"from": 2,
			"ancient": 1,
			"with": 1,
			"well": 1,
			"before": 1
		},
		"used": {
			"of": 1,
			"by": 1,
			"to": 25,
			"my": 1
		},
		"brief": {
			"parting": 1,
			"appear": 1,
			"right": 1,
			"up": 1,
			"command": 1,
			"today": 1,
			"by": 1,
			"is": 1,
			"unto": 1,
			"my": 1,
			"most": 1,
			"sir": 1,
			"that": 1,
			"poems": 1,
			"what": 1,
			"repose": 1,
			"even": 1,
			"glance": 1,
			"years": 1,
			"and": 1,
			"days": 1,
			"no": 1,
			"then": 1,
			"day": 1,
			"yet": 1,
			"to": 1,
			"as": 1,
			"life": 1,
			"the": 3
		},
		"despair": {
			"itself": 1,
			"loves": 1,
			"which": 2,
			"this": 1,
			"beyond": 1,
			"nor": 2,
			"by": 1,
			"long": 1,
			"rise": 1,
			"most": 1,
			"william": 1,
			"was": 1,
			"that": 2,
			"let": 1,
			"what": 1,
			"or": 3,
			"so": 2,
			"never": 2,
			"but": 2,
			"and": 4,
			"days": 1,
			"i": 1,
			"one": 2,
			"calm": 1,
			"around": 1,
			"all": 1,
			"flesh": 1,
			"through": 1,
			"our": 1,
			"shall": 1,
			"as": 1,
			"o": 2,
			"the": 2,
			"though": 1,
			"fight": 1,
			"in": 4,
			"forgive": 1
		},
		"small": {
			"birds": 2,
			"appear": 1,
			"six": 1,
			"made": 1,
			"of": 5,
			"among": 1,
			"sands": 1,
			"praise": 1,
			"it": 1,
			"why": 1,
			"its": 1,
			"gray": 1,
			"for": 1,
			"cup": 1,
			"cheer": 1,
			"did": 1,
			"was": 1,
			"that": 2,
			"drop": 1,
			"daily": 1,
			"have": 2,
			"a": 4,
			"things": 1,
			"but": 1,
			"head": 1,
			"and": 3,
			"do": 1,
			"down": 1,
			"between": 1,
			"from": 1,
			"voice": 2,
			"then": 1,
			"service": 1,
			"well": 1,
			"to": 1,
			"use": 1,
			"as": 2,
			"he": 1,
			"at": 1,
			"wound": 1,
			"the": 4,
			"in": 1
		},
		"richard": {
			"hymn": 1,
			"farewell": 1,
			"than": 1,
			"my": 1,
			"battle": 1,
			"peace": 1,
			"lord": 3,
			"be": 1,
			"van": 1,
			"henry": 1,
			"from": 1,
			"with": 1,
			"to": 1,
			"hence": 1,
			"whose": 1,
			"iii": 2,
			"the": 2
		},
		"run": {
			"his": 1,
			"mad": 2,
			"back": 1,
			"up": 2,
			"dear": 1,
			"not": 1,
			"smooth": 2,
			"soon": 1,
			"like": 1,
			"away": 3,
			"you": 1,
			"for": 1,
			"catch": 1,
			"again": 1,
			"thy": 2,
			"sir": 1,
			"along": 1,
			"that": 1,
			"de": 4,
			"a": 1,
			"them": 1,
			"old": 1,
			"when": 1,
			"onward": 1,
			"out": 1,
			"and": 5,
			"snow": 1,
			"too": 1,
			"how": 1,
			"from": 1,
			"these": 1,
			"no": 1,
			"with": 1,
			"around": 1,
			"some": 1,
			"till": 1,
			"all": 1,
			"wild": 1,
			"through": 4,
			"still": 1,
			"to": 3,
			"round": 1,
			"ah": 1,
			"at": 1,
			"the": 5,
			"tis": 1,
			"in": 1
		},
		"train": {
			"his": 1,
			"of": 3,
			"nor": 1,
			"it": 1,
			"they": 1,
			"along": 1,
			"can": 1,
			"go": 1,
			"so": 1,
			"many": 1,
			"and": 1,
			"thou": 1,
			"with": 1,
			"king": 1,
			"our": 1,
			"to": 1,
			"at": 1,
			"wound": 1,
			"the": 4,
			"oft": 1
		},
		"rolled": {
			"angel": 2,
			"heavy": 1,
			"two": 1,
			"not": 1,
			"over": 1,
			"together": 1,
			"for": 1,
			"oer": 1,
			"and": 2,
			"between": 1,
			"whereer": 1,
			"from": 1,
			"till": 1,
			"round": 1,
			"slowly": 1,
			"as": 1,
			"at": 1,
			"the": 6,
			"in": 4
		},
		"church": {
			"footnote": 1,
			"of": 2,
			"she": 1,
			"nor": 1,
			"dear": 1,
			"not": 1,
			"is": 1,
			"where": 1,
			"for": 1,
			"door": 1,
			"can": 1,
			"was": 1,
			"let": 1,
			"full": 1,
			"must": 1,
			"a": 2,
			"lord": 1,
			"but": 1,
			"be": 1,
			"and": 6,
			"i": 1,
			"thou": 1,
			"such": 2,
			"stands": 1,
			"help": 1,
			"from": 1,
			"beneath": 1,
			"all": 1,
			"to": 1,
			"we": 2,
			"he": 1,
			"at": 1,
			"o": 2,
			"the": 2,
			"in": 1
		},
		"lovers": {
			"dying": 1,
			"more": 1,
			"hell": 1,
			"are": 1,
			"warm": 1,
			"she": 1,
			"nor": 1,
			"sons": 1,
			"scorn": 1,
			"dear": 1,
			"hours": 1,
			"steed": 1,
			"they": 2,
			"cannot": 1,
			"remember": 1,
			"face": 1,
			"that": 1,
			"lips": 1,
			"must": 1,
			"have": 1,
			"lay": 1,
			"love": 1,
			"sigh": 1,
			"heart": 3,
			"and": 1,
			"i": 3,
			"here": 1,
			"from": 1,
			"turned": 1,
			"to": 1,
			"speed": 1,
			"mid": 1,
			"vows": 2,
			"young": 1
		},
		"holy": {
			"else": 1,
			"dust": 1,
			"went": 1,
			"light": 3,
			"book": 1,
			"charity": 1,
			"blood": 1,
			"women": 1,
			"are": 1,
			"ones": 1,
			"of": 3,
			"souls": 1,
			"once": 1,
			"sight": 7,
			"behold": 1,
			"not": 1,
			"it": 1,
			"spirits": 1,
			"child": 1,
			"quiet": 1,
			"is": 5,
			"prayer": 1,
			"mother": 1,
			"song": 1,
			"where": 2,
			"church": 1,
			"holy": 4,
			"for": 2,
			"hand": 1,
			"heaven": 1,
			"cry": 1,
			"band": 1,
			"shines": 2,
			"birth": 2,
			"ground": 5,
			"hope": 1,
			"times": 1,
			"name": 2,
			"face": 3,
			"cause": 1,
			"that": 1,
			"let": 2,
			"trust": 1,
			"stars": 2,
			"waiting": 1,
			"isle": 1,
			"towers": 1,
			"a": 1,
			"things": 1,
			"lord": 1,
			"spirit": 4,
			"hath": 1,
			"ashes": 1,
			"love": 1,
			"on": 1,
			"time": 1,
			"head": 1,
			"and": 4,
			"thou": 1,
			"tower": 1,
			"one": 1,
			"fields": 1,
			"saint": 1,
			"beat": 1,
			"honor": 1,
			"calm": 3,
			"alfred": 1,
			"with": 4,
			"around": 1,
			"now": 1,
			"will": 1,
			"all": 1,
			"fires": 1,
			"shine": 1,
			"night": 1,
			"shall": 2,
			"to": 3,
			"flame": 1,
			"little": 1,
			"art": 1,
			"ah": 1,
			"strife": 1,
			"strength": 1,
			"flag": 1,
			"o": 1,
			"the": 5,
			"ghost": 4,
			"her": 1,
			"fire": 1,
			"jesus": 1,
			"in": 1
		},
		"press": {
			"within": 1,
			"loves": 1,
			"christ": 1,
			"of": 1,
			"not": 1,
			"it": 1,
			"they": 1,
			"where": 1,
			"words": 1,
			"what": 1,
			"upon": 1,
			"on": 1,
			"thee": 2,
			"and": 2,
			"thou": 1,
			"from": 1,
			"no": 1,
			"with": 1,
			"through": 1,
			"nearer": 1,
			"our": 1,
			"your": 2,
			"me": 1,
			"the": 4
		},
		"summers": {
			"of": 1,
			"long": 2,
			"breath": 2,
			"morn": 1,
			"that": 1,
			"heat": 2,
			"never": 1,
			"old": 1,
			"but": 1,
			"sun": 1,
			"day": 5,
			"to": 1,
			"the": 1,
			"in": 1,
			"air": 2
		},
		"blast": {
			"of": 4,
			"not": 1,
			"is": 2,
			"like": 1,
			"theres": 2,
			"again": 1,
			"oer": 1,
			"was": 1,
			"that": 1,
			"let": 1,
			"or": 1,
			"upon": 1,
			"on": 1,
			"old": 1,
			"and": 3,
			"home": 1,
			"each": 1,
			"from": 1,
			"follow": 1,
			"aside": 1,
			"shall": 3,
			"before": 1,
			"as": 1,
			"he": 1,
			"o": 1,
			"the": 4,
			"been": 1
		},
		"gray": {
			"come": 1,
			"im": 1,
			"light": 1,
			"ive": 1,
			"under": 1,
			"who": 1,
			"men": 1,
			"of": 5,
			"amid": 1,
			"rock": 1,
			"height": 1,
			"every": 1,
			"by": 3,
			"eyes": 1,
			"nature": 1,
			"leaves": 1,
			"than": 1,
			"where": 2,
			"looking": 1,
			"for": 1,
			"stones": 2,
			"my": 1,
			"came": 1,
			"twilight": 1,
			"wall": 1,
			"morn": 1,
			"pray": 1,
			"sadly": 1,
			"francis": 1,
			"that": 1,
			"go": 1,
			"had": 2,
			"what": 1,
			"or": 1,
			"eye": 1,
			"a": 2,
			"so": 2,
			"green": 1,
			"lord": 1,
			"dawn": 1,
			"on": 1,
			"break": 1,
			"wing": 1,
			"old": 1,
			"but": 2,
			"brown": 1,
			"when": 3,
			"t": 1,
			"head": 4,
			"and": 9,
			"i": 1,
			"forest": 1,
			"fields": 1,
			"brow": 1,
			"from": 1,
			"across": 1,
			"these": 1,
			"while": 1,
			"no": 1,
			"with": 3,
			"soft": 1,
			"till": 1,
			"hair": 3,
			"locks": 1,
			"well": 1,
			"our": 1,
			"smoke": 1,
			"shall": 2,
			"only": 1,
			"to": 2,
			"wood": 1,
			"as": 1,
			"he": 4,
			"arms": 1,
			"the": 6,
			"ghost": 1,
			"waste": 1
		},
		"just": {
			"sweet": 1,
			"caught": 1,
			"his": 1,
			"struck": 1,
			"him": 1,
			"thing": 1,
			"are": 2,
			"made": 2,
			"men": 3,
			"of": 1,
			"souls": 1,
			"alike": 1,
			"not": 2,
			"it": 1,
			"over": 1,
			"by": 1,
			"something": 1,
			"they": 2,
			"nature": 1,
			"een": 1,
			"where": 3,
			"should": 1,
			"enough": 1,
			"born": 1,
			"because": 1,
			"go": 1,
			"an": 1,
			"have": 1,
			"a": 1,
			"so": 1,
			"on": 2,
			"maryland": 1,
			"above": 1,
			"when": 2,
			"knows": 1,
			"and": 12,
			"hid": 1,
			"thou": 1,
			"down": 1,
			"raised": 1,
			"such": 2,
			"shining": 1,
			"how": 1,
			"from": 2,
			"beneath": 1,
			"now": 3,
			"meet": 1,
			"will": 1,
			"then": 3,
			"spring": 1,
			"shall": 1,
			"to": 6,
			"as": 12,
			"said": 1,
			"he": 1,
			"at": 3,
			"frown": 1,
			"the": 2,
			"been": 1,
			"near": 1,
			"jesus": 1,
			"in": 6
		},
		"welcome": {
			"him": 1,
			"war": 1,
			"shout": 1,
			"of": 1,
			"once": 1,
			"ever": 1,
			"you": 1,
			"smile": 1,
			"rest": 1,
			"my": 1,
			"smiles": 1,
			"makes": 2,
			"faith": 1,
			"gallant": 1,
			"dawn": 1,
			"on": 1,
			"thee": 1,
			"ye": 2,
			"be": 2,
			"close": 1,
			"and": 1,
			"home": 2,
			"here": 1,
			"each": 1,
			"voice": 1,
			"guest": 1,
			"then": 1,
			"peaceful": 1,
			"spring": 1,
			"night": 1,
			"to": 4,
			"as": 3,
			"life": 1,
			"arms": 1,
			"me": 2,
			"at": 1,
			"the": 9,
			"her": 1,
			"there": 1,
			"in": 4
		},
		"for": {
			"sweet": 2,
			"come": 1,
			"sound": 1,
			"bread": 4,
			"summer": 2,
			"itself": 1,
			"us": 23,
			"more": 8,
			"hear": 1,
			"wrought": 1,
			"thine": 8,
			"england": 3,
			"blessings": 1,
			"justice": 1,
			"loves": 1,
			"im": 7,
			"virtues": 3,
			"christ": 5,
			"free": 2,
			"light": 1,
			"earth": 2,
			"touched": 1,
			"his": 51,
			"save": 1,
			"him": 19,
			"fond": 1,
			"charity": 2,
			"blood": 3,
			"lady": 1,
			"women": 1,
			"faithful": 1,
			"breathing": 1,
			"voices": 1,
			"deeper": 1,
			"passions": 1,
			"s": 2,
			"ages": 2,
			"none": 5,
			"woe": 5,
			"war": 2,
			"weary": 2,
			"are": 4,
			"aid": 1,
			"alas": 1,
			"right": 3,
			"back": 1,
			"aye": 9,
			"ive": 1,
			"very": 2,
			"who": 9,
			"men": 6,
			"lover": 1,
			"which": 14,
			"sake": 14,
			"ones": 1,
			"deeds": 1,
			"call": 2,
			"of": 12,
			"this": 23,
			"blind": 1,
			"graves": 1,
			"fame": 3,
			"talk": 1,
			"wine": 3,
			"after": 1,
			"once": 3,
			"food": 2,
			"triumph": 1,
			"she": 11,
			"liberty": 10,
			"shakespeare": 1,
			"silence": 1,
			"anonymous": 1,
			"sons": 1,
			"sacred": 1,
			"gold": 3,
			"three": 2,
			"morning": 1,
			"thyself": 1,
			"age": 2,
			"darkness": 1,
			"joy": 8,
			"dear": 3,
			"two": 3,
			"fresh": 1,
			"part": 1,
			"lands": 1,
			"slaves": 1,
			"aught": 1,
			"mine": 7,
			"news": 2,
			"not": 6,
			"awe": 1,
			"hours": 3,
			"today": 1,
			"every": 13,
			"praise": 1,
			"it": 39,
			"evil": 2,
			"sins": 1,
			"maiden": 1,
			"flight": 1,
			"neither": 4,
			"far": 1,
			"by": 2,
			"jim": 2,
			"nevermore": 1,
			"long": 3,
			"sorrows": 1,
			"something": 2,
			"cold": 4,
			"land": 2,
			"is": 5,
			"soon": 1,
			"unto": 2,
			"like": 2,
			"lo": 2,
			"hurrah": 1,
			"boy": 1,
			"hard": 1,
			"gift": 1,
			"children": 1,
			"idle": 2,
			"forms": 1,
			"why": 2,
			"people": 1,
			"immortality": 3,
			"good": 4,
			"hark": 1,
			"ever": 15,
			"either": 1,
			"care": 1,
			"they": 16,
			"speech": 2,
			"prayer": 11,
			"laughing": 1,
			"wide": 1,
			"you": 21,
			"nature": 2,
			"shot": 1,
			"seven": 1,
			"new": 1,
			"sister": 1,
			"earths": 1,
			"its": 18,
			"than": 1,
			"sc": 1,
			"pleasure": 1,
			"those": 17,
			"where": 5,
			"gentle": 1,
			"others": 3,
			"looking": 1,
			"lovers": 1,
			"holy": 1,
			"just": 1,
			"for": 7,
			"heaven": 8,
			"lost": 1,
			"cry": 1,
			"should": 1,
			"worse": 1,
			"theres": 3,
			"cannot": 1,
			"breath": 1,
			"spite": 1,
			"tomorrow": 1,
			"rest": 5,
			"my": 54,
			"band": 1,
			"words": 1,
			"standing": 2,
			"note": 1,
			"winds": 1,
			"great": 1,
			"john": 1,
			"beauty": 1,
			"freedom": 10,
			"thy": 25,
			"smiles": 1,
			"pray": 1,
			"battle": 4,
			"peace": 3,
			"comes": 2,
			"ere": 2,
			"ourselves": 4,
			"whom": 6,
			"shore": 2,
			"ground": 1,
			"soul": 2,
			"passion": 1,
			"francis": 1,
			"makes": 1,
			"any": 6,
			"most": 3,
			"times": 1,
			"wandering": 1,
			"town": 1,
			"bells": 1,
			"fools": 2,
			"friendship": 1,
			"longer": 1,
			"sin": 6,
			"faith": 1,
			"whether": 3,
			"god": 21,
			"shame": 6,
			"power": 2,
			"were": 1,
			"comfort": 1,
			"oer": 1,
			"sudden": 1,
			"immortal": 1,
			"was": 3,
			"that": 24,
			"if": 7,
			"man": 19,
			"daily": 1,
			"another": 3,
			"victory": 1,
			"steep": 1,
			"cried": 1,
			"seed": 1,
			"half": 1,
			"what": 14,
			"oh": 2,
			"an": 7,
			"nothing": 6,
			"stars": 1,
			"pleasures": 1,
			"even": 3,
			"or": 4,
			"de": 2,
			"finds": 1,
			"have": 1,
			"study": 4,
			"tree": 1,
			"tears": 3,
			"sae": 1,
			"horse": 2,
			"their": 19,
			"a": 116,
			"so": 4,
			"them": 15,
			"sometimes": 1,
			"courage": 3,
			"things": 1,
			"never": 7,
			"many": 14,
			"delight": 2,
			"love": 13,
			"on": 3,
			"red": 1,
			"evermore": 8,
			"deep": 1,
			"celestial": 1,
			"but": 4,
			"grass": 1,
			"death": 10,
			"knowledge": 2,
			"self": 1,
			"time": 3,
			"poor": 1,
			"thee": 56,
			"ye": 3,
			"years": 8,
			"when": 9,
			"lifes": 2,
			"onward": 2,
			"religious": 1,
			"until": 1,
			"thank": 2,
			"mans": 1,
			"length": 1,
			"dreams": 1,
			"be": 1,
			"firm": 1,
			"merit": 1,
			"t": 2,
			"glory": 2,
			"out": 2,
			"earthly": 1,
			"rhyme": 3,
			"brave": 1,
			"heart": 1,
			"sorrow": 1,
			"head": 1,
			"close": 2,
			"and": 35,
			"bliss": 1,
			"thunder": 1,
			"grace": 3,
			"truth": 9,
			"dark": 1,
			"christian": 2,
			"myself": 3,
			"fate": 1,
			"days": 2,
			"i": 32,
			"worthy": 1,
			"thou": 22,
			"woman": 1,
			"robin": 1,
			"home": 1,
			"here": 1,
			"mortal": 3,
			"one": 22,
			"such": 9,
			"judge": 1,
			"against": 1,
			"perfect": 2,
			"secret": 1,
			"tall": 1,
			"work": 2,
			"each": 9,
			"henry": 1,
			"brow": 1,
			"how": 2,
			"hearts": 1,
			"help": 2,
			"other": 3,
			"from": 6,
			"drink": 1,
			"ill": 3,
			"want": 3,
			"blade": 2,
			"these": 4,
			"while": 1,
			"honor": 2,
			"no": 7,
			"rouse": 1,
			"solitude": 2,
			"alfred": 1,
			"decay": 1,
			"with": 4,
			"singing": 3,
			"sad": 1,
			"virtue": 1,
			"now": 7,
			"foreign": 1,
			"some": 5,
			"till": 1,
			"tempest": 1,
			"will": 4,
			"himself": 3,
			"lying": 1,
			"all": 57,
			"grief": 1,
			"gay": 1,
			"gods": 4,
			"then": 3,
			"flesh": 1,
			"thought": 2,
			"through": 3,
			"pleasant": 1,
			"ten": 1,
			"songs": 1,
			"thats": 1,
			"toil": 1,
			"service": 1,
			"well": 6,
			"king": 1,
			"nights": 2,
			"spring": 1,
			"much": 2,
			"turned": 1,
			"being": 2,
			"wealth": 1,
			"our": 21,
			"storms": 1,
			"day": 2,
			"sense": 1,
			"open": 1,
			"future": 1,
			"fear": 6,
			"needs": 2,
			"equal": 1,
			"mercy": 4,
			"pity": 3,
			"only": 3,
			"wind": 2,
			"still": 4,
			"your": 13,
			"to": 24,
			"human": 1,
			"little": 1,
			"answer": 3,
			"mankind": 3,
			"rich": 1,
			"live": 1,
			"use": 1,
			"freedoms": 6,
			"know": 1,
			"art": 4,
			"bold": 1,
			"may": 1,
			"th": 1,
			"eve": 1,
			"withered": 1,
			"yon": 1,
			"we": 16,
			"gloom": 1,
			"glad": 2,
			"whose": 5,
			"as": 3,
			"charles": 1,
			"said": 1,
			"life": 15,
			"he": 22,
			"arms": 1,
			"me": 92,
			"strength": 4,
			"at": 3,
			"wound": 1,
			"o": 3,
			"coming": 1,
			"chain": 1,
			"the": 348,
			"tis": 2,
			"though": 4,
			"fight": 4,
			"theyre": 3,
			"sure": 3,
			"house": 1,
			"her": 27,
			"young": 1,
			"dead": 1,
			"fire": 1,
			"oft": 1,
			"jesus": 1,
			"there": 9,
			"in": 12,
			"flowers": 1,
			"choice": 1,
			"harmony": 1,
			"saith": 1,
			"thoughts": 1
		},
		"burns": {
			"within": 1,
			"his": 1,
			"like": 1,
			"song": 2,
			"my": 1,
			"stone": 1,
			"a": 2,
			"out": 1,
			"and": 1,
			"from": 1,
			"maid": 1,
			"no": 1,
			"with": 2,
			"to": 1,
			"we": 1,
			"as": 1,
			"fair": 1,
			"o": 1,
			"the": 2
		},
		"noise": {
			"us": 1,
			"war": 1,
			"of": 5,
			"than": 1,
			"but": 2,
			"ye": 1,
			"and": 5,
			"from": 1,
			"till": 1,
			"as": 1,
			"o": 1,
			"in": 1
		},
		"blown": {
			"since": 1,
			"back": 1,
			"not": 1,
			"by": 1,
			"abroad": 1,
			"where": 1,
			"that": 2,
			"had": 1,
			"or": 1,
			"on": 1,
			"out": 1,
			"and": 2,
			"i": 1,
			"from": 5,
			"all": 1,
			"through": 1,
			"to": 1,
			"whose": 1,
			"as": 1,
			"me": 1,
			"at": 1,
			"the": 1
		},
		"drops": {
			"his": 2,
			"of": 4,
			"like": 1,
			"its": 1,
			"slow": 1,
			"that": 3,
			"let": 2,
			"and": 2,
			"do": 1,
			"down": 1,
			"some": 1,
			"yet": 1,
			"to": 1,
			"into": 1,
			"as": 1,
			"at": 1,
			"the": 1,
			"her": 1,
			"been": 2
		},
		"past": {
			"within": 1,
			"earth": 1,
			"ages": 2,
			"which": 1,
			"of": 1,
			"nor": 1,
			"two": 1,
			"not": 1,
			"it": 1,
			"alone": 1,
			"is": 1,
			"like": 2,
			"away": 3,
			"why": 1,
			"its": 2,
			"for": 1,
			"past": 1,
			"thy": 2,
			"sits": 1,
			"forward": 3,
			"god": 1,
			"wit": 1,
			"were": 1,
			"was": 1,
			"that": 3,
			"man": 1,
			"another": 1,
			"what": 1,
			"or": 2,
			"their": 1,
			"a": 6,
			"things": 1,
			"on": 2,
			"but": 7,
			"time": 1,
			"years": 4,
			"when": 2,
			"gone": 1,
			"be": 2,
			"and": 19,
			"myself": 1,
			"days": 1,
			"i": 4,
			"down": 1,
			"help": 2,
			"from": 1,
			"while": 2,
			"no": 2,
			"with": 1,
			"singing": 1,
			"soft": 1,
			"all": 5,
			"grief": 2,
			"then": 1,
			"through": 1,
			"has": 1,
			"thats": 1,
			"our": 3,
			"shall": 1,
			"to": 1,
			"may": 1,
			"we": 2,
			"whose": 1,
			"as": 4,
			"he": 3,
			"at": 1,
			"o": 1,
			"the": 11,
			"in": 3
		},
		"judgment": {
			"free": 1,
			"are": 1,
			"blind": 2,
			"is": 2,
			"they": 1,
			"heaven": 1,
			"making": 1,
			"hath": 1,
			"but": 1,
			"say": 1,
			"and": 2,
			"with": 1,
			"all": 1,
			"doth": 1,
			"our": 1,
			"day": 2,
			"your": 1,
			"to": 1,
			"the": 1
		},
		"read": {
			"come": 1,
			"his": 1,
			"ii": 1,
			"which": 1,
			"of": 1,
			"once": 1,
			"lines": 1,
			"it": 5,
			"you": 1,
			"without": 1,
			"for": 3,
			"my": 1,
			"again": 1,
			"thy": 2,
			"yes": 1,
			"better": 1,
			"hope": 1,
			"that": 2,
			"what": 1,
			"or": 2,
			"sae": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"them": 1,
			"and": 4,
			"one": 1,
			"such": 1,
			"how": 1,
			"from": 1,
			"strange": 1,
			"while": 1,
			"no": 1,
			"with": 2,
			"could": 1,
			"much": 1,
			"hall": 1,
			"to": 3,
			"as": 1,
			"greek": 1,
			"grow": 1,
			"left": 1,
			"the": 14,
			"her": 2,
			"in": 3,
			"aloud": 4
		},
		"hand": {
			"thine": 1,
			"ring": 1,
			"england": 1,
			"justice": 1,
			"his": 1,
			"blood": 1,
			"made": 1,
			"who": 1,
			"which": 2,
			"holds": 1,
			"of": 23,
			"this": 1,
			"after": 1,
			"wander": 1,
			"she": 1,
			"nor": 1,
			"grown": 1,
			"slaves": 1,
			"mine": 1,
			"put": 1,
			"it": 1,
			"over": 1,
			"shake": 1,
			"by": 2,
			"alone": 1,
			"is": 4,
			"soon": 1,
			"like": 1,
			"found": 1,
			"they": 3,
			"you": 2,
			"guide": 1,
			"pale": 1,
			"without": 1,
			"its": 1,
			"than": 1,
			"those": 1,
			"where": 1,
			"gentle": 1,
			"despair": 1,
			"just": 1,
			"for": 2,
			"should": 1,
			"cannot": 1,
			"my": 2,
			"came": 1,
			"john": 1,
			"thy": 3,
			"better": 1,
			"can": 6,
			"were": 2,
			"oer": 1,
			"was": 5,
			"that": 20,
			"if": 1,
			"let": 1,
			"had": 1,
			"must": 1,
			"what": 2,
			"oh": 1,
			"an": 1,
			"hold": 1,
			"or": 2,
			"think": 1,
			"tears": 1,
			"gave": 1,
			"a": 6,
			"so": 1,
			"upon": 4,
			"lay": 1,
			"lord": 1,
			"many": 1,
			"hath": 1,
			"on": 6,
			"above": 1,
			"but": 3,
			"death": 1,
			"when": 4,
			"until": 1,
			"be": 2,
			"brave": 1,
			"and": 52,
			"sun": 1,
			"i": 9,
			"unknown": 1,
			"thou": 1,
			"bids": 1,
			"mirth": 1,
			"one": 1,
			"against": 1,
			"perfect": 1,
			"from": 3,
			"these": 1,
			"while": 1,
			"no": 3,
			"took": 1,
			"with": 4,
			"till": 2,
			"all": 1,
			"then": 1,
			"through": 2,
			"ten": 1,
			"has": 3,
			"well": 1,
			"doth": 1,
			"turned": 1,
			"our": 3,
			"open": 1,
			"shall": 4,
			"before": 2,
			"still": 3,
			"to": 19,
			"into": 1,
			"round": 1,
			"mankind": 1,
			"vows": 1,
			"ah": 2,
			"may": 3,
			"we": 3,
			"whose": 1,
			"as": 4,
			"he": 5,
			"me": 1,
			"at": 1,
			"lies": 2,
			"o": 2,
			"the": 23,
			"her": 3,
			"been": 1,
			"there": 3,
			"in": 25,
			"aloud": 1
		},
		"heaven": {
			"look": 1,
			"itself": 4,
			"ours": 1,
			"went": 1,
			"earth": 2,
			"his": 3,
			"james": 1,
			"fond": 1,
			"are": 2,
			"right": 1,
			"guard": 1,
			"which": 1,
			"of": 10,
			"this": 2,
			"high": 1,
			"once": 1,
			"she": 2,
			"beyond": 2,
			"nor": 4,
			"hymn": 1,
			"two": 1,
			"pass": 1,
			"behold": 1,
			"not": 2,
			"it": 10,
			"over": 1,
			"far": 1,
			"child": 1,
			"send": 1,
			"by": 6,
			"eyes": 1,
			"alone": 5,
			"long": 1,
			"is": 9,
			"like": 3,
			"forever": 1,
			"douglas": 1,
			"they": 4,
			"shook": 1,
			"earths": 1,
			"its": 4,
			"than": 1,
			"slow": 1,
			"swift": 1,
			"where": 2,
			"gray": 1,
			"for": 8,
			"heaven": 1,
			"should": 2,
			"cannot": 1,
			"my": 3,
			"words": 1,
			"great": 2,
			"again": 1,
			"thy": 3,
			"god": 1,
			"power": 1,
			"were": 2,
			"oer": 4,
			"did": 1,
			"was": 2,
			"that": 13,
			"if": 2,
			"let": 1,
			"go": 1,
			"hang": 1,
			"had": 1,
			"gives": 3,
			"what": 2,
			"an": 4,
			"nothing": 1,
			"or": 1,
			"waiting": 1,
			"bright": 2,
			"awake": 1,
			"their": 1,
			"a": 6,
			"so": 5,
			"sometimes": 1,
			"adieu": 1,
			"upon": 2,
			"hath": 3,
			"walk": 1,
			"on": 7,
			"above": 4,
			"but": 3,
			"lives": 1,
			"when": 1,
			"eternal": 1,
			"be": 2,
			"t": 2,
			"and": 41,
			"cries": 1,
			"ask": 1,
			"i": 8,
			"thou": 1,
			"one": 1,
			"breathes": 1,
			"rather": 1,
			"henry": 1,
			"how": 1,
			"help": 2,
			"from": 8,
			"would": 3,
			"beneath": 1,
			"no": 3,
			"mighty": 1,
			"with": 10,
			"now": 2,
			"some": 1,
			"till": 1,
			"will": 2,
			"all": 2,
			"then": 2,
			"has": 5,
			"shine": 1,
			"neer": 1,
			"shall": 1,
			"still": 2,
			"yet": 2,
			"to": 25,
			"speed": 1,
			"written": 1,
			"religion": 1,
			"may": 3,
			"we": 1,
			"as": 3,
			"charles": 1,
			"he": 1,
			"at": 3,
			"below": 1,
			"lies": 1,
			"o": 2,
			"yonder": 1,
			"the": 22,
			"tis": 1,
			"sure": 1,
			"her": 6,
			"there": 1,
			"in": 8
		},
		"stones": {
			"of": 2,
			"nor": 1,
			"not": 1,
			"hes": 5,
			"that": 1,
			"a": 1,
			"and": 6,
			"here": 1,
			"from": 1,
			"some": 1,
			"o": 1,
			"though": 1
		},
		"bosom": {
			"of": 9,
			"blind": 1,
			"she": 1,
			"aught": 1,
			"not": 1,
			"is": 4,
			"like": 1,
			"they": 1,
			"thus": 1,
			"where": 2,
			"take": 1,
			"rest": 1,
			"my": 1,
			"bore": 1,
			"can": 1,
			"bears": 1,
			"that": 1,
			"bear": 1,
			"broken": 1,
			"had": 1,
			"must": 1,
			"a": 2,
			"on": 1,
			"and": 3,
			"move": 1,
			"black": 1,
			"thou": 1,
			"swell": 2,
			"too": 1,
			"while": 1,
			"no": 2,
			"with": 1,
			"now": 1,
			"all": 1,
			"shine": 1,
			"turned": 1,
			"shall": 1,
			"to": 2,
			"spread": 1,
			"lies": 1,
			"the": 7,
			"though": 1,
			"seems": 1,
			"her": 1,
			"there": 2,
			"in": 1
		},
		"become": {
			"more": 2,
			"of": 3,
			"like": 1,
			"thy": 3,
			"if": 1,
			"must": 1,
			"a": 8,
			"them": 1,
			"to": 1,
			"as": 2,
			"the": 2,
			"first": 1
		},
		"charge": {
			"his": 1,
			"made": 1,
			"of": 4,
			"cling": 1,
			"is": 1,
			"like": 1,
			"they": 3,
			"for": 3,
			"charge": 1,
			"my": 1,
			"again": 1,
			"if": 1,
			"on": 3,
			"thee": 3,
			"and": 3,
			"i": 1,
			"down": 1,
			"home": 1,
			"pay": 1,
			"from": 1,
			"with": 3,
			"to": 1,
			"the": 3,
			"in": 2
		},
		"frost": {
			"within": 1,
			"are": 1,
			"of": 1,
			"is": 1,
			"that": 2,
			"a": 1,
			"them": 1,
			"ye": 1,
			"and": 3,
			"i": 1,
			"shadows": 1,
			"from": 1,
			"with": 1,
			"has": 1,
			"to": 3,
			"he": 1,
			"chain": 1
		},
		"cup": {
			"come": 2,
			"which": 1,
			"of": 10,
			"over": 1,
			"lost": 1,
			"did": 1,
			"was": 1,
			"that": 1,
			"what": 1,
			"so": 1,
			"but": 2,
			"and": 4,
			"i": 3,
			"thou": 1,
			"whereer": 1,
			"with": 3,
			"poured": 1,
			"has": 1,
			"king": 1,
			"shall": 1,
			"to": 2,
			"we": 1,
			"as": 2,
			"he": 2,
			"the": 3
		},
		"lost": {
			"come": 1,
			"his": 1,
			"book": 3,
			"beside": 1,
			"back": 1,
			"amidst": 1,
			"of": 4,
			"this": 1,
			"amid": 1,
			"up": 1,
			"liberty": 1,
			"sheep": 1,
			"not": 2,
			"hours": 1,
			"it": 4,
			"evil": 1,
			"by": 3,
			"is": 2,
			"why": 1,
			"good": 1,
			"ever": 1,
			"you": 1,
			"its": 4,
			"for": 2,
			"my": 3,
			"john": 1,
			"again": 1,
			"thy": 1,
			"battle": 1,
			"ere": 1,
			"hope": 1,
			"makes": 2,
			"indeed": 1,
			"that": 1,
			"if": 2,
			"both": 1,
			"another": 2,
			"broken": 1,
			"must": 2,
			"what": 2,
			"oh": 1,
			"or": 2,
			"de": 1,
			"their": 2,
			"a": 1,
			"so": 1,
			"them": 1,
			"on": 3,
			"but": 3,
			"when": 1,
			"mans": 1,
			"out": 1,
			"heart": 1,
			"and": 8,
			"days": 1,
			"i": 2,
			"tale": 1,
			"one": 2,
			"such": 1,
			"each": 1,
			"no": 3,
			"with": 2,
			"sad": 1,
			"all": 2,
			"gods": 2,
			"thats": 1,
			"loved": 1,
			"to": 11,
			"human": 1,
			"we": 2,
			"whose": 2,
			"said": 1,
			"life": 1,
			"o": 2,
			"the": 13,
			"tis": 1,
			"world": 1,
			"her": 2,
			"dead": 1,
			"in": 17
		},
		"catch": {
			"him": 2,
			"war": 1,
			"of": 1,
			"thy": 1,
			"a": 2,
			"them": 1,
			"one": 1,
			"each": 1,
			"with": 1,
			"then": 1,
			"he": 1,
			"at": 1,
			"the": 14
		},
		"cry": {
			"hear": 1,
			"alas": 1,
			"of": 21,
			"liberty": 1,
			"sick": 1,
			"behold": 2,
			"hes": 1,
			"it": 1,
			"is": 3,
			"like": 1,
			"they": 4,
			"than": 1,
			"holy": 1,
			"for": 4,
			"battle": 1,
			"because": 1,
			"oer": 1,
			"did": 1,
			"that": 1,
			"if": 1,
			"let": 1,
			"always": 1,
			"full": 1,
			"had": 1,
			"oh": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"on": 2,
			"but": 1,
			"when": 1,
			"out": 3,
			"and": 12,
			"i": 1,
			"across": 1,
			"no": 1,
			"alfred": 1,
			"with": 1,
			"all": 2,
			"mount": 1,
			"our": 1,
			"to": 4,
			"loud": 1,
			"ah": 1,
			"we": 2,
			"he": 1,
			"o": 1,
			"the": 2,
			"tis": 1,
			"there": 1,
			"aloud": 1
		},
		"clime": {
			"his": 1,
			"are": 1,
			"of": 4,
			"she": 1,
			"by": 1,
			"is": 1,
			"immortal": 1,
			"was": 1,
			"let": 1,
			"hath": 1,
			"be": 1,
			"and": 3,
			"i": 1,
			"from": 1,
			"bid": 1,
			"to": 1,
			"as": 1,
			"the": 3
		},
		"bloody": {
			"which": 1,
			"of": 3,
			"tide": 1,
			"brother": 1,
			"over": 1,
			"press": 1,
			"hand": 2,
			"my": 1,
			"yes": 1,
			"mary": 1,
			"shore": 1,
			"ground": 1,
			"face": 1,
			"dew": 2,
			"victory": 1,
			"fall": 1,
			"hang": 1,
			"hands": 2,
			"green": 1,
			"red": 1,
			"shroud": 1,
			"but": 2,
			"when": 3,
			"feet": 1,
			"heart": 1,
			"and": 6,
			"grave": 1,
			"i": 1,
			"steel": 1,
			"work": 1,
			"shield": 1,
			"now": 1,
			"wake": 1,
			"day": 1,
			"wounds": 2,
			"the": 3
		},
		"should": {
			"come": 6,
			"look": 2,
			"us": 2,
			"hear": 2,
			"thine": 1,
			"within": 1,
			"england": 1,
			"wish": 1,
			"forget": 2,
			"pine": 1,
			"die": 10,
			"appear": 1,
			"endure": 1,
			"see": 1,
			"tell": 1,
			"call": 1,
			"keep": 6,
			"wander": 1,
			"once": 1,
			"beyond": 1,
			"find": 1,
			"scorn": 1,
			"lift": 1,
			"not": 10,
			"it": 1,
			"shake": 2,
			"perish": 2,
			"bless": 1,
			"weep": 2,
			"by": 1,
			"nevermore": 1,
			"bring": 1,
			"wars": 1,
			"cross": 1,
			"rise": 1,
			"like": 2,
			"return": 1,
			"forever": 2,
			"they": 2,
			"you": 4,
			"guide": 2,
			"thus": 1,
			"its": 2,
			"smile": 1,
			"for": 2,
			"read": 1,
			"cry": 1,
			"take": 2,
			"speak": 1,
			"rest": 1,
			"my": 3,
			"count": 1,
			"tender": 1,
			"again": 1,
			"thy": 1,
			"sing": 1,
			"teach": 2,
			"moan": 1,
			"wear": 2,
			"strive": 1,
			"most": 1,
			"rising": 1,
			"friendship": 1,
			"sin": 1,
			"flee": 1,
			"need": 1,
			"that": 1,
			"drop": 1,
			"bear": 1,
			"another": 1,
			"always": 1,
			"make": 1,
			"fall": 4,
			"go": 1,
			"trust": 2,
			"sail": 1,
			"what": 1,
			"sit": 2,
			"or": 2,
			"think": 1,
			"start": 1,
			"have": 8,
			"tears": 1,
			"fill": 1,
			"their": 1,
			"a": 3,
			"so": 1,
			"sink": 2,
			"never": 2,
			"leave": 1,
			"walk": 1,
			"love": 2,
			"on": 2,
			"above": 1,
			"memory": 1,
			"old": 1,
			"thee": 1,
			"ye": 1,
			"choose": 1,
			"when": 1,
			"raise": 1,
			"be": 49,
			"say": 2,
			"sorrow": 1,
			"and": 5,
			"do": 3,
			"move": 1,
			"fly": 1,
			"i": 19,
			"thou": 1,
			"greet": 1,
			"here": 1,
			"such": 2,
			"drink": 1,
			"beat": 1,
			"with": 1,
			"give": 1,
			"meet": 2,
			"twenty": 1,
			"then": 2,
			"feed": 1,
			"lose": 2,
			"through": 1,
			"shine": 1,
			"our": 2,
			"feel": 1,
			"frame": 1,
			"fear": 2,
			"pity": 1,
			"only": 1,
			"still": 1,
			"your": 2,
			"to": 1,
			"turn": 2,
			"lie": 3,
			"live": 2,
			"heavenly": 1,
			"know": 1,
			"prove": 1,
			"flow": 1,
			"we": 4,
			"stand": 1,
			"said": 1,
			"at": 1,
			"slumber": 1,
			"o": 1,
			"the": 13,
			"waste": 1,
			"her": 1,
			"fail": 1,
			"there": 1,
			"in": 1,
			"step": 1
		},
		"lonely": {
			"footnote": 1,
			"river": 3,
			"mountains": 1,
			"she": 1,
			"sight": 1,
			"height": 2,
			"place": 1,
			"today": 1,
			"every": 1,
			"land": 1,
			"thus": 2,
			"without": 1,
			"where": 1,
			"hour": 2,
			"hopes": 2,
			"that": 3,
			"let": 1,
			"man": 2,
			"desert": 1,
			"moon": 1,
			"or": 1,
			"love": 1,
			"tomb": 1,
			"on": 2,
			"mountain": 1,
			"when": 1,
			"and": 2,
			"wounded": 1,
			"grave": 1,
			"i": 1,
			"tower": 2,
			"from": 1,
			"would": 1,
			"with": 1,
			"now": 1,
			"all": 1,
			"through": 1,
			"road": 1,
			"to": 1,
			"we": 1,
			"gloom": 1,
			"life": 1,
			"at": 1,
			"led": 1,
			"the": 2,
			"scene": 1,
			"in": 2,
			"seem": 1,
			"thoughts": 1
		},
		"surprise": {
			"sweet": 1,
			"more": 1,
			"of": 1,
			"she": 1,
			"beyond": 1,
			"alone": 1,
			"looked": 1,
			"sees": 1,
			"when": 1,
			"and": 1,
			"with": 1,
			"flash": 1,
			"all": 1,
			"to": 1,
			"mid": 1,
			"as": 1,
			"the": 3,
			"oft": 1,
			"there": 1
		},
		"base": {
			"dare": 1,
			"of": 1,
			"by": 1,
			"slow": 1,
			"did": 1,
			"that": 3,
			"oh": 1,
			"or": 1,
			"a": 2,
			"but": 2,
			"mans": 1,
			"and": 3,
			"thou": 1,
			"from": 1,
			"no": 2,
			"decay": 1,
			"with": 1,
			"our": 1,
			"to": 1,
			"whose": 1,
			"as": 1,
			"array": 1,
			"at": 1,
			"in": 1
		},
		"worse": {
			"appear": 1,
			"it": 1,
			"by": 1,
			"good": 1,
			"than": 12,
			"my": 1,
			"makes": 1,
			"a": 1,
			"them": 1,
			"and": 1,
			"thou": 1,
			"some": 1,
			"turned": 1,
			"o": 1,
			"the": 4,
			"her": 1,
			"in": 1
		},
		"bowed": {
			"low": 1,
			"his": 3,
			"without": 1,
			"thy": 1,
			"god": 1,
			"their": 1,
			"them": 1,
			"head": 1,
			"and": 2,
			"with": 1,
			"around": 1,
			"before": 2,
			"to": 1,
			"life": 1,
			"at": 1,
			"the": 5,
			"in": 1
		},
		"suns": {
			"light": 1,
			"kiss": 1,
			"are": 1,
			"find": 1,
			"beams": 1,
			"god": 1,
			"that": 2,
			"go": 1,
			"reign": 1,
			"had": 2,
			"what": 1,
			"eye": 1,
			"bright": 3,
			"a": 1,
			"hath": 1,
			"and": 1,
			"rays": 1,
			"i": 1,
			"with": 1,
			"has": 1,
			"golden": 1,
			"the": 2
		},
		"darling": {
			"sweet": 1,
			"dying": 1,
			"of": 1,
			"kissed": 1,
			"is": 2,
			"forever": 1,
			"my": 3,
			"sin": 1,
			"was": 1,
			"if": 1,
			"so": 1,
			"i": 1,
			"down": 1,
			"here": 1,
			"one": 1,
			"angels": 1,
			"into": 1,
			"the": 1,
			"in": 2
		},
		"sang": {
			"low": 1,
			"his": 1,
			"this": 1,
			"among": 1,
			"by": 1,
			"hurrah": 4,
			"farewell": 1,
			"again": 2,
			"did": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"love": 1,
			"girl": 1,
			"above": 1,
			"thee": 1,
			"and": 4,
			"i": 1,
			"drink": 1,
			"then": 1,
			"to": 2,
			"loud": 1,
			"ah": 1,
			"we": 1,
			"as": 3,
			"me": 1,
			"o": 3,
			"the": 10,
			"in": 3,
			"air": 1
		},
		"theres": {
			"bread": 1,
			"blood": 4,
			"none": 3,
			"war": 1,
			"this": 1,
			"not": 9,
			"neither": 1,
			"health": 1,
			"something": 1,
			"quiet": 1,
			"like": 2,
			"good": 1,
			"just": 1,
			"rest": 1,
			"again": 1,
			"freedom": 1,
			"peace": 1,
			"lords": 1,
			"wit": 1,
			"comfort": 1,
			"an": 3,
			"nothing": 10,
			"music": 4,
			"a": 18,
			"green": 1,
			"never": 2,
			"many": 4,
			"delight": 1,
			"on": 2,
			"but": 2,
			"naught": 1,
			"sorrow": 1,
			"and": 2,
			"steel": 1,
			"one": 3,
			"such": 2,
			"other": 1,
			"no": 6,
			"room": 1,
			"thats": 1,
			"only": 1,
			"human": 1,
			"the": 13,
			"in": 3
		},
		"take": {
			"more": 1,
			"his": 5,
			"him": 4,
			"are": 1,
			"who": 1,
			"of": 7,
			"this": 4,
			"up": 1,
			"off": 1,
			"nor": 1,
			"thyself": 1,
			"whatever": 1,
			"two": 2,
			"mine": 1,
			"it": 6,
			"flight": 1,
			"by": 2,
			"is": 1,
			"hurrah": 1,
			"away": 3,
			"they": 1,
			"those": 2,
			"for": 2,
			"rest": 1,
			"my": 13,
			"note": 1,
			"again": 1,
			"thy": 3,
			"better": 1,
			"any": 1,
			"were": 1,
			"that": 5,
			"both": 1,
			"another": 1,
			"says": 1,
			"what": 1,
			"an": 2,
			"hold": 1,
			"lest": 1,
			"their": 5,
			"a": 11,
			"them": 1,
			"leave": 1,
			"delight": 1,
			"content": 1,
			"ye": 1,
			"when": 1,
			"heart": 1,
			"and": 5,
			"whateer": 1,
			"i": 2,
			"thou": 6,
			"one": 1,
			"each": 1,
			"from": 3,
			"ill": 1,
			"no": 1,
			"with": 1,
			"soggarth": 1,
			"some": 2,
			"all": 2,
			"our": 3,
			"stay": 1,
			"your": 5,
			"to": 1,
			"into": 1,
			"arms": 1,
			"me": 7,
			"o": 3,
			"the": 24,
			"though": 1,
			"labor": 1,
			"her": 6,
			"there": 1,
			"in": 1,
			"choice": 1
		},
		"melancholy": {
			"sweet": 1,
			"low": 1,
			"murmur": 1,
			"stream": 1,
			"him": 1,
			"she": 1,
			"bird": 2,
			"place": 1,
			"is": 2,
			"welcome": 1,
			"melancholy": 1,
			"john": 1,
			"that": 1,
			"when": 1,
			"i": 2,
			"forest": 1,
			"then": 1,
			"day": 1,
			"o": 1,
			"chain": 1,
			"waste": 1,
			"in": 1
		},
		"cannot": {
			"come": 1,
			"hear": 2,
			"forget": 1,
			"die": 3,
			"hell": 1,
			"see": 7,
			"tell": 6,
			"guard": 1,
			"men": 1,
			"which": 1,
			"hide": 1,
			"yield": 2,
			"keep": 1,
			"talk": 1,
			"breathe": 1,
			"beyond": 1,
			"dwell": 1,
			"it": 1,
			"weep": 1,
			"shut": 1,
			"bring": 1,
			"trace": 1,
			"bind": 1,
			"rise": 2,
			"force": 1,
			"ever": 1,
			"they": 1,
			"easy": 3,
			"smile": 1,
			"read": 1,
			"take": 2,
			"speak": 4,
			"rest": 1,
			"my": 1,
			"thy": 2,
			"pretty": 1,
			"hope": 1,
			"win": 1,
			"reach": 3,
			"sits": 1,
			"that": 1,
			"bear": 3,
			"make": 3,
			"trust": 1,
			"what": 1,
			"understand": 2,
			"hold": 2,
			"think": 1,
			"a": 1,
			"so": 1,
			"walk": 1,
			"charm": 1,
			"but": 2,
			"thee": 1,
			"ye": 1,
			"choose": 1,
			"be": 14,
			"say": 2,
			"and": 3,
			"do": 1,
			"here": 1,
			"might": 1,
			"against": 1,
			"help": 1,
			"from": 1,
			"dread": 1,
			"now": 1,
			"give": 1,
			"follow": 1,
			"all": 1,
			"well": 1,
			"fear": 1,
			"yet": 1,
			"live": 2,
			"get": 1,
			"know": 6,
			"prove": 1,
			"soar": 1,
			"art": 1,
			"enter": 4,
			"me": 2,
			"o": 1,
			"gain": 1,
			"the": 7,
			"share": 1,
			"change": 2,
			"fail": 2
		},
		"bride": {
			"come": 1,
			"lady": 1,
			"of": 1,
			"nor": 1,
			"by": 1,
			"hurrah": 6,
			"that": 1,
			"a": 1,
			"but": 2,
			"and": 6,
			"bids": 1,
			"might": 1,
			"alfred": 1,
			"now": 1,
			"sleeps": 1,
			"yet": 1,
			"to": 1,
			"at": 1,
			"the": 1,
			"her": 1,
			"in": 2
		},
		"speak": {
			"low": 1,
			"his": 1,
			"men": 1,
			"of": 6,
			"she": 1,
			"nor": 2,
			"not": 2,
			"eyes": 1,
			"something": 1,
			"is": 1,
			"like": 2,
			"they": 1,
			"without": 1,
			"those": 1,
			"where": 1,
			"for": 3,
			"my": 3,
			"words": 1,
			"thy": 3,
			"comfort": 1,
			"that": 1,
			"what": 1,
			"or": 2,
			"tears": 1,
			"a": 2,
			"so": 2,
			"love": 1,
			"but": 4,
			"when": 1,
			"plain": 1,
			"be": 1,
			"say": 1,
			"and": 5,
			"less": 1,
			"too": 2,
			"no": 2,
			"with": 5,
			"through": 1,
			"patience": 1,
			"to": 11,
			"we": 2,
			"me": 1,
			"the": 8,
			"tis": 1,
			"though": 1,
			"lowly": 1,
			"in": 4,
			"aloud": 1
		},
		"breath": {
			"come": 1,
			"him": 1,
			"tell": 1,
			"warm": 1,
			"aye": 1,
			"who": 3,
			"which": 3,
			"of": 29,
			"after": 1,
			"it": 2,
			"is": 9,
			"like": 1,
			"they": 1,
			"pale": 1,
			"its": 1,
			"where": 1,
			"gentle": 1,
			"for": 3,
			"should": 1,
			"tonight": 1,
			"seek": 1,
			"most": 1,
			"can": 2,
			"did": 1,
			"was": 1,
			"that": 2,
			"what": 1,
			"or": 2,
			"a": 2,
			"upon": 1,
			"on": 2,
			"but": 1,
			"ye": 1,
			"when": 2,
			"gone": 1,
			"be": 1,
			"and": 19,
			"i": 2,
			"thou": 1,
			"here": 1,
			"such": 1,
			"softly": 1,
			"from": 1,
			"no": 2,
			"with": 1,
			"now": 1,
			"till": 1,
			"all": 1,
			"has": 2,
			"doth": 1,
			"spring": 1,
			"our": 1,
			"fallen": 1,
			"shall": 1,
			"to": 5,
			"into": 1,
			"may": 2,
			"whose": 2,
			"as": 1,
			"me": 1,
			"o": 1,
			"the": 11,
			"though": 2,
			"in": 1
		},
		"spite": {
			"at": 1,
			"the": 3,
			"of": 12,
			"thy": 1,
			"here": 1,
			"in": 1,
			"one": 1,
			"and": 1,
			"ring": 1
		},
		"boys": {
			"are": 3,
			"of": 1,
			"keep": 1,
			"up": 1,
			"cling": 1,
			"jim": 1,
			"together": 1,
			"you": 1,
			"run": 1,
			"again": 1,
			"along": 1,
			"forward": 1,
			"that": 3,
			"bear": 1,
			"what": 1,
			"an": 1,
			"their": 1,
			"upon": 1,
			"spirit": 1,
			"leave": 1,
			"on": 1,
			"fast": 1,
			"knowledge": 1,
			"when": 1,
			"and": 3,
			"how": 1,
			"with": 1,
			"through": 1,
			"to": 1,
			"life": 1,
			"he": 2,
			"the": 2,
			"tis": 1,
			"though": 1,
			"dead": 1,
			"in": 4
		},
		"tomorrow": {
			"dies": 1,
			"find": 1,
			"blossoms": 1,
			"matter": 1,
			"is": 2,
			"away": 1,
			"smile": 1,
			"tomorrow": 2,
			"my": 1,
			"comes": 1,
			"that": 2,
			"what": 1,
			"brings": 1,
			"them": 1,
			"lord": 1,
			"but": 1,
			"when": 2,
			"be": 1,
			"and": 3,
			"do": 1,
			"i": 2,
			"from": 1,
			"with": 1,
			"now": 1,
			"will": 4,
			"strong": 1,
			"gods": 1,
			"shall": 1,
			"yet": 1,
			"to": 6,
			"eve": 1,
			"we": 1,
			"whose": 1,
			"as": 1,
			"he": 1,
			"in": 1
		},
		"autumn": {
			"of": 2,
			"fruit": 1,
			"not": 1,
			"leaves": 1,
			"for": 1,
			"hand": 1,
			"frost": 1,
			"sang": 1,
			"winds": 2,
			"blows": 1,
			"makes": 1,
			"oer": 1,
			"leaf": 1,
			"moon": 1,
			"upon": 1,
			"hath": 1,
			"and": 1,
			"days": 1,
			"fields": 1,
			"from": 1,
			"with": 2,
			"now": 1,
			"then": 1,
			"poured": 1,
			"nights": 1,
			"still": 1,
			"to": 1,
			"lie": 1,
			"withered": 1,
			"lies": 1,
			"grow": 1,
			"the": 2,
			"scene": 1,
			"flowers": 1,
			"air": 1
		},
		"fixed": {
			"his": 2,
			"of": 1,
			"star": 1,
			"not": 1,
			"is": 1,
			"they": 1,
			"for": 2,
			"tomorrow": 1,
			"trust": 1,
			"eye": 1,
			"a": 1,
			"on": 3,
			"thee": 1,
			"eternal": 1,
			"and": 1,
			"fate": 1,
			"with": 1,
			"yet": 2,
			"to": 1,
			"as": 1,
			"o": 1,
			"the": 2,
			"her": 1,
			"in": 1
		},
		"didst": {
			"more": 1,
			"war": 1,
			"humble": 1,
			"call": 1,
			"weep": 1,
			"ever": 2,
			"smile": 1,
			"thy": 1,
			"watch": 1,
			"hope": 1,
			"seek": 1,
			"cease": 1,
			"that": 2,
			"bear": 1,
			"wait": 2,
			"ride": 1,
			"fill": 1,
			"a": 1,
			"break": 1,
			"thou": 6,
			"draw": 1,
			"from": 1,
			"give": 1,
			"shine": 1,
			"open": 1,
			"fear": 1,
			"answer": 1,
			"strain": 1,
			"me": 2
		},
		"rest": {
			"sweet": 1,
			"come": 1,
			"more": 1,
			"hear": 1,
			"within": 2,
			"his": 4,
			"james": 1,
			"beside": 1,
			"alas": 1,
			"fell": 1,
			"under": 3,
			"who": 1,
			"which": 1,
			"of": 11,
			"she": 1,
			"rock": 1,
			"anonymous": 1,
			"does": 1,
			"sez": 1,
			"whatever": 1,
			"age": 1,
			"dear": 1,
			"behold": 1,
			"not": 1,
			"divine": 1,
			"it": 2,
			"far": 1,
			"by": 4,
			"is": 6,
			"cross": 1,
			"forever": 1,
			"hark": 1,
			"ever": 1,
			"about": 1,
			"they": 3,
			"strike": 1,
			"robert": 1,
			"than": 1,
			"those": 1,
			"where": 5,
			"just": 1,
			"for": 7,
			"past": 1,
			"heaven": 1,
			"worse": 1,
			"take": 3,
			"tomorrow": 1,
			"rest": 2,
			"my": 3,
			"fingers": 1,
			"again": 1,
			"forgot": 1,
			"thy": 3,
			"hushed": 1,
			"ere": 1,
			"faith": 1,
			"god": 1,
			"can": 1,
			"did": 1,
			"was": 1,
			"that": 2,
			"if": 1,
			"both": 1,
			"oh": 1,
			"or": 1,
			"have": 1,
			"a": 3,
			"so": 2,
			"them": 1,
			"upon": 5,
			"lord": 1,
			"hath": 1,
			"love": 1,
			"on": 5,
			"bend": 1,
			"but": 4,
			"time": 1,
			"thee": 4,
			"ye": 2,
			"when": 1,
			"knows": 1,
			"out": 1,
			"and": 22,
			"i": 3,
			"thou": 5,
			"too": 1,
			"how": 1,
			"hearts": 1,
			"from": 8,
			"would": 1,
			"while": 1,
			"no": 2,
			"alfred": 1,
			"with": 6,
			"some": 2,
			"till": 4,
			"then": 1,
			"lose": 1,
			"king": 1,
			"begun": 1,
			"shall": 1,
			"to": 9,
			"may": 2,
			"hail": 2,
			"we": 3,
			"as": 1,
			"he": 1,
			"arms": 1,
			"me": 1,
			"at": 3,
			"o": 2,
			"the": 12,
			"in": 15
		},
		"my": {
			"sweet": 4,
			"books": 1,
			"perchance": 1,
			"flower": 4,
			"jean": 4,
			"footnote": 1,
			"foolish": 3,
			"dying": 5,
			"floor": 1,
			"saviour": 3,
			"sighs": 1,
			"more": 2,
			"hear": 1,
			"ain": 11,
			"walks": 1,
			"since": 1,
			"died": 1,
			"lot": 7,
			"wife": 3,
			"ready": 1,
			"loves": 3,
			"im": 2,
			"parting": 1,
			"christ": 2,
			"gates": 1,
			"worn": 1,
			"wish": 3,
			"light": 8,
			"earth": 2,
			"pen": 1,
			"forehead": 4,
			"his": 2,
			"stream": 1,
			"ear": 12,
			"book": 1,
			"charity": 1,
			"means": 1,
			"blood": 8,
			"narrow": 1,
			"precious": 1,
			"begin": 1,
			"cheek": 6,
			"lady": 6,
			"bare": 1,
			"kiss": 1,
			"horn": 1,
			"creed": 1,
			"passions": 1,
			"s": 1,
			"white": 2,
			"none": 2,
			"hast": 1,
			"woe": 3,
			"silver": 1,
			"tell": 1,
			"weary": 3,
			"are": 4,
			"saints": 1,
			"story": 2,
			"fears": 4,
			"humble": 3,
			"alas": 1,
			"right": 1,
			"back": 3,
			"ive": 1,
			"word": 1,
			"very": 4,
			"who": 2,
			"sweetest": 1,
			"silent": 2,
			"gate": 1,
			"men": 1,
			"lover": 1,
			"sake": 5,
			"holds": 1,
			"worth": 1,
			"call": 1,
			"country": 13,
			"steps": 4,
			"body": 8,
			"of": 15,
			"this": 1,
			"bonnie": 3,
			"high": 1,
			"fame": 1,
			"souls": 6,
			"calls": 1,
			"hung": 1,
			"food": 1,
			"angel": 1,
			"she": 3,
			"anonymous": 1,
			"nor": 2,
			"sons": 2,
			"sacred": 1,
			"hymn": 1,
			"find": 1,
			"gold": 1,
			"three": 1,
			"morning": 1,
			"heavy": 1,
			"roar": 1,
			"sight": 11,
			"age": 5,
			"joy": 2,
			"bird": 1,
			"brother": 10,
			"sheep": 3,
			"race": 3,
			"dear": 18,
			"fresh": 1,
			"pain": 3,
			"mouth": 3,
			"place": 3,
			"part": 6,
			"chant": 1,
			"rose": 1,
			"beloved": 1,
			"limbs": 1,
			"mine": 2,
			"not": 1,
			"hours": 2,
			"constant": 1,
			"side": 13,
			"burden": 1,
			"praise": 1,
			"sword": 4,
			"it": 6,
			"sins": 6,
			"flight": 1,
			"eager": 1,
			"twas": 1,
			"far": 1,
			"spirits": 4,
			"child": 11,
			"bark": 4,
			"tongue": 5,
			"feeble": 2,
			"by": 2,
			"eyes": 22,
			"fathers": 15,
			"father": 25,
			"long": 1,
			"sorrows": 8,
			"bring": 1,
			"corn": 1,
			"quiet": 3,
			"cold": 1,
			"pride": 4,
			"land": 6,
			"is": 16,
			"cross": 2,
			"glittering": 1,
			"rise": 1,
			"like": 3,
			"hurrah": 1,
			"boy": 6,
			"glass": 1,
			"found": 1,
			"children": 1,
			"idle": 2,
			"why": 1,
			"native": 9,
			"people": 2,
			"good": 10,
			"lead": 1,
			"pleased": 1,
			"ever": 1,
			"care": 7,
			"steed": 2,
			"they": 2,
			"speech": 2,
			"prayer": 3,
			"path": 6,
			"laughing": 1,
			"faint": 1,
			"nature": 4,
			"guide": 7,
			"glowing": 1,
			"mother": 12,
			"thus": 1,
			"seven": 1,
			"new": 1,
			"weakness": 2,
			"sister": 2,
			"laid": 1,
			"een": 3,
			"song": 9,
			"crown": 6,
			"friends": 8,
			"gentle": 1,
			"despair": 2,
			"run": 1,
			"train": 2,
			"gray": 1,
			"just": 1,
			"for": 5,
			"past": 1,
			"hand": 18,
			"heaven": 1,
			"bosom": 18,
			"charge": 1,
			"frost": 1,
			"cup": 4,
			"lost": 3,
			"cry": 3,
			"bloody": 1,
			"darling": 3,
			"take": 1,
			"cannot": 1,
			"bride": 5,
			"speak": 1,
			"breath": 6,
			"boys": 8,
			"rest": 1,
			"my": 14,
			"fingers": 1,
			"words": 6,
			"hour": 2,
			"great": 1,
			"tender": 4,
			"beauty": 3,
			"again": 1,
			"desire": 5,
			"earl": 1,
			"burning": 1,
			"touch": 1,
			"watch": 1,
			"greater": 1,
			"sleep": 6,
			"pretty": 1,
			"moan": 1,
			"peace": 3,
			"hopes": 6,
			"birth": 1,
			"whom": 4,
			"shadow": 1,
			"mary": 6,
			"dearest": 2,
			"therefore": 1,
			"ground": 1,
			"soul": 105,
			"passion": 2,
			"hope": 2,
			"garden": 4,
			"most": 1,
			"sir": 1,
			"senses": 2,
			"times": 8,
			"wandering": 1,
			"yellow": 1,
			"friend": 14,
			"lords": 1,
			"name": 17,
			"door": 1,
			"clay": 1,
			"queen": 2,
			"countrys": 3,
			"face": 14,
			"sin": 7,
			"trembling": 1,
			"rain": 1,
			"faith": 7,
			"god": 17,
			"can": 2,
			"shame": 1,
			"noble": 3,
			"power": 2,
			"were": 1,
			"waking": 2,
			"oer": 1,
			"need": 2,
			"was": 5,
			"that": 6,
			"if": 1,
			"willie": 2,
			"let": 4,
			"show": 1,
			"lips": 12,
			"cares": 2,
			"daily": 1,
			"thin": 1,
			"full": 1,
			"fall": 5,
			"go": 2,
			"trust": 6,
			"sail": 1,
			"perfume": 1,
			"brothers": 10,
			"what": 2,
			"beautiful": 3,
			"an": 2,
			"hold": 1,
			"nothing": 1,
			"stars": 1,
			"music": 1,
			"or": 5,
			"conscience": 4,
			"think": 1,
			"eye": 7,
			"start": 1,
			"moved": 1,
			"hands": 9,
			"have": 3,
			"study": 1,
			"am": 2,
			"tears": 4,
			"horse": 2,
			"fill": 2,
			"their": 2,
			"a": 4,
			"so": 2,
			"babe": 6,
			"brings": 1,
			"them": 1,
			"true": 9,
			"flies": 1,
			"upon": 1,
			"lay": 1,
			"lord": 23,
			"whole": 2,
			"many": 1,
			"spirit": 36,
			"hath": 1,
			"ashes": 1,
			"delight": 1,
			"love": 32,
			"on": 2,
			"break": 1,
			"maryland": 10,
			"own": 30,
			"girl": 1,
			"shroud": 1,
			"brain": 7,
			"deep": 1,
			"memory": 6,
			"feast": 2,
			"old": 6,
			"content": 2,
			"naked": 1,
			"but": 9,
			"death": 3,
			"self": 1,
			"foes": 1,
			"time": 4,
			"poor": 5,
			"thee": 1,
			"ye": 1,
			"years": 1,
			"moving": 1,
			"when": 5,
			"gone": 1,
			"turns": 1,
			"eternal": 1,
			"honest": 1,
			"merry": 2,
			"burst": 1,
			"length": 1,
			"dreams": 3,
			"task": 3,
			"be": 1,
			"bed": 21,
			"firm": 1,
			"merit": 4,
			"feet": 19,
			"wondrous": 1,
			"t": 1,
			"glory": 2,
			"kind": 3,
			"earthly": 1,
			"rhyme": 2,
			"brave": 2,
			"heart": 148,
			"sorrow": 3,
			"anguish": 2,
			"head": 28,
			"verse": 1,
			"and": 39,
			"order": 1,
			"bliss": 1,
			"bones": 1,
			"mothers": 3,
			"grace": 2,
			"sun": 1,
			"truth": 3,
			"do": 1,
			"dark": 1,
			"doom": 1,
			"last": 3,
			"lone": 1,
			"dream": 11,
			"fate": 7,
			"year": 1,
			"wounded": 1,
			"days": 28,
			"grave": 6,
			"i": 14,
			"haste": 1,
			"tale": 1,
			"down": 1,
			"home": 5,
			"here": 3,
			"mournful": 2,
			"too": 1,
			"fought": 1,
			"presence": 1,
			"mortal": 2,
			"one": 2,
			"might": 1,
			"chamber": 1,
			"against": 1,
			"perfect": 2,
			"secret": 3,
			"hate": 1,
			"state": 2,
			"work": 4,
			"rather": 1,
			"brow": 6,
			"hearts": 10,
			"help": 1,
			"other": 1,
			"from": 1,
			"stranger": 1,
			"gifts": 1,
			"drink": 1,
			"would": 2,
			"stronger": 1,
			"living": 1,
			"mind": 9,
			"ill": 2,
			"ancient": 1,
			"these": 2,
			"shield": 2,
			"duty": 1,
			"while": 1,
			"foul": 1,
			"breast": 13,
			"honor": 1,
			"present": 1,
			"no": 2,
			"early": 3,
			"voice": 5,
			"guest": 2,
			"solitude": 3,
			"kingdom": 1,
			"goodly": 1,
			"guilty": 1,
			"ears": 2,
			"with": 9,
			"singing": 1,
			"sad": 3,
			"gaze": 1,
			"single": 1,
			"hair": 4,
			"realm": 1,
			"heads": 1,
			"will": 11,
			"strong": 1,
			"prayers": 2,
			"all": 10,
			"patient": 1,
			"grief": 6,
			"wild": 1,
			"comrades": 4,
			"then": 2,
			"room": 2,
			"flesh": 2,
			"blest": 1,
			"thought": 5,
			"could": 1,
			"through": 2,
			"ten": 1,
			"foe": 4,
			"has": 1,
			"songs": 1,
			"asleep": 1,
			"laugh": 1,
			"service": 1,
			"angels": 2,
			"thread": 1,
			"road": 1,
			"king": 9,
			"couch": 1,
			"master": 5,
			"ways": 2,
			"guess": 1,
			"spring": 1,
			"minds": 1,
			"being": 1,
			"wealth": 1,
			"our": 1,
			"throne": 4,
			"day": 1,
			"sense": 3,
			"hall": 1,
			"fortune": 1,
			"page": 1,
			"frame": 1,
			"night": 1,
			"pity": 1,
			"shall": 4,
			"before": 2,
			"only": 4,
			"golden": 2,
			"wind": 1,
			"still": 3,
			"chance": 2,
			"your": 2,
			"natures": 2,
			"best": 2,
			"way": 8,
			"mark": 1,
			"to": 21,
			"youth": 6,
			"human": 2,
			"cities": 1,
			"knee": 4,
			"turn": 1,
			"thinking": 1,
			"little": 15,
			"view": 2,
			"get": 1,
			"vows": 1,
			"art": 3,
			"lived": 1,
			"harp": 1,
			"may": 2,
			"strife": 1,
			"withered": 1,
			"ship": 7,
			"we": 2,
			"gloom": 2,
			"simple": 1,
			"loss": 2,
			"whose": 1,
			"as": 4,
			"fair": 2,
			"happy": 2,
			"life": 36,
			"end": 5,
			"he": 1,
			"arms": 5,
			"strength": 8,
			"son": 11,
			"at": 4,
			"fancy": 4,
			"lies": 2,
			"wound": 2,
			"o": 3,
			"east": 1,
			"chain": 1,
			"gain": 1,
			"left": 2,
			"arise": 1,
			"the": 23,
			"though": 1,
			"treasure": 1,
			"sure": 2,
			"house": 4,
			"labor": 1,
			"share": 3,
			"weak": 1,
			"young": 3,
			"dead": 3,
			"tread": 1,
			"thirst": 2,
			"trees": 1,
			"first": 4,
			"jesus": 1,
			"there": 1,
			"lowly": 1,
			"restless": 1,
			"in": 13,
			"choice": 2,
			"step": 1,
			"purpose": 2,
			"dim": 2,
			"thoughts": 13
		},
		"spent": {
			"come": 1,
			"since": 1,
			"wi": 1,
			"nor": 1,
			"it": 1,
			"long": 2,
			"its": 1,
			"thy": 1,
			"ere": 1,
			"an": 1,
			"their": 1,
			"on": 1,
			"one": 1,
			"with": 1,
			"all": 1,
			"day": 1,
			"to": 1,
			"flame": 1,
			"whose": 1,
			"as": 1,
			"the": 1,
			"in": 1
		},
		"blow": {
			"cool": 1,
			"his": 2,
			"who": 3,
			"of": 1,
			"this": 1,
			"after": 1,
			"up": 1,
			"nor": 1,
			"it": 5,
			"by": 1,
			"like": 1,
			"thus": 1,
			"for": 1,
			"my": 2,
			"blow": 2,
			"whats": 1,
			"winds": 1,
			"whether": 1,
			"that": 1,
			"let": 1,
			"even": 1,
			"their": 1,
			"a": 1,
			"on": 2,
			"but": 2,
			"death": 1,
			"when": 1,
			"and": 14,
			"i": 1,
			"thou": 2,
			"down": 1,
			"from": 3,
			"with": 1,
			"now": 1,
			"some": 1,
			"till": 1,
			"then": 2,
			"through": 2,
			"thats": 1,
			"open": 1,
			"fear": 1,
			"wind": 2,
			"to": 1,
			"he": 1,
			"the": 6,
			"in": 1
		},
		"whats": {
			"earth": 1,
			"this": 2,
			"fame": 1,
			"mine": 2,
			"hallowed": 2,
			"robert": 1,
			"than": 1,
			"past": 2,
			"my": 1,
			"that": 3,
			"what": 1,
			"a": 2,
			"gone": 2,
			"one": 1,
			"to": 1,
			"done": 2,
			"the": 4,
			"her": 1,
			"in": 2
		},
		"fingers": {
			"white": 1,
			"weary": 2,
			"rude": 1,
			"wander": 1,
			"mine": 1,
			"cold": 2,
			"lo": 1,
			"where": 1,
			"press": 1,
			"lost": 1,
			"my": 1,
			"that": 1,
			"have": 1,
			"on": 1,
			"close": 1,
			"and": 3,
			"ends": 1,
			"at": 1,
			"point": 1
		},
		"band": {
			"who": 3,
			"which": 1,
			"of": 3,
			"is": 1,
			"than": 1,
			"where": 2,
			"for": 1,
			"band": 1,
			"did": 1,
			"that": 5,
			"true": 1,
			"on": 1,
			"but": 1,
			"until": 1,
			"and": 5,
			"i": 1,
			"with": 2,
			"till": 1,
			"king": 1,
			"ah": 1,
			"he": 1,
			"at": 1,
			"the": 3,
			"there": 1
		},
		"bore": {
			"look": 1,
			"within": 1,
			"his": 2,
			"him": 1,
			"of": 2,
			"nor": 1,
			"it": 2,
			"like": 1,
			"away": 1,
			"you": 1,
			"without": 1,
			"my": 1,
			"freedom": 1,
			"have": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"them": 2,
			"never": 1,
			"lifes": 1,
			"and": 4,
			"i": 1,
			"down": 1,
			"henry": 1,
			"with": 3,
			"wild": 1,
			"then": 1,
			"our": 1,
			"to": 2,
			"me": 1,
			"the": 5,
			"her": 1,
			"in": 1
		},
		"count": {
			"of": 1,
			"is": 1,
			"that": 2,
			"their": 2,
			"them": 1,
			"time": 1,
			"myself": 1,
			"no": 1,
			"our": 1,
			"me": 1,
			"the": 8,
			"in": 1
		},
		"words": {
			"his": 2,
			"begin": 1,
			"are": 18,
			"made": 1,
			"fell": 1,
			"which": 4,
			"of": 24,
			"up": 1,
			"she": 4,
			"divine": 1,
			"put": 1,
			"far": 1,
			"is": 1,
			"like": 3,
			"idle": 1,
			"they": 4,
			"prayer": 1,
			"believe": 1,
			"you": 1,
			"without": 1,
			"than": 1,
			"those": 1,
			"gentle": 1,
			"for": 2,
			"theres": 1,
			"my": 2,
			"words": 1,
			"came": 1,
			"comes": 1,
			"therefore": 1,
			"can": 2,
			"were": 3,
			"that": 8,
			"willie": 1,
			"make": 1,
			"had": 2,
			"an": 1,
			"or": 3,
			"de": 1,
			"their": 1,
			"a": 2,
			"faces": 1,
			"adieu": 1,
			"on": 1,
			"but": 1,
			"ye": 1,
			"when": 1,
			"be": 2,
			"and": 13,
			"move": 1,
			"fly": 1,
			"from": 4,
			"would": 2,
			"voice": 1,
			"with": 3,
			"learned": 1,
			"will": 1,
			"before": 1,
			"still": 1,
			"to": 9,
			"may": 1,
			"th": 1,
			"we": 1,
			"as": 4,
			"he": 8,
			"o": 1,
			"grow": 1,
			"the": 12,
			"though": 1,
			"her": 1,
			"passed": 1,
			"fail": 2,
			"in": 3
		},
		"hour": {
			"come": 1,
			"more": 1,
			"his": 2,
			"see": 1,
			"begin": 1,
			"bare": 1,
			"tell": 1,
			"ive": 1,
			"which": 2,
			"ago": 3,
			"of": 25,
			"this": 1,
			"after": 1,
			"she": 1,
			"forth": 1,
			"by": 1,
			"alone": 2,
			"long": 1,
			"is": 4,
			"like": 2,
			"its": 2,
			"friends": 1,
			"for": 3,
			"can": 1,
			"was": 4,
			"runs": 1,
			"that": 6,
			"if": 3,
			"willie": 1,
			"let": 1,
			"full": 1,
			"fall": 1,
			"gives": 1,
			"what": 1,
			"oh": 1,
			"or": 3,
			"have": 3,
			"their": 1,
			"a": 3,
			"upon": 1,
			"things": 1,
			"but": 2,
			"bell": 1,
			"perhaps": 2,
			"ye": 1,
			"when": 8,
			"be": 1,
			"sorrow": 1,
			"and": 10,
			"dark": 1,
			"i": 3,
			"each": 1,
			"from": 1,
			"would": 1,
			"while": 1,
			"with": 5,
			"all": 2,
			"patient": 1,
			"dost": 1,
			"day": 1,
			"shall": 2,
			"before": 2,
			"to": 9,
			"into": 1,
			"may": 2,
			"we": 5,
			"as": 1,
			"he": 1,
			"o": 2,
			"the": 13,
			"tis": 1,
			"passed": 1,
			"there": 1,
			"grows": 1
		},
		"came": {
			"within": 1,
			"his": 2,
			"him": 1,
			"back": 4,
			"of": 3,
			"up": 3,
			"nor": 2,
			"forth": 6,
			"mine": 1,
			"behold": 1,
			"not": 3,
			"over": 3,
			"by": 2,
			"like": 2,
			"away": 1,
			"they": 2,
			"robert": 1,
			"laid": 1,
			"where": 2,
			"for": 1,
			"again": 2,
			"wandering": 2,
			"were": 1,
			"oer": 9,
			"crowned": 1,
			"that": 3,
			"rolling": 1,
			"man": 1,
			"go": 1,
			"had": 1,
			"an": 2,
			"or": 1,
			"have": 1,
			"winter": 1,
			"a": 15,
			"so": 1,
			"upon": 1,
			"many": 1,
			"on": 3,
			"content": 1,
			"but": 2,
			"ye": 1,
			"when": 1,
			"onward": 1,
			"out": 7,
			"and": 20,
			"i": 2,
			"down": 10,
			"home": 1,
			"here": 1,
			"one": 1,
			"softly": 1,
			"each": 1,
			"from": 4,
			"foul": 1,
			"no": 3,
			"with": 5,
			"flying": 1,
			"all": 1,
			"through": 4,
			"ten": 1,
			"dost": 1,
			"behind": 1,
			"only": 1,
			"still": 1,
			"to": 19,
			"gently": 1,
			"we": 1,
			"he": 1,
			"me": 1,
			"at": 3,
			"o": 1,
			"the": 16,
			"though": 1,
			"stood": 1,
			"her": 4,
			"in": 10,
			"dim": 1
		},
		"standing": {
			"by": 1,
			"corn": 1,
			"cross": 1,
			"like": 1,
			"thus": 1,
			"lonely": 1,
			"upon": 1,
			"on": 2,
			"moving": 1,
			"and": 1,
			"lone": 1,
			"with": 2,
			"still": 3,
			"as": 1,
			"at": 1,
			"fight": 1,
			"near": 2,
			"there": 1
		},
		"note": {
			"surely": 1,
			"of": 7,
			"nor": 1,
			"long": 1,
			"is": 2,
			"like": 1,
			"where": 1,
			"morn": 1,
			"comes": 1,
			"that": 2,
			"so": 1,
			"hath": 1,
			"poor": 1,
			"when": 1,
			"be": 1,
			"and": 1,
			"quick": 1,
			"with": 2,
			"yon": 1,
			"we": 1,
			"as": 1,
			"he": 1
		},
		"heroes": {
			"dare": 1,
			"blood": 1,
			"voices": 1,
			"war": 1,
			"fell": 1,
			"under": 1,
			"who": 1,
			"of": 3,
			"rest": 1,
			"band": 1,
			"sleep": 1,
			"gave": 1,
			"old": 1,
			"gone": 1,
			"and": 1,
			"from": 1,
			"slain": 1,
			"round": 1,
			"lie": 1,
			"live": 1,
			"as": 1,
			"the": 4,
			"though": 1,
			"dead": 1,
			"in": 3
		},
		"remain": {
			"of": 1,
			"nor": 1,
			"not": 1,
			"alone": 1,
			"sighing": 1,
			"if": 1,
			"let": 1,
			"what": 1,
			"or": 1,
			"a": 2,
			"cruel": 1,
			"but": 1,
			"when": 1,
			"until": 1,
			"mans": 1,
			"and": 2,
			"one": 2,
			"till": 1,
			"as": 1,
			"below": 1,
			"the": 2,
			"in": 1
		},
		"twilight": {
			"cool": 1,
			"fell": 1,
			"beam": 1,
			"of": 1,
			"land": 1,
			"is": 1,
			"new": 1,
			"gray": 4,
			"hour": 1,
			"comes": 1,
			"that": 1,
			"upon": 1,
			"spirit": 1,
			"and": 3,
			"down": 1,
			"told": 1,
			"forest": 1,
			"brow": 1,
			"from": 1,
			"with": 1,
			"soft": 1,
			"shade": 1,
			"to": 1,
			"wood": 1,
			"dim": 1
		},
		"winds": {
			"sweet": 1,
			"come": 3,
			"play": 1,
			"tell": 1,
			"dance": 1,
			"are": 2,
			"which": 1,
			"of": 10,
			"among": 1,
			"grew": 1,
			"roar": 1,
			"it": 1,
			"send": 1,
			"bring": 1,
			"is": 1,
			"swept": 1,
			"blown": 1,
			"my": 1,
			"came": 1,
			"wandering": 1,
			"were": 1,
			"that": 14,
			"had": 1,
			"what": 1,
			"or": 1,
			"have": 4,
			"them": 1,
			"upon": 1,
			"on": 1,
			"but": 1,
			"thee": 1,
			"be": 1,
			"and": 20,
			"from": 3,
			"with": 2,
			"soft": 1,
			"shall": 1,
			"to": 1,
			"as": 1,
			"the": 5,
			"her": 1
		},
		"great": {
			"tune": 1,
			"footnote": 1,
			"more": 1,
			"hear": 1,
			"died": 1,
			"light": 2,
			"cloud": 1,
			"his": 2,
			"st": 1,
			"law": 1,
			"thing": 1,
			"white": 2,
			"none": 1,
			"tell": 1,
			"are": 3,
			"who": 2,
			"men": 5,
			"ones": 1,
			"of": 13,
			"this": 1,
			"star": 2,
			"high": 1,
			"souls": 1,
			"feels": 1,
			"city": 1,
			"roar": 1,
			"darkness": 2,
			"joy": 2,
			"news": 1,
			"praise": 1,
			"army": 2,
			"image": 2,
			"by": 1,
			"jove": 2,
			"pride": 1,
			"land": 1,
			"is": 4,
			"vision": 1,
			"takes": 1,
			"gift": 2,
			"why": 1,
			"kings": 1,
			"about": 2,
			"you": 1,
			"mother": 1,
			"thus": 1,
			"swept": 1,
			"slow": 1,
			"poet": 2,
			"song": 2,
			"where": 1,
			"welcome": 1,
			"for": 2,
			"heaven": 1,
			"should": 3,
			"my": 2,
			"blow": 1,
			"words": 1,
			"came": 2,
			"winds": 1,
			"desire": 2,
			"earl": 1,
			"thy": 1,
			"ere": 1,
			"whom": 1,
			"friend": 1,
			"name": 6,
			"faith": 1,
			"god": 7,
			"power": 1,
			"cause": 4,
			"that": 1,
			"rolling": 1,
			"man": 5,
			"make": 1,
			"victory": 2,
			"had": 1,
			"what": 1,
			"or": 2,
			"eye": 1,
			"have": 1,
			"blush": 1,
			"tears": 2,
			"a": 3,
			"things": 1,
			"lord": 3,
			"spirit": 2,
			"delight": 2,
			"tomb": 1,
			"on": 1,
			"but": 4,
			"death": 2,
			"knowledge": 1,
			"deed": 1,
			"plain": 1,
			"be": 1,
			"merit": 1,
			"t": 1,
			"rage": 1,
			"heart": 2,
			"sorrow": 1,
			"and": 29,
			"sun": 2,
			"do": 1,
			"poem": 2,
			"i": 1,
			"thou": 3,
			"guns": 1,
			"too": 1,
			"fought": 1,
			"one": 1,
			"might": 1,
			"tall": 1,
			"stands": 1,
			"how": 1,
			"hearts": 1,
			"from": 1,
			"gifts": 1,
			"no": 2,
			"calm": 1,
			"called": 1,
			"with": 5,
			"now": 1,
			"will": 2,
			"all": 2,
			"gay": 1,
			"harvest": 1,
			"feed": 1,
			"master": 3,
			"minds": 2,
			"hall": 2,
			"feel": 1,
			"pity": 1,
			"still": 2,
			"shade": 2,
			"to": 8,
			"poets": 1,
			"into": 1,
			"round": 1,
			"slowly": 1,
			"sign": 1,
			"glad": 1,
			"whose": 1,
			"as": 2,
			"heavens": 1,
			"done": 1,
			"end": 2,
			"he": 1,
			"sat": 1,
			"at": 1,
			"point": 1,
			"grow": 1,
			"translation": 1,
			"streams": 1,
			"the": 9,
			"fight": 1,
			"world": 4,
			"first": 1,
			"seas": 1,
			"in": 14,
			"thoughts": 1
		},
		"john": {
			"else": 1,
			"footnote": 1,
			"us": 1,
			"parting": 1,
			"james": 1,
			"white": 2,
			"under": 1,
			"body": 2,
			"of": 3,
			"up": 1,
			"rock": 1,
			"nor": 1,
			"sez": 1,
			"lines": 1,
			"not": 1,
			"praise": 1,
			"it": 1,
			"bless": 1,
			"like": 1,
			"farewell": 1,
			"you": 2,
			"its": 2,
			"song": 1,
			"small": 1,
			"for": 1,
			"darling": 1,
			"my": 1,
			"soul": 1,
			"francis": 1,
			"sir": 1,
			"god": 1,
			"was": 1,
			"an": 2,
			"a": 3,
			"on": 1,
			"mountain": 1,
			"old": 1,
			"but": 1,
			"brown": 3,
			"when": 2,
			"honest": 1,
			"whittier": 16,
			"i": 2,
			"home": 1,
			"henry": 2,
			"from": 2,
			"guest": 1,
			"alfred": 1,
			"with": 2,
			"now": 1,
			"heads": 1,
			"gay": 1,
			"thought": 1,
			"clear": 1,
			"our": 1,
			"patience": 1,
			"your": 2,
			"to": 2,
			"written": 1,
			"as": 1,
			"charles": 1,
			"he": 1,
			"o": 1,
			"grow": 1,
			"the": 17,
			"in": 1
		},
		"tender": {
			"blue": 1,
			"more": 1,
			"loves": 1,
			"light": 3,
			"are": 2,
			"hide": 1,
			"steps": 1,
			"of": 5,
			"she": 1,
			"blossoms": 1,
			"over": 1,
			"spirits": 1,
			"eyes": 3,
			"is": 1,
			"boy": 1,
			"care": 3,
			"you": 1,
			"mother": 3,
			"leaves": 1,
			"friends": 1,
			"hand": 1,
			"rest": 1,
			"my": 1,
			"words": 2,
			"touch": 1,
			"face": 1,
			"dew": 1,
			"power": 1,
			"was": 2,
			"that": 1,
			"trust": 1,
			"tear": 1,
			"waiting": 1,
			"eye": 2,
			"hands": 1,
			"have": 1,
			"a": 1,
			"green": 2,
			"things": 1,
			"spirit": 1,
			"on": 3,
			"charm": 2,
			"years": 1,
			"april": 1,
			"heart": 1,
			"and": 9,
			"grace": 4,
			"i": 1,
			"here": 1,
			"mournful": 1,
			"voice": 1,
			"with": 3,
			"meet": 1,
			"will": 1,
			"thought": 1,
			"to": 3,
			"flame": 1,
			"gloom": 1,
			"as": 4,
			"he": 1,
			"o": 1,
			"the": 1,
			"in": 1
		},
		"sighing": {
			"sent": 1,
			"of": 1,
			"for": 1,
			"along": 1,
			"that": 2,
			"on": 1,
			"and": 3,
			"down": 1,
			"how": 1,
			"from": 1,
			"through": 1,
			"patience": 1,
			"round": 1,
			"lie": 1,
			"happy": 1,
			"said": 1,
			"the": 1,
			"there": 1
		},
		"beauty": {
			"us": 1,
			"won": 1,
			"thine": 1,
			"unseen": 1,
			"deeper": 1,
			"seemed": 1,
			"made": 1,
			"which": 2,
			"of": 8,
			"after": 1,
			"she": 2,
			"grew": 1,
			"behold": 1,
			"not": 1,
			"shows": 1,
			"hangs": 1,
			"wisdom": 1,
			"is": 7,
			"ever": 1,
			"they": 2,
			"new": 1,
			"earths": 1,
			"than": 1,
			"for": 1,
			"lost": 1,
			"cannot": 1,
			"thy": 1,
			"seek": 1,
			"oer": 1,
			"crowned": 2,
			"that": 2,
			"cried": 1,
			"or": 1,
			"bright": 1,
			"true": 1,
			"never": 2,
			"whence": 1,
			"but": 1,
			"be": 1,
			"and": 12,
			"i": 2,
			"thou": 1,
			"might": 1,
			"such": 1,
			"shining": 1,
			"draw": 1,
			"with": 2,
			"virtue": 1,
			"will": 1,
			"all": 1,
			"then": 1,
			"angels": 1,
			"beauteous": 1,
			"our": 1,
			"passing": 1,
			"needs": 1,
			"yet": 1,
			"to": 3,
			"as": 2,
			"life": 1,
			"he": 1,
			"grow": 1,
			"the": 3,
			"though": 1,
			"her": 1,
			"there": 1,
			"in": 5,
			"dim": 1,
			"shed": 1
		},
		"short": {
			"sweet": 1,
			"space": 2,
			"of": 1,
			"hours": 3,
			"dry": 1,
			"began": 1,
			"twas": 1,
			"twixt": 1,
			"is": 2,
			"vision": 1,
			"prayer": 1,
			"breath": 1,
			"hour": 4,
			"thy": 1,
			"moment": 1,
			"were": 1,
			"repose": 1,
			"or": 1,
			"a": 3,
			"so": 1,
			"but": 1,
			"when": 1,
			"sigh": 1,
			"and": 6,
			"days": 1,
			"i": 2,
			"ears": 1,
			"through": 1,
			"yet": 1,
			"to": 3,
			"into": 1,
			"as": 4,
			"noon": 1,
			"end": 1,
			"the": 1,
			"in": 1
		},
		"again": {
			"footnote": 1,
			"hear": 1,
			"blessd": 1,
			"within": 1,
			"parting": 1,
			"fierce": 1,
			"free": 1,
			"forget": 1,
			"doubt": 1,
			"die": 1,
			"his": 3,
			"hell": 1,
			"woe": 1,
			"under": 1,
			"toward": 1,
			"of": 3,
			"keep": 1,
			"after": 1,
			"up": 1,
			"she": 1,
			"shakespeare": 1,
			"anonymous": 2,
			"nor": 1,
			"behold": 1,
			"not": 1,
			"it": 5,
			"army": 1,
			"far": 1,
			"by": 1,
			"long": 1,
			"sorrows": 1,
			"is": 2,
			"soon": 1,
			"like": 2,
			"why": 1,
			"hark": 1,
			"together": 1,
			"they": 2,
			"speech": 1,
			"you": 1,
			"mother": 2,
			"nay": 1,
			"its": 2,
			"een": 1,
			"those": 1,
			"where": 1,
			"for": 1,
			"should": 1,
			"theres": 1,
			"tomorrow": 1,
			"rest": 1,
			"my": 2,
			"again": 4,
			"thy": 1,
			"most": 1,
			"oer": 1,
			"was": 1,
			"that": 1,
			"if": 4,
			"let": 2,
			"half": 1,
			"beautiful": 1,
			"even": 1,
			"hands": 1,
			"bright": 1,
			"am": 1,
			"sae": 1,
			"their": 2,
			"a": 4,
			"so": 3,
			"courage": 3,
			"upon": 2,
			"hath": 1,
			"love": 2,
			"on": 3,
			"mountain": 1,
			"but": 3,
			"thee": 1,
			"ye": 1,
			"when": 4,
			"be": 3,
			"say": 1,
			"and": 26,
			"i": 10,
			"thou": 2,
			"down": 2,
			"robin": 4,
			"home": 1,
			"such": 1,
			"each": 1,
			"how": 1,
			"from": 2,
			"would": 1,
			"ill": 1,
			"these": 1,
			"while": 1,
			"no": 2,
			"with": 10,
			"wave": 1,
			"some": 1,
			"till": 1,
			"will": 1,
			"all": 1,
			"wild": 1,
			"ho": 3,
			"our": 1,
			"day": 1,
			"shall": 3,
			"only": 2,
			"your": 2,
			"yet": 3,
			"to": 22,
			"vows": 1,
			"yon": 1,
			"we": 5,
			"as": 2,
			"fair": 2,
			"he": 7,
			"at": 2,
			"o": 5,
			"the": 26,
			"though": 1,
			"her": 2,
			"change": 1,
			"there": 1,
			"in": 6
		},
		"deaths": {
			"ear": 1,
			"white": 1,
			"purple": 1,
			"tide": 1,
			"thick": 1,
			"cold": 2,
			"pale": 1,
			"swift": 1,
			"song": 2,
			"where": 1,
			"frost": 1,
			"shore": 1,
			"was": 1,
			"tree": 1,
			"but": 1,
			"i": 1,
			"shall": 1,
			"at": 1,
			"the": 2,
			"there": 1,
			"in": 1
		},
		"desire": {
			"unseen": 1,
			"him": 1,
			"of": 3,
			"this": 1,
			"beyond": 1,
			"put": 1,
			"by": 1,
			"is": 2,
			"for": 2,
			"should": 1,
			"hope": 1,
			"was": 1,
			"let": 2,
			"or": 2,
			"a": 1,
			"so": 1,
			"on": 1,
			"and": 4,
			"thou": 1,
			"each": 1,
			"from": 1,
			"now": 1,
			"will": 1,
			"poured": 1,
			"shall": 1,
			"to": 2,
			"he": 2,
			"the": 6
		},
		"earl": {
			"s": 1,
			"sake": 1,
			"deeds": 1,
			"body": 1,
			"of": 4,
			"not": 1,
			"it": 1,
			"why": 1,
			"douglas": 11,
			"sir": 1,
			"god": 1,
			"can": 1,
			"did": 1,
			"was": 1,
			"a": 1,
			"and": 1,
			"thou": 1,
			"present": 1,
			"took": 2,
			"then": 1,
			"to": 1,
			"as": 1,
			"said": 2,
			"the": 1,
			"there": 1,
			"in": 1,
			"forgive": 1
		},
		"shines": {
			"thine": 1,
			"his": 1,
			"back": 1,
			"warm": 1,
			"over": 1,
			"like": 1,
			"afar": 1,
			"for": 1,
			"faith": 1,
			"that": 2,
			"always": 1,
			"bright": 1,
			"upon": 1,
			"on": 6,
			"but": 1,
			"when": 1,
			"out": 1,
			"and": 1,
			"i": 3,
			"from": 2,
			"with": 1,
			"through": 1,
			"as": 1,
			"fair": 1,
			"at": 1,
			"the": 6,
			"her": 1,
			"in": 6
		},
		"themselves": {
			"loves": 1,
			"die": 1,
			"are": 1,
			"which": 1,
			"once": 1,
			"up": 1,
			"not": 1,
			"they": 1,
			"words": 1,
			"were": 2,
			"must": 1,
			"sae": 1,
			"their": 1,
			"upon": 1,
			"and": 3,
			"blaze": 1,
			"thou": 1,
			"between": 1,
			"from": 1,
			"with": 1,
			"will": 1,
			"through": 1,
			"laugh": 1,
			"our": 1,
			"to": 2,
			"into": 1,
			"know": 1,
			"as": 1,
			"grow": 1,
			"the": 1,
			"in": 3
		},
		"burning": {
			"come": 1,
			"sighs": 1,
			"of": 2,
			"sands": 1,
			"by": 1,
			"about": 1,
			"song": 1,
			"for": 1,
			"wheels": 1,
			"bright": 1,
			"heat": 1,
			"feet": 1,
			"and": 4,
			"fever": 1,
			"one": 1,
			"breast": 1,
			"no": 1,
			"sand": 1,
			"with": 2,
			"give": 1,
			"all": 1,
			"could": 1,
			"through": 1,
			"foe": 1,
			"loved": 1,
			"to": 1,
			"into": 1,
			"ah": 1,
			"fair": 1,
			"life": 1,
			"below": 1,
			"the": 2,
			"in": 1,
			"thoughts": 1,
			"sky": 1
		},
		"forgot": {
			"his": 1,
			"are": 2,
			"she": 1,
			"nor": 1,
			"by": 1,
			"for": 1,
			"my": 1,
			"most": 1,
			"god": 1,
			"were": 1,
			"their": 1,
			"and": 1,
			"myself": 1,
			"such": 1,
			"henry": 1,
			"how": 1,
			"while": 1,
			"to": 2,
			"the": 4,
			"though": 1,
			"her": 1,
			"in": 1
		},
		"touch": {
			"us": 1,
			"his": 2,
			"him": 2,
			"fell": 1,
			"of": 19,
			"it": 2,
			"like": 1,
			"they": 1,
			"you": 1,
			"my": 1,
			"tender": 1,
			"hope": 1,
			"or": 1,
			"their": 2,
			"a": 2,
			"evermore": 1,
			"but": 2,
			"thee": 1,
			"until": 1,
			"and": 5,
			"days": 1,
			"i": 1,
			"bids": 1,
			"how": 1,
			"with": 1,
			"thats": 1,
			"our": 3,
			"yet": 1,
			"to": 1,
			"at": 1,
			"o": 2,
			"the": 8,
			"her": 2,
			"in": 1
		},
		"enough": {
			"ive": 1,
			"of": 3,
			"for": 12,
			"my": 1,
			"enough": 1,
			"that": 1,
			"hath": 1,
			"but": 1,
			"and": 5,
			"i": 1,
			"thou": 1,
			"no": 1,
			"now": 1,
			"your": 1,
			"to": 14,
			"the": 4,
			"oft": 1,
			"in": 3
		},
		"freedom": {
			"come": 1,
			"ring": 1,
			"die": 1,
			"fell": 2,
			"who": 1,
			"sweetest": 1,
			"of": 1,
			"is": 4,
			"found": 1,
			"why": 1,
			"they": 2,
			"smile": 1,
			"for": 1,
			"didst": 1,
			"shines": 1,
			"did": 1,
			"had": 1,
			"or": 2,
			"gave": 2,
			"their": 1,
			"love": 1,
			"on": 3,
			"when": 2,
			"be": 1,
			"close": 1,
			"and": 5,
			"truth": 1,
			"i": 1,
			"thou": 1,
			"here": 1,
			"draw": 1,
			"from": 2,
			"drink": 1,
			"while": 1,
			"now": 1,
			"through": 2,
			"has": 1,
			"wake": 1,
			"needs": 1,
			"shall": 2,
			"only": 1,
			"still": 1,
			"yet": 2,
			"to": 3,
			"springs": 1,
			"round": 1,
			"slowly": 1,
			"he": 1,
			"at": 1,
			"o": 1,
			"translation": 1,
			"the": 2,
			"stood": 1,
			"fail": 1,
			"in": 6
		},
		"thy": {
			"sweet": 4,
			"bow": 1,
			"foolish": 2,
			"look": 4,
			"woes": 1,
			"sighs": 2,
			"more": 1,
			"lot": 3,
			"wife": 2,
			"blessings": 1,
			"dust": 1,
			"justice": 2,
			"virtues": 3,
			"gates": 5,
			"wish": 1,
			"fierce": 1,
			"chase": 1,
			"free": 1,
			"laws": 1,
			"light": 9,
			"stream": 1,
			"happiness": 1,
			"him": 1,
			"fond": 1,
			"banner": 1,
			"ear": 1,
			"sharp": 1,
			"law": 2,
			"see": 1,
			"blood": 1,
			"precious": 2,
			"temple": 2,
			"cheek": 5,
			"kiss": 3,
			"fit": 1,
			"passions": 1,
			"white": 1,
			"rule": 1,
			"science": 1,
			"silver": 2,
			"purple": 1,
			"wail": 1,
			"weary": 4,
			"are": 4,
			"saints": 7,
			"story": 2,
			"fears": 1,
			"aid": 3,
			"humble": 2,
			"right": 3,
			"back": 2,
			"warm": 1,
			"aye": 1,
			"word": 5,
			"fell": 1,
			"silent": 1,
			"lover": 2,
			"which": 2,
			"sake": 4,
			"beam": 2,
			"worth": 2,
			"tired": 1,
			"call": 2,
			"country": 2,
			"steps": 3,
			"body": 2,
			"of": 14,
			"this": 2,
			"bonnie": 1,
			"high": 1,
			"rude": 1,
			"fame": 4,
			"souls": 4,
			"learning": 1,
			"hills": 1,
			"once": 1,
			"up": 1,
			"off": 1,
			"triumph": 2,
			"she": 1,
			"nor": 1,
			"sons": 11,
			"sacred": 5,
			"command": 2,
			"does": 1,
			"morning": 4,
			"roar": 1,
			"flood": 1,
			"sight": 3,
			"age": 1,
			"joy": 1,
			"lightning": 1,
			"forth": 2,
			"height": 1,
			"brother": 4,
			"sheep": 1,
			"beheld": 1,
			"race": 1,
			"dear": 3,
			"two": 1,
			"pain": 2,
			"place": 3,
			"serene": 1,
			"part": 4,
			"lands": 1,
			"rose": 1,
			"beloved": 1,
			"limbs": 2,
			"mine": 1,
			"not": 2,
			"hours": 1,
			"burn": 2,
			"constant": 1,
			"side": 4,
			"dry": 1,
			"praise": 12,
			"sword": 4,
			"shows": 1,
			"flight": 3,
			"image": 3,
			"fool": 1,
			"spirits": 3,
			"wisdom": 4,
			"child": 3,
			"health": 1,
			"brought": 1,
			"tongue": 5,
			"water": 1,
			"ease": 1,
			"feeble": 1,
			"eyes": 4,
			"fathers": 3,
			"father": 5,
			"woods": 3,
			"alone": 2,
			"long": 2,
			"sorrows": 1,
			"cold": 2,
			"land": 2,
			"wise": 2,
			"is": 11,
			"cross": 2,
			"vision": 1,
			"joyous": 1,
			"although": 1,
			"few": 1,
			"unto": 1,
			"like": 3,
			"takes": 1,
			"return": 1,
			"form": 4,
			"sway": 1,
			"gift": 1,
			"children": 3,
			"why": 2,
			"native": 2,
			"people": 3,
			"immortality": 1,
			"hallowed": 1,
			"kings": 1,
			"forever": 1,
			"care": 1,
			"they": 1,
			"prayer": 2,
			"easy": 1,
			"abroad": 1,
			"funeral": 1,
			"you": 1,
			"nature": 8,
			"guide": 3,
			"stern": 1,
			"mother": 4,
			"pale": 1,
			"new": 1,
			"sister": 1,
			"robert": 1,
			"slave": 1,
			"its": 1,
			"smile": 3,
			"swift": 2,
			"pleasure": 1,
			"song": 6,
			"crown": 1,
			"friends": 2,
			"where": 1,
			"gentle": 5,
			"train": 1,
			"church": 2,
			"lovers": 1,
			"holy": 2,
			"just": 1,
			"welcome": 2,
			"for": 3,
			"past": 2,
			"judgment": 2,
			"hand": 31,
			"bosom": 3,
			"charge": 2,
			"cry": 1,
			"clime": 3,
			"base": 3,
			"take": 1,
			"cannot": 4,
			"bride": 2,
			"breath": 9,
			"boys": 1,
			"rest": 7,
			"my": 3,
			"blow": 1,
			"words": 6,
			"hour": 1,
			"came": 1,
			"heroes": 3,
			"great": 2,
			"beauty": 2,
			"themselves": 1,
			"touch": 1,
			"freedom": 1,
			"thy": 10,
			"sing": 1,
			"smiles": 1,
			"watch": 2,
			"wall": 1,
			"morn": 1,
			"vain": 2,
			"sleep": 1,
			"teach": 1,
			"tone": 1,
			"peace": 7,
			"comes": 2,
			"waves": 2,
			"birth": 1,
			"whom": 2,
			"better": 1,
			"ray": 1,
			"shadow": 1,
			"shore": 5,
			"ground": 2,
			"soul": 17,
			"hope": 2,
			"seek": 1,
			"born": 1,
			"garden": 1,
			"remember": 1,
			"cease": 1,
			"makes": 1,
			"most": 2,
			"wandering": 2,
			"held": 1,
			"evening": 1,
			"rising": 1,
			"friend": 6,
			"wrath": 2,
			"lords": 2,
			"streets": 2,
			"name": 24,
			"clay": 1,
			"glow": 1,
			"countrys": 1,
			"face": 17,
			"sin": 1,
			"trembling": 1,
			"faith": 1,
			"god": 8,
			"can": 2,
			"wit": 1,
			"foot": 2,
			"shame": 1,
			"noble": 2,
			"power": 9,
			"were": 4,
			"comfort": 1,
			"waking": 1,
			"oer": 1,
			"cause": 1,
			"did": 1,
			"walls": 4,
			"was": 3,
			"that": 7,
			"if": 2,
			"willie": 1,
			"let": 2,
			"lips": 5,
			"arm": 1,
			"bear": 1,
			"daily": 1,
			"jerusalem": 2,
			"full": 2,
			"make": 1,
			"victory": 2,
			"fall": 2,
			"broken": 2,
			"go": 1,
			"reign": 1,
			"seed": 2,
			"sail": 1,
			"pure": 1,
			"what": 1,
			"beautiful": 1,
			"repose": 1,
			"front": 1,
			"creatures": 3,
			"stars": 3,
			"even": 1,
			"or": 1,
			"eye": 4,
			"soil": 1,
			"lest": 1,
			"hands": 4,
			"bright": 3,
			"blush": 1,
			"tears": 2,
			"gave": 1,
			"prey": 1,
			"towers": 1,
			"danger": 1,
			"fold": 2,
			"a": 5,
			"so": 5,
			"pains": 2,
			"joys": 8,
			"true": 4,
			"sink": 1,
			"green": 2,
			"lay": 1,
			"lord": 8,
			"never": 1,
			"spirit": 8,
			"ashes": 1,
			"cruel": 1,
			"love": 19,
			"tomb": 1,
			"on": 1,
			"wing": 1,
			"own": 9,
			"mountain": 2,
			"above": 1,
			"smiling": 1,
			"chains": 1,
			"deep": 4,
			"celestial": 1,
			"naked": 1,
			"but": 5,
			"infinite": 1,
			"glance": 1,
			"foes": 1,
			"time": 1,
			"poor": 2,
			"thee": 2,
			"banners": 2,
			"years": 3,
			"when": 2,
			"gone": 1,
			"lifes": 2,
			"onward": 1,
			"eternal": 1,
			"honest": 1,
			"waters": 1,
			"dreams": 3,
			"task": 1,
			"bed": 3,
			"merit": 2,
			"feet": 6,
			"wondrous": 2,
			"wings": 1,
			"t": 1,
			"glory": 11,
			"line": 1,
			"awful": 2,
			"tried": 1,
			"heart": 20,
			"sorrow": 1,
			"head": 7,
			"paradise": 1,
			"and": 35,
			"bliss": 1,
			"bones": 2,
			"mothers": 3,
			"grace": 11,
			"march": 1,
			"truth": 2,
			"do": 1,
			"dark": 1,
			"doom": 1,
			"last": 3,
			"lone": 1,
			"sunshine": 1,
			"rays": 3,
			"lovely": 1,
			"move": 1,
			"dream": 2,
			"fate": 7,
			"year": 1,
			"days": 2,
			"grave": 7,
			"fly": 1,
			"i": 9,
			"worthy": 1,
			"thou": 11,
			"home": 2,
			"broke": 1,
			"here": 1,
			"too": 2,
			"presence": 8,
			"one": 2,
			"might": 5,
			"chamber": 2,
			"judge": 1,
			"rocks": 1,
			"fatherland": 2,
			"against": 1,
			"perfect": 2,
			"secret": 6,
			"shadows": 1,
			"state": 3,
			"work": 3,
			"looks": 3,
			"fields": 2,
			"henry": 1,
			"brow": 7,
			"how": 4,
			"from": 5,
			"gifts": 4,
			"sought": 1,
			"would": 1,
			"living": 3,
			"mind": 1,
			"blade": 1,
			"reason": 1,
			"shield": 2,
			"duty": 1,
			"while": 2,
			"strand": 2,
			"breast": 9,
			"worst": 3,
			"calm": 1,
			"voice": 8,
			"solitude": 1,
			"kingdom": 2,
			"goodly": 1,
			"mighty": 4,
			"with": 8,
			"virtue": 1,
			"everlasting": 1,
			"soft": 2,
			"now": 1,
			"gaze": 1,
			"till": 1,
			"hair": 2,
			"realm": 2,
			"will": 18,
			"locks": 2,
			"prayers": 3,
			"all": 6,
			"chief": 1,
			"grief": 1,
			"gods": 1,
			"wild": 5,
			"flesh": 2,
			"large": 1,
			"blest": 2,
			"thought": 3,
			"notes": 1,
			"ten": 1,
			"foe": 1,
			"toil": 1,
			"service": 1,
			"angels": 1,
			"clear": 2,
			"king": 1,
			"master": 2,
			"ways": 3,
			"being": 2,
			"beauteous": 2,
			"wealth": 2,
			"our": 1,
			"throne": 6,
			"day": 1,
			"works": 1,
			"future": 1,
			"fear": 2,
			"night": 1,
			"patience": 1,
			"mercy": 6,
			"pity": 2,
			"stay": 2,
			"shall": 5,
			"before": 1,
			"only": 2,
			"golden": 2,
			"still": 2,
			"yet": 1,
			"way": 3,
			"course": 1,
			"to": 17,
			"hill": 1,
			"clouds": 1,
			"youth": 1,
			"cities": 1,
			"round": 1,
			"flame": 2,
			"little": 1,
			"live": 1,
			"use": 1,
			"glorious": 4,
			"turning": 1,
			"get": 1,
			"vows": 3,
			"vast": 1,
			"strife": 1,
			"whisper": 1,
			"sign": 1,
			"skies": 3,
			"powers": 1,
			"we": 1,
			"glad": 1,
			"loss": 2,
			"infant": 2,
			"store": 2,
			"whose": 1,
			"as": 3,
			"array": 1,
			"fair": 2,
			"stand": 1,
			"happy": 5,
			"life": 11,
			"end": 5,
			"arms": 4,
			"strength": 3,
			"son": 2,
			"at": 4,
			"fancy": 1,
			"below": 1,
			"slumber": 1,
			"seat": 1,
			"o": 3,
			"coming": 1,
			"chain": 1,
			"streams": 2,
			"the": 10,
			"though": 1,
			"treasure": 1,
			"labor": 1,
			"leads": 1,
			"radiant": 1,
			"young": 1,
			"dead": 2,
			"tread": 1,
			"thirst": 2,
			"fire": 1,
			"oft": 1,
			"lowly": 2,
			"restless": 1,
			"in": 7,
			"choice": 2,
			"purpose": 3,
			"dim": 1,
			"thoughts": 4,
			"shalt": 1
		},
		"sing": {
			"come": 1,
			"his": 2,
			"who": 2,
			"of": 3,
			"high": 1,
			"sings": 1,
			"not": 1,
			"it": 1,
			"by": 2,
			"long": 1,
			"land": 1,
			"unto": 3,
			"away": 2,
			"for": 3,
			"sang": 1,
			"my": 1,
			"winds": 1,
			"themselves": 1,
			"thy": 2,
			"sing": 2,
			"because": 1,
			"were": 1,
			"that": 1,
			"another": 1,
			"what": 1,
			"an": 1,
			"repose": 1,
			"tears": 1,
			"making": 1,
			"their": 1,
			"a": 3,
			"them": 2,
			"upon": 1,
			"on": 7,
			"above": 1,
			"but": 2,
			"thee": 3,
			"ye": 3,
			"and": 8,
			"i": 1,
			"thou": 1,
			"one": 2,
			"saint": 1,
			"from": 2,
			"while": 1,
			"no": 1,
			"with": 7,
			"now": 1,
			"before": 1,
			"still": 1,
			"yet": 1,
			"to": 6,
			"round": 1,
			"heavenly": 1,
			"we": 1,
			"as": 2,
			"at": 3,
			"the": 13,
			"first": 1,
			"there": 1,
			"in": 4,
			"aloud": 2
		},
		"yes": {
			"this": 1,
			"she": 1,
			"find": 1,
			"dear": 1,
			"two": 1,
			"child": 1,
			"good": 1,
			"believe": 1,
			"my": 1,
			"thy": 1,
			"yes": 3,
			"friend": 1,
			"that": 2,
			"stone": 2,
			"love": 1,
			"on": 1,
			"but": 1,
			"death": 1,
			"and": 2,
			"i": 2,
			"thou": 1,
			"here": 1,
			"from": 1,
			"honor": 1,
			"now": 2,
			"to": 1,
			"we": 1,
			"as": 1,
			"he": 1,
			"o": 1,
			"the": 2,
			"there": 1,
			"in": 2
		},
		"smiles": {
			"chase": 1,
			"his": 1,
			"are": 1,
			"of": 3,
			"today": 1,
			"praise": 1,
			"by": 2,
			"like": 3,
			"for": 1,
			"my": 1,
			"sadly": 1,
			"were": 1,
			"oer": 1,
			"that": 3,
			"have": 1,
			"on": 2,
			"above": 2,
			"and": 6,
			"i": 1,
			"too": 1,
			"from": 2,
			"ill": 1,
			"shall": 1,
			"yet": 1,
			"to": 2,
			"he": 1,
			"at": 1,
			"coming": 1,
			"the": 5,
			"there": 1,
			"in": 1
		},
		"watch": {
			"us": 1,
			"his": 1,
			"beside": 1,
			"of": 3,
			"it": 1,
			"over": 2,
			"by": 3,
			"is": 2,
			"like": 1,
			"for": 6,
			"thy": 3,
			"along": 2,
			"oer": 4,
			"was": 1,
			"that": 4,
			"let": 1,
			"their": 1,
			"them": 1,
			"on": 1,
			"above": 1,
			"until": 1,
			"and": 9,
			"do": 1,
			"each": 1,
			"from": 1,
			"no": 1,
			"with": 1,
			"around": 1,
			"till": 1,
			"well": 1,
			"to": 2,
			"me": 1,
			"the": 19,
			"in": 3
		},
		"wall": {
			"look": 1,
			"which": 1,
			"of": 4,
			"up": 1,
			"among": 1,
			"nor": 1,
			"not": 1,
			"over": 1,
			"where": 2,
			"my": 1,
			"let": 1,
			"or": 2,
			"a": 4,
			"so": 1,
			"but": 1,
			"out": 1,
			"and": 6,
			"stands": 1,
			"with": 2,
			"then": 1,
			"has": 1,
			"well": 1,
			"king": 1,
			"to": 2,
			"at": 1,
			"the": 3,
			"though": 1,
			"in": 2
		},
		"greater": {
			"men": 1,
			"which": 1,
			"she": 1,
			"far": 1,
			"lights": 1,
			"ease": 2,
			"land": 1,
			"they": 1,
			"than": 6,
			"man": 1,
			"glory": 1,
			"out": 1,
			"and": 3,
			"sun": 1,
			"such": 1,
			"feeling": 1,
			"dread": 1,
			"grief": 1,
			"to": 3,
			"grow": 1,
			"in": 1,
			"seem": 1
		},
		"morn": {
			"sent": 1,
			"went": 1,
			"his": 1,
			"wi": 1,
			"hide": 1,
			"of": 3,
			"nor": 2,
			"played": 1,
			"not": 1,
			"by": 2,
			"is": 3,
			"like": 1,
			"together": 1,
			"they": 1,
			"mother": 1,
			"without": 1,
			"than": 1,
			"those": 1,
			"tomorrow": 1,
			"came": 1,
			"john": 1,
			"again": 2,
			"thy": 1,
			"smiles": 1,
			"trembling": 1,
			"oer": 1,
			"that": 1,
			"hang": 1,
			"oh": 1,
			"a": 1,
			"so": 2,
			"leave": 1,
			"on": 2,
			"but": 4,
			"when": 5,
			"and": 8,
			"i": 3,
			"such": 1,
			"each": 1,
			"from": 1,
			"no": 1,
			"with": 3,
			"now": 1,
			"till": 1,
			"then": 1,
			"could": 1,
			"through": 1,
			"thats": 1,
			"doth": 2,
			"shall": 1,
			"to": 3,
			"we": 1,
			"as": 2,
			"fair": 1,
			"he": 1,
			"at": 3,
			"the": 10,
			"though": 1,
			"her": 4,
			"in": 1
		},
		"hushed": {
			"his": 1,
			"every": 1,
			"jove": 1,
			"is": 1,
			"away": 2,
			"my": 1,
			"have": 1,
			"their": 1,
			"spirit": 1,
			"be": 1,
			"feet": 1,
			"and": 2,
			"all": 1,
			"to": 2,
			"the": 3,
			"in": 2
		},
		"vain": {
			"jean": 1,
			"earth": 2,
			"are": 2,
			"alas": 1,
			"who": 1,
			"which": 1,
			"hide": 1,
			"of": 3,
			"worlds": 1,
			"she": 1,
			"depart": 1,
			"every": 1,
			"over": 1,
			"wisdom": 1,
			"tongue": 1,
			"by": 2,
			"try": 1,
			"is": 6,
			"they": 1,
			"strike": 1,
			"than": 1,
			"stir": 1,
			"those": 1,
			"where": 1,
			"for": 3,
			"came": 1,
			"desire": 1,
			"thy": 1,
			"vain": 2,
			"hope": 1,
			"most": 1,
			"trembling": 1,
			"god": 1,
			"that": 3,
			"if": 2,
			"man": 3,
			"trust": 1,
			"what": 1,
			"oh": 1,
			"wait": 1,
			"even": 1,
			"or": 2,
			"conscience": 1,
			"a": 1,
			"leave": 1,
			"on": 1,
			"maryland": 1,
			"content": 1,
			"but": 1,
			"ye": 1,
			"and": 13,
			"i": 2,
			"thou": 3,
			"against": 1,
			"shadows": 1,
			"from": 1,
			"strange": 1,
			"would": 1,
			"no": 1,
			"with": 2,
			"sad": 1,
			"now": 2,
			"will": 1,
			"then": 2,
			"has": 2,
			"toil": 2,
			"dost": 1,
			"our": 1,
			"yet": 2,
			"to": 8,
			"little": 1,
			"we": 2,
			"whose": 2,
			"as": 3,
			"he": 1,
			"o": 1,
			"the": 13,
			"her": 2,
			"shalt": 1
		},
		"pray": {
			"james": 1,
			"tell": 2,
			"cast": 1,
			"two": 1,
			"it": 1,
			"something": 1,
			"is": 1,
			"together": 1,
			"you": 2,
			"strike": 1,
			"heard": 1,
			"those": 1,
			"for": 9,
			"heaven": 2,
			"thy": 1,
			"pray": 3,
			"tonight": 1,
			"god": 3,
			"can": 1,
			"that": 5,
			"if": 1,
			"let": 1,
			"what": 2,
			"or": 1,
			"love": 1,
			"on": 1,
			"but": 1,
			"thee": 7,
			"ye": 1,
			"and": 2,
			"thou": 1,
			"one": 2,
			"how": 1,
			"with": 1,
			"gods": 1,
			"then": 1,
			"toil": 1,
			"our": 2,
			"yet": 1,
			"to": 4,
			"may": 1,
			"we": 2,
			"life": 1,
			"at": 1,
			"o": 2,
			"the": 4,
			"though": 1,
			"in": 1
		},
		"sleep": {
			"perchance": 1,
			"low": 2,
			"thine": 1,
			"within": 2,
			"his": 1,
			"are": 1,
			"tired": 2,
			"of": 3,
			"nor": 3,
			"not": 1,
			"today": 1,
			"spirits": 1,
			"is": 1,
			"away": 1,
			"forever": 2,
			"they": 1,
			"you": 2,
			"mother": 1,
			"nay": 1,
			"heard": 1,
			"without": 1,
			"gentle": 2,
			"for": 3,
			"my": 3,
			"came": 1,
			"john": 1,
			"sleep": 4,
			"hopes": 1,
			"whom": 1,
			"god": 1,
			"did": 1,
			"was": 1,
			"that": 3,
			"let": 2,
			"full": 1,
			"what": 2,
			"or": 2,
			"their": 1,
			"a": 5,
			"so": 4,
			"upon": 2,
			"gallant": 1,
			"lord": 1,
			"hath": 3,
			"on": 4,
			"but": 1,
			"when": 2,
			"sweetly": 1,
			"sorrow": 1,
			"and": 17,
			"i": 7,
			"thou": 2,
			"here": 2,
			"might": 1,
			"from": 2,
			"ill": 1,
			"beneath": 1,
			"no": 1,
			"with": 4,
			"around": 1,
			"soft": 1,
			"till": 3,
			"all": 1,
			"day": 1,
			"shall": 2,
			"yet": 1,
			"to": 6,
			"we": 1,
			"as": 1,
			"he": 2,
			"below": 1,
			"o": 4,
			"browning": 1,
			"the": 19,
			"tis": 1,
			"scarce": 1,
			"in": 8
		},
		"battle": {
			"more": 1,
			"blew": 1,
			"went": 1,
			"fierce": 1,
			"see": 1,
			"are": 1,
			"next": 1,
			"call": 1,
			"shout": 1,
			"of": 10,
			"cast": 1,
			"once": 1,
			"breathe": 1,
			"hymn": 1,
			"not": 1,
			"over": 1,
			"by": 1,
			"try": 1,
			"away": 1,
			"form": 3,
			"faint": 1,
			"you": 2,
			"rolled": 1,
			"for": 2,
			"great": 1,
			"ere": 1,
			"queen": 1,
			"along": 1,
			"were": 1,
			"was": 3,
			"what": 1,
			"front": 1,
			"on": 3,
			"shroud": 1,
			"but": 1,
			"years": 1,
			"when": 2,
			"plain": 1,
			"firm": 1,
			"line": 1,
			"and": 9,
			"broke": 1,
			"here": 1,
			"fought": 4,
			"from": 1,
			"no": 5,
			"with": 3,
			"now": 1,
			"till": 1,
			"all": 1,
			"gods": 1,
			"then": 1,
			"slain": 1,
			"poured": 1,
			"our": 1,
			"shall": 1,
			"yet": 1,
			"to": 4,
			"strife": 1,
			"we": 1,
			"array": 1,
			"borne": 1,
			"he": 2,
			"at": 1,
			"the": 2,
			"tis": 1,
			"scarce": 1,
			"scene": 1,
			"in": 3
		},
		"teach": {
			"us": 6,
			"within": 1,
			"him": 3,
			"not": 3,
			"you": 4,
			"new": 1,
			"its": 3,
			"bloody": 1,
			"my": 2,
			"thy": 1,
			"were": 1,
			"that": 1,
			"nothing": 1,
			"them": 4,
			"thee": 2,
			"and": 2,
			"to": 1,
			"we": 1,
			"as": 1,
			"life": 1,
			"me": 8,
			"the": 9,
			"her": 2,
			"in": 3
		},
		"pretty": {
			"stream": 1,
			"thing": 1,
			"are": 1,
			"story": 1,
			"of": 1,
			"mourn": 1,
			"eyes": 1,
			"boy": 1,
			"good": 1,
			"words": 1,
			"note": 1,
			"pretty": 1,
			"that": 1,
			"let": 2,
			"love": 1,
			"feet": 1,
			"well": 1,
			"our": 1,
			"way": 1,
			"though": 1,
			"near": 1,
			"in": 1
		},
		"tone": {
			"of": 1,
			"not": 1,
			"that": 1,
			"fall": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"and": 5,
			"sunshine": 1,
			"less": 1,
			"each": 1,
			"from": 2,
			"while": 1,
			"with": 1,
			"could": 1,
			"doth": 1,
			"still": 1,
			"to": 1,
			"me": 1,
			"the": 4
		},
		"moan": {
			"of": 2,
			"why": 1,
			"they": 2,
			"for": 2,
			"moan": 2,
			"or": 1,
			"so": 1,
			"but": 1,
			"ye": 2,
			"and": 3,
			"i": 1,
			"with": 1,
			"all": 1,
			"to": 1,
			"we": 1,
			"glad": 1,
			"as": 1
		},
		"warrior": {
			"fled": 1,
			"his": 3,
			"word": 1,
			"proud": 1,
			"for": 1,
			"rest": 1,
			"comes": 1,
			"was": 1,
			"that": 1,
			"when": 1,
			"and": 2,
			"tall": 1,
			"took": 1,
			"to": 1,
			"bold": 1,
			"the": 1,
			"dead": 2
		},
		"peace": {
			"sweet": 1,
			"come": 1,
			"thine": 1,
			"ring": 1,
			"within": 2,
			"loves": 1,
			"went": 1,
			"im": 1,
			"under": 1,
			"which": 3,
			"toward": 1,
			"of": 10,
			"this": 1,
			"daughter": 1,
			"triumph": 1,
			"she": 1,
			"nor": 1,
			"divine": 1,
			"put": 1,
			"every": 1,
			"by": 2,
			"bring": 1,
			"is": 7,
			"they": 1,
			"easy": 1,
			"than": 1,
			"where": 3,
			"for": 7,
			"theres": 1,
			"my": 3,
			"thy": 1,
			"peace": 1,
			"sits": 1,
			"false": 1,
			"were": 1,
			"oer": 3,
			"sabbath": 1,
			"was": 1,
			"that": 8,
			"let": 1,
			"had": 1,
			"what": 1,
			"or": 1,
			"have": 2,
			"a": 1,
			"so": 1,
			"upon": 1,
			"love": 2,
			"on": 4,
			"above": 1,
			"but": 2,
			"when": 1,
			"be": 3,
			"out": 2,
			"and": 22,
			"march": 1,
			"truth": 1,
			"i": 5,
			"thou": 1,
			"beneath": 2,
			"no": 4,
			"with": 2,
			"everlasting": 1,
			"now": 1,
			"till": 2,
			"through": 1,
			"ten": 1,
			"has": 1,
			"doth": 1,
			"our": 2,
			"neer": 1,
			"shall": 2,
			"your": 1,
			"to": 14,
			"may": 1,
			"we": 1,
			"whose": 1,
			"at": 3,
			"o": 5,
			"east": 1,
			"the": 5,
			"her": 2,
			"there": 1,
			"in": 12
		},
		"wheels": {
			"his": 1,
			"of": 4,
			"alike": 1,
			"she": 1,
			"cease": 1,
			"that": 2,
			"half": 1,
			"a": 1,
			"above": 1,
			"out": 1,
			"and": 1,
			"how": 2,
			"from": 1,
			"the": 1,
			"her": 2
		},
		"majesty": {
			"thine": 1,
			"appear": 1,
			"of": 2,
			"this": 1,
			"not": 1,
			"divine": 1,
			"by": 1,
			"abroad": 1,
			"so": 1,
			"on": 1,
			"and": 4,
			"how": 1,
			"now": 1,
			"flash": 1,
			"doth": 1,
			"to": 2,
			"he": 1
		},
		"blows": {
			"low": 1,
			"are": 1,
			"of": 4,
			"up": 1,
			"it": 1,
			"where": 1,
			"can": 1,
			"that": 2,
			"always": 1,
			"hold": 1,
			"a": 2,
			"but": 1,
			"out": 1,
			"and": 3,
			"down": 1,
			"such": 1,
			"from": 2,
			"across": 1,
			"while": 1,
			"with": 1,
			"now": 1,
			"the": 3,
			"in": 1
		},
		"comes": {
			"sound": 1,
			"back": 4,
			"silent": 1,
			"men": 1,
			"up": 1,
			"three": 1,
			"forth": 2,
			"not": 2,
			"it": 1,
			"far": 1,
			"by": 3,
			"alone": 1,
			"is": 2,
			"they": 1,
			"easy": 1,
			"for": 1,
			"again": 4,
			"comes": 1,
			"oer": 1,
			"sudden": 1,
			"immortal": 1,
			"that": 2,
			"oh": 1,
			"even": 1,
			"a": 13,
			"upon": 2,
			"on": 5,
			"but": 5,
			"and": 8,
			"down": 1,
			"home": 2,
			"too": 2,
			"between": 1,
			"such": 1,
			"from": 4,
			"beneath": 1,
			"no": 4,
			"with": 5,
			"grief": 1,
			"through": 1,
			"our": 1,
			"to": 12,
			"into": 1,
			"round": 1,
			"ah": 1,
			"falling": 1,
			"as": 2,
			"he": 1,
			"at": 3,
			"o": 1,
			"the": 19,
			"there": 1,
			"in": 12
		},
		"wept": {
			"him": 1,
			"are": 1,
			"she": 1,
			"rose": 1,
			"over": 1,
			"by": 1,
			"is": 1,
			"away": 1,
			"robert": 1,
			"for": 1,
			"again": 1,
			"oer": 1,
			"that": 1,
			"above": 1,
			"but": 2,
			"ye": 1,
			"when": 1,
			"and": 3,
			"down": 1,
			"too": 1,
			"with": 1,
			"now": 1,
			"till": 1,
			"before": 1,
			"yet": 1,
			"to": 4,
			"as": 1,
			"at": 2,
			"the": 3
		},
		"ere": {
			"dying": 1,
			"im": 1,
			"his": 2,
			"midnight": 1,
			"which": 1,
			"this": 3,
			"she": 1,
			"rose": 1,
			"it": 10,
			"long": 3,
			"they": 7,
			"you": 2,
			"thus": 1,
			"those": 1,
			"for": 1,
			"should": 1,
			"my": 2,
			"evening": 2,
			"sin": 1,
			"can": 1,
			"oer": 1,
			"that": 1,
			"half": 1,
			"an": 1,
			"a": 1,
			"ye": 1,
			"and": 1,
			"i": 12,
			"thou": 3,
			"such": 1,
			"thought": 1,
			"well": 2,
			"our": 1,
			"day": 2,
			"fortune": 1,
			"night": 2,
			"fallen": 1,
			"yet": 2,
			"to": 1,
			"we": 9,
			"noon": 1,
			"he": 4,
			"the": 31,
			"her": 2,
			"change": 1
		},
		"hopes": {
			"more": 1,
			"are": 7,
			"which": 2,
			"of": 3,
			"nor": 1,
			"dear": 1,
			"like": 1,
			"laid": 1,
			"for": 1,
			"tender": 1,
			"thy": 1,
			"better": 1,
			"were": 2,
			"what": 1,
			"or": 2,
			"true": 1,
			"upon": 1,
			"and": 10,
			"fly": 1,
			"i": 1,
			"whereer": 1,
			"from": 1,
			"no": 1,
			"decay": 2,
			"around": 1,
			"some": 1,
			"through": 1,
			"our": 2,
			"yet": 1,
			"to": 2,
			"we": 2,
			"grow": 1,
			"left": 1,
			"the": 2,
			"in": 1
		},
		"tonight": {
			"keep": 1,
			"it": 1,
			"load": 1,
			"by": 2,
			"where": 1,
			"for": 3,
			"my": 3,
			"that": 1,
			"if": 3,
			"oh": 1,
			"even": 1,
			"have": 1,
			"upon": 1,
			"and": 1,
			"i": 1,
			"down": 1,
			"would": 1,
			"no": 1,
			"give": 1,
			"the": 3
		},
		"ourselves": {
			"since": 1,
			"his": 1,
			"are": 2,
			"right": 1,
			"worth": 1,
			"alone": 1,
			"away": 1,
			"just": 1,
			"for": 1,
			"that": 1,
			"must": 1,
			"even": 2,
			"their": 1,
			"but": 3,
			"when": 1,
			"be": 1,
			"and": 1,
			"do": 1,
			"our": 1,
			"to": 1,
			"we": 2,
			"as": 1,
			"the": 2,
			"in": 3
		},
		"waves": {
			"come": 2,
			"breaking": 1,
			"went": 1,
			"his": 1,
			"seemed": 1,
			"are": 2,
			"of": 11,
			"high": 1,
			"once": 1,
			"roar": 1,
			"foam": 1,
			"over": 1,
			"sister": 1,
			"where": 3,
			"for": 1,
			"should": 1,
			"came": 1,
			"along": 1,
			"were": 2,
			"oer": 1,
			"that": 3,
			"rolling": 1,
			"had": 1,
			"or": 1,
			"their": 2,
			"upon": 2,
			"on": 2,
			"above": 2,
			"and": 10,
			"rush": 1,
			"with": 2,
			"till": 1,
			"lying": 1,
			"all": 1,
			"through": 2,
			"behind": 1,
			"lie": 1,
			"may": 1,
			"at": 1,
			"o": 1,
			"the": 2,
			"fire": 1,
			"in": 3
		},
		"birth": {
			"which": 1,
			"of": 1,
			"she": 1,
			"nor": 1,
			"alone": 2,
			"is": 3,
			"just": 1,
			"for": 1,
			"trust": 1,
			"have": 1,
			"a": 2,
			"so": 1,
			"whence": 1,
			"love": 1,
			"but": 2,
			"thee": 1,
			"be": 1,
			"and": 5,
			"do": 1,
			"thou": 2,
			"each": 2,
			"how": 1,
			"from": 1,
			"while": 1,
			"no": 1,
			"till": 1,
			"will": 1,
			"to": 3,
			"we": 1,
			"as": 1,
			"the": 2
		},
		"whom": {
			"laws": 1,
			"his": 1,
			"none": 3,
			"are": 1,
			"men": 1,
			"this": 1,
			"she": 1,
			"three": 1,
			"every": 1,
			"it": 2,
			"neither": 1,
			"is": 2,
			"they": 6,
			"you": 5,
			"nature": 1,
			"those": 1,
			"used": 1,
			"heaven": 1,
			"my": 2,
			"thy": 3,
			"most": 1,
			"fools": 1,
			"did": 1,
			"that": 1,
			"what": 1,
			"an": 1,
			"stars": 1,
			"or": 1,
			"think": 1,
			"bright": 1,
			"their": 1,
			"a": 1,
			"love": 1,
			"old": 1,
			"but": 1,
			"death": 1,
			"poor": 1,
			"ye": 1,
			"when": 1,
			"and": 2,
			"year": 1,
			"i": 17,
			"thou": 5,
			"secret": 1,
			"each": 3,
			"these": 2,
			"duty": 1,
			"while": 1,
			"all": 7,
			"gods": 1,
			"through": 1,
			"angels": 1,
			"our": 2,
			"pity": 1,
			"shall": 2,
			"only": 1,
			"still": 1,
			"to": 4,
			"youth": 1,
			"powers": 1,
			"we": 10,
			"he": 2,
			"o": 1,
			"the": 14
		},
		"rang": {
			"high": 1,
			"it": 1,
			"long": 1,
			"like": 1,
			"without": 1,
			"rang": 1,
			"sir": 1,
			"what": 1,
			"their": 1,
			"so": 1,
			"true": 1,
			"on": 1,
			"above": 1,
			"but": 1,
			"while": 1,
			"through": 1,
			"still": 1,
			"to": 2,
			"the": 4,
			"there": 1
		},
		"better": {
			"more": 1,
			"made": 1,
			"men": 2,
			"deeds": 1,
			"country": 1,
			"brook": 1,
			"pour": 1,
			"whatever": 1,
			"age": 1,
			"place": 2,
			"part": 8,
			"not": 2,
			"far": 1,
			"child": 1,
			"health": 1,
			"by": 1,
			"land": 2,
			"soon": 1,
			"like": 1,
			"care": 1,
			"they": 1,
			"nature": 1,
			"guide": 1,
			"its": 1,
			"than": 17,
			"for": 4,
			"judgment": 1,
			"spent": 1,
			"sleep": 2,
			"shore": 1,
			"soul": 1,
			"sir": 1,
			"times": 1,
			"that": 1,
			"man": 2,
			"trust": 1,
			"had": 1,
			"creatures": 1,
			"charms": 1,
			"or": 1,
			"a": 3,
			"self": 2,
			"time": 1,
			"known": 1,
			"years": 1,
			"gone": 1,
			"eternal": 1,
			"be": 3,
			"fate": 1,
			"days": 2,
			"thou": 3,
			"bad": 1,
			"reason": 1,
			"beneath": 1,
			"no": 1,
			"now": 1,
			"then": 2,
			"day": 1,
			"neer": 1,
			"still": 2,
			"way": 2,
			"to": 8,
			"youth": 1,
			"art": 1,
			"we": 1,
			"store": 1,
			"done": 1,
			"said": 1,
			"life": 2,
			"he": 1,
			"at": 2,
			"the": 9,
			"world": 1,
			"in": 3,
			"choice": 1
		},
		"ray": {
			"his": 1,
			"save": 1,
			"of": 6,
			"serene": 1,
			"far": 1,
			"by": 1,
			"they": 1,
			"those": 1,
			"for": 1,
			"enough": 1,
			"thy": 1,
			"can": 1,
			"that": 1,
			"a": 2,
			"but": 1,
			"onward": 1,
			"heart": 1,
			"and": 4,
			"thou": 1,
			"told": 1,
			"each": 1,
			"reason": 1,
			"all": 1,
			"to": 1,
			"as": 2,
			"the": 2,
			"in": 1
		},
		"shadow": {
			"faithful": 1,
			"none": 1,
			"fell": 1,
			"under": 1,
			"which": 1,
			"of": 14,
			"she": 1,
			"among": 1,
			"rose": 1,
			"it": 1,
			"by": 1,
			"cold": 1,
			"soon": 1,
			"short": 1,
			"watch": 1,
			"whom": 1,
			"oer": 1,
			"was": 1,
			"that": 4,
			"go": 1,
			"what": 1,
			"a": 1,
			"falls": 1,
			"flies": 2,
			"whole": 1,
			"on": 1,
			"but": 1,
			"when": 1,
			"and": 4,
			"i": 2,
			"might": 1,
			"no": 1,
			"with": 1,
			"ways": 1,
			"before": 1,
			"still": 1,
			"to": 2,
			"hence": 1,
			"as": 1,
			"life": 1,
			"there": 3,
			"in": 1
		},
		"least": {
			"his": 1,
			"who": 1,
			"seen": 1,
			"of": 1,
			"this": 1,
			"two": 1,
			"is": 1,
			"you": 1,
			"where": 1,
			"for": 1,
			"thy": 1,
			"was": 1,
			"that": 1,
			"if": 2,
			"drop": 1,
			"a": 1,
			"so": 1,
			"upon": 1,
			"spirit": 1,
			"hath": 1,
			"delight": 1,
			"when": 1,
			"be": 1,
			"thou": 1,
			"saint": 1,
			"well": 2,
			"our": 1,
			"we": 2,
			"frown": 1,
			"the": 1,
			"in": 1
		},
		"mary": {
			"died": 1,
			"wi": 1,
			"once": 1,
			"dear": 2,
			"sings": 1,
			"seven": 1,
			"robert": 1,
			"where": 2,
			"for": 2,
			"theres": 2,
			"tomorrow": 1,
			"my": 1,
			"sir": 1,
			"queen": 1,
			"that": 1,
			"if": 1,
			"oh": 1,
			"de": 1,
			"a": 1,
			"on": 2,
			"but": 1,
			"ye": 1,
			"say": 1,
			"and": 7,
			"i": 2,
			"thou": 1,
			"how": 1,
			"from": 1,
			"no": 1,
			"fallen": 1,
			"to": 1,
			"may": 1,
			"at": 1,
			"lies": 1,
			"coming": 1,
			"blessed": 2,
			"the": 3,
			"in": 2
		},
		"shore": {
			"look": 1,
			"alas": 1,
			"ive": 2,
			"under": 1,
			"seen": 1,
			"of": 5,
			"once": 1,
			"not": 1,
			"it": 1,
			"is": 2,
			"ships": 1,
			"few": 1,
			"like": 2,
			"hark": 1,
			"they": 3,
			"swept": 1,
			"than": 1,
			"where": 2,
			"for": 2,
			"my": 1,
			"again": 1,
			"peace": 1,
			"most": 1,
			"sir": 1,
			"william": 1,
			"oer": 1,
			"was": 1,
			"if": 1,
			"always": 1,
			"sail": 1,
			"or": 1,
			"gave": 1,
			"a": 4,
			"so": 1,
			"adieu": 1,
			"never": 1,
			"on": 1,
			"maryland": 1,
			"but": 4,
			"brown": 1,
			"firm": 1,
			"and": 13,
			"i": 4,
			"thou": 1,
			"whereer": 1,
			"how": 1,
			"from": 1,
			"while": 1,
			"no": 3,
			"with": 2,
			"some": 1,
			"till": 2,
			"will": 1,
			"all": 1,
			"then": 1,
			"through": 1,
			"our": 1,
			"shall": 1,
			"before": 2,
			"to": 7,
			"ah": 1,
			"we": 1,
			"as": 2,
			"fair": 1,
			"he": 4,
			"at": 2,
			"o": 2,
			"the": 12,
			"tis": 1,
			"though": 2,
			"in": 2
		},
		"dearest": {
			"come": 1,
			"thine": 1,
			"im": 1,
			"blood": 1,
			"thing": 1,
			"of": 1,
			"brother": 2,
			"father": 1,
			"is": 1,
			"friends": 1,
			"hope": 1,
			"friend": 1,
			"face": 1,
			"lord": 2,
			"love": 1,
			"but": 1,
			"dreams": 1,
			"and": 1,
			"do": 1,
			"last": 1,
			"one": 1
		},
		"therefore": {
			"since": 1,
			"who": 1,
			"which": 1,
			"wise": 1,
			"is": 1,
			"although": 1,
			"good": 1,
			"cannot": 1,
			"my": 2,
			"thy": 1,
			"pray": 1,
			"if": 1,
			"show": 1,
			"lest": 1,
			"love": 1,
			"bend": 1,
			"i": 4,
			"will": 1,
			"our": 2,
			"to": 3,
			"as": 1,
			"he": 1,
			"common": 1,
			"the": 2
		},
		"ground": {
			"st": 1,
			"of": 2,
			"she": 2,
			"three": 1,
			"not": 1,
			"it": 3,
			"bade": 1,
			"is": 1,
			"like": 2,
			"hark": 1,
			"they": 1,
			"mother": 1,
			"than": 1,
			"where": 5,
			"for": 2,
			"whats": 1,
			"thy": 2,
			"along": 1,
			"was": 1,
			"that": 1,
			"both": 1,
			"another": 1,
			"what": 1,
			"an": 1,
			"their": 2,
			"a": 3,
			"upon": 1,
			"lord": 1,
			"but": 2,
			"ye": 2,
			"when": 1,
			"eternal": 1,
			"and": 11,
			"march": 1,
			"i": 1,
			"less": 1,
			"against": 1,
			"from": 2,
			"while": 1,
			"no": 1,
			"calm": 1,
			"with": 7,
			"will": 2,
			"then": 1,
			"thomas": 1,
			"has": 1,
			"our": 3,
			"to": 1,
			"ah": 1,
			"as": 4,
			"he": 1,
			"arms": 1,
			"point": 1,
			"arise": 1,
			"the": 12,
			"tis": 1,
			"her": 1,
			"in": 4
		},
		"sadly": {
			"sweet": 1,
			"once": 1,
			"pressed": 1,
			"they": 1,
			"on": 1,
			"but": 1,
			"ye": 1,
			"and": 1,
			"do": 1,
			"i": 7,
			"breathes": 1,
			"still": 1,
			"to": 3,
			"may": 1,
			"we": 1,
			"at": 1,
			"oft": 1,
			"there": 1
		},
		"soul": {
			"sweet": 1,
			"look": 1,
			"sighs": 1,
			"more": 1,
			"within": 3,
			"free": 1,
			"light": 1,
			"touched": 1,
			"see": 2,
			"fit": 1,
			"are": 2,
			"alas": 1,
			"right": 1,
			"back": 1,
			"who": 2,
			"suffer": 1,
			"which": 1,
			"of": 30,
			"high": 1,
			"once": 3,
			"feels": 1,
			"up": 1,
			"she": 1,
			"nor": 2,
			"goes": 1,
			"serene": 1,
			"not": 5,
			"depart": 1,
			"proud": 1,
			"every": 1,
			"it": 2,
			"by": 2,
			"nevermore": 1,
			"is": 19,
			"unto": 1,
			"like": 2,
			"away": 1,
			"why": 1,
			"good": 1,
			"ever": 1,
			"about": 1,
			"they": 1,
			"abroad": 1,
			"believe": 1,
			"nature": 1,
			"without": 1,
			"its": 4,
			"than": 1,
			"song": 2,
			"holy": 2,
			"just": 1,
			"for": 3,
			"heaven": 1,
			"should": 1,
			"theres": 1,
			"my": 5,
			"great": 1,
			"shines": 1,
			"thy": 3,
			"sleep": 2,
			"therefore": 1,
			"soul": 1,
			"sits": 1,
			"william": 1,
			"can": 4,
			"were": 1,
			"bears": 1,
			"was": 9,
			"that": 23,
			"if": 1,
			"full": 1,
			"go": 1,
			"had": 1,
			"must": 1,
			"what": 3,
			"sit": 1,
			"an": 1,
			"or": 1,
			"finds": 1,
			"am": 1,
			"awake": 2,
			"their": 1,
			"a": 7,
			"so": 3,
			"upon": 1,
			"hath": 2,
			"on": 3,
			"maryland": 1,
			"above": 1,
			"but": 3,
			"when": 2,
			"be": 3,
			"out": 1,
			"and": 35,
			"fly": 1,
			"i": 5,
			"thou": 1,
			"here": 1,
			"one": 2,
			"stands": 1,
			"each": 1,
			"how": 2,
			"higher": 1,
			"from": 9,
			"would": 2,
			"sublime": 3,
			"no": 2,
			"with": 9,
			"now": 2,
			"some": 2,
			"till": 2,
			"will": 4,
			"follow": 2,
			"flesh": 1,
			"through": 2,
			"has": 2,
			"thats": 1,
			"asleep": 1,
			"well": 2,
			"doth": 5,
			"dost": 1,
			"our": 1,
			"throne": 1,
			"stay": 1,
			"shall": 6,
			"before": 1,
			"still": 1,
			"yet": 1,
			"mark": 1,
			"to": 32,
			"loud": 1,
			"into": 2,
			"live": 1,
			"turning": 1,
			"growing": 1,
			"may": 2,
			"we": 2,
			"whose": 1,
			"as": 5,
			"happy": 1,
			"he": 4,
			"me": 3,
			"at": 2,
			"below": 1,
			"slumber": 1,
			"lies": 3,
			"o": 3,
			"the": 21,
			"tis": 1,
			"though": 1,
			"scarce": 1,
			"her": 2,
			"there": 4,
			"in": 13
		},
		"passion": {
			"look": 1,
			"loves": 1,
			"free": 1,
			"of": 4,
			"is": 1,
			"sway": 1,
			"for": 1,
			"take": 1,
			"cease": 1,
			"shame": 1,
			"were": 1,
			"was": 1,
			"that": 1,
			"or": 2,
			"so": 2,
			"almost": 1,
			"knowledge": 1,
			"deed": 1,
			"be": 1,
			"and": 7,
			"fate": 1,
			"i": 2,
			"woman": 1,
			"stands": 1,
			"from": 2,
			"reason": 1,
			"with": 2,
			"could": 1,
			"through": 1,
			"needs": 1,
			"shall": 1,
			"to": 1,
			"into": 1,
			"strife": 1,
			"sweep": 1,
			"me": 1,
			"lies": 1,
			"her": 2,
			"in": 1
		},
		"hope": {
			"more": 1,
			"since": 1,
			"within": 1,
			"his": 1,
			"fears": 1,
			"men": 1,
			"of": 22,
			"this": 1,
			"she": 1,
			"beyond": 1,
			"nor": 1,
			"fresh": 1,
			"lift": 1,
			"part": 1,
			"not": 2,
			"hes": 1,
			"it": 1,
			"is": 9,
			"like": 2,
			"lo": 1,
			"farewell": 1,
			"pleasure": 1,
			"where": 2,
			"despair": 1,
			"welcome": 1,
			"for": 7,
			"tomorrow": 1,
			"my": 1,
			"john": 1,
			"again": 2,
			"thy": 2,
			"can": 1,
			"was": 1,
			"that": 6,
			"if": 1,
			"what": 3,
			"beautiful": 1,
			"repose": 1,
			"or": 1,
			"finds": 1,
			"lest": 1,
			"a": 3,
			"true": 1,
			"upon": 2,
			"lord": 2,
			"never": 1,
			"love": 2,
			"on": 2,
			"but": 6,
			"thee": 1,
			"ye": 3,
			"when": 3,
			"be": 2,
			"out": 1,
			"say": 1,
			"and": 28,
			"eer": 1,
			"i": 1,
			"thou": 4,
			"too": 1,
			"rather": 1,
			"each": 1,
			"from": 2,
			"no": 2,
			"till": 1,
			"could": 1,
			"has": 1,
			"well": 1,
			"behind": 1,
			"fear": 1,
			"shall": 1,
			"still": 2,
			"yet": 1,
			"to": 21,
			"springs": 1,
			"into": 1,
			"may": 3,
			"eve": 1,
			"he": 1,
			"me": 1,
			"at": 2,
			"lies": 1,
			"o": 1,
			"the": 6,
			"seems": 1,
			"in": 5
		},
		"flung": {
			"his": 1,
			"him": 1,
			"which": 1,
			"this": 1,
			"rose": 1,
			"wide": 1,
			"forward": 1,
			"an": 1,
			"and": 1,
			"i": 1,
			"from": 2,
			"now": 1,
			"himself": 1,
			"aside": 1,
			"to": 2,
			"the": 4,
			"in": 2
		},
		"wear": {
			"dare": 1,
			"this": 1,
			"gold": 1,
			"it": 1,
			"by": 1,
			"long": 1,
			"is": 1,
			"for": 1,
			"my": 1,
			"makes": 1,
			"their": 1,
			"a": 5,
			"them": 1,
			"when": 1,
			"and": 2,
			"these": 1,
			"with": 1,
			"our": 1,
			"your": 1,
			"to": 1,
			"at": 1,
			"the": 13,
			"though": 1,
			"in": 1
		},
		"seek": {
			"us": 1,
			"his": 2,
			"him": 4,
			"are": 1,
			"this": 2,
			"after": 1,
			"nor": 2,
			"race": 1,
			"not": 2,
			"it": 2,
			"water": 1,
			"eternity": 1,
			"earths": 1,
			"where": 1,
			"yea": 1,
			"for": 2,
			"my": 1,
			"again": 1,
			"thy": 2,
			"often": 1,
			"go": 1,
			"repose": 1,
			"their": 1,
			"a": 5,
			"but": 2,
			"ye": 1,
			"out": 1,
			"and": 4,
			"i": 1,
			"how": 1,
			"higher": 1,
			"virtue": 1,
			"some": 1,
			"then": 1,
			"to": 9,
			"we": 1,
			"o": 1,
			"the": 6,
			"her": 4,
			"there": 1,
			"in": 3
		},
		"born": {
			"sweet": 1,
			"his": 1,
			"him": 1,
			"see": 1,
			"who": 3,
			"of": 7,
			"today": 1,
			"long": 1,
			"why": 1,
			"than": 1,
			"those": 1,
			"where": 1,
			"for": 3,
			"again": 1,
			"that": 1,
			"an": 1,
			"or": 2,
			"so": 1,
			"on": 2,
			"but": 1,
			"ye": 1,
			"gone": 1,
			"and": 3,
			"truth": 1,
			"how": 1,
			"from": 1,
			"across": 1,
			"would": 1,
			"with": 4,
			"all": 1,
			"shine": 1,
			"our": 1,
			"to": 7,
			"into": 1,
			"we": 1,
			"at": 1,
			"the": 2,
			"her": 1,
			"dead": 1,
			"in": 9
		},
		"garden": {
			"more": 1,
			"made": 1,
			"gate": 1,
			"of": 6,
			"bird": 1,
			"by": 2,
			"path": 1,
			"for": 3,
			"bore": 1,
			"walls": 1,
			"was": 1,
			"or": 1,
			"tree": 1,
			"upon": 1,
			"lay": 1,
			"and": 1,
			"now": 1,
			"at": 1,
			"grow": 1,
			"the": 1,
			"trees": 1,
			"in": 1,
			"grows": 1
		},
		"gather": {
			"hear": 1,
			"dust": 1,
			"of": 1,
			"up": 1,
			"gold": 1,
			"by": 1,
			"wide": 1,
			"what": 1,
			"an": 1,
			"their": 1,
			"them": 12,
			"on": 1,
			"when": 1,
			"and": 2,
			"bliss": 1,
			"around": 1,
			"all": 1,
			"to": 1,
			"round": 2,
			"the": 2
		},
		"remember": {
			"us": 3,
			"of": 1,
			"sacred": 1,
			"rose": 1,
			"rivers": 1,
			"not": 1,
			"it": 1,
			"ever": 1,
			"for": 1,
			"whom": 1,
			"that": 4,
			"if": 1,
			"an": 1,
			"thee": 4,
			"when": 1,
			"and": 4,
			"days": 1,
			"down": 1,
			"one": 1,
			"such": 1,
			"saint": 1,
			"how": 2,
			"join": 1,
			"these": 1,
			"well": 1,
			"only": 1,
			"yet": 1,
			"end": 1,
			"me": 2,
			"o": 1,
			"the": 5,
			"in": 1
		},
		"strive": {
			"who": 1,
			"not": 1,
			"but": 1,
			"ye": 1,
			"and": 3,
			"i": 1,
			"too": 1,
			"how": 1,
			"with": 1,
			"through": 1,
			"still": 1,
			"to": 7,
			"the": 1,
			"in": 1
		},
		"various": {
			"light": 1,
			"his": 1,
			"passions": 1,
			"are": 1,
			"men": 1,
			"which": 1,
			"of": 2,
			"race": 1,
			"forms": 1,
			"for": 1,
			"hand": 1,
			"tone": 1,
			"that": 2,
			"cares": 1,
			"sometimes": 1,
			"with": 1,
			"then": 1,
			"to": 1,
			"arms": 1
		},
		"francis": {
			"of": 1,
			"hymn": 1,
			"by": 1,
			"father": 1,
			"new": 1,
			"song": 2,
			"blow": 1,
			"sabbath": 1,
			"lord": 2,
			"break": 1,
			"old": 1,
			"and": 1,
			"i": 1,
			"written": 1,
			"translation": 1,
			"the": 7
		},
		"because": {
			"sweet": 1,
			"loves": 1,
			"his": 2,
			"of": 2,
			"it": 3,
			"they": 2,
			"those": 1,
			"my": 3,
			"god": 2,
			"if": 1,
			"so": 1,
			"i": 10,
			"thou": 2,
			"such": 1,
			"he": 3,
			"the": 5
		},
		"cheer": {
			"come": 1,
			"us": 1,
			"his": 1,
			"amidst": 1,
			"who": 1,
			"up": 3,
			"nor": 1,
			"it": 1,
			"for": 3,
			"my": 1,
			"thy": 1,
			"both": 1,
			"an": 1,
			"upon": 1,
			"but": 1,
			"thee": 1,
			"and": 6,
			"would": 1,
			"honor": 1,
			"bid": 1,
			"some": 1,
			"all": 1,
			"your": 2,
			"to": 1,
			"into": 1,
			"as": 1,
			"the": 5,
			"though": 1,
			"her": 1,
			"in": 2
		},
		"cease": {
			"sent": 1,
			"fond": 1,
			"this": 1,
			"anonymous": 1,
			"two": 1,
			"every": 1,
			"prayer": 1,
			"my": 1,
			"thy": 2,
			"sing": 1,
			"cease": 1,
			"held": 1,
			"pure": 1,
			"or": 1,
			"upon": 1,
			"when": 1,
			"and": 4,
			"from": 2,
			"while": 1,
			"then": 1,
			"behind": 1,
			"your": 2,
			"to": 7,
			"we": 3,
			"he": 2,
			"the": 1,
			"in": 2
		},
		"makes": {
			"sweet": 1,
			"us": 7,
			"his": 5,
			"him": 2,
			"sharp": 1,
			"men": 2,
			"of": 2,
			"up": 1,
			"slaves": 1,
			"not": 1,
			"it": 5,
			"feeble": 1,
			"you": 1,
			"new": 1,
			"its": 4,
			"than": 1,
			"those": 1,
			"others": 1,
			"for": 1,
			"heaven": 1,
			"my": 5,
			"that": 2,
			"half": 1,
			"an": 2,
			"their": 1,
			"a": 10,
			"so": 1,
			"them": 2,
			"sometimes": 1,
			"green": 1,
			"love": 1,
			"perhaps": 1,
			"thee": 1,
			"when": 1,
			"one": 2,
			"anothers": 1,
			"ill": 1,
			"ancient": 1,
			"no": 1,
			"all": 4,
			"gods": 1,
			"through": 1,
			"our": 2,
			"equal": 1,
			"way": 1,
			"to": 1,
			"wounds": 1,
			"as": 1,
			"life": 2,
			"he": 1,
			"me": 6,
			"the": 15
		},
		"rough": {
			"sweet": 1,
			"river": 1,
			"of": 1,
			"this": 1,
			"rude": 1,
			"matter": 1,
			"path": 1,
			"beams": 1,
			"for": 1,
			"desert": 1,
			"or": 1,
			"a": 2,
			"red": 1,
			"rhyme": 1,
			"verse": 1,
			"and": 5,
			"island": 1,
			"each": 1,
			"marble": 1,
			"with": 1,
			"yet": 1,
			"at": 1,
			"o": 1,
			"tis": 1,
			"seas": 2
		},
		"any": {
			"come": 1,
			"summer": 1,
			"more": 1,
			"wish": 1,
			"light": 1,
			"book": 1,
			"means": 1,
			"blood": 1,
			"thing": 1,
			"are": 1,
			"call": 1,
			"of": 8,
			"age": 1,
			"it": 1,
			"fool": 1,
			"is": 1,
			"author": 1,
			"for": 1,
			"words": 1,
			"soul": 1,
			"face": 1,
			"power": 1,
			"cause": 1,
			"that": 3,
			"let": 1,
			"man": 7,
			"a": 1,
			"upon": 1,
			"but": 1,
			"time": 2,
			"poor": 1,
			"deed": 1,
			"merit": 1,
			"kind": 1,
			"heart": 4,
			"and": 1,
			"dream": 1,
			"fate": 1,
			"thou": 1,
			"here": 1,
			"mortal": 1,
			"one": 4,
			"might": 3,
			"other": 2,
			"calm": 1,
			"with": 1,
			"foreign": 1,
			"could": 1,
			"doth": 1,
			"day": 1,
			"sense": 1,
			"chance": 1,
			"sore": 1,
			"life": 1,
			"flag": 1,
			"wound": 1,
			"change": 1,
			"there": 1,
			"in": 1
		},
		"most": {
			"sweet": 1,
			"us": 1,
			"blessd": 1,
			"free": 1,
			"his": 3,
			"him": 1,
			"precious": 2,
			"faithful": 1,
			"surely": 1,
			"are": 1,
			"ive": 1,
			"men": 1,
			"country": 1,
			"of": 9,
			"high": 2,
			"shakespeare": 1,
			"dear": 1,
			"part": 1,
			"behold": 1,
			"not": 1,
			"hours": 1,
			"it": 3,
			"by": 1,
			"wise": 1,
			"like": 7,
			"why": 1,
			"good": 2,
			"abroad": 1,
			"faint": 1,
			"poet": 1,
			"those": 2,
			"where": 1,
			"holy": 8,
			"welcome": 1,
			"for": 1,
			"bowed": 1,
			"melancholy": 2,
			"thy": 2,
			"vain": 1,
			"soul": 1,
			"most": 2,
			"reach": 1,
			"friendship": 2,
			"did": 1,
			"was": 1,
			"that": 4,
			"if": 1,
			"let": 1,
			"cares": 1,
			"man": 1,
			"music": 1,
			"think": 1,
			"their": 2,
			"given": 1,
			"them": 2,
			"true": 2,
			"hath": 1,
			"naked": 1,
			"but": 1,
			"lives": 1,
			"when": 2,
			"lifes": 1,
			"kind": 2,
			"awful": 1,
			"sweetly": 1,
			"and": 9,
			"grace": 1,
			"sun": 1,
			"dark": 1,
			"lovely": 1,
			"grave": 2,
			"i": 1,
			"worthy": 1,
			"thou": 1,
			"wretched": 2,
			"one": 1,
			"might": 1,
			"breathes": 1,
			"perfect": 1,
			"how": 1,
			"from": 1,
			"strange": 1,
			"living": 1,
			"ill": 1,
			"reason": 1,
			"rare": 1,
			"ancient": 2,
			"these": 1,
			"some": 1,
			"strong": 1,
			"loving": 2,
			"familiar": 1,
			"then": 1,
			"blest": 1,
			"foe": 1,
			"songs": 1,
			"thread": 1,
			"clear": 1,
			"peaceful": 1,
			"beauteous": 1,
			"wrong": 1,
			"feel": 2,
			"neer": 1,
			"shall": 1,
			"to": 3,
			"poetry": 1,
			"religion": 1,
			"glorious": 1,
			"as": 1,
			"fair": 3,
			"happy": 2,
			"he": 1,
			"me": 1,
			"the": 4,
			"tis": 1,
			"oft": 1,
			"in": 2,
			"air": 1
		},
		"sir": {
			"come": 1,
			"his": 1,
			"james": 2,
			"wi": 1,
			"made": 1,
			"of": 2,
			"she": 1,
			"liberty": 1,
			"forth": 1,
			"behold": 1,
			"eyes": 1,
			"land": 1,
			"is": 1,
			"they": 2,
			"you": 1,
			"nature": 1,
			"robert": 4,
			"where": 1,
			"gray": 1,
			"read": 2,
			"my": 5,
			"came": 1,
			"john": 6,
			"peace": 1,
			"hope": 1,
			"francis": 1,
			"sir": 1,
			"william": 1,
			"was": 2,
			"that": 1,
			"if": 1,
			"thin": 1,
			"an": 1,
			"or": 2,
			"field": 1,
			"study": 1,
			"their": 1,
			"a": 3,
			"so": 2,
			"sees": 1,
			"deep": 1,
			"but": 1,
			"and": 6,
			"i": 1,
			"robin": 1,
			"breast": 1,
			"alfred": 1,
			"with": 2,
			"now": 4,
			"all": 1,
			"then": 1,
			"thomas": 1,
			"laugh": 1,
			"george": 1,
			"much": 1,
			"turned": 1,
			"our": 1,
			"yet": 1,
			"to": 2,
			"may": 1,
			"whose": 1,
			"as": 2,
			"charles": 2,
			"he": 2,
			"the": 8,
			"there": 2,
			"in": 4
		},
		"senses": {
			"since": 1,
			"begin": 1,
			"of": 1,
			"alone": 1,
			"they": 1,
			"its": 1,
			"press": 1,
			"become": 1,
			"my": 1,
			"a": 1,
			"so": 1,
			"be": 1,
			"and": 1,
			"rather": 1,
			"how": 1,
			"being": 1,
			"our": 1,
			"still": 1,
			"to": 1,
			"whose": 1,
			"he": 1,
			"the": 2,
			"there": 1,
			"in": 2
		},
		"times": {
			"blue": 1,
			"sent": 1,
			"since": 1,
			"ring": 1,
			"his": 1,
			"are": 9,
			"back": 1,
			"who": 1,
			"she": 1,
			"three": 2,
			"wheel": 1,
			"it": 2,
			"flight": 1,
			"is": 2,
			"than": 2,
			"yea": 1,
			"worse": 1,
			"great": 2,
			"comes": 1,
			"ere": 1,
			"were": 2,
			"was": 1,
			"that": 1,
			"go": 2,
			"have": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"when": 1,
			"plain": 1,
			"be": 1,
			"and": 3,
			"doom": 1,
			"last": 1,
			"i": 2,
			"from": 1,
			"with": 4,
			"strong": 1,
			"before": 1,
			"to": 4,
			"may": 1,
			"we": 1,
			"as": 2,
			"said": 1,
			"me": 1,
			"the": 3,
			"change": 1
		},
		"wandering": {
			"are": 1,
			"steps": 1,
			"of": 1,
			"graves": 1,
			"she": 1,
			"among": 1,
			"sons": 1,
			"sheep": 1,
			"by": 2,
			"eyes": 1,
			"boy": 1,
			"waves": 1,
			"hope": 1,
			"foot": 1,
			"oer": 2,
			"eye": 1,
			"on": 2,
			"onward": 1,
			"feet": 1,
			"heart": 1,
			"and": 1,
			"bliss": 1,
			"cries": 1,
			"thou": 1,
			"down": 1,
			"here": 1,
			"from": 1,
			"tempest": 1,
			"through": 1,
			"to": 1,
			"into": 1,
			"slowly": 1,
			"sweep": 1,
			"whose": 1,
			"below": 1,
			"o": 1,
			"near": 1,
			"in": 1
		},
		"held": {
			"us": 1,
			"his": 5,
			"up": 1,
			"forth": 1,
			"it": 4,
			"by": 1,
			"my": 2,
			"that": 1,
			"both": 1,
			"or": 1,
			"their": 4,
			"a": 4,
			"out": 1,
			"and": 2,
			"would": 1,
			"with": 2,
			"himself": 1,
			"our": 1,
			"your": 1,
			"to": 2,
			"we": 2,
			"as": 2,
			"me": 1,
			"the": 2,
			"in": 7
		},
		"torn": {
			"his": 1,
			"rose": 1,
			"away": 2,
			"they": 1,
			"but": 1,
			"and": 3,
			"quick": 1,
			"down": 1,
			"here": 1,
			"from": 6,
			"yet": 1,
			"me": 1,
			"o": 2,
			"the": 3,
			"her": 1
		},
		"town": {
			"ring": 1,
			"white": 1,
			"of": 2,
			"she": 2,
			"nor": 2,
			"today": 1,
			"over": 1,
			"is": 1,
			"for": 1,
			"john": 1,
			"what": 1,
			"oh": 1,
			"or": 1,
			"a": 2,
			"so": 1,
			"on": 1,
			"but": 1,
			"when": 1,
			"gone": 1,
			"and": 5,
			"with": 2,
			"to": 2,
			"as": 1,
			"at": 1,
			"o": 1,
			"the": 3,
			"in": 1
		},
		"evening": {
			"sweet": 1,
			"cool": 1,
			"cloud": 1,
			"play": 1,
			"shades": 1,
			"are": 1,
			"beam": 1,
			"of": 1,
			"star": 4,
			"it": 1,
			"by": 1,
			"long": 1,
			"care": 1,
			"prayer": 3,
			"mild": 2,
			"blast": 1,
			"for": 1,
			"hour": 1,
			"came": 1,
			"twilight": 1,
			"comes": 1,
			"rang": 1,
			"most": 1,
			"that": 1,
			"bright": 1,
			"late": 1,
			"prey": 1,
			"fill": 1,
			"a": 1,
			"upon": 1,
			"walk": 1,
			"on": 1,
			"old": 1,
			"bell": 1,
			"time": 2,
			"when": 2,
			"gone": 1,
			"close": 1,
			"and": 2,
			"sun": 1,
			"i": 1,
			"shadows": 2,
			"work": 1,
			"calm": 1,
			"guest": 1,
			"breeze": 1,
			"our": 1,
			"ends": 1,
			"loved": 1,
			"wind": 1,
			"natures": 1,
			"to": 1,
			"know": 1,
			"skies": 1,
			"fair": 1,
			"the": 4,
			"her": 1,
			"fire": 1,
			"in": 1,
			"air": 2,
			"sky": 2
		},
		"yellow": {
			"of": 2,
			"tide": 1,
			"gold": 1,
			"sands": 1,
			"load": 1,
			"corn": 1,
			"hard": 1,
			"grain": 2,
			"leaves": 1,
			"melancholy": 1,
			"autumn": 2,
			"rain": 1,
			"was": 1,
			"leaf": 2,
			"moon": 1,
			"plain": 1,
			"and": 1,
			"do": 1,
			"sunshine": 1,
			"days": 1,
			"sand": 1,
			"hair": 3,
			"shine": 1,
			"to": 1,
			"as": 2,
			"the": 2,
			"in": 3
		},
		"rising": {
			"sweet": 1,
			"dust": 1,
			"which": 1,
			"of": 1,
			"star": 1,
			"up": 1,
			"far": 1,
			"beams": 1,
			"train": 1,
			"bosom": 1,
			"my": 1,
			"again": 1,
			"morn": 1,
			"ground": 2,
			"senses": 1,
			"god": 1,
			"oer": 2,
			"sudden": 1,
			"did": 1,
			"that": 1,
			"tear": 1,
			"moon": 1,
			"fill": 1,
			"on": 1,
			"sigh": 1,
			"be": 1,
			"and": 5,
			"sun": 6,
			"year": 1,
			"from": 1,
			"ill": 1,
			"these": 1,
			"with": 1,
			"strong": 1,
			"through": 1,
			"behind": 1,
			"to": 1,
			"round": 1,
			"in": 2
		},
		"win": {
			"us": 3,
			"his": 1,
			"it": 1,
			"by": 2,
			"you": 1,
			"john": 1,
			"thy": 1,
			"that": 2,
			"an": 1,
			"or": 2,
			"a": 1,
			"them": 1,
			"never": 1,
			"but": 1,
			"glory": 1,
			"and": 4,
			"i": 1,
			"while": 1,
			"honor": 1,
			"with": 1,
			"give": 1,
			"through": 1,
			"to": 1,
			"we": 1,
			"me": 1,
			"o": 2,
			"the": 8,
			"her": 1
		},
		"reach": {
			"more": 1,
			"his": 2,
			"him": 1,
			"of": 7,
			"you": 1,
			"thy": 1,
			"name": 1,
			"that": 1,
			"full": 1,
			"half": 1,
			"their": 1,
			"but": 1,
			"out": 1,
			"and": 1,
			"how": 1,
			"no": 1,
			"with": 1,
			"then": 1,
			"our": 1,
			"to": 1,
			"me": 1,
			"the": 13,
			"her": 1
		},
		"friend": {
			"sweet": 1,
			"dying": 1,
			"his": 2,
			"him": 1,
			"surely": 1,
			"beside": 1,
			"under": 2,
			"who": 1,
			"of": 7,
			"this": 1,
			"up": 1,
			"shakespeare": 1,
			"nor": 1,
			"beloved": 2,
			"not": 1,
			"it": 2,
			"is": 2,
			"like": 1,
			"farewell": 1,
			"they": 1,
			"you": 1,
			"where": 1,
			"for": 2,
			"heaven": 1,
			"take": 1,
			"hope": 1,
			"because": 1,
			"friend": 1,
			"indeed": 1,
			"was": 1,
			"that": 3,
			"if": 3,
			"let": 1,
			"bear": 1,
			"must": 1,
			"even": 1,
			"or": 5,
			"a": 6,
			"on": 1,
			"but": 4,
			"death": 3,
			"when": 1,
			"be": 2,
			"ay": 1,
			"and": 12,
			"do": 1,
			"i": 5,
			"thou": 2,
			"bids": 2,
			"here": 1,
			"from": 1,
			"beneath": 1,
			"no": 3,
			"with": 1,
			"sad": 1,
			"now": 1,
			"till": 1,
			"will": 1,
			"through": 1,
			"has": 1,
			"our": 1,
			"to": 10,
			"we": 1,
			"whose": 1,
			"at": 2,
			"o": 2,
			"left": 1,
			"the": 4,
			"there": 1,
			"in": 5
		},
		"wrath": {
			"are": 1,
			"of": 4,
			"after": 1,
			"nor": 1,
			"not": 1,
			"over": 1,
			"for": 1,
			"spent": 1,
			"can": 1,
			"did": 1,
			"am": 1,
			"a": 2,
			"so": 1,
			"and": 5,
			"till": 1,
			"all": 1,
			"has": 1,
			"to": 1,
			"the": 3,
			"bent": 1
		},
		"bells": {
			"low": 1,
			"ring": 2,
			"begin": 1,
			"are": 1,
			"beside": 1,
			"call": 1,
			"of": 3,
			"every": 1,
			"is": 1,
			"heard": 1,
			"themselves": 1,
			"that": 1,
			"nothing": 1,
			"or": 1,
			"have": 1,
			"their": 1,
			"a": 1,
			"out": 2,
			"and": 6,
			"here": 1,
			"from": 1,
			"across": 1,
			"our": 1,
			"your": 1,
			"to": 3,
			"at": 1,
			"in": 3
		},
		"lords": {
			"are": 1,
			"who": 1,
			"of": 7,
			"command": 1,
			"constant": 1,
			"like": 1,
			"hand": 1,
			"thy": 1,
			"were": 1,
			"and": 4,
			"work": 1,
			"yet": 1,
			"to": 1,
			"knee": 1,
			"rich": 1,
			"whose": 1,
			"son": 1,
			"at": 1,
			"o": 1,
			"house": 1,
			"in": 2
		},
		"fools": {
			"more": 1,
			"are": 2,
			"side": 1,
			"by": 1,
			"like": 1,
			"where": 1,
			"that": 2,
			"if": 1,
			"think": 1,
			"so": 1,
			"but": 1,
			"when": 1,
			"be": 1,
			"paradise": 1,
			"and": 3,
			"whateer": 1,
			"rush": 1,
			"want": 1,
			"our": 1,
			"stay": 2,
			"shall": 1,
			"your": 1,
			"yet": 1,
			"to": 2,
			"may": 1,
			"we": 1,
			"the": 2,
			"there": 1
		},
		"streets": {
			"are": 2,
			"of": 3,
			"today": 1,
			"you": 1,
			"where": 1,
			"were": 2,
			"that": 1,
			"had": 1,
			"and": 2,
			"how": 1,
			"with": 3,
			"all": 1,
			"then": 1,
			"through": 1,
			"shall": 1,
			"the": 2
		},
		"friendship": {
			"books": 1,
			"of": 4,
			"gold": 1,
			"is": 8,
			"like": 1,
			"that": 1,
			"had": 1,
			"pure": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"never": 1,
			"hath": 1,
			"love": 2,
			"above": 1,
			"and": 3,
			"no": 1,
			"still": 1,
			"to": 1,
			"springs": 1,
			"whose": 1,
			"the": 1
		},
		"stretched": {
			"his": 2,
			"of": 1,
			"far": 1,
			"by": 1,
			"away": 2,
			"my": 1,
			"upon": 2,
			"on": 1,
			"out": 3,
			"beneath": 2,
			"before": 1,
			"as": 1,
			"at": 1,
			"east": 1,
			"left": 1,
			"in": 3
		},
		"name": {
			"look": 2,
			"his": 2,
			"see": 1,
			"tell": 1,
			"who": 4,
			"which": 2,
			"of": 17,
			"high": 1,
			"she": 1,
			"nor": 1,
			"city": 1,
			"it": 1,
			"alone": 2,
			"wars": 1,
			"is": 19,
			"like": 1,
			"good": 1,
			"ever": 1,
			"they": 2,
			"grant": 1,
			"strike": 1,
			"for": 4,
			"should": 1,
			"my": 1,
			"thy": 2,
			"sir": 1,
			"comfort": 1,
			"did": 1,
			"was": 2,
			"that": 1,
			"let": 1,
			"had": 1,
			"what": 1,
			"their": 1,
			"a": 4,
			"so": 1,
			"given": 1,
			"upon": 1,
			"things": 1,
			"hath": 1,
			"whence": 1,
			"delight": 1,
			"love": 2,
			"on": 2,
			"above": 1,
			"but": 4,
			"be": 5,
			"and": 13,
			"i": 4,
			"thou": 3,
			"here": 1,
			"each": 1,
			"from": 6,
			"join": 1,
			"would": 1,
			"beneath": 1,
			"with": 3,
			"meet": 1,
			"all": 1,
			"blest": 1,
			"through": 1,
			"has": 2,
			"our": 2,
			"shall": 2,
			"your": 1,
			"to": 11,
			"may": 1,
			"we": 1,
			"as": 1,
			"said": 1,
			"he": 3,
			"me": 1,
			"at": 2,
			"led": 1,
			"o": 2,
			"the": 9,
			"her": 2,
			"been": 1,
			"in": 4
		},
		"door": {
			"within": 1,
			"beside": 1,
			"very": 1,
			"of": 1,
			"she": 1,
			"it": 1,
			"is": 4,
			"why": 1,
			"good": 1,
			"you": 1,
			"thus": 1,
			"for": 2,
			"take": 1,
			"john": 1,
			"flung": 1,
			"sir": 1,
			"door": 1,
			"was": 1,
			"that": 3,
			"let": 1,
			"what": 2,
			"waiting": 1,
			"a": 2,
			"maryland": 1,
			"fast": 1,
			"but": 3,
			"when": 3,
			"be": 2,
			"ay": 1,
			"t": 1,
			"and": 14,
			"i": 2,
			"thou": 1,
			"stands": 1,
			"with": 1,
			"drew": 1,
			"now": 1,
			"then": 1,
			"shall": 1,
			"to": 4,
			"we": 2,
			"whose": 2,
			"o": 1,
			"the": 8,
			"in": 3
		},
		"clay": {
			"floor": 1,
			"endure": 1,
			"which": 1,
			"she": 1,
			"it": 2,
			"by": 1,
			"is": 1,
			"they": 1,
			"thy": 3,
			"hopes": 1,
			"that": 2,
			"bright": 1,
			"a": 2,
			"so": 1,
			"spirit": 1,
			"break": 1,
			"say": 1,
			"and": 4,
			"thou": 1,
			"might": 1,
			"no": 1,
			"till": 1,
			"will": 1,
			"shall": 2,
			"yet": 1,
			"to": 2,
			"as": 1,
			"o": 1,
			"the": 1
		},
		"queen": {
			"of": 15,
			"is": 1,
			"looked": 1,
			"you": 1,
			"for": 2,
			"thy": 1,
			"comes": 1,
			"sits": 1,
			"was": 2,
			"an": 1,
			"be": 1,
			"and": 6,
			"alfred": 1,
			"with": 3,
			"has": 2,
			"yet": 1,
			"little": 1,
			"may": 13,
			"fair": 1,
			"me": 1,
			"sat": 1,
			"o": 10
		},
		"glow": {
			"went": 1,
			"his": 1,
			"see": 1,
			"of": 1,
			"once": 1,
			"breathe": 1,
			"nor": 1,
			"twas": 1,
			"is": 1,
			"although": 1,
			"like": 1,
			"than": 1,
			"for": 2,
			"my": 1,
			"thy": 1,
			"along": 1,
			"that": 1,
			"have": 1,
			"on": 1,
			"red": 1,
			"until": 1,
			"and": 7,
			"with": 1,
			"to": 2,
			"as": 3,
			"he": 2,
			"the": 2,
			"there": 2,
			"in": 2
		},
		"sits": {
			"not": 1,
			"by": 1,
			"alone": 1,
			"good": 1,
			"lightly": 1,
			"where": 1,
			"crowned": 1,
			"fill": 1,
			"a": 1,
			"upon": 2,
			"on": 2,
			"quite": 1,
			"dumb": 1,
			"and": 4,
			"no": 1,
			"with": 1,
			"well": 1,
			"before": 1,
			"at": 1,
			"the": 3,
			"her": 1,
			"young": 1,
			"there": 1,
			"in": 7
		},
		"countrys": {
			"blood": 1,
			"right": 1,
			"call": 1,
			"sacred": 1,
			"by": 1,
			"good": 1,
			"those": 1,
			"thy": 1,
			"cause": 1,
			"stars": 1,
			"a": 1,
			"never": 1,
			"foes": 1,
			"cries": 1,
			"blest": 1,
			"wrong": 1,
			"needs": 1,
			"flag": 2,
			"led": 1,
			"the": 1
		},
		"along": {
			"us": 1,
			"his": 1,
			"alike": 1,
			"not": 1,
			"it": 1,
			"by": 2,
			"its": 1,
			"my": 2,
			"thy": 2,
			"beautiful": 1,
			"even": 1,
			"or": 1,
			"their": 2,
			"a": 2,
			"when": 1,
			"t": 1,
			"and": 5,
			"each": 1,
			"with": 4,
			"our": 1,
			"before": 1,
			"round": 1,
			"keen": 1,
			"happy": 1,
			"at": 1,
			"the": 73,
			"her": 1,
			"there": 1,
			"in": 3
		},
		"longer": {
			"dare": 1,
			"suffer": 1,
			"grown": 2,
			"joy": 1,
			"pain": 1,
			"behold": 1,
			"flight": 1,
			"for": 1,
			"seek": 1,
			"sin": 1,
			"need": 1,
			"must": 1,
			"what": 2,
			"wait": 1,
			"pause": 1,
			"ride": 1,
			"hath": 2,
			"walk": 1,
			"death": 1,
			"and": 2,
			"here": 2,
			"draw": 1,
			"henry": 1,
			"from": 2,
			"would": 1,
			"with": 1,
			"now": 2,
			"will": 1,
			"then": 1,
			"could": 1,
			"needs": 1,
			"shall": 2,
			"to": 2,
			"ah": 1,
			"flow": 1,
			"at": 1,
			"the": 2,
			"in": 2,
			"seem": 1
		},
		"william": {
			"james": 1,
			"rule": 1,
			"tell": 1,
			"who": 1,
			"she": 3,
			"among": 1,
			"shakespeare": 1,
			"three": 1,
			"matter": 1,
			"farewell": 1,
			"hallowed": 1,
			"afar": 1,
			"song": 1,
			"heaven": 1,
			"my": 2,
			"god": 1,
			"oer": 1,
			"was": 2,
			"let": 1,
			"de": 1,
			"a": 3,
			"ashes": 1,
			"on": 2,
			"brown": 1,
			"and": 1,
			"march": 1,
			"i": 1,
			"thou": 1,
			"home": 1,
			"breathes": 1,
			"henry": 1,
			"how": 2,
			"from": 2,
			"blade": 1,
			"these": 1,
			"no": 1,
			"set": 1,
			"give": 1,
			"our": 1,
			"passing": 1,
			"shall": 1,
			"to": 1,
			"as": 1,
			"end": 1,
			"iii": 1,
			"o": 3,
			"the": 11,
			"in": 1
		},
		"face": {
			"sweet": 2,
			"perchance": 1,
			"us": 1,
			"more": 1,
			"england": 1,
			"his": 4,
			"him": 1,
			"next": 1,
			"which": 2,
			"of": 22,
			"up": 1,
			"she": 3,
			"nor": 1,
			"grew": 1,
			"praise": 1,
			"it": 2,
			"far": 1,
			"weep": 1,
			"by": 1,
			"father": 1,
			"long": 1,
			"is": 4,
			"soon": 1,
			"although": 1,
			"looked": 1,
			"like": 1,
			"away": 1,
			"children": 1,
			"they": 3,
			"you": 3,
			"pale": 1,
			"than": 2,
			"where": 1,
			"for": 6,
			"theres": 1,
			"didst": 1,
			"my": 4,
			"shines": 1,
			"thy": 2,
			"makes": 1,
			"sir": 1,
			"william": 1,
			"were": 1,
			"oer": 1,
			"did": 1,
			"was": 7,
			"that": 9,
			"if": 1,
			"willie": 1,
			"let": 1,
			"go": 1,
			"had": 1,
			"must": 1,
			"what": 3,
			"oh": 1,
			"front": 1,
			"or": 1,
			"their": 1,
			"a": 6,
			"so": 1,
			"sometimes": 1,
			"upon": 1,
			"never": 1,
			"on": 2,
			"but": 5,
			"when": 3,
			"be": 1,
			"and": 25,
			"dark": 1,
			"i": 4,
			"thou": 1,
			"too": 1,
			"against": 1,
			"saint": 1,
			"how": 2,
			"from": 3,
			"these": 1,
			"no": 2,
			"with": 7,
			"now": 1,
			"till": 1,
			"will": 1,
			"all": 2,
			"thats": 1,
			"asleep": 1,
			"doth": 1,
			"dost": 1,
			"turned": 2,
			"before": 2,
			"only": 1,
			"still": 1,
			"your": 1,
			"yet": 2,
			"to": 25,
			"we": 1,
			"whose": 1,
			"as": 2,
			"he": 3,
			"o": 2,
			"the": 14,
			"though": 2,
			"her": 1,
			"change": 1,
			"there": 1,
			"in": 4,
			"flowers": 1
		},
		"false": {
			"ring": 1,
			"his": 1,
			"science": 1,
			"up": 1,
			"lights": 1,
			"pride": 1,
			"they": 1,
			"shot": 1,
			"where": 1,
			"face": 1,
			"or": 2,
			"cruel": 1,
			"ay": 1,
			"heart": 1,
			"and": 2,
			"dream": 1,
			"i": 2,
			"sublime": 1,
			"now": 1,
			"to": 5,
			"as": 1,
			"the": 2,
			"world": 5,
			"there": 1,
			"in": 1
		},
		"forward": {
			"fierce": 1,
			"are": 1,
			"race": 1,
			"not": 1,
			"is": 1,
			"like": 1,
			"where": 1,
			"for": 1,
			"boys": 1,
			"blows": 1,
			"along": 1,
			"forward": 1,
			"let": 1,
			"moved": 1,
			"never": 2,
			"on": 1,
			"but": 1,
			"german": 1,
			"and": 2,
			"each": 1,
			"breast": 1,
			"with": 2,
			"all": 2,
			"through": 1,
			"to": 3,
			"backward": 1,
			"turning": 1,
			"he": 1,
			"the": 2,
			"tis": 1,
			"bent": 1,
			"in": 1
		},
		"closed": {
			"his": 3,
			"are": 2,
			"up": 1,
			"for": 2,
			"oer": 1,
			"full": 1,
			"their": 1,
			"when": 1,
			"and": 3,
			"beneath": 1,
			"the": 5,
			"her": 1,
			"in": 2
		},
		"sin": {
			"itself": 3,
			"im": 1,
			"fell": 1,
			"who": 1,
			"of": 2,
			"she": 1,
			"not": 1,
			"put": 1,
			"hes": 2,
			"it": 1,
			"weep": 1,
			"by": 1,
			"alone": 1,
			"is": 4,
			"away": 1,
			"without": 2,
			"where": 1,
			"for": 1,
			"theres": 1,
			"take": 1,
			"john": 1,
			"thy": 1,
			"william": 1,
			"can": 1,
			"that": 2,
			"what": 1,
			"but": 2,
			"ay": 1,
			"and": 21,
			"ask": 1,
			"i": 7,
			"thou": 1,
			"here": 1,
			"too": 1,
			"against": 1,
			"saint": 1,
			"while": 1,
			"no": 4,
			"roll": 1,
			"with": 2,
			"now": 1,
			"till": 1,
			"will": 1,
			"could": 1,
			"through": 2,
			"shall": 1,
			"only": 1,
			"yet": 2,
			"to": 7,
			"may": 1,
			"as": 1,
			"o": 1,
			"the": 7,
			"in": 1
		},
		"battles": {
			"sound": 1,
			"won": 2,
			"tide": 1,
			"crimson": 1,
			"they": 1,
			"stern": 1,
			"heard": 1,
			"lost": 1,
			"name": 1,
			"main": 1,
			"trust": 1,
			"front": 1,
			"a": 1,
			"so": 1,
			"when": 1,
			"van": 1,
			"and": 2,
			"i": 1,
			"how": 1,
			"shield": 1,
			"with": 2,
			"mingled": 1,
			"to": 3,
			"mid": 1,
			"flow": 1,
			"powers": 1,
			"as": 1,
			"at": 1,
			"the": 2,
			"in": 1
		},
		"trembling": {
			"stream": 1,
			"amidst": 1,
			"silence": 1,
			"limbs": 2,
			"hand": 3,
			"bosom": 1,
			"ray": 1,
			"hope": 1,
			"that": 1,
			"lips": 1,
			"hands": 1,
			"a": 1,
			"lay": 1,
			"on": 1,
			"chains": 1,
			"weeping": 1,
			"and": 1,
			"beneath": 1,
			"maid": 1,
			"voice": 2,
			"ears": 1,
			"with": 2,
			"flying": 1,
			"much": 1,
			"still": 1,
			"hill": 1,
			"at": 1,
			"though": 1,
			"passed": 1,
			"in": 2
		},
		"dew": {
			"earth": 1,
			"james": 1,
			"which": 1,
			"of": 5,
			"this": 1,
			"up": 1,
			"she": 1,
			"nor": 1,
			"is": 3,
			"friends": 1,
			"must": 1,
			"or": 3,
			"waiting": 7,
			"sae": 1,
			"a": 2,
			"upon": 1,
			"on": 6,
			"ye": 1,
			"naught": 1,
			"and": 7,
			"from": 1,
			"while": 1,
			"through": 1,
			"shall": 1,
			"natures": 1,
			"we": 1,
			"as": 1,
			"me": 1,
			"o": 1,
			"the": 6,
			"in": 1
		},
		"rain": {
			"come": 1,
			"see": 1,
			"begin": 2,
			"under": 1,
			"who": 1,
			"of": 2,
			"she": 1,
			"two": 1,
			"rose": 1,
			"it": 2,
			"is": 1,
			"they": 1,
			"smile": 1,
			"blast": 1,
			"came": 2,
			"enough": 1,
			"comes": 1,
			"hope": 1,
			"makes": 1,
			"rain": 1,
			"had": 1,
			"must": 1,
			"or": 1,
			"a": 3,
			"green": 1,
			"upon": 2,
			"on": 3,
			"and": 9,
			"too": 1,
			"how": 1,
			"from": 2,
			"no": 1,
			"with": 1,
			"has": 1,
			"shall": 1,
			"only": 1,
			"to": 2,
			"we": 1,
			"at": 1,
			"o": 1,
			"the": 7,
			"in": 3
		},
		"faith": {
			"sweet": 1,
			"us": 1,
			"his": 3,
			"hell": 1,
			"law": 1,
			"tennyson": 1,
			"are": 1,
			"who": 1,
			"which": 2,
			"of": 1,
			"once": 1,
			"she": 1,
			"beyond": 2,
			"divine": 1,
			"by": 1,
			"alone": 1,
			"twixt": 1,
			"is": 12,
			"like": 1,
			"they": 2,
			"you": 1,
			"than": 1,
			"become": 1,
			"sang": 1,
			"my": 1,
			"better": 1,
			"hope": 4,
			"faith": 2,
			"can": 2,
			"oer": 1,
			"that": 7,
			"let": 1,
			"had": 2,
			"an": 1,
			"or": 1,
			"awake": 1,
			"a": 2,
			"upon": 1,
			"hath": 1,
			"above": 1,
			"but": 2,
			"perhaps": 1,
			"be": 1,
			"and": 25,
			"i": 6,
			"thou": 1,
			"too": 1,
			"how": 1,
			"from": 1,
			"drink": 1,
			"no": 1,
			"all": 1,
			"could": 1,
			"has": 1,
			"our": 1,
			"to": 6,
			"may": 1,
			"we": 2,
			"as": 2,
			"he": 1,
			"me": 1,
			"below": 1,
			"o": 1,
			"the": 1,
			"though": 1,
			"there": 1,
			"in": 12
		},
		"whether": {
			"this": 1,
			"beyond": 1,
			"it": 1,
			"by": 2,
			"they": 1,
			"for": 1,
			"my": 1,
			"that": 1,
			"busy": 1,
			"or": 2,
			"true": 1,
			"on": 1,
			"t": 1,
			"thou": 1,
			"reason": 1,
			"beneath": 1,
			"will": 1,
			"lying": 1,
			"we": 8,
			"he": 1,
			"the": 4,
			"in": 2
		},
		"god": {
			"sweet": 1,
			"more": 1,
			"sent": 1,
			"within": 2,
			"unseen": 1,
			"loves": 1,
			"light": 1,
			"forget": 1,
			"his": 8,
			"save": 9,
			"see": 1,
			"means": 1,
			"hast": 1,
			"are": 3,
			"beside": 1,
			"made": 5,
			"who": 12,
			"which": 2,
			"sake": 1,
			"of": 30,
			"this": 3,
			"high": 1,
			"keep": 1,
			"nor": 2,
			"hymn": 1,
			"forth": 1,
			"goes": 1,
			"not": 1,
			"praise": 2,
			"it": 6,
			"over": 1,
			"bless": 5,
			"send": 1,
			"father": 1,
			"alone": 8,
			"long": 1,
			"is": 39,
			"takes": 1,
			"away": 1,
			"ever": 1,
			"they": 1,
			"moves": 1,
			"thus": 1,
			"its": 1,
			"sea": 1,
			"richard": 1,
			"for": 12,
			"should": 2,
			"take": 1,
			"rest": 1,
			"my": 6,
			"john": 2,
			"again": 1,
			"thy": 7,
			"sing": 1,
			"comes": 1,
			"therefore": 1,
			"makes": 1,
			"most": 5,
			"william": 2,
			"face": 1,
			"god": 2,
			"can": 3,
			"immortal": 3,
			"did": 4,
			"was": 8,
			"that": 10,
			"if": 3,
			"says": 1,
			"full": 2,
			"make": 1,
			"spake": 3,
			"had": 3,
			"gives": 2,
			"must": 2,
			"what": 6,
			"oh": 1,
			"an": 1,
			"or": 4,
			"wilt": 1,
			"have": 1,
			"gave": 1,
			"ride": 1,
			"their": 1,
			"a": 11,
			"so": 2,
			"brings": 1,
			"upon": 1,
			"folly": 1,
			"lay": 1,
			"hath": 16,
			"whence": 1,
			"above": 4,
			"but": 5,
			"death": 1,
			"perhaps": 1,
			"ye": 3,
			"lives": 3,
			"when": 2,
			"knows": 2,
			"be": 6,
			"t": 1,
			"and": 35,
			"i": 16,
			"knew": 1,
			"thou": 5,
			"bids": 1,
			"one": 3,
			"each": 2,
			"how": 3,
			"help": 1,
			"from": 6,
			"across": 1,
			"would": 3,
			"ill": 1,
			"rare": 1,
			"no": 2,
			"roll": 1,
			"called": 1,
			"with": 4,
			"virtue": 1,
			"soft": 1,
			"now": 1,
			"give": 1,
			"shone": 1,
			"will": 11,
			"himself": 6,
			"all": 6,
			"through": 1,
			"thomas": 2,
			"has": 6,
			"well": 2,
			"doth": 2,
			"our": 7,
			"works": 1,
			"night": 1,
			"pity": 4,
			"shall": 2,
			"before": 2,
			"only": 1,
			"yet": 1,
			"mark": 1,
			"to": 24,
			"sore": 1,
			"ah": 1,
			"may": 5,
			"yon": 1,
			"we": 9,
			"whose": 3,
			"as": 3,
			"stand": 1,
			"said": 1,
			"life": 1,
			"he": 8,
			"me": 1,
			"at": 1,
			"o": 15,
			"browning": 1,
			"blessed": 1,
			"arise": 1,
			"the": 40,
			"ghost": 1,
			"tis": 2,
			"though": 2,
			"treasure": 1,
			"her": 2,
			"oft": 1,
			"there": 1,
			"in": 19,
			"forgive": 1,
			"aloud": 1
		},
		"can": {
			"come": 4,
			"hear": 2,
			"dust": 1,
			"chase": 1,
			"free": 1,
			"forget": 4,
			"die": 4,
			"his": 4,
			"save": 1,
			"endure": 2,
			"ear": 1,
			"see": 10,
			"play": 1,
			"tell": 13,
			"are": 1,
			"warm": 1,
			"call": 3,
			"of": 2,
			"brook": 1,
			"this": 1,
			"amid": 1,
			"keep": 1,
			"find": 1,
			"command": 2,
			"scorn": 1,
			"lift": 1,
			"part": 1,
			"behold": 1,
			"divine": 1,
			"dwell": 3,
			"serve": 1,
			"put": 1,
			"depart": 1,
			"praise": 1,
			"it": 8,
			"shake": 2,
			"bless": 3,
			"weep": 2,
			"send": 3,
			"by": 1,
			"try": 2,
			"alone": 2,
			"bring": 3,
			"something": 1,
			"trace": 1,
			"bind": 2,
			"land": 1,
			"soon": 1,
			"rise": 2,
			"eternity": 1,
			"like": 1,
			"away": 2,
			"form": 1,
			"ever": 6,
			"either": 1,
			"they": 1,
			"you": 3,
			"nature": 1,
			"thus": 1,
			"smile": 1,
			"those": 1,
			"where": 1,
			"press": 1,
			"for": 4,
			"read": 4,
			"heaven": 1,
			"catch": 1,
			"take": 2,
			"speak": 3,
			"rest": 1,
			"my": 5,
			"blow": 1,
			"count": 1,
			"again": 1,
			"touch": 4,
			"thy": 1,
			"sing": 3,
			"watch": 2,
			"sleep": 1,
			"hope": 1,
			"cheer": 1,
			"any": 3,
			"win": 2,
			"reach": 1,
			"sin": 3,
			"power": 1,
			"were": 2,
			"comfort": 1,
			"flee": 2,
			"trumpet": 1,
			"cause": 1,
			"that": 5,
			"let": 1,
			"show": 3,
			"man": 2,
			"bear": 3,
			"always": 1,
			"make": 10,
			"fall": 4,
			"what": 2,
			"an": 7,
			"wait": 1,
			"understand": 1,
			"hold": 2,
			"or": 5,
			"think": 2,
			"pause": 1,
			"have": 4,
			"study": 1,
			"fill": 2,
			"awake": 3,
			"their": 3,
			"a": 4,
			"them": 2,
			"upon": 1,
			"lord": 1,
			"never": 13,
			"many": 1,
			"walk": 1,
			"love": 3,
			"break": 2,
			"wing": 1,
			"charm": 2,
			"but": 9,
			"death": 1,
			"thee": 3,
			"ye": 4,
			"choose": 1,
			"when": 3,
			"eat": 1,
			"thank": 1,
			"raise": 1,
			"be": 25,
			"naught": 1,
			"heart": 1,
			"say": 7,
			"and": 9,
			"eer": 2,
			"do": 12,
			"prize": 2,
			"move": 2,
			"ask": 1,
			"fly": 3,
			"i": 14,
			"judge": 2,
			"draw": 2,
			"from": 1,
			"ill": 1,
			"want": 1,
			"these": 1,
			"shield": 1,
			"no": 8,
			"rouse": 1,
			"voice": 1,
			"with": 3,
			"soggarth": 1,
			"set": 1,
			"give": 6,
			"till": 1,
			"meet": 2,
			"follow": 1,
			"himself": 1,
			"all": 1,
			"loving": 1,
			"then": 3,
			"feed": 2,
			"lose": 1,
			"clear": 1,
			"mount": 1,
			"master": 1,
			"turned": 1,
			"our": 1,
			"feel": 6,
			"frame": 1,
			"neer": 3,
			"fear": 1,
			"only": 1,
			"still": 1,
			"your": 3,
			"best": 1,
			"mark": 1,
			"to": 2,
			"into": 1,
			"little": 1,
			"live": 2,
			"gently": 1,
			"get": 1,
			"know": 5,
			"soar": 2,
			"may": 1,
			"enter": 3,
			"we": 4,
			"as": 1,
			"he": 5,
			"me": 2,
			"chain": 1,
			"grow": 1,
			"the": 17,
			"scarce": 1,
			"her": 1,
			"dead": 1,
			"fail": 1,
			"there": 1,
			"in": 4,
			"dim": 1
		},
		"wit": {
			"are": 1,
			"who": 1,
			"not": 1,
			"far": 1,
			"by": 2,
			"is": 1,
			"for": 2,
			"great": 1,
			"enough": 1,
			"can": 1,
			"that": 3,
			"if": 1,
			"or": 1,
			"a": 1,
			"so": 1,
			"on": 1,
			"but": 1,
			"and": 5,
			"how": 1,
			"some": 1,
			"will": 1,
			"strength": 1,
			"there": 1,
			"restless": 1,
			"in": 2
		},
		"foot": {
			"of": 9,
			"is": 2,
			"like": 1,
			"run": 1,
			"my": 1,
			"makes": 1,
			"that": 1,
			"an": 1,
			"or": 1,
			"hath": 1,
			"on": 2,
			"out": 1,
			"and": 4,
			"bliss": 1,
			"i": 1,
			"one": 1,
			"would": 1,
			"to": 1,
			"into": 1,
			"the": 4,
			"tis": 1,
			"in": 2
		},
		"moment": {
			"won": 1,
			"none": 1,
			"fell": 1,
			"of": 2,
			"it": 1,
			"twas": 1,
			"they": 1,
			"lightly": 1,
			"oer": 2,
			"that": 1,
			"show": 1,
			"half": 1,
			"brings": 1,
			"given": 1,
			"whence": 1,
			"on": 1,
			"be": 1,
			"and": 3,
			"i": 1,
			"draw": 1,
			"with": 2,
			"all": 1,
			"then": 2,
			"through": 1,
			"stay": 1,
			"yet": 1,
			"to": 3,
			"may": 1,
			"we": 1,
			"as": 2,
			"he": 1,
			"the": 3,
			"stood": 2,
			"there": 2,
			"in": 1
		},
		"shame": {
			"him": 1,
			"alas": 1,
			"of": 1,
			"dear": 1,
			"over": 1,
			"far": 1,
			"they": 1,
			"where": 1,
			"for": 3,
			"thy": 1,
			"vain": 1,
			"sits": 1,
			"was": 1,
			"that": 1,
			"if": 1,
			"let": 1,
			"bear": 1,
			"had": 1,
			"must": 1,
			"even": 1,
			"or": 1,
			"am": 1,
			"tears": 1,
			"a": 1,
			"upon": 1,
			"on": 3,
			"but": 1,
			"death": 1,
			"when": 1,
			"and": 15,
			"i": 1,
			"thou": 1,
			"would": 1,
			"with": 3,
			"all": 2,
			"through": 1,
			"our": 1,
			"to": 4,
			"as": 1,
			"o": 1,
			"the": 6,
			"her": 1,
			"there": 1,
			"in": 1
		},
		"noble": {
			"breaking": 1,
			"within": 1,
			"free": 1,
			"six": 1,
			"who": 2,
			"which": 2,
			"sounds": 1,
			"of": 4,
			"souls": 2,
			"praise": 1,
			"army": 1,
			"smooth": 1,
			"father": 1,
			"alone": 1,
			"land": 1,
			"is": 1,
			"rise": 1,
			"lo": 1,
			"steed": 1,
			"heard": 1,
			"for": 3,
			"earl": 1,
			"birth": 1,
			"noble": 1,
			"cause": 1,
			"was": 1,
			"that": 1,
			"pure": 1,
			"creatures": 1,
			"or": 1,
			"spirit": 1,
			"death": 1,
			"when": 1,
			"deed": 2,
			"task": 1,
			"rage": 1,
			"head": 1,
			"and": 7,
			"brow": 1,
			"hearts": 1,
			"mind": 1,
			"breast": 1,
			"give": 1,
			"thought": 1,
			"well": 1,
			"king": 3,
			"minds": 2,
			"to": 1,
			"flame": 1,
			"stand": 1,
			"end": 1,
			"he": 1,
			"dead": 1,
			"in": 1
		},
		"power": {
			"more": 1,
			"within": 2,
			"his": 1,
			"are": 2,
			"who": 2,
			"which": 6,
			"of": 12,
			"up": 1,
			"nor": 1,
			"does": 1,
			"divine": 1,
			"it": 1,
			"is": 4,
			"like": 1,
			"than": 2,
			"where": 1,
			"my": 1,
			"beauty": 1,
			"thy": 3,
			"seek": 1,
			"can": 1,
			"power": 1,
			"oer": 1,
			"was": 2,
			"that": 9,
			"if": 1,
			"go": 1,
			"what": 2,
			"oh": 1,
			"or": 3,
			"a": 2,
			"so": 1,
			"upon": 1,
			"hath": 1,
			"on": 2,
			"above": 1,
			"chains": 1,
			"but": 2,
			"be": 1,
			"t": 1,
			"and": 13,
			"do": 1,
			"i": 1,
			"thou": 2,
			"rather": 1,
			"each": 1,
			"from": 1,
			"no": 1,
			"with": 2,
			"give": 1,
			"some": 1,
			"till": 1,
			"will": 1,
			"all": 1,
			"through": 1,
			"has": 2,
			"doth": 1,
			"begun": 1,
			"shall": 4,
			"before": 1,
			"yet": 3,
			"to": 31,
			"into": 1,
			"turn": 1,
			"we": 2,
			"whose": 2,
			"as": 1,
			"he": 3,
			"at": 2,
			"the": 5,
			"in": 1,
			"thoughts": 1
		},
		"stroke": {
			"come": 1,
			"of": 6,
			"care": 1,
			"worse": 1,
			"let": 1,
			"what": 1,
			"a": 1,
			"when": 1,
			"t": 1,
			"and": 2,
			"do": 1,
			"might": 1,
			"stands": 1,
			"yet": 1,
			"as": 1
		},
		"were": {
			"sweet": 2,
			"blue": 1,
			"low": 2,
			"fled": 1,
			"sent": 1,
			"taught": 1,
			"wrought": 1,
			"thine": 1,
			"ours": 1,
			"free": 2,
			"his": 5,
			"stream": 1,
			"struck": 1,
			"see": 1,
			"white": 2,
			"none": 2,
			"weary": 1,
			"fears": 1,
			"beside": 1,
			"back": 2,
			"made": 5,
			"aye": 1,
			"amidst": 1,
			"who": 1,
			"seen": 3,
			"silent": 26,
			"men": 2,
			"worth": 2,
			"of": 6,
			"this": 2,
			"high": 1,
			"souls": 1,
			"after": 1,
			"up": 2,
			"off": 1,
			"she": 2,
			"among": 1,
			"forth": 1,
			"fresh": 1,
			"mine": 4,
			"solemn": 1,
			"not": 25,
			"pressed": 1,
			"it": 6,
			"over": 1,
			"brought": 1,
			"by": 8,
			"alone": 2,
			"twixt": 1,
			"cold": 2,
			"pride": 1,
			"wise": 1,
			"joyous": 1,
			"soon": 1,
			"few": 2,
			"like": 3,
			"hard": 1,
			"away": 1,
			"sung": 1,
			"good": 2,
			"ever": 1,
			"about": 2,
			"they": 7,
			"laughing": 1,
			"you": 2,
			"shot": 1,
			"new": 2,
			"laid": 1,
			"than": 3,
			"those": 1,
			"where": 6,
			"gentle": 1,
			"lovers": 1,
			"gray": 1,
			"just": 1,
			"for": 7,
			"blown": 1,
			"past": 1,
			"read": 1,
			"hand": 1,
			"lonely": 1,
			"boys": 1,
			"my": 4,
			"standing": 1,
			"john": 1,
			"forgot": 1,
			"thy": 1,
			"hushed": 1,
			"better": 1,
			"mary": 1,
			"flung": 1,
			"born": 6,
			"rough": 1,
			"most": 1,
			"torn": 1,
			"closed": 1,
			"god": 1,
			"were": 1,
			"oer": 1,
			"sudden": 1,
			"indeed": 1,
			"cause": 1,
			"that": 2,
			"let": 1,
			"womans": 1,
			"man": 3,
			"fain": 1,
			"always": 3,
			"full": 1,
			"broken": 1,
			"half": 3,
			"what": 1,
			"an": 4,
			"hold": 1,
			"nothing": 2,
			"even": 1,
			"waiting": 1,
			"their": 1,
			"a": 12,
			"so": 5,
			"given": 5,
			"upon": 1,
			"never": 1,
			"many": 1,
			"on": 7,
			"red": 1,
			"fast": 1,
			"old": 2,
			"filled": 3,
			"but": 6,
			"wet": 1,
			"buried": 2,
			"known": 2,
			"ye": 2,
			"when": 3,
			"gone": 3,
			"burst": 1,
			"t": 1,
			"out": 3,
			"kind": 1,
			"dumb": 1,
			"brave": 1,
			"and": 22,
			"sun": 1,
			"dark": 1,
			"black": 1,
			"i": 6,
			"down": 1,
			"told": 3,
			"less": 1,
			"here": 2,
			"too": 2,
			"might": 1,
			"perfect": 1,
			"pearl": 1,
			"from": 3,
			"sleeping": 1,
			"endless": 1,
			"these": 1,
			"nigh": 2,
			"while": 1,
			"no": 6,
			"voice": 1,
			"breeze": 1,
			"with": 14,
			"around": 1,
			"sad": 1,
			"now": 2,
			"flying": 2,
			"some": 1,
			"meet": 1,
			"strong": 2,
			"lying": 3,
			"all": 13,
			"desolate": 1,
			"gay": 2,
			"gods": 1,
			"slain": 9,
			"poured": 1,
			"blest": 2,
			"ten": 1,
			"songs": 1,
			"clear": 1,
			"upward": 1,
			"our": 2,
			"wrong": 3,
			"day": 1,
			"gathered": 1,
			"mercy": 1,
			"before": 3,
			"only": 1,
			"still": 2,
			"your": 1,
			"mingled": 1,
			"yet": 2,
			"to": 16,
			"loud": 1,
			"into": 2,
			"little": 1,
			"written": 1,
			"rich": 1,
			"wounds": 1,
			"growing": 1,
			"sore": 1,
			"art": 1,
			"we": 2,
			"glad": 1,
			"spread": 1,
			"whose": 1,
			"falling": 1,
			"as": 8,
			"done": 2,
			"said": 1,
			"he": 2,
			"at": 7,
			"straight": 1,
			"wound": 1,
			"led": 2,
			"coming": 1,
			"left": 2,
			"the": 32,
			"sure": 2,
			"world": 1,
			"bent": 1,
			"young": 5,
			"dead": 7,
			"near": 1,
			"oft": 1,
			"there": 10,
			"in": 18,
			"flowers": 2,
			"dim": 1,
			"shed": 3
		},
		"bud": {
			"of": 4,
			"she": 1,
			"for": 1,
			"again": 1,
			"was": 1,
			"had": 1,
			"a": 2,
			"upon": 1,
			"turns": 1,
			"out": 1,
			"and": 3,
			"i": 1,
			"from": 1,
			"no": 1,
			"all": 1,
			"feed": 1,
			"wind": 1,
			"to": 1,
			"may": 1,
			"the": 1
		},
		"comfort": {
			"his": 1,
			"him": 1,
			"faithful": 1,
			"alas": 1,
			"fell": 1,
			"who": 1,
			"which": 1,
			"of": 4,
			"dear": 1,
			"mine": 1,
			"it": 1,
			"ease": 1,
			"unto": 1,
			"like": 1,
			"ever": 2,
			"should": 1,
			"speak": 1,
			"wear": 1,
			"faith": 1,
			"comfort": 1,
			"turns": 1,
			"and": 4,
			"from": 1,
			"some": 1,
			"all": 1,
			"spring": 1,
			"to": 5,
			"me": 15,
			"her": 2,
			"in": 2
		},
		"flee": {
			"who": 1,
			"far": 2,
			"away": 1,
			"for": 1,
			"my": 1,
			"sir": 1,
			"let": 1,
			"pure": 1,
			"lest": 1,
			"true": 1,
			"but": 1,
			"help": 1,
			"from": 1,
			"before": 1,
			"to": 1,
			"live": 1,
			"at": 1,
			"the": 1,
			"in": 2
		},
		"waking": {
			"which": 1,
			"call": 2,
			"find": 1,
			"children": 1,
			"they": 1,
			"rest": 1,
			"hour": 1,
			"and": 2,
			"dream": 2,
			"i": 2,
			"from": 1,
			"no": 1,
			"with": 1,
			"till": 1,
			"sense": 1,
			"to": 1,
			"the": 1,
			"in": 2,
			"thoughts": 1
		},
		"bears": {
			"us": 1,
			"his": 1,
			"him": 1,
			"pain": 1,
			"not": 1,
			"is": 1,
			"where": 1,
			"along": 1,
			"whether": 1,
			"finds": 1,
			"a": 1,
			"on": 1,
			"but": 2,
			"and": 1,
			"thou": 1,
			"one": 1,
			"no": 3,
			"with": 1,
			"all": 3,
			"me": 1,
			"the": 6,
			"in": 1
		},
		"oer": {
			"books": 1,
			"us": 6,
			"england": 1,
			"river": 1,
			"his": 17,
			"him": 3,
			"white": 1,
			"alas": 1,
			"ive": 1,
			"who": 1,
			"which": 5,
			"of": 1,
			"this": 3,
			"souls": 1,
			"after": 1,
			"nor": 1,
			"not": 1,
			"englands": 1,
			"every": 1,
			"it": 6,
			"cold": 1,
			"land": 3,
			"eternity": 1,
			"like": 1,
			"they": 1,
			"earths": 1,
			"its": 10,
			"those": 3,
			"where": 1,
			"my": 6,
			"again": 3,
			"thy": 9,
			"sin": 1,
			"that": 3,
			"let": 1,
			"full": 1,
			"ripe": 1,
			"half": 1,
			"what": 1,
			"an": 1,
			"stone": 1,
			"tears": 1,
			"their": 8,
			"a": 11,
			"so": 2,
			"them": 3,
			"true": 1,
			"many": 1,
			"on": 1,
			"but": 4,
			"thee": 4,
			"when": 2,
			"lifes": 3,
			"plain": 1,
			"mans": 2,
			"distant": 1,
			"and": 25,
			"dream": 1,
			"fate": 1,
			"days": 1,
			"i": 1,
			"here": 1,
			"fields": 1,
			"each": 2,
			"henry": 1,
			"from": 1,
			"ill": 2,
			"these": 1,
			"no": 1,
			"with": 10,
			"some": 3,
			"till": 1,
			"prayers": 1,
			"all": 8,
			"gods": 1,
			"nights": 1,
			"being": 1,
			"our": 4,
			"your": 1,
			"to": 1,
			"cities": 1,
			"wood": 1,
			"growing": 1,
			"th": 1,
			"yon": 1,
			"powers": 1,
			"whose": 1,
			"fair": 1,
			"me": 5,
			"at": 1,
			"o": 1,
			"left": 2,
			"chorus": 1,
			"the": 146,
			"waste": 1,
			"her": 8,
			"dead": 1,
			"seas": 1
		},
		"crowned": {
			"his": 1,
			"him": 2,
			"who": 1,
			"nor": 1,
			"not": 1,
			"by": 1,
			"you": 1,
			"where": 1,
			"twilight": 1,
			"their": 1,
			"and": 1,
			"henry": 1,
			"from": 1,
			"no": 1,
			"with": 13,
			"our": 1,
			"in": 1
		},
		"sabbath": {
			"loves": 1,
			"creed": 2,
			"of": 5,
			"hymn": 1,
			"morning": 1,
			"without": 1,
			"morn": 2,
			"bells": 2,
			"deep": 1,
			"bell": 4,
			"thee": 3,
			"dream": 1,
			"how": 1,
			"day": 3,
			"the": 1
		},
		"sudden": {
			"sound": 1,
			"of": 1,
			"flight": 1,
			"rise": 1,
			"believe": 1,
			"cry": 1,
			"ere": 1,
			"passion": 1,
			"friendship": 1,
			"did": 1,
			"fall": 1,
			"gladness": 1,
			"or": 1,
			"blush": 1,
			"a": 1,
			"death": 1,
			"when": 1,
			"glory": 1,
			"and": 2,
			"grace": 1,
			"fate": 1,
			"blaze": 2,
			"storm": 1,
			"such": 1,
			"with": 1,
			"sense": 1,
			"fear": 1,
			"to": 3,
			"as": 1,
			"the": 2,
			"change": 1
		},
		"immortal": {
			"sweet": 1,
			"fame": 1,
			"morning": 1,
			"bird": 1,
			"praise": 1,
			"spirits": 1,
			"is": 1,
			"few": 1,
			"gift": 1,
			"sea": 1,
			"crown": 2,
			"where": 1,
			"for": 1,
			"my": 1,
			"ray": 1,
			"soul": 2,
			"power": 1,
			"that": 2,
			"reign": 1,
			"a": 1,
			"dawn": 1,
			"love": 2,
			"infinite": 1,
			"verse": 1,
			"and": 3,
			"bloom": 1,
			"fly": 1,
			"hate": 1,
			"from": 2,
			"marble": 1,
			"mind": 1,
			"while": 2,
			"honor": 1,
			"no": 1,
			"dread": 1,
			"with": 1,
			"till": 1,
			"gods": 1,
			"through": 1,
			"youth": 1,
			"eve": 1,
			"as": 1,
			"strength": 1,
			"the": 3,
			"though": 1,
			"dead": 1,
			"there": 1,
			"in": 1,
			"flowers": 1
		},
		"need": {
			"perchance": 1,
			"his": 1,
			"him": 1,
			"of": 8,
			"thyself": 1,
			"not": 13,
			"either": 1,
			"they": 1,
			"where": 1,
			"for": 1,
			"thy": 1,
			"seek": 1,
			"was": 1,
			"or": 1,
			"their": 1,
			"a": 3,
			"but": 2,
			"be": 3,
			"i": 2,
			"no": 3,
			"now": 1,
			"will": 2,
			"then": 1,
			"could": 1,
			"yet": 1,
			"to": 5,
			"we": 1,
			"he": 3,
			"me": 1,
			"at": 1,
			"o": 1,
			"the": 2,
			"change": 1,
			"in": 1
		},
		"main": {
			"this": 1,
			"ocean": 1,
			"they": 2,
			"sadly": 1,
			"flung": 1,
			"that": 2,
			"a": 1,
			"wing": 1,
			"but": 1,
			"brave": 1,
			"and": 4,
			"henry": 1,
			"calm": 1,
			"with": 1,
			"all": 1,
			"then": 1,
			"our": 1,
			"we": 1,
			"at": 1,
			"the": 2,
			"ruin": 1
		},
		"shell": {
			"come": 1,
			"of": 1,
			"cast": 1,
			"find": 1,
			"is": 1,
			"they": 1,
			"than": 1,
			"blown": 1,
			"win": 1,
			"that": 1,
			"or": 1,
			"lord": 1,
			"never": 1,
			"be": 1,
			"say": 1,
			"and": 1,
			"while": 1,
			"with": 1,
			"set": 1,
			"some": 1,
			"till": 1,
			"shine": 1,
			"our": 1,
			"we": 1,
			"the": 3,
			"in": 1
		},
		"trumpet": {
			"blew": 2,
			"horn": 1,
			"sounds": 2,
			"of": 1,
			"high": 1,
			"blown": 1,
			"blow": 1,
			"that": 2,
			"spake": 2,
			"fast": 1,
			"be": 1,
			"and": 3,
			"beat": 1,
			"through": 2,
			"to": 4,
			"loud": 1,
			"may": 1,
			"he": 1,
			"the": 1,
			"leads": 1
		},
		"indeed": {
			"come": 1,
			"im": 1,
			"learning": 1,
			"nor": 1,
			"behold": 1,
			"it": 1,
			"is": 1,
			"you": 1,
			"een": 1,
			"where": 1,
			"for": 2,
			"speak": 1,
			"desire": 1,
			"thy": 1,
			"were": 1,
			"that": 1,
			"had": 1,
			"what": 1,
			"a": 1,
			"hath": 1,
			"i": 3,
			"thou": 2,
			"with": 2,
			"our": 2,
			"fear": 1,
			"to": 4,
			"we": 1,
			"he": 3,
			"the": 2,
			"seems": 1,
			"in": 2,
			"seem": 1
		},
		"cause": {
			"justice": 1,
			"appear": 1,
			"who": 2,
			"of": 11,
			"nor": 1,
			"it": 2,
			"alone": 1,
			"bring": 1,
			"is": 2,
			"away": 1,
			"those": 1,
			"despair": 1,
			"my": 1,
			"john": 1,
			"least": 1,
			"god": 1,
			"indeed": 1,
			"that": 1,
			"or": 1,
			"on": 1,
			"time": 1,
			"and": 6,
			"do": 1,
			"i": 1,
			"no": 2,
			"give": 1,
			"all": 1,
			"gods": 1,
			"still": 1,
			"to": 9,
			"may": 2,
			"as": 1,
			"stand": 1,
			"he": 1,
			"the": 1,
			"though": 1
		},
		"did": {
			"come": 3,
			"look": 1,
			"more": 1,
			"hear": 1,
			"his": 2,
			"appear": 1,
			"him": 4,
			"see": 2,
			"begin": 1,
			"which": 1,
			"keep": 2,
			"she": 3,
			"nor": 1,
			"morning": 1,
			"part": 2,
			"not": 24,
			"put": 1,
			"it": 7,
			"over": 1,
			"shake": 1,
			"by": 1,
			"jim": 1,
			"bring": 1,
			"something": 1,
			"soon": 2,
			"like": 2,
			"ever": 2,
			"either": 1,
			"they": 2,
			"you": 3,
			"guide": 1,
			"run": 1,
			"for": 3,
			"take": 2,
			"thy": 2,
			"sing": 1,
			"watch": 1,
			"teach": 1,
			"any": 1,
			"win": 1,
			"glow": 1,
			"that": 2,
			"show": 1,
			"both": 2,
			"make": 4,
			"fall": 1,
			"go": 3,
			"reign": 1,
			"tear": 1,
			"what": 1,
			"oh": 1,
			"an": 2,
			"gave": 1,
			"their": 2,
			"a": 7,
			"upon": 1,
			"lay": 1,
			"never": 3,
			"many": 2,
			"love": 1,
			"groan": 1,
			"on": 4,
			"break": 1,
			"but": 3,
			"thee": 1,
			"ye": 2,
			"when": 2,
			"say": 8,
			"close": 1,
			"and": 7,
			"eer": 1,
			"prize": 1,
			"last": 1,
			"move": 1,
			"fly": 1,
			"i": 10,
			"greet": 1,
			"swell": 1,
			"too": 1,
			"against": 1,
			"these": 1,
			"calm": 1,
			"with": 6,
			"soft": 1,
			"soggarth": 1,
			"meet": 3,
			"all": 2,
			"then": 2,
			"feel": 1,
			"neer": 1,
			"your": 2,
			"yet": 1,
			"best": 1,
			"to": 4,
			"turn": 1,
			"answer": 1,
			"know": 1,
			"sign": 1,
			"we": 9,
			"as": 1,
			"fair": 1,
			"stand": 1,
			"life": 1,
			"he": 5,
			"me": 3,
			"at": 1,
			"frown": 1,
			"grow": 1,
			"the": 17,
			"though": 1,
			"her": 1,
			"fail": 1,
			"there": 1,
			"in": 6,
			"seem": 3
		},
		"walls": {
			"come": 1,
			"are": 2,
			"made": 1,
			"of": 7,
			"nor": 1,
			"hurrah": 1,
			"where": 2,
			"again": 1,
			"stretched": 1,
			"that": 4,
			"let": 1,
			"fall": 1,
			"a": 1,
			"so": 1,
			"plain": 1,
			"t": 1,
			"close": 1,
			"and": 7,
			"do": 1,
			"shining": 1,
			"from": 1,
			"before": 1,
			"to": 4,
			"as": 4,
			"me": 1,
			"the": 2,
			"there": 1,
			"in": 2
		},
		"was": {
			"sweet": 4,
			"blue": 1,
			"come": 4,
			"low": 2,
			"breaking": 1,
			"summer": 2,
			"more": 4,
			"sent": 3,
			"wrought": 1,
			"won": 4,
			"thine": 2,
			"ours": 1,
			"within": 1,
			"dust": 1,
			"going": 2,
			"parting": 1,
			"worn": 1,
			"free": 5,
			"light": 1,
			"his": 31,
			"save": 1,
			"him": 1,
			"law": 1,
			"wi": 1,
			"lady": 3,
			"thing": 1,
			"fit": 1,
			"white": 1,
			"none": 1,
			"wonder": 1,
			"right": 1,
			"back": 1,
			"warm": 2,
			"made": 16,
			"fell": 1,
			"very": 1,
			"who": 1,
			"seen": 10,
			"worth": 3,
			"tired": 1,
			"of": 14,
			"this": 5,
			"blind": 3,
			"cast": 1,
			"high": 1,
			"hung": 1,
			"kept": 1,
			"once": 4,
			"up": 2,
			"off": 1,
			"triumph": 1,
			"she": 3,
			"liberty": 2,
			"silence": 2,
			"nor": 3,
			"morning": 2,
			"heavy": 1,
			"grown": 1,
			"forth": 1,
			"played": 1,
			"dear": 1,
			"fresh": 2,
			"place": 1,
			"serene": 1,
			"sick": 2,
			"mine": 4,
			"solemn": 1,
			"not": 33,
			"side": 1,
			"put": 1,
			"every": 1,
			"praise": 1,
			"it": 19,
			"over": 3,
			"smooth": 1,
			"eager": 1,
			"far": 2,
			"brought": 2,
			"water": 1,
			"by": 10,
			"jim": 1,
			"father": 1,
			"alone": 3,
			"long": 2,
			"quiet": 1,
			"cold": 1,
			"is": 2,
			"few": 1,
			"like": 9,
			"hard": 2,
			"found": 4,
			"idle": 1,
			"sung": 6,
			"good": 4,
			"pleased": 1,
			"ever": 8,
			"about": 2,
			"faint": 1,
			"wide": 1,
			"you": 1,
			"stern": 1,
			"pale": 1,
			"new": 2,
			"heard": 14,
			"without": 1,
			"robert": 1,
			"laid": 2,
			"its": 1,
			"than": 5,
			"kindly": 2,
			"brief": 1,
			"small": 3,
			"gray": 4,
			"just": 1,
			"for": 9,
			"blown": 1,
			"past": 1,
			"read": 3,
			"heaven": 2,
			"become": 1,
			"lost": 6,
			"bowed": 1,
			"spite": 1,
			"fixed": 1,
			"my": 9,
			"spent": 2,
			"standing": 1,
			"great": 3,
			"tender": 2,
			"beauty": 2,
			"enough": 1,
			"thy": 3,
			"greater": 2,
			"pretty": 1,
			"peace": 1,
			"wept": 1,
			"better": 2,
			"mary": 1,
			"born": 11,
			"garden": 1,
			"rough": 1,
			"any": 1,
			"most": 1,
			"sir": 1,
			"wandering": 1,
			"torn": 1,
			"queen": 1,
			"face": 1,
			"false": 3,
			"god": 1,
			"foot": 1,
			"noble": 1,
			"comfort": 1,
			"oer": 4,
			"crowned": 1,
			"need": 1,
			"that": 10,
			"if": 1,
			"womans": 1,
			"man": 1,
			"fain": 1,
			"another": 1,
			"always": 2,
			"full": 8,
			"victory": 1,
			"broken": 1,
			"half": 1,
			"pure": 2,
			"what": 5,
			"beautiful": 1,
			"an": 6,
			"nothing": 1,
			"music": 1,
			"even": 1,
			"or": 1,
			"sweeter": 1,
			"bright": 2,
			"late": 1,
			"sae": 1,
			"bitter": 1,
			"their": 5,
			"a": 73,
			"so": 12,
			"given": 7,
			"true": 3,
			"green": 1,
			"upon": 4,
			"never": 7,
			"many": 1,
			"ashes": 1,
			"almost": 1,
			"delight": 1,
			"love": 4,
			"on": 19,
			"saw": 1,
			"quite": 2,
			"red": 6,
			"deep": 1,
			"roaring": 1,
			"old": 5,
			"filled": 1,
			"but": 9,
			"wet": 1,
			"brown": 1,
			"death": 1,
			"self": 1,
			"poor": 2,
			"empty": 2,
			"perhaps": 1,
			"buried": 1,
			"known": 2,
			"years": 1,
			"moving": 1,
			"when": 10,
			"gone": 9,
			"lifes": 1,
			"plain": 1,
			"roses": 1,
			"glory": 1,
			"out": 3,
			"dumb": 3,
			"naught": 2,
			"and": 34,
			"march": 1,
			"truth": 1,
			"dark": 3,
			"quick": 1,
			"black": 1,
			"wounded": 1,
			"hid": 1,
			"i": 8,
			"knew": 1,
			"unknown": 1,
			"worthy": 2,
			"less": 1,
			"wretched": 1,
			"too": 3,
			"raised": 1,
			"one": 8,
			"such": 3,
			"shining": 2,
			"brow": 1,
			"how": 2,
			"from": 7,
			"strange": 1,
			"stronger": 2,
			"living": 2,
			"beneath": 1,
			"nigh": 1,
			"duty": 2,
			"no": 14,
			"bound": 3,
			"pitiful": 1,
			"worst": 1,
			"calm": 3,
			"called": 1,
			"mighty": 1,
			"with": 12,
			"sad": 2,
			"now": 3,
			"set": 5,
			"till": 1,
			"strong": 1,
			"himself": 1,
			"lying": 1,
			"all": 17,
			"desolate": 1,
			"gay": 1,
			"then": 8,
			"slain": 6,
			"poured": 2,
			"thought": 2,
			"pleasant": 2,
			"ten": 1,
			"well": 3,
			"clear": 1,
			"wealth": 1,
			"our": 6,
			"smoke": 1,
			"hall": 1,
			"open": 1,
			"neer": 2,
			"fear": 1,
			"night": 2,
			"fallen": 1,
			"loved": 2,
			"pity": 1,
			"shall": 1,
			"before": 3,
			"only": 2,
			"still": 4,
			"your": 2,
			"yet": 1,
			"best": 2,
			"way": 1,
			"to": 30,
			"loud": 1,
			"human": 1,
			"into": 1,
			"cut": 1,
			"mid": 1,
			"slowly": 1,
			"written": 3,
			"gently": 1,
			"heavenly": 1,
			"turning": 2,
			"freedoms": 2,
			"may": 1,
			"glad": 1,
			"simple": 1,
			"spread": 3,
			"as": 9,
			"fair": 5,
			"borne": 1,
			"done": 18,
			"said": 3,
			"life": 1,
			"he": 16,
			"arms": 1,
			"at": 6,
			"fancy": 1,
			"o": 3,
			"coming": 2,
			"left": 5,
			"the": 90,
			"though": 1,
			"sure": 4,
			"bent": 1,
			"her": 10,
			"passed": 3,
			"radiant": 1,
			"safe": 1,
			"weak": 1,
			"young": 9,
			"dead": 3,
			"near": 2,
			"jesus": 1,
			"there": 22,
			"in": 38,
			"dim": 1,
			"shed": 2
		},
		"runs": {
			"back": 2,
			"away": 1,
			"my": 2,
			"oer": 1,
			"another": 1,
			"a": 3,
			"on": 1,
			"fast": 1,
			"and": 2,
			"from": 2,
			"through": 4,
			"clear": 1,
			"upward": 1,
			"shall": 1,
			"may": 2,
			"the": 4,
			"her": 2
		},
		"that": {
			"sweet": 6,
			"flower": 1,
			"come": 8,
			"sound": 2,
			"low": 3,
			"jean": 1,
			"dare": 1,
			"dying": 3,
			"bread": 1,
			"look": 4,
			"floor": 1,
			"sighs": 2,
			"us": 10,
			"more": 3,
			"taught": 1,
			"murmur": 1,
			"walks": 3,
			"won": 1,
			"since": 2,
			"blessd": 2,
			"ring": 3,
			"died": 7,
			"within": 4,
			"blessings": 1,
			"dust": 2,
			"blew": 1,
			"justice": 1,
			"loves": 2,
			"went": 3,
			"parting": 3,
			"christ": 2,
			"worn": 1,
			"wish": 2,
			"river": 1,
			"fierce": 4,
			"free": 1,
			"light": 10,
			"earth": 4,
			"touched": 1,
			"pine": 1,
			"die": 5,
			"cloud": 1,
			"his": 23,
			"appear": 1,
			"stream": 1,
			"mad": 1,
			"struck": 1,
			"endure": 2,
			"dreary": 3,
			"him": 7,
			"banner": 7,
			"ear": 1,
			"book": 1,
			"sharp": 1,
			"crossed": 1,
			"see": 1,
			"means": 3,
			"blood": 1,
			"leap": 2,
			"narrow": 1,
			"hero": 2,
			"precious": 2,
			"cheek": 2,
			"play": 3,
			"lady": 1,
			"kiss": 2,
			"faithful": 3,
			"thousand": 1,
			"thing": 2,
			"deeper": 1,
			"s": 1,
			"rule": 2,
			"none": 1,
			"hast": 1,
			"woe": 1,
			"silver": 2,
			"tell": 2,
			"war": 1,
			"weary": 1,
			"seemed": 1,
			"are": 54,
			"story": 1,
			"fears": 2,
			"beside": 2,
			"humble": 1,
			"right": 2,
			"back": 1,
			"warm": 1,
			"made": 13,
			"word": 5,
			"fell": 8,
			"very": 1,
			"under": 3,
			"next": 1,
			"who": 2,
			"hollow": 1,
			"sweetest": 1,
			"silent": 2,
			"guard": 2,
			"men": 11,
			"which": 49,
			"greece": 2,
			"deeds": 1,
			"holds": 7,
			"dies": 3,
			"hide": 1,
			"shout": 1,
			"country": 1,
			"body": 1,
			"sounds": 1,
			"of": 36,
			"this": 11,
			"blind": 1,
			"season": 2,
			"high": 3,
			"rude": 1,
			"amid": 1,
			"keep": 2,
			"calls": 1,
			"hung": 3,
			"after": 1,
			"wander": 3,
			"daughter": 1,
			"once": 20,
			"feels": 2,
			"up": 3,
			"triumph": 1,
			"tide": 1,
			"breathe": 4,
			"angel": 1,
			"she": 13,
			"shakespeare": 1,
			"beyond": 2,
			"sacred": 5,
			"hymn": 1,
			"command": 1,
			"three": 1,
			"does": 6,
			"morning": 2,
			"grew": 2,
			"flood": 3,
			"darkness": 3,
			"joy": 1,
			"fruit": 1,
			"wheel": 1,
			"played": 1,
			"race": 1,
			"goes": 2,
			"dreadful": 4,
			"spot": 7,
			"dear": 4,
			"pain": 1,
			"mourn": 4,
			"place": 3,
			"lift": 1,
			"part": 2,
			"pass": 6,
			"fine": 2,
			"rose": 2,
			"slaves": 1,
			"beloved": 1,
			"mine": 1,
			"solemn": 1,
			"sings": 3,
			"not": 15,
			"divine": 1,
			"dwell": 1,
			"burn": 3,
			"serve": 2,
			"englands": 1,
			"put": 1,
			"proud": 1,
			"hes": 1,
			"dry": 1,
			"every": 6,
			"sword": 1,
			"it": 36,
			"evil": 1,
			"over": 6,
			"host": 2,
			"shake": 2,
			"magic": 1,
			"shows": 1,
			"eager": 1,
			"twas": 2,
			"far": 2,
			"mean": 1,
			"hangs": 3,
			"wisdom": 1,
			"health": 2,
			"lights": 2,
			"tongue": 1,
			"weep": 4,
			"water": 1,
			"by": 12,
			"eyes": 2,
			"nevermore": 1,
			"alone": 2,
			"long": 8,
			"bring": 3,
			"breaks": 2,
			"bind": 3,
			"cold": 1,
			"land": 6,
			"wars": 1,
			"is": 94,
			"cross": 3,
			"joyous": 1,
			"ships": 1,
			"soon": 2,
			"rise": 3,
			"looked": 2,
			"few": 1,
			"unto": 1,
			"like": 12,
			"takes": 5,
			"boy": 1,
			"farewell": 1,
			"away": 3,
			"hoary": 1,
			"form": 1,
			"found": 1,
			"sway": 1,
			"why": 1,
			"immortality": 1,
			"hallowed": 3,
			"kings": 1,
			"good": 6,
			"lead": 2,
			"ever": 22,
			"they": 28,
			"shook": 1,
			"speech": 1,
			"prayer": 1,
			"path": 2,
			"gazed": 1,
			"you": 24,
			"moves": 4,
			"nature": 2,
			"tyrants": 1,
			"mother": 2,
			"thus": 3,
			"pale": 1,
			"seven": 1,
			"heard": 4,
			"without": 1,
			"slave": 1,
			"its": 9,
			"than": 1,
			"smile": 3,
			"lightly": 1,
			"pleasure": 1,
			"een": 1,
			"poet": 1,
			"song": 4,
			"those": 4,
			"sea": 1,
			"crown": 1,
			"where": 13,
			"others": 1,
			"despair": 1,
			"run": 2,
			"holy": 2,
			"blast": 1,
			"for": 17,
			"drops": 2,
			"read": 1,
			"hand": 3,
			"heaven": 6,
			"frost": 1,
			"cup": 3,
			"lost": 3,
			"clime": 1,
			"should": 7,
			"lonely": 7,
			"bowed": 1,
			"suns": 1,
			"sang": 6,
			"take": 1,
			"melancholy": 1,
			"cannot": 8,
			"speak": 4,
			"breath": 2,
			"tomorrow": 1,
			"autumn": 1,
			"rest": 3,
			"my": 24,
			"blow": 5,
			"band": 3,
			"bore": 5,
			"words": 1,
			"hour": 6,
			"came": 7,
			"remain": 1,
			"great": 8,
			"beauty": 5,
			"deaths": 1,
			"desire": 1,
			"shines": 3,
			"themselves": 1,
			"enough": 1,
			"freedom": 1,
			"thy": 13,
			"sing": 2,
			"smiles": 4,
			"watch": 2,
			"greater": 1,
			"morn": 2,
			"hushed": 2,
			"vain": 1,
			"sleep": 5,
			"teach": 1,
			"peace": 1,
			"blows": 4,
			"comes": 10,
			"wept": 2,
			"ere": 2,
			"waves": 2,
			"birth": 1,
			"whom": 1,
			"rang": 3,
			"better": 2,
			"shore": 2,
			"ground": 3,
			"soul": 2,
			"passion": 1,
			"wear": 4,
			"seek": 1,
			"gather": 1,
			"cheer": 1,
			"makes": 10,
			"any": 2,
			"most": 2,
			"sir": 2,
			"times": 1,
			"held": 1,
			"evening": 1,
			"win": 1,
			"reach": 1,
			"name": 2,
			"door": 4,
			"sits": 1,
			"along": 1,
			"face": 4,
			"closed": 1,
			"sin": 3,
			"trembling": 2,
			"faith": 5,
			"god": 15,
			"can": 15,
			"moment": 4,
			"shame": 1,
			"noble": 4,
			"power": 2,
			"were": 20,
			"bears": 7,
			"oer": 14,
			"crowned": 1,
			"sabbath": 1,
			"sudden": 1,
			"immortal": 2,
			"did": 7,
			"was": 46,
			"runs": 1,
			"that": 7,
			"if": 2,
			"show": 1,
			"same": 3,
			"womans": 3,
			"drop": 1,
			"man": 14,
			"daily": 1,
			"both": 1,
			"another": 1,
			"always": 1,
			"taste": 1,
			"full": 2,
			"make": 8,
			"busy": 2,
			"often": 2,
			"crowd": 1,
			"go": 1,
			"spake": 1,
			"trust": 1,
			"hang": 1,
			"rode": 1,
			"tear": 2,
			"had": 13,
			"gives": 7,
			"must": 12,
			"climb": 1,
			"pure": 1,
			"what": 6,
			"oh": 1,
			"beautiful": 2,
			"an": 3,
			"repose": 3,
			"wait": 3,
			"hold": 2,
			"nothing": 1,
			"creatures": 1,
			"stone": 1,
			"stars": 1,
			"even": 4,
			"or": 5,
			"field": 1,
			"think": 3,
			"ran": 2,
			"finds": 1,
			"eye": 3,
			"start": 1,
			"bright": 6,
			"have": 27,
			"late": 2,
			"tree": 1,
			"tears": 2,
			"gave": 4,
			"trod": 1,
			"fill": 1,
			"their": 9,
			"fold": 2,
			"a": 33,
			"so": 15,
			"pains": 1,
			"heat": 1,
			"brings": 6,
			"falls": 4,
			"them": 4,
			"sometimes": 2,
			"courage": 1,
			"sink": 1,
			"flies": 3,
			"upon": 5,
			"gallant": 2,
			"lay": 5,
			"things": 1,
			"never": 20,
			"ceased": 2,
			"dawn": 1,
			"hath": 19,
			"met": 3,
			"walk": 1,
			"whence": 1,
			"love": 10,
			"on": 28,
			"saw": 2,
			"bend": 1,
			"break": 2,
			"charm": 1,
			"sees": 1,
			"red": 1,
			"girl": 1,
			"mountain": 1,
			"above": 3,
			"smiling": 1,
			"fast": 1,
			"deep": 3,
			"memory": 1,
			"feast": 2,
			"celestial": 2,
			"old": 11,
			"filled": 1,
			"content": 1,
			"but": 5,
			"iron": 1,
			"brown": 1,
			"death": 6,
			"rushed": 1,
			"time": 10,
			"poor": 1,
			"perhaps": 2,
			"thee": 5,
			"ye": 5,
			"lives": 4,
			"years": 1,
			"moving": 1,
			"when": 17,
			"april": 1,
			"turns": 4,
			"eternal": 1,
			"plain": 1,
			"waters": 1,
			"mans": 3,
			"burst": 2,
			"dreams": 1,
			"knows": 5,
			"be": 8,
			"bed": 2,
			"firm": 1,
			"wings": 1,
			"t": 4,
			"veil": 1,
			"line": 2,
			"out": 6,
			"kind": 2,
			"awful": 2,
			"dumb": 1,
			"earthly": 1,
			"rhyme": 1,
			"watched": 2,
			"brave": 4,
			"sweetly": 2,
			"heart": 5,
			"say": 1,
			"head": 1,
			"paradise": 1,
			"close": 3,
			"and": 38,
			"eer": 6,
			"grace": 3,
			"truth": 1,
			"bloom": 2,
			"do": 9,
			"fever": 1,
			"dark": 3,
			"last": 4,
			"lone": 1,
			"christian": 1,
			"lovely": 1,
			"myself": 1,
			"move": 1,
			"fate": 2,
			"ask": 1,
			"blaze": 2,
			"grave": 3,
			"hid": 1,
			"fly": 1,
			"i": 120,
			"knew": 2,
			"thou": 41,
			"told": 5,
			"bids": 1,
			"home": 1,
			"broke": 2,
			"tower": 1,
			"here": 8,
			"too": 4,
			"raised": 1,
			"fought": 4,
			"mirth": 1,
			"one": 17,
			"might": 9,
			"between": 2,
			"breathes": 3,
			"chamber": 1,
			"such": 5,
			"rocks": 1,
			"draw": 1,
			"softly": 1,
			"rush": 1,
			"against": 2,
			"secret": 1,
			"hate": 1,
			"work": 1,
			"rather": 1,
			"looks": 2,
			"broad": 1,
			"each": 5,
			"anothers": 1,
			"brow": 2,
			"how": 1,
			"hearts": 1,
			"other": 3,
			"from": 34,
			"join": 1,
			"marble": 1,
			"strange": 4,
			"across": 3,
			"would": 16,
			"living": 2,
			"feeling": 1,
			"mind": 1,
			"ill": 1,
			"endless": 1,
			"want": 2,
			"reason": 1,
			"beat": 3,
			"beneath": 2,
			"maid": 2,
			"rare": 1,
			"ancient": 1,
			"these": 1,
			"duty": 1,
			"while": 3,
			"foul": 2,
			"breast": 4,
			"honor": 2,
			"no": 9,
			"bound": 1,
			"early": 1,
			"bid": 1,
			"took": 2,
			"calm": 1,
			"roll": 5,
			"called": 2,
			"voice": 5,
			"dread": 5,
			"sphere": 1,
			"goodly": 1,
			"guilty": 1,
			"mighty": 5,
			"ears": 2,
			"with": 42,
			"around": 3,
			"sad": 2,
			"virtue": 2,
			"soft": 4,
			"drew": 2,
			"now": 5,
			"give": 1,
			"some": 5,
			"realm": 1,
			"meet": 3,
			"will": 17,
			"follow": 2,
			"himself": 3,
			"twenty": 1,
			"all": 34,
			"patient": 1,
			"grief": 1,
			"wild": 2,
			"comrades": 1,
			"loving": 1,
			"fires": 3,
			"then": 6,
			"flesh": 4,
			"poured": 1,
			"large": 3,
			"blest": 2,
			"thought": 8,
			"could": 5,
			"through": 15,
			"pleasant": 3,
			"notes": 1,
			"foe": 2,
			"has": 15,
			"toil": 2,
			"angels": 2,
			"george": 1,
			"well": 2,
			"spoke": 2,
			"doth": 9,
			"thread": 1,
			"road": 1,
			"clear": 1,
			"king": 1,
			"shine": 1,
			"dost": 3,
			"spring": 3,
			"wake": 1,
			"upward": 2,
			"fiery": 2,
			"turned": 1,
			"being": 1,
			"wealth": 1,
			"our": 22,
			"day": 36,
			"hall": 1,
			"walked": 1,
			"feel": 1,
			"passing": 1,
			"fortune": 4,
			"page": 1,
			"neer": 5,
			"night": 8,
			"needs": 1,
			"equal": 1,
			"ends": 3,
			"fallen": 1,
			"mercy": 3,
			"loved": 8,
			"shall": 26,
			"echo": 1,
			"hundred": 1,
			"only": 7,
			"wind": 2,
			"still": 10,
			"your": 4,
			"shade": 1,
			"way": 2,
			"mark": 2,
			"to": 38,
			"poetry": 1,
			"hill": 2,
			"clouds": 1,
			"youth": 2,
			"human": 1,
			"poets": 3,
			"wandered": 1,
			"springs": 3,
			"into": 2,
			"round": 8,
			"flame": 4,
			"mid": 1,
			"slowly": 2,
			"lie": 3,
			"little": 4,
			"mankind": 1,
			"rich": 1,
			"live": 5,
			"strain": 3,
			"religion": 2,
			"use": 1,
			"heavenly": 2,
			"glorious": 3,
			"know": 2,
			"mould": 2,
			"prove": 2,
			"soar": 3,
			"sore": 1,
			"art": 3,
			"lived": 1,
			"bold": 1,
			"flow": 1,
			"vast": 1,
			"may": 9,
			"withered": 1,
			"yon": 1,
			"skies": 1,
			"smiled": 2,
			"we": 63,
			"gloom": 1,
			"loss": 1,
			"infant": 1,
			"falling": 1,
			"as": 7,
			"throng": 1,
			"array": 1,
			"fair": 4,
			"borne": 1,
			"heavens": 4,
			"stand": 3,
			"happy": 4,
			"said": 2,
			"life": 14,
			"end": 1,
			"he": 67,
			"me": 14,
			"sat": 1,
			"flag": 1,
			"at": 8,
			"fancy": 1,
			"below": 2,
			"straight": 1,
			"slumber": 1,
			"lies": 7,
			"led": 3,
			"o": 1,
			"gain": 1,
			"grow": 4,
			"yonder": 1,
			"weight": 1,
			"streams": 2,
			"blessed": 3,
			"arise": 1,
			"the": 193,
			"tis": 1,
			"though": 2,
			"fight": 2,
			"treasure": 1,
			"world": 3,
			"stood": 4,
			"scarce": 3,
			"drawn": 1,
			"seems": 4,
			"house": 2,
			"her": 19,
			"leads": 8,
			"radiant": 1,
			"grand": 5,
			"been": 1,
			"tread": 2,
			"fire": 2,
			"near": 1,
			"first": 7,
			"oft": 1,
			"there": 17,
			"lowly": 1,
			"in": 62,
			"flowers": 3,
			"harmony": 1,
			"shed": 1,
			"air": 2,
			"seem": 3,
			"sky": 3,
			"grows": 3
		},
		"rolling": {
			"which": 1,
			"of": 1,
			"up": 1,
			"tide": 1,
			"hours": 2,
			"far": 1,
			"water": 1,
			"where": 1,
			"suns": 2,
			"moon": 1,
			"on": 2,
			"evermore": 1,
			"but": 1,
			"sun": 1,
			"down": 1,
			"home": 1,
			"drum": 1,
			"clouds": 1,
			"the": 1,
			"tis": 1,
			"world": 1,
			"in": 2
		},
		"swords": {
			"crossed": 1,
			"are": 3,
			"of": 2,
			"they": 1,
			"for": 1,
			"that": 1,
			"so": 1,
			"delight": 1,
			"on": 1,
			"but": 1,
			"and": 2,
			"beat": 1,
			"still": 1,
			"to": 3,
			"may": 1,
			"the": 1,
			"there": 1,
			"in": 1
		},
		"if": {
			"thine": 3,
			"within": 1,
			"loves": 1,
			"worn": 1,
			"earth": 2,
			"birds": 1,
			"his": 4,
			"beside": 1,
			"made": 1,
			"seen": 1,
			"men": 2,
			"of": 1,
			"this": 7,
			"amid": 1,
			"after": 2,
			"once": 1,
			"she": 8,
			"beyond": 1,
			"aught": 3,
			"not": 11,
			"every": 1,
			"it": 20,
			"over": 1,
			"by": 2,
			"like": 1,
			"forever": 1,
			"lead": 1,
			"ever": 5,
			"care": 1,
			"they": 15,
			"you": 25,
			"thus": 1,
			"its": 1,
			"een": 1,
			"for": 4,
			"heaven": 3,
			"theres": 4,
			"my": 9,
			"freedom": 1,
			"thy": 2,
			"sleep": 1,
			"peace": 1,
			"hopes": 2,
			"any": 5,
			"sir": 1,
			"wandering": 1,
			"rising": 1,
			"faith": 1,
			"god": 2,
			"were": 2,
			"waking": 2,
			"need": 1,
			"indeed": 1,
			"cause": 1,
			"did": 1,
			"that": 9,
			"man": 3,
			"half": 1,
			"had": 2,
			"what": 2,
			"an": 2,
			"music": 1,
			"or": 1,
			"bitter": 1,
			"their": 2,
			"a": 17,
			"so": 2,
			"sometimes": 2,
			"true": 2,
			"upon": 1,
			"folly": 1,
			"on": 6,
			"evermore": 1,
			"memory": 1,
			"but": 3,
			"death": 2,
			"time": 1,
			"perhaps": 1,
			"thee": 1,
			"ye": 4,
			"when": 1,
			"mans": 1,
			"be": 5,
			"t": 2,
			"eer": 1,
			"fever": 1,
			"wounded": 1,
			"i": 63,
			"thou": 37,
			"too": 3,
			"raised": 1,
			"one": 5,
			"such": 4,
			"each": 1,
			"from": 1,
			"strange": 1,
			"ill": 1,
			"hidden": 1,
			"these": 1,
			"no": 4,
			"calm": 1,
			"with": 5,
			"around": 1,
			"singing": 1,
			"soft": 1,
			"now": 1,
			"some": 3,
			"himself": 1,
			"all": 7,
			"then": 4,
			"through": 3,
			"angels": 1,
			"well": 1,
			"much": 1,
			"our": 2,
			"needs": 1,
			"only": 3,
			"still": 1,
			"chance": 2,
			"your": 1,
			"yet": 1,
			"best": 1,
			"to": 13,
			"hill": 1,
			"little": 1,
			"religion": 1,
			"ah": 1,
			"yon": 1,
			"we": 26,
			"as": 2,
			"life": 1,
			"he": 19,
			"at": 1,
			"lies": 1,
			"the": 38,
			"tis": 1,
			"her": 3,
			"dead": 1,
			"first": 1,
			"there": 9,
			"in": 8,
			"thoughts": 1
		},
		"willie": {
			"im": 1,
			"dear": 1,
			"for": 1,
			"my": 2,
			"that": 2,
			"willie": 1,
			"let": 1,
			"go": 1,
			"fold": 1,
			"a": 2,
			"on": 1,
			"when": 2,
			"and": 2,
			"i": 2,
			"all": 1,
			"grief": 1,
			"your": 1,
			"to": 1,
			"the": 1
		},
		"let": {
			"come": 1,
			"sound": 2,
			"us": 51,
			"thine": 3,
			"light": 2,
			"earth": 1,
			"his": 5,
			"him": 26,
			"none": 4,
			"are": 1,
			"right": 1,
			"this": 1,
			"once": 1,
			"liberty": 2,
			"age": 2,
			"joy": 1,
			"not": 9,
			"it": 18,
			"spirits": 1,
			"alone": 1,
			"nations": 1,
			"like": 1,
			"ocean": 1,
			"you": 2,
			"its": 3,
			"those": 2,
			"others": 2,
			"for": 1,
			"charge": 1,
			"my": 6,
			"winds": 1,
			"freedom": 1,
			"thy": 10,
			"hope": 1,
			"fools": 1,
			"that": 3,
			"man": 1,
			"both": 1,
			"fall": 8,
			"go": 1,
			"nothing": 3,
			"music": 1,
			"or": 2,
			"winter": 1,
			"their": 1,
			"a": 4,
			"them": 18,
			"love": 1,
			"old": 1,
			"but": 1,
			"death": 1,
			"knowledge": 1,
			"time": 1,
			"thee": 3,
			"lifes": 1,
			"be": 3,
			"out": 1,
			"sorrow": 1,
			"and": 5,
			"truth": 1,
			"myself": 1,
			"fate": 1,
			"thou": 1,
			"mortal": 1,
			"one": 4,
			"rocks": 1,
			"each": 5,
			"hidden": 1,
			"these": 1,
			"no": 2,
			"with": 1,
			"sweetness": 1,
			"virtue": 1,
			"wave": 2,
			"some": 1,
			"all": 10,
			"fires": 1,
			"then": 1,
			"wealth": 1,
			"our": 2,
			"fortune": 1,
			"still": 1,
			"your": 4,
			"into": 1,
			"heavenly": 1,
			"me": 77,
			"blessed": 1,
			"the": 58,
			"fight": 1,
			"her": 6,
			"young": 1,
			"near": 1,
			"there": 2,
			"in": 2
		},
		"show": {
			"itself": 1,
			"us": 3,
			"more": 1,
			"his": 2,
			"white": 1,
			"of": 8,
			"not": 1,
			"it": 1,
			"they": 1,
			"you": 1,
			"for": 2,
			"false": 1,
			"that": 6,
			"let": 1,
			"what": 2,
			"a": 6,
			"so": 1,
			"thee": 1,
			"t": 1,
			"and": 4,
			"i": 1,
			"how": 6,
			"these": 1,
			"some": 2,
			"all": 1,
			"gods": 1,
			"then": 2,
			"loved": 1,
			"your": 1,
			"to": 2,
			"whose": 1,
			"as": 1,
			"he": 4,
			"me": 7,
			"the": 8,
			"her": 2
		},
		"same": {
			"sweet": 1,
			"stream": 1,
			"thing": 1,
			"rule": 1,
			"silver": 1,
			"story": 1,
			"beside": 1,
			"who": 1,
			"find": 1,
			"by": 1,
			"eyes": 1,
			"fountain": 1,
			"is": 1,
			"forever": 1,
			"prayer": 1,
			"stern": 1,
			"robert": 1,
			"smile": 1,
			"for": 2,
			"hand": 1,
			"heaven": 1,
			"theres": 1,
			"great": 2,
			"touch": 1,
			"thy": 1,
			"name": 1,
			"dew": 1,
			"can": 1,
			"power": 1,
			"that": 3,
			"what": 1,
			"a": 2,
			"and": 3,
			"bliss": 1,
			"sun": 1,
			"i": 1,
			"tale": 1,
			"sunny": 1,
			"one": 1,
			"while": 1,
			"with": 2,
			"give": 1,
			"single": 1,
			"course": 1,
			"to": 3,
			"sign": 1,
			"we": 1,
			"as": 5,
			"fair": 1,
			"he": 2,
			"the": 4,
			"though": 1,
			"in": 4,
			"shalt": 1
		},
		"thorn": {
			"wi": 1,
			"does": 1,
			"wisdom": 1,
			"without": 1,
			"my": 2,
			"thy": 1,
			"hope": 1,
			"or": 1,
			"so": 1,
			"but": 1,
			"thou": 1,
			"from": 1,
			"gay": 1,
			"gods": 1,
			"spear": 1,
			"the": 3,
			"forgive": 1,
			"grows": 1
		},
		"womans": {
			"pain": 1,
			"mouth": 1,
			"pleasure": 1,
			"words": 1,
			"door": 1,
			"face": 1,
			"faith": 1,
			"what": 1,
			"eye": 2,
			"blush": 1,
			"tears": 1,
			"whole": 1,
			"love": 5,
			"deed": 1,
			"heart": 1,
			"and": 1,
			"i": 1,
			"between": 1,
			"looks": 1,
			"reason": 1,
			"voice": 1,
			"grief": 1,
			"there": 1
		},
		"lips": {
			"are": 3,
			"which": 2,
			"of": 12,
			"grew": 1,
			"grown": 1,
			"forth": 1,
			"divine": 1,
			"send": 1,
			"by": 1,
			"long": 1,
			"like": 1,
			"away": 2,
			"those": 2,
			"where": 1,
			"seek": 1,
			"closed": 1,
			"can": 1,
			"were": 3,
			"that": 10,
			"had": 1,
			"what": 1,
			"repose": 1,
			"or": 1,
			"lest": 1,
			"have": 2,
			"a": 5,
			"so": 2,
			"given": 1,
			"be": 1,
			"firm": 1,
			"say": 1,
			"and": 6,
			"do": 1,
			"move": 1,
			"days": 1,
			"i": 2,
			"unknown": 1,
			"thou": 1,
			"one": 1,
			"might": 1,
			"such": 1,
			"how": 1,
			"from": 1,
			"with": 1,
			"till": 1,
			"will": 1,
			"feel": 1,
			"neer": 1,
			"loved": 1,
			"shall": 1,
			"still": 1,
			"to": 8,
			"may": 1,
			"apart": 2,
			"spread": 1,
			"whose": 1,
			"as": 1,
			"he": 2,
			"o": 3,
			"the": 4,
			"scarce": 1,
			"in": 4
		},
		"drop": {
			"of": 10,
			"off": 1,
			"it": 1,
			"over": 1,
			"like": 1,
			"earths": 1,
			"holy": 1,
			"my": 1,
			"smiles": 1,
			"that": 2,
			"tears": 1,
			"their": 1,
			"on": 3,
			"and": 1,
			"thou": 1,
			"from": 3,
			"into": 5,
			"as": 1,
			"strength": 1,
			"the": 4,
			"her": 1,
			"there": 1,
			"in": 2
		},
		"cares": {
			"are": 1,
			"of": 4,
			"neither": 1,
			"wisdom": 1,
			"its": 1,
			"for": 3,
			"my": 3,
			"can": 1,
			"were": 1,
			"or": 1,
			"be": 1,
			"and": 8,
			"while": 1,
			"honor": 1,
			"all": 1,
			"then": 1,
			"our": 1,
			"shall": 1,
			"to": 1,
			"lie": 1,
			"little": 1,
			"we": 1,
			"he": 4,
			"o": 1,
			"the": 4,
			"tis": 1,
			"in": 2
		},
		"arm": {
			"more": 1,
			"of": 1,
			"hung": 1,
			"off": 1,
			"forth": 1,
			"it": 1,
			"father": 1,
			"alone": 1,
			"is": 1,
			"afar": 1,
			"for": 2,
			"should": 1,
			"didst": 1,
			"thy": 1,
			"that": 5,
			"arm": 1,
			"make": 1,
			"a": 1,
			"gone": 1,
			"be": 1,
			"and": 2,
			"i": 2,
			"could": 1,
			"to": 3,
			"knee": 1,
			"may": 1,
			"th": 1,
			"me": 1,
			"the": 1
		},
		"man": {
			"sweet": 1,
			"come": 1,
			"else": 1,
			"dare": 1,
			"look": 1,
			"us": 1,
			"more": 1,
			"thine": 1,
			"died": 1,
			"within": 3,
			"loves": 1,
			"went": 1,
			"worn": 1,
			"forget": 1,
			"his": 4,
			"save": 1,
			"him": 2,
			"see": 1,
			"made": 1,
			"who": 16,
			"which": 1,
			"of": 24,
			"this": 3,
			"star": 1,
			"amid": 2,
			"up": 4,
			"she": 2,
			"liberty": 1,
			"anonymous": 1,
			"nor": 2,
			"three": 1,
			"does": 1,
			"forth": 1,
			"dreadful": 1,
			"part": 1,
			"not": 7,
			"put": 1,
			"today": 1,
			"proud": 1,
			"it": 1,
			"over": 1,
			"far": 1,
			"by": 4,
			"alone": 4,
			"breaks": 1,
			"is": 27,
			"soon": 1,
			"looked": 1,
			"like": 3,
			"they": 3,
			"shook": 1,
			"nature": 1,
			"afar": 1,
			"heard": 1,
			"than": 2,
			"for": 10,
			"drops": 1,
			"heaven": 1,
			"should": 3,
			"take": 1,
			"cannot": 1,
			"my": 4,
			"came": 1,
			"great": 1,
			"john": 1,
			"forgot": 1,
			"thy": 2,
			"vain": 1,
			"whom": 3,
			"born": 1,
			"makes": 2,
			"held": 1,
			"evening": 1,
			"along": 1,
			"william": 1,
			"god": 1,
			"can": 9,
			"were": 2,
			"immortal": 1,
			"did": 1,
			"was": 4,
			"that": 18,
			"if": 3,
			"let": 1,
			"man": 1,
			"both": 2,
			"full": 1,
			"fall": 1,
			"go": 3,
			"half": 1,
			"trust": 1,
			"must": 3,
			"what": 1,
			"oh": 1,
			"nothing": 1,
			"or": 5,
			"think": 1,
			"finds": 1,
			"trod": 1,
			"their": 1,
			"a": 11,
			"so": 7,
			"brings": 1,
			"true": 1,
			"upon": 2,
			"lay": 1,
			"never": 3,
			"hath": 3,
			"on": 4,
			"saw": 1,
			"above": 1,
			"but": 9,
			"rushed": 1,
			"perhaps": 1,
			"thee": 1,
			"lives": 1,
			"when": 2,
			"eternal": 1,
			"knows": 1,
			"be": 4,
			"ay": 1,
			"having": 1,
			"watched": 1,
			"say": 2,
			"and": 28,
			"eer": 2,
			"do": 6,
			"last": 1,
			"i": 12,
			"thou": 6,
			"less": 1,
			"too": 1,
			"might": 1,
			"how": 3,
			"from": 6,
			"would": 3,
			"maid": 1,
			"these": 2,
			"while": 1,
			"honor": 1,
			"no": 1,
			"with": 9,
			"soggarth": 1,
			"set": 1,
			"give": 1,
			"some": 2,
			"will": 2,
			"himself": 1,
			"all": 2,
			"grief": 1,
			"then": 2,
			"thought": 1,
			"through": 2,
			"has": 3,
			"well": 1,
			"doth": 3,
			"aside": 1,
			"fear": 1,
			"shall": 3,
			"before": 2,
			"still": 2,
			"yet": 2,
			"to": 29,
			"may": 10,
			"we": 3,
			"whose": 10,
			"as": 9,
			"happy": 1,
			"said": 3,
			"he": 5,
			"son": 1,
			"at": 4,
			"below": 4,
			"wound": 1,
			"o": 1,
			"chain": 1,
			"left": 1,
			"the": 24,
			"tis": 1,
			"though": 1,
			"stood": 1,
			"her": 1,
			"there": 1,
			"in": 18
		},
		"bear": {
			"within": 1,
			"his": 4,
			"him": 4,
			"are": 1,
			"back": 1,
			"who": 1,
			"of": 1,
			"this": 1,
			"up": 4,
			"blossoms": 1,
			"fruit": 1,
			"it": 5,
			"far": 1,
			"by": 1,
			"away": 2,
			"sway": 1,
			"children": 1,
			"about": 2,
			"wide": 1,
			"its": 2,
			"kindly": 1,
			"those": 1,
			"for": 1,
			"my": 1,
			"thy": 1,
			"hopes": 1,
			"along": 1,
			"that": 1,
			"full": 1,
			"what": 2,
			"oh": 1,
			"an": 2,
			"or": 1,
			"danger": 1,
			"their": 3,
			"a": 5,
			"them": 4,
			"upon": 1,
			"on": 1,
			"thee": 1,
			"ye": 2,
			"wings": 1,
			"t": 1,
			"and": 9,
			"i": 2,
			"thou": 1,
			"haste": 1,
			"down": 1,
			"each": 1,
			"help": 1,
			"with": 2,
			"soft": 1,
			"some": 1,
			"till": 3,
			"gods": 1,
			"through": 1,
			"minds": 1,
			"our": 3,
			"night": 1,
			"before": 1,
			"your": 1,
			"yet": 1,
			"to": 3,
			"into": 1,
			"ah": 1,
			"he": 1,
			"me": 7,
			"the": 18,
			"her": 2,
			"safe": 1,
			"there": 1,
			"in": 2
		},
		"daily": {
			"bread": 3,
			"his": 1,
			"see": 1,
			"like": 1,
			"without": 1,
			"its": 1,
			"train": 1,
			"let": 2,
			"fall": 1,
			"a": 1,
			"love": 1,
			"and": 4,
			"against": 1,
			"from": 1,
			"with": 1,
			"needs": 1,
			"way": 1,
			"to": 3,
			"into": 1,
			"use": 1,
			"flow": 1,
			"life": 3,
			"though": 1
		},
		"poems": {
			"are": 2,
			"which": 3,
			"of": 8,
			"up": 1,
			"does": 1,
			"that": 2,
			"let": 1,
			"and": 2,
			"as": 2,
			"in": 1
		},
		"both": {
			"itself": 1,
			"since": 1,
			"thine": 1,
			"within": 1,
			"fierce": 1,
			"his": 3,
			"kiss": 1,
			"are": 1,
			"ive": 1,
			"body": 2,
			"of": 7,
			"learning": 1,
			"once": 1,
			"act": 1,
			"fruit": 1,
			"two": 1,
			"mouth": 1,
			"mine": 2,
			"bless": 1,
			"eyes": 1,
			"is": 1,
			"please": 1,
			"good": 1,
			"together": 1,
			"heaven": 1,
			"should": 1,
			"boys": 1,
			"my": 4,
			"words": 1,
			"ere": 1,
			"friend": 1,
			"battles": 1,
			"can": 1,
			"were": 2,
			"did": 1,
			"lips": 1,
			"both": 1,
			"pure": 1,
			"what": 2,
			"moon": 1,
			"hands": 6,
			"have": 1,
			"old": 1,
			"but": 1,
			"when": 1,
			"eternal": 1,
			"be": 2,
			"and": 2,
			"i": 1,
			"thou": 1,
			"such": 1,
			"these": 1,
			"no": 1,
			"singing": 1,
			"soft": 1,
			"now": 1,
			"meet": 1,
			"himself": 1,
			"laugh": 1,
			"king": 1,
			"our": 1,
			"day": 1,
			"loved": 1,
			"shall": 1,
			"before": 1,
			"wind": 1,
			"to": 1,
			"live": 1,
			"ah": 1,
			"bold": 1,
			"he": 1,
			"at": 1,
			"seat": 1,
			"o": 1,
			"the": 2,
			"in": 5
		},
		"thin": {
			"white": 1,
			"of": 1,
			"thick": 1,
			"is": 1,
			"gray": 1,
			"hand": 1,
			"face": 1,
			"was": 1,
			"that": 1,
			"lips": 1,
			"de": 1,
			"so": 2,
			"veil": 1,
			"and": 4,
			"do": 1,
			"i": 1,
			"would": 1,
			"sense": 1,
			"night": 1,
			"clouds": 1,
			"in": 1
		},
		"fain": {
			"they": 1,
			"just": 1,
			"go": 2,
			"have": 2,
			"but": 2,
			"be": 2,
			"and": 2,
			"sunshine": 1,
			"i": 1,
			"would": 6,
			"till": 1,
			"to": 3,
			"in": 1
		},
		"another": {
			"footnote": 1,
			"sighs": 1,
			"crest": 1,
			"women": 1,
			"thing": 1,
			"of": 3,
			"heavy": 1,
			"sight": 1,
			"race": 2,
			"part": 1,
			"burden": 1,
			"child": 1,
			"is": 1,
			"unto": 1,
			"takes": 1,
			"glass": 1,
			"care": 1,
			"stern": 1,
			"its": 1,
			"sea": 1,
			"for": 3,
			"hand": 2,
			"cup": 1,
			"should": 1,
			"my": 1,
			"came": 1,
			"morn": 1,
			"ere": 1,
			"whom": 1,
			"bears": 1,
			"oer": 1,
			"oh": 1,
			"even": 1,
			"isle": 1,
			"so": 1,
			"glance": 1,
			"when": 1,
			"brave": 1,
			"and": 2,
			"move": 1,
			"grave": 1,
			"woman": 3,
			"down": 1,
			"one": 1,
			"pearl": 1,
			"sphere": 1,
			"with": 1,
			"king": 1,
			"day": 3,
			"sense": 1,
			"golden": 1,
			"still": 2,
			"yet": 2,
			"way": 1,
			"to": 2,
			"he": 1,
			"at": 1,
			"o": 2,
			"the": 4,
			"world": 3,
			"in": 3
		},
		"says": {
			"justice": 1,
			"hell": 1,
			"very": 1,
			"guard": 1,
			"of": 1,
			"it": 1,
			"they": 1,
			"for": 2,
			"my": 1,
			"freedom": 1,
			"that": 1,
			"go": 1,
			"an": 2,
			"de": 1,
			"a": 2,
			"poor": 1,
			"and": 1,
			"i": 2,
			"haste": 1,
			"no": 2,
			"strong": 1,
			"then": 1,
			"to": 1,
			"get": 1,
			"we": 2,
			"stand": 1,
			"he": 4,
			"o": 2,
			"the": 3,
			"dead": 1,
			"in": 1
		},
		"always": {
			"loves": 1,
			"free": 1,
			"his": 1,
			"hast": 1,
			"who": 1,
			"sweetest": 1,
			"of": 2,
			"keep": 1,
			"talk": 1,
			"she": 1,
			"find": 2,
			"morning": 1,
			"it": 2,
			"shows": 1,
			"by": 1,
			"long": 1,
			"is": 1,
			"heard": 1,
			"friends": 1,
			"for": 1,
			"heaven": 1,
			"take": 1,
			"sir": 1,
			"that": 3,
			"always": 1,
			"fall": 1,
			"must": 1,
			"think": 1,
			"sweeter": 1,
			"a": 1,
			"so": 1,
			"on": 1,
			"iron": 1,
			"time": 1,
			"when": 1,
			"be": 1,
			"say": 1,
			"and": 1,
			"last": 2,
			"i": 1,
			"too": 1,
			"how": 1,
			"higher": 1,
			"from": 1,
			"drink": 1,
			"strange": 1,
			"now": 1,
			"through": 1,
			"spring": 1,
			"to": 4,
			"as": 1,
			"lies": 1,
			"left": 1,
			"the": 2,
			"bent": 1,
			"stood": 1,
			"been": 1,
			"near": 2,
			"there": 1,
			"in": 1
		},
		"jerusalem": {
			"thy": 3,
			"jerusalem": 2,
			"or": 1,
			"on": 1,
			"above": 1,
			"when": 2,
			"and": 1,
			"i": 1,
			"would": 1,
			"with": 1,
			"gods": 1,
			"the": 6
		},
		"taste": {
			"else": 1,
			"within": 1,
			"who": 1,
			"of": 6,
			"not": 1,
			"it": 1,
			"brought": 1,
			"by": 1,
			"thy": 1,
			"go": 1,
			"but": 2,
			"and": 2,
			"too": 1,
			"some": 1,
			"at": 1,
			"the": 3,
			"her": 1
		},
		"embrace": {
			"us": 1,
			"tell": 1,
			"of": 1,
			"lines": 1,
			"not": 1,
			"they": 1,
			"where": 1,
			"for": 1,
			"that": 1,
			"but": 1,
			"be": 1,
			"and": 3,
			"each": 1,
			"all": 1,
			"our": 1,
			"ah": 1,
			"he": 1,
			"me": 1,
			"o": 1
		},
		"leaf": {
			"ive": 1,
			"nor": 2,
			"by": 1,
			"is": 2,
			"sc": 1,
			"for": 1,
			"autumn": 1,
			"sir": 1,
			"that": 1,
			"if": 1,
			"drop": 1,
			"or": 1,
			"a": 2,
			"sometimes": 1,
			"upon": 3,
			"on": 2,
			"time": 1,
			"and": 4,
			"i": 2,
			"from": 1,
			"to": 4,
			"left": 1,
			"the": 3,
			"her": 1
		},
		"full": {
			"his": 1,
			"play": 1,
			"surely": 2,
			"of": 46,
			"star": 1,
			"high": 1,
			"tide": 1,
			"by": 1,
			"soon": 4,
			"why": 1,
			"either": 1,
			"they": 1,
			"you": 1,
			"sea": 1,
			"others": 1,
			"for": 2,
			"bosom": 1,
			"sang": 2,
			"rest": 1,
			"blow": 1,
			"enough": 1,
			"soul": 1,
			"along": 1,
			"that": 2,
			"moon": 1,
			"eye": 1,
			"bright": 1,
			"their": 1,
			"falls": 1,
			"upon": 4,
			"many": 11,
			"on": 2,
			"fast": 2,
			"but": 1,
			"time": 1,
			"years": 1,
			"length": 3,
			"wings": 1,
			"glory": 1,
			"line": 1,
			"heart": 1,
			"and": 14,
			"sun": 1,
			"haste": 1,
			"home": 1,
			"here": 1,
			"might": 1,
			"hearts": 1,
			"while": 1,
			"breast": 1,
			"with": 1,
			"twenty": 1,
			"well": 5,
			"sense": 1,
			"yet": 1,
			"to": 3,
			"little": 2,
			"strain": 1,
			"sore": 1,
			"glad": 1,
			"as": 5,
			"array": 1,
			"he": 1,
			"strength": 1,
			"the": 6,
			"her": 1,
			"oft": 1,
			"in": 4
		},
		"make": {
			"sweet": 2,
			"bow": 1,
			"bread": 1,
			"us": 11,
			"ours": 1,
			"ready": 3,
			"light": 1,
			"earth": 1,
			"his": 8,
			"him": 6,
			"bare": 1,
			"women": 1,
			"dance": 1,
			"men": 4,
			"of": 6,
			"this": 1,
			"up": 4,
			"rock": 1,
			"nor": 1,
			"thyself": 1,
			"part": 1,
			"rivers": 1,
			"not": 1,
			"divine": 1,
			"it": 15,
			"wise": 1,
			"like": 1,
			"forms": 1,
			"people": 1,
			"good": 2,
			"you": 1,
			"new": 1,
			"without": 1,
			"than": 1,
			"holy": 1,
			"for": 6,
			"lost": 1,
			"tomorrow": 1,
			"my": 6,
			"again": 1,
			"thy": 7,
			"was": 1,
			"that": 2,
			"man": 1,
			"an": 2,
			"music": 3,
			"or": 1,
			"bright": 1,
			"their": 7,
			"a": 27,
			"them": 5,
			"lord": 1,
			"whole": 1,
			"but": 1,
			"poor": 1,
			"known": 2,
			"thee": 4,
			"when": 2,
			"lifes": 1,
			"out": 1,
			"and": 4,
			"do": 1,
			"fly": 1,
			"i": 3,
			"thou": 3,
			"haste": 1,
			"bad": 1,
			"one": 3,
			"each": 3,
			"these": 2,
			"no": 4,
			"with": 2,
			"virtue": 2,
			"meet": 1,
			"strong": 1,
			"all": 1,
			"then": 1,
			"room": 2,
			"much": 1,
			"our": 8,
			"your": 1,
			"way": 5,
			"to": 3,
			"little": 2,
			"mankind": 1,
			"use": 1,
			"we": 2,
			"life": 1,
			"me": 17,
			"the": 33,
			"sure": 1,
			"her": 5,
			"in": 3
		},
		"victory": {
			"won": 1,
			"of": 1,
			"it": 1,
			"soon": 1,
			"hurrah": 1,
			"they": 2,
			"robert": 1,
			"charge": 1,
			"cannot": 1,
			"my": 1,
			"great": 1,
			"friendship": 1,
			"had": 1,
			"oh": 1,
			"or": 4,
			"on": 1,
			"and": 4,
			"i": 2,
			"each": 1,
			"no": 1,
			"now": 1,
			"to": 2,
			"may": 1,
			"flag": 1,
			"o": 2,
			"the": 1,
			"in": 1
		},
		"fall": {
			"more": 1,
			"happiness": 1,
			"back": 1,
			"dies": 1,
			"of": 7,
			"off": 2,
			"beyond": 1,
			"thick": 1,
			"not": 2,
			"over": 1,
			"far": 1,
			"by": 4,
			"like": 5,
			"away": 1,
			"children": 1,
			"they": 2,
			"strike": 1,
			"without": 2,
			"where": 5,
			"for": 7,
			"read": 1,
			"great": 1,
			"short": 1,
			"again": 1,
			"thy": 3,
			"comes": 1,
			"tonight": 1,
			"god": 1,
			"can": 1,
			"that": 3,
			"if": 1,
			"let": 1,
			"full": 1,
			"fall": 1,
			"or": 3,
			"their": 2,
			"a": 6,
			"upon": 4,
			"many": 1,
			"on": 5,
			"time": 1,
			"ye": 1,
			"when": 1,
			"out": 1,
			"and": 22,
			"i": 2,
			"thou": 4,
			"down": 1,
			"each": 1,
			"from": 4,
			"no": 1,
			"with": 1,
			"around": 1,
			"some": 1,
			"all": 1,
			"then": 3,
			"thats": 1,
			"asleep": 3,
			"shall": 1,
			"only": 1,
			"still": 1,
			"yet": 1,
			"to": 5,
			"into": 2,
			"cut": 1,
			"we": 1,
			"as": 6,
			"he": 2,
			"at": 1,
			"below": 1,
			"o": 2,
			"the": 12,
			"though": 1,
			"her": 1,
			"there": 2,
			"in": 5,
			"ruin": 1
		},
		"steep": {
			"of": 2,
			"is": 2,
			"where": 3,
			"or": 1,
			"when": 1,
			"be": 1,
			"brave": 1,
			"and": 2,
			"i": 1,
			"each": 1,
			"no": 1,
			"road": 2,
			"shall": 1,
			"course": 1,
			"as": 1,
			"the": 4,
			"her": 1,
			"there": 1
		},
		"busy": {
			"his": 1,
			"of": 2,
			"keep": 1,
			"up": 1,
			"nations": 1,
			"ever": 1,
			"hand": 1,
			"winds": 1,
			"or": 1,
			"have": 1,
			"heart": 1,
			"and": 2,
			"work": 1,
			"with": 2,
			"around": 1,
			"toil": 1,
			"day": 1,
			"life": 2,
			"fancy": 1,
			"world": 1,
			"her": 1
		},
		"ripe": {
			"fruit": 2,
			"hours": 1,
			"like": 1,
			"for": 5,
			"ripe": 2,
			"and": 5,
			"i": 1,
			"harvest": 2,
			"yet": 1,
			"as": 1
		},
		"often": {
			"are": 1,
			"made": 1,
			"mute": 1,
			"like": 1,
			"heard": 1,
			"sadly": 1,
			"hope": 1,
			"that": 2,
			"often": 1,
			"must": 1,
			"have": 1,
			"a": 1,
			"them": 1,
			"filled": 1,
			"when": 2,
			"do": 1,
			"hate": 1,
			"looks": 1,
			"sought": 2,
			"with": 1,
			"give": 1,
			"meet": 1,
			"will": 1,
			"ends": 1,
			"to": 1,
			"lie": 1,
			"falling": 1,
			"as": 1,
			"the": 1,
			"been": 2,
			"in": 2
		},
		"broken": {
			"his": 1,
			"under": 1,
			"which": 1,
			"of": 1,
			"sword": 1,
			"it": 1,
			"lights": 1,
			"by": 1,
			"is": 1,
			"like": 1,
			"forever": 1,
			"steed": 1,
			"ranks": 1,
			"for": 1,
			"band": 1,
			"thy": 1,
			"ere": 1,
			"were": 1,
			"that": 1,
			"go": 1,
			"a": 3,
			"many": 1,
			"chains": 1,
			"plain": 1,
			"heart": 1,
			"and": 3,
			"sunshine": 1,
			"i": 1,
			"here": 1,
			"hearts": 1,
			"beat": 1,
			"bid": 1,
			"with": 2,
			"now": 1,
			"strong": 1,
			"through": 1,
			"to": 1,
			"loud": 1,
			"spear": 1,
			"vows": 1,
			"ship": 1,
			"we": 2,
			"the": 1,
			"though": 1,
			"dead": 1,
			"in": 2
		},
		"crowd": {
			"who": 1,
			"of": 1,
			"not": 1,
			"it": 1,
			"by": 1,
			"they": 1,
			"that": 2,
			"go": 1,
			"on": 1,
			"above": 1,
			"but": 2,
			"when": 1,
			"and": 3,
			"ask": 1,
			"from": 1,
			"while": 2,
			"around": 1,
			"will": 1,
			"then": 2,
			"doth": 1,
			"into": 1,
			"the": 1,
			"sure": 1
		},
		"go": {
			"footnote": 1,
			"ring": 1,
			"free": 4,
			"forget": 2,
			"his": 1,
			"endure": 1,
			"see": 1,
			"women": 1,
			"tell": 1,
			"right": 1,
			"back": 4,
			"guard": 1,
			"after": 1,
			"up": 3,
			"she": 1,
			"shakespeare": 1,
			"beyond": 1,
			"nor": 1,
			"three": 1,
			"whatever": 1,
			"forth": 10,
			"two": 1,
			"behold": 1,
			"not": 2,
			"put": 1,
			"today": 1,
			"dry": 1,
			"every": 1,
			"it": 2,
			"over": 3,
			"far": 2,
			"by": 9,
			"long": 2,
			"is": 1,
			"like": 1,
			"farewell": 1,
			"hard": 1,
			"away": 2,
			"good": 1,
			"about": 2,
			"they": 1,
			"mother": 1,
			"thus": 1,
			"robert": 1,
			"lightly": 1,
			"een": 1,
			"crown": 1,
			"just": 1,
			"for": 2,
			"past": 1,
			"hand": 1,
			"my": 3,
			"sighing": 1,
			"watch": 3,
			"seek": 3,
			"most": 1,
			"along": 1,
			"william": 1,
			"face": 1,
			"forward": 1,
			"that": 2,
			"if": 1,
			"let": 1,
			"what": 3,
			"oh": 1,
			"or": 2,
			"bright": 1,
			"tears": 1,
			"their": 1,
			"a": 2,
			"so": 1,
			"them": 1,
			"on": 34,
			"but": 1,
			"buried": 1,
			"ye": 1,
			"when": 1,
			"onward": 1,
			"be": 1,
			"t": 1,
			"out": 3,
			"and": 14,
			"sun": 1,
			"i": 2,
			"thou": 1,
			"marching": 1,
			"down": 6,
			"home": 1,
			"one": 1,
			"might": 1,
			"between": 1,
			"how": 1,
			"higher": 1,
			"from": 2,
			"across": 1,
			"while": 1,
			"no": 3,
			"alfred": 2,
			"with": 8,
			"sad": 1,
			"till": 3,
			"all": 1,
			"then": 1,
			"lose": 1,
			"through": 2,
			"wake": 1,
			"yet": 1,
			"mark": 1,
			"to": 17,
			"little": 1,
			"hence": 2,
			"may": 1,
			"we": 2,
			"as": 1,
			"o": 1,
			"browning": 2,
			"greek": 1,
			"the": 12,
			"though": 1,
			"her": 1,
			"fire": 1,
			"in": 5
		},
		"spake": {
			"more": 1,
			"nor": 1,
			"three": 1,
			"not": 1,
			"it": 1,
			"by": 1,
			"gentle": 1,
			"welcome": 1,
			"my": 1,
			"again": 1,
			"god": 1,
			"that": 1,
			"an": 1,
			"upon": 1,
			"on": 1,
			"and": 2,
			"thunder": 1,
			"no": 1,
			"with": 2,
			"now": 1,
			"some": 1,
			"to": 1,
			"as": 1,
			"the": 11
		},
		"cried": {
			"come": 1,
			"his": 3,
			"him": 1,
			"beside": 1,
			"made": 1,
			"who": 2,
			"it": 1,
			"twas": 1,
			"is": 2,
			"unto": 1,
			"nay": 1,
			"its": 1,
			"for": 2,
			"my": 3,
			"thy": 1,
			"pray": 1,
			"ere": 1,
			"soul": 1,
			"god": 2,
			"did": 1,
			"have": 1,
			"their": 2,
			"lord": 1,
			"when": 1,
			"t": 1,
			"out": 1,
			"and": 9,
			"i": 1,
			"with": 1,
			"all": 1,
			"then": 2,
			"your": 1,
			"to": 2,
			"hence": 1,
			"as": 1,
			"he": 2,
			"me": 1,
			"the": 5,
			"though": 2,
			"in": 1,
			"aloud": 4
		},
		"reign": {
			"fierce": 1,
			"under": 1,
			"who": 1,
			"of": 2,
			"over": 1,
			"alone": 1,
			"is": 2,
			"lead": 1,
			"hark": 1,
			"thy": 1,
			"whom": 1,
			"that": 3,
			"had": 1,
			"infinite": 1,
			"and": 1,
			"whereer": 1,
			"with": 1,
			"may": 1,
			"o": 1,
			"jesus": 1,
			"there": 1,
			"in": 5
		},
		"seed": {
			"within": 1,
			"of": 1,
			"is": 1,
			"that": 2,
			"oh": 1,
			"or": 1,
			"on": 1,
			"ye": 1,
			"from": 1,
			"with": 1,
			"has": 1,
			"shall": 2,
			"growing": 1,
			"we": 2,
			"whose": 1,
			"at": 1,
			"the": 1,
			"in": 1
		},
		"gladness": {
			"his": 1,
			"of": 5,
			"every": 1,
			"is": 1,
			"lead": 1,
			"that": 1,
			"but": 1,
			"when": 1,
			"ay": 1,
			"and": 4,
			"dream": 1,
			"broke": 1,
			"gifts": 1,
			"with": 1,
			"soft": 1,
			"to": 4,
			"in": 2
		},
		"half": {
			"light": 2,
			"his": 3,
			"of": 3,
			"hung": 1,
			"brother": 1,
			"part": 1,
			"sings": 1,
			"divine": 1,
			"shut": 1,
			"is": 2,
			"they": 1,
			"without": 1,
			"where": 1,
			"my": 1,
			"tender": 1,
			"thy": 1,
			"if": 1,
			"half": 1,
			"trust": 1,
			"what": 1,
			"music": 1,
			"awake": 1,
			"their": 3,
			"a": 10,
			"so": 6,
			"on": 1,
			"old": 1,
			"naked": 1,
			"buried": 1,
			"be": 1,
			"and": 8,
			"hid": 1,
			"i": 2,
			"worthy": 1,
			"told": 1,
			"from": 1,
			"hidden": 1,
			"with": 2,
			"till": 1,
			"asleep": 1,
			"our": 2,
			"shade": 2,
			"way": 1,
			"to": 4,
			"mankind": 1,
			"as": 1,
			"he": 1,
			"me": 1,
			"o": 1,
			"greek": 1,
			"the": 19,
			"ghost": 1,
			"her": 2,
			"in": 5
		},
		"trust": {
			"die": 1,
			"his": 2,
			"him": 3,
			"are": 1,
			"which": 2,
			"not": 3,
			"depart": 1,
			"it": 3,
			"is": 4,
			"like": 1,
			"they": 1,
			"you": 1,
			"its": 1,
			"for": 1,
			"my": 1,
			"thy": 2,
			"remember": 1,
			"sir": 1,
			"god": 1,
			"that": 8,
			"let": 1,
			"go": 1,
			"what": 1,
			"an": 2,
			"or": 1,
			"a": 1,
			"on": 1,
			"but": 1,
			"thee": 2,
			"ye": 1,
			"mans": 1,
			"and": 9,
			"i": 2,
			"no": 2,
			"with": 1,
			"all": 1,
			"our": 3,
			"your": 2,
			"to": 3,
			"answer": 1,
			"know": 1,
			"we": 1,
			"he": 2,
			"me": 5,
			"the": 5,
			"though": 1,
			"in": 16
		},
		"hang": {
			"his": 1,
			"up": 1,
			"over": 1,
			"my": 1,
			"oer": 2,
			"that": 1,
			"on": 6,
			"but": 1,
			"ye": 1,
			"out": 1,
			"from": 1,
			"round": 1,
			"the": 2,
			"in": 1
		},
		"sail": {
			"this": 1,
			"it": 2,
			"just": 1,
			"thy": 1,
			"that": 1,
			"what": 1,
			"or": 2,
			"a": 1,
			"upon": 1,
			"on": 4,
			"be": 1,
			"and": 5,
			"i": 1,
			"whereer": 1,
			"across": 1,
			"reason": 1,
			"with": 2,
			"ah": 1,
			"spread": 1,
			"he": 1,
			"at": 1,
			"the": 4
		},
		"rode": {
			"back": 1,
			"of": 2,
			"two": 1,
			"by": 2,
			"alone": 1,
			"away": 1,
			"along": 1,
			"that": 1,
			"or": 1,
			"making": 1,
			"so": 1,
			"on": 3,
			"but": 1,
			"out": 2,
			"and": 4,
			"down": 1,
			"sublime": 1,
			"with": 2,
			"to": 2,
			"into": 1,
			"slowly": 1,
			"below": 1,
			"the": 8,
			"first": 1,
			"in": 1
		},
		"tear": {
			"come": 1,
			"his": 2,
			"begin": 1,
			"of": 1,
			"not": 1,
			"it": 1,
			"is": 1,
			"like": 1,
			"away": 1,
			"why": 1,
			"for": 3,
			"my": 1,
			"was": 1,
			"that": 2,
			"if": 1,
			"man": 1,
			"fall": 1,
			"must": 1,
			"what": 1,
			"their": 1,
			"upon": 2,
			"on": 1,
			"but": 1,
			"eternal": 1,
			"until": 1,
			"be": 1,
			"and": 7,
			"sunshine": 1,
			"thou": 1,
			"from": 1,
			"with": 1,
			"some": 1,
			"all": 1,
			"then": 1,
			"has": 1,
			"hall": 1,
			"shall": 1,
			"to": 4,
			"we": 2,
			"he": 1,
			"the": 7,
			"tis": 1,
			"her": 1,
			"there": 1,
			"in": 4
		},
		"desert": {
			"sighs": 1,
			"who": 1,
			"of": 2,
			"rude": 1,
			"place": 1,
			"over": 1,
			"by": 1,
			"woods": 1,
			"alone": 1,
			"land": 1,
			"afar": 2,
			"heard": 1,
			"stone": 1,
			"when": 1,
			"black": 1,
			"i": 6,
			"one": 1,
			"rocks": 1,
			"from": 1,
			"with": 1,
			"wild": 1,
			"well": 1,
			"road": 1,
			"wind": 1,
			"to": 1,
			"gloom": 1,
			"heavens": 1,
			"he": 1,
			"the": 2,
			"waste": 1,
			"air": 2
		},
		"perfume": {
			"itself": 1,
			"of": 1,
			"for": 2,
			"so": 1,
			"on": 1,
			"be": 1,
			"and": 5,
			"from": 1,
			"with": 1,
			"strong": 1,
			"shall": 1,
			"to": 2,
			"as": 1,
			"the": 2,
			"her": 1,
			"there": 1
		},
		"brothers": {
			"free": 1,
			"see": 1,
			"blood": 1,
			"woe": 1,
			"are": 2,
			"men": 1,
			"of": 3,
			"lovers": 1,
			"for": 1,
			"hand": 1,
			"cup": 1,
			"pray": 1,
			"peace": 1,
			"face": 1,
			"oer": 1,
			"if": 1,
			"let": 1,
			"embrace": 1,
			"an": 1,
			"on": 1,
			"ye": 1,
			"heart": 1,
			"sorrow": 1,
			"and": 5,
			"bones": 1,
			"fate": 1,
			"i": 1,
			"how": 1,
			"with": 1,
			"all": 1,
			"ho": 1,
			"could": 1,
			"to": 1,
			"bold": 2,
			"life": 1,
			"the": 1,
			"young": 1,
			"in": 1
		},
		"had": {
			"come": 9,
			"else": 3,
			"caught": 2,
			"fled": 1,
			"us": 1,
			"more": 1,
			"sent": 1,
			"wrought": 1,
			"won": 2,
			"died": 1,
			"unseen": 1,
			"worn": 2,
			"earth": 1,
			"touched": 1,
			"his": 3,
			"him": 2,
			"crossed": 1,
			"none": 2,
			"seemed": 1,
			"made": 6,
			"seen": 4,
			"which": 1,
			"of": 1,
			"cast": 2,
			"she": 3,
			"grown": 1,
			"played": 1,
			"not": 15,
			"pressed": 2,
			"it": 4,
			"neither": 1,
			"far": 2,
			"brought": 2,
			"by": 3,
			"long": 1,
			"kissed": 1,
			"something": 2,
			"looked": 1,
			"few": 1,
			"found": 3,
			"force": 1,
			"ever": 1,
			"they": 7,
			"you": 2,
			"shot": 1,
			"heard": 4,
			"laid": 2,
			"its": 4,
			"een": 1,
			"where": 1,
			"summers": 1,
			"just": 1,
			"for": 4,
			"become": 1,
			"lost": 5,
			"cannot": 1,
			"breath": 1,
			"my": 2,
			"count": 1,
			"great": 1,
			"again": 1,
			"enough": 1,
			"thy": 1,
			"better": 1,
			"mary": 1,
			"hope": 1,
			"flung": 1,
			"stretched": 1,
			"along": 1,
			"power": 1,
			"oer": 1,
			"need": 2,
			"was": 1,
			"that": 3,
			"another": 1,
			"half": 1,
			"an": 5,
			"or": 2,
			"ran": 1,
			"moved": 1,
			"trod": 1,
			"their": 2,
			"a": 17,
			"so": 2,
			"given": 3,
			"them": 1,
			"ceased": 3,
			"many": 1,
			"almost": 2,
			"leave": 1,
			"love": 1,
			"on": 1,
			"deep": 1,
			"but": 6,
			"known": 2,
			"thee": 2,
			"ye": 1,
			"gone": 1,
			"lifes": 1,
			"wings": 1,
			"watched": 2,
			"tried": 1,
			"and": 11,
			"truth": 1,
			"last": 1,
			"i": 11,
			"down": 1,
			"broke": 1,
			"here": 1,
			"fought": 1,
			"one": 2,
			"such": 1,
			"rome": 1,
			"rather": 2,
			"from": 2,
			"no": 12,
			"called": 1,
			"ears": 1,
			"with": 1,
			"set": 3,
			"learned": 3,
			"hair": 1,
			"twenty": 1,
			"all": 4,
			"then": 1,
			"thought": 1,
			"through": 1,
			"ten": 2,
			"clear": 1,
			"much": 2,
			"turned": 1,
			"begun": 1,
			"walked": 1,
			"gathered": 3,
			"neer": 1,
			"fallen": 2,
			"loved": 2,
			"before": 2,
			"only": 3,
			"your": 2,
			"to": 7,
			"wandered": 2,
			"into": 2,
			"little": 1,
			"written": 1,
			"lived": 1,
			"we": 3,
			"as": 1,
			"borne": 2,
			"done": 3,
			"said": 2,
			"he": 7,
			"at": 2,
			"slumber": 1,
			"led": 1,
			"left": 6,
			"blessed": 3,
			"the": 29,
			"tis": 1,
			"though": 1,
			"stood": 1,
			"drawn": 1,
			"her": 7,
			"passed": 3,
			"been": 31,
			"fire": 1,
			"in": 11
		},
		"gives": {
			"itself": 1,
			"us": 4,
			"more": 1,
			"light": 3,
			"his": 1,
			"back": 1,
			"up": 1,
			"command": 1,
			"it": 5,
			"is": 2,
			"you": 1,
			"nature": 1,
			"its": 2,
			"than": 1,
			"for": 1,
			"birth": 2,
			"whom": 1,
			"hope": 1,
			"god": 1,
			"immortal": 1,
			"let": 1,
			"or": 1,
			"a": 4,
			"them": 2,
			"but": 6,
			"thee": 1,
			"wings": 1,
			"out": 1,
			"and": 1,
			"too": 1,
			"such": 1,
			"from": 1,
			"no": 3,
			"with": 1,
			"himself": 1,
			"room": 1,
			"ten": 1,
			"our": 1,
			"only": 1,
			"best": 1,
			"way": 1,
			"to": 6,
			"thinking": 1,
			"me": 5,
			"o": 1,
			"the": 5,
			"her": 1,
			"in": 2
		},
		"must": {
			"come": 4,
			"bow": 1,
			"look": 1,
			"hear": 1,
			"england": 1,
			"die": 12,
			"his": 3,
			"appear": 1,
			"endure": 1,
			"him": 2,
			"see": 1,
			"play": 2,
			"surely": 1,
			"hide": 1,
			"body": 1,
			"of": 1,
			"this": 2,
			"blind": 1,
			"yield": 2,
			"pour": 1,
			"up": 1,
			"she": 1,
			"find": 1,
			"part": 6,
			"pass": 1,
			"slaves": 1,
			"mine": 1,
			"not": 17,
			"fade": 1,
			"dwell": 1,
			"burn": 1,
			"it": 4,
			"perish": 1,
			"weep": 1,
			"long": 1,
			"bring": 1,
			"like": 1,
			"return": 2,
			"please": 1,
			"kings": 1,
			"forever": 1,
			"lead": 1,
			"ever": 3,
			"they": 1,
			"believe": 1,
			"you": 1,
			"strike": 1,
			"those": 1,
			"for": 2,
			"become": 1,
			"worse": 1,
			"take": 4,
			"speak": 1,
			"remain": 2,
			"thy": 1,
			"watch": 2,
			"teach": 1,
			"wear": 1,
			"seek": 1,
			"gather": 1,
			"strive": 1,
			"win": 4,
			"comfort": 1,
			"indeed": 1,
			"that": 2,
			"bear": 4,
			"always": 2,
			"fall": 4,
			"often": 1,
			"go": 7,
			"sail": 1,
			"what": 1,
			"oh": 1,
			"wait": 2,
			"understand": 1,
			"eye": 1,
			"start": 1,
			"have": 14,
			"awake": 2,
			"their": 4,
			"never": 2,
			"walk": 1,
			"delight": 1,
			"love": 1,
			"on": 2,
			"bend": 1,
			"break": 1,
			"own": 1,
			"but": 1,
			"death": 1,
			"thee": 1,
			"when": 4,
			"onward": 1,
			"be": 73,
			"close": 1,
			"and": 5,
			"thunder": 1,
			"do": 1,
			"last": 1,
			"fly": 2,
			"i": 7,
			"thou": 2,
			"down": 1,
			"pay": 1,
			"hate": 1,
			"beat": 1,
			"bid": 1,
			"with": 2,
			"now": 1,
			"give": 4,
			"meet": 1,
			"follow": 2,
			"all": 1,
			"shine": 1,
			"wake": 3,
			"upward": 1,
			"our": 1,
			"feel": 2,
			"needs": 4,
			"still": 2,
			"mark": 1,
			"to": 3,
			"turn": 1,
			"lie": 1,
			"answer": 1,
			"know": 1,
			"flow": 1,
			"we": 6,
			"as": 1,
			"life": 1,
			"end": 2,
			"he": 1,
			"at": 1,
			"slumber": 2,
			"gain": 1,
			"grow": 1,
			"the": 1,
			"fight": 1,
			"her": 2,
			"change": 1,
			"first": 3,
			"in": 1,
			"seem": 1
		},
		"general": {
			"under": 1,
			"who": 1,
			"of": 2,
			"not": 1,
			"form": 1,
			"those": 1,
			"cry": 1,
			"soul": 1,
			"francis": 1,
			"sir": 1,
			"along": 1,
			"rode": 1,
			"gave": 1,
			"lay": 1,
			"saw": 1,
			"honest": 1,
			"doom": 1,
			"each": 1,
			"from": 1,
			"to": 1,
			"use": 1,
			"first": 1
		},
		"climb": {
			"his": 1,
			"she": 1,
			"not": 1,
			"by": 1,
			"where": 1,
			"trembling": 1,
			"or": 1,
			"upon": 1,
			"when": 1,
			"and": 2,
			"with": 1,
			"upward": 1,
			"yet": 1,
			"to": 3,
			"into": 1,
			"at": 1,
			"the": 5,
			"there": 1
		},
		"pure": {
			"cool": 1,
			"sent": 1,
			"light": 1,
			"his": 1,
			"him": 1,
			"who": 1,
			"of": 3,
			"gold": 2,
			"serene": 1,
			"proud": 1,
			"eyes": 1,
			"like": 1,
			"its": 1,
			"bosom": 1,
			"breath": 1,
			"desire": 1,
			"soul": 1,
			"can": 1,
			"immortal": 1,
			"was": 1,
			"let": 1,
			"make": 1,
			"oh": 1,
			"bright": 1,
			"have": 1,
			"spirit": 1,
			"delight": 3,
			"love": 5,
			"on": 1,
			"celestial": 1,
			"but": 2,
			"brown": 1,
			"thee": 1,
			"when": 1,
			"ay": 1,
			"and": 20,
			"such": 1,
			"each": 1,
			"from": 3,
			"lilies": 1,
			"present": 1,
			"fires": 1,
			"notes": 1,
			"day": 1,
			"yet": 1,
			"to": 3,
			"religion": 1,
			"we": 1,
			"whose": 1,
			"as": 4,
			"me": 1,
			"at": 2,
			"the": 3,
			"in": 5,
			"thoughts": 1
		},
		"what": {
			"come": 1,
			"sound": 1,
			"breaking": 1,
			"us": 1,
			"more": 3,
			"wrought": 1,
			"since": 1,
			"blessings": 1,
			"virtues": 1,
			"laws": 1,
			"light": 2,
			"earth": 2,
			"his": 2,
			"save": 1,
			"happiness": 1,
			"hell": 1,
			"ear": 1,
			"means": 5,
			"blood": 1,
			"thing": 1,
			"hast": 5,
			"wonder": 2,
			"seemed": 3,
			"are": 16,
			"made": 3,
			"ive": 1,
			"word": 2,
			"silent": 1,
			"men": 1,
			"country": 1,
			"of": 12,
			"this": 5,
			"high": 1,
			"fame": 1,
			"kept": 1,
			"up": 1,
			"tide": 1,
			"she": 4,
			"nor": 1,
			"does": 1,
			"flood": 1,
			"joy": 1,
			"fruit": 1,
			"bird": 1,
			"fresh": 1,
			"part": 1,
			"lands": 1,
			"solemn": 1,
			"not": 1,
			"divine": 1,
			"burden": 1,
			"hes": 1,
			"every": 1,
			"it": 21,
			"sins": 1,
			"twas": 1,
			"far": 1,
			"mean": 2,
			"health": 1,
			"try": 1,
			"matter": 5,
			"is": 93,
			"joyous": 1,
			"hard": 1,
			"away": 1,
			"form": 2,
			"good": 3,
			"force": 1,
			"care": 1,
			"they": 20,
			"you": 15,
			"nature": 1,
			"new": 2,
			"pleasure": 1,
			"sea": 1,
			"gentle": 1,
			"others": 1,
			"run": 1,
			"holy": 1,
			"for": 2,
			"past": 1,
			"heaven": 1,
			"bosom": 1,
			"frost": 1,
			"should": 5,
			"cannot": 1,
			"rest": 1,
			"my": 1,
			"words": 3,
			"hour": 1,
			"came": 1,
			"beauty": 1,
			"short": 1,
			"freedom": 1,
			"thy": 1,
			"peace": 1,
			"rang": 1,
			"shadow": 1,
			"least": 1,
			"shore": 1,
			"ground": 1,
			"passion": 1,
			"hope": 2,
			"makes": 4,
			"sin": 1,
			"god": 7,
			"can": 18,
			"were": 3,
			"sudden": 2,
			"need": 1,
			"was": 20,
			"that": 5,
			"if": 9,
			"womans": 1,
			"cares": 4,
			"man": 5,
			"thin": 1,
			"says": 1,
			"full": 1,
			"had": 3,
			"gives": 1,
			"must": 3,
			"what": 1,
			"an": 1,
			"nothing": 1,
			"even": 1,
			"conscience": 1,
			"think": 1,
			"wilt": 1,
			"sweeter": 1,
			"have": 10,
			"am": 4,
			"gave": 1,
			"a": 40,
			"so": 5,
			"joys": 1,
			"upon": 1,
			"gallant": 1,
			"lay": 1,
			"things": 1,
			"hath": 2,
			"delight": 1,
			"love": 5,
			"on": 1,
			"charm": 1,
			"memory": 1,
			"but": 8,
			"infinite": 1,
			"time": 4,
			"thee": 1,
			"ye": 1,
			"canst": 1,
			"years": 1,
			"when": 1,
			"gone": 1,
			"terror": 1,
			"dreams": 1,
			"wondrous": 2,
			"wings": 1,
			"rage": 1,
			"heart": 2,
			"say": 1,
			"and": 5,
			"eer": 1,
			"bliss": 1,
			"do": 5,
			"last": 1,
			"dream": 1,
			"fate": 5,
			"i": 24,
			"thou": 21,
			"greet": 1,
			"too": 1,
			"mortal": 2,
			"might": 2,
			"arts": 1,
			"work": 2,
			"looks": 1,
			"hearts": 1,
			"other": 1,
			"from": 3,
			"sought": 1,
			"would": 3,
			"endless": 1,
			"reason": 1,
			"beat": 1,
			"duty": 1,
			"honor": 2,
			"no": 2,
			"bid": 1,
			"voice": 2,
			"mighty": 1,
			"with": 4,
			"soft": 1,
			"now": 1,
			"realm": 1,
			"will": 8,
			"grief": 1,
			"then": 10,
			"could": 7,
			"has": 7,
			"toil": 1,
			"doth": 1,
			"master": 1,
			"ways": 1,
			"peaceful": 1,
			"dost": 3,
			"behind": 1,
			"wealth": 1,
			"our": 2,
			"storms": 1,
			"day": 1,
			"feel": 1,
			"neer": 1,
			"fear": 1,
			"needs": 1,
			"pity": 1,
			"shall": 11,
			"still": 3,
			"your": 2,
			"yet": 1,
			"way": 2,
			"to": 12,
			"loud": 1,
			"springs": 1,
			"into": 1,
			"round": 1,
			"strain": 1,
			"heavenly": 1,
			"glorious": 3,
			"hence": 1,
			"know": 2,
			"art": 5,
			"may": 10,
			"strife": 1,
			"yon": 1,
			"we": 20,
			"fair": 2,
			"life": 4,
			"end": 1,
			"he": 24,
			"me": 2,
			"strength": 1,
			"wound": 1,
			"the": 30,
			"ghost": 1,
			"though": 18,
			"treasure": 2,
			"seems": 2,
			"her": 2,
			"first": 1,
			"oft": 1,
			"there": 1,
			"in": 5,
			"flowers": 1,
			"harmony": 1,
			"air": 1,
			"seem": 1,
			"thoughts": 2
		},
		"sit": {
			"wi": 2,
			"beside": 1,
			"nor": 1,
			"like": 3,
			"together": 1,
			"they": 2,
			"lonely": 1,
			"or": 1,
			"a": 1,
			"so": 1,
			"upon": 1,
			"on": 4,
			"smiling": 1,
			"but": 1,
			"weeping": 2,
			"close": 1,
			"and": 12,
			"i": 1,
			"down": 4,
			"here": 4,
			"between": 1,
			"with": 2,
			"himself": 1,
			"yet": 1,
			"thinking": 1,
			"apart": 1,
			"at": 4,
			"the": 3,
			"there": 2,
			"in": 8
		},
		"oh": {
			"sweet": 1,
			"come": 2,
			"blessd": 1,
			"light": 1,
			"his": 1,
			"save": 1,
			"hast": 2,
			"woe": 1,
			"tell": 1,
			"fell": 1,
			"who": 2,
			"hide": 1,
			"sons": 1,
			"not": 3,
			"proud": 1,
			"it": 2,
			"by": 1,
			"rise": 1,
			"idle": 1,
			"why": 6,
			"lead": 1,
			"they": 2,
			"faint": 1,
			"you": 1,
			"grant": 1,
			"pale": 1,
			"its": 1,
			"friends": 1,
			"where": 1,
			"gentle": 1,
			"run": 1,
			"for": 4,
			"take": 1,
			"speak": 2,
			"hour": 1,
			"freedom": 1,
			"thy": 1,
			"teach": 4,
			"better": 1,
			"cheer": 2,
			"was": 2,
			"that": 8,
			"if": 3,
			"let": 3,
			"says": 1,
			"make": 2,
			"had": 1,
			"what": 5,
			"oh": 2,
			"nothing": 1,
			"conscience": 1,
			"so": 1,
			"lay": 1,
			"never": 2,
			"love": 1,
			"death": 3,
			"thee": 1,
			"when": 3,
			"be": 2,
			"roses": 1,
			"wondrous": 1,
			"close": 1,
			"and": 1,
			"do": 2,
			"i": 6,
			"thou": 1,
			"here": 1,
			"too": 1,
			"mirth": 1,
			"how": 10,
			"hearts": 1,
			"help": 1,
			"strange": 2,
			"would": 1,
			"no": 7,
			"give": 3,
			"then": 4,
			"blest": 1,
			"could": 4,
			"well": 1,
			"clear": 1,
			"spring": 1,
			"our": 1,
			"passing": 1,
			"neer": 1,
			"stay": 1,
			"still": 1,
			"natures": 1,
			"to": 4,
			"human": 1,
			"into": 1,
			"little": 1,
			"answer": 6,
			"prove": 1,
			"we": 2,
			"happy": 1,
			"blessed": 1,
			"the": 8,
			"tis": 2,
			"there": 3,
			"thoughts": 1
		},
		"beautiful": {
			"lady": 1,
			"none": 1,
			"are": 1,
			"gate": 1,
			"which": 1,
			"mist": 1,
			"ones": 1,
			"among": 1,
			"beyond": 1,
			"fresh": 1,
			"spirits": 1,
			"eyes": 1,
			"is": 3,
			"forms": 1,
			"they": 1,
			"its": 1,
			"for": 2,
			"thy": 2,
			"hope": 1,
			"face": 1,
			"can": 1,
			"that": 1,
			"perfume": 1,
			"a": 1,
			"so": 1,
			"feet": 2,
			"head": 1,
			"and": 7,
			"snow": 12,
			"island": 1,
			"one": 1,
			"tall": 1,
			"brow": 1,
			"from": 1,
			"beneath": 1,
			"with": 1,
			"all": 1,
			"familiar": 1,
			"thought": 1,
			"still": 1,
			"to": 1,
			"round": 1,
			"little": 1,
			"as": 2,
			"the": 2,
			"world": 1,
			"seems": 1,
			"dead": 1,
			"in": 1
		},
		"an": {
			"flower": 2,
			"come": 1,
			"sighs": 1,
			"more": 1,
			"hear": 1,
			"lot": 1,
			"within": 1,
			"ready": 2,
			"went": 1,
			"im": 2,
			"river": 1,
			"light": 2,
			"his": 1,
			"stream": 1,
			"him": 1,
			"ear": 2,
			"sharp": 1,
			"see": 1,
			"wi": 2,
			"none": 1,
			"seemed": 1,
			"humble": 2,
			"word": 1,
			"who": 2,
			"which": 1,
			"of": 18,
			"amid": 1,
			"tide": 1,
			"angel": 18,
			"age": 5,
			"race": 2,
			"two": 1,
			"pain": 1,
			"place": 1,
			"divine": 3,
			"hours": 3,
			"put": 1,
			"it": 3,
			"evil": 2,
			"army": 3,
			"host": 1,
			"image": 1,
			"eager": 3,
			"far": 1,
			"by": 1,
			"is": 3,
			"author": 3,
			"eternity": 2,
			"like": 2,
			"return": 1,
			"idle": 2,
			"ocean": 1,
			"they": 2,
			"easy": 4,
			"wide": 1,
			"without": 1,
			"its": 1,
			"than": 1,
			"smile": 1,
			"song": 1,
			"run": 1,
			"just": 1,
			"for": 5,
			"noise": 1,
			"hand": 1,
			"heaven": 1,
			"cry": 1,
			"my": 3,
			"hour": 26,
			"beauty": 1,
			"earl": 2,
			"enough": 1,
			"shadow": 1,
			"soul": 1,
			"sir": 1,
			"evening": 6,
			"wrath": 1,
			"lords": 1,
			"god": 1,
			"bears": 1,
			"oer": 1,
			"sudden": 1,
			"immortal": 4,
			"shell": 1,
			"indeed": 1,
			"did": 1,
			"was": 3,
			"that": 2,
			"if": 3,
			"cares": 1,
			"arm": 2,
			"full": 1,
			"half": 1,
			"trust": 1,
			"had": 2,
			"an": 4,
			"understand": 1,
			"hold": 1,
			"stone": 1,
			"even": 1,
			"or": 1,
			"de": 5,
			"eye": 12,
			"tears": 1,
			"gave": 1,
			"making": 1,
			"their": 2,
			"a": 8,
			"true": 1,
			"never": 1,
			"spirit": 1,
			"hath": 1,
			"leave": 1,
			"love": 1,
			"on": 3,
			"saw": 1,
			"old": 19,
			"content": 1,
			"but": 1,
			"iron": 2,
			"infinite": 1,
			"brown": 1,
			"poor": 1,
			"empty": 6,
			"thee": 1,
			"when": 2,
			"april": 6,
			"eternal": 6,
			"honest": 10,
			"burst": 1,
			"felt": 1,
			"awful": 4,
			"earthly": 4,
			"close": 1,
			"and": 15,
			"order": 1,
			"mothers": 1,
			"truth": 1,
			"days": 1,
			"grave": 1,
			"i": 13,
			"unknown": 1,
			"thou": 2,
			"told": 1,
			"home": 1,
			"pay": 1,
			"here": 1,
			"too": 1,
			"one": 1,
			"between": 1,
			"chamber": 1,
			"such": 1,
			"how": 1,
			"from": 4,
			"mind": 1,
			"ill": 4,
			"endless": 4,
			"want": 1,
			"ancient": 2,
			"these": 1,
			"shield": 1,
			"breast": 2,
			"no": 2,
			"early": 4,
			"took": 1,
			"voice": 2,
			"with": 2,
			"everlasting": 1,
			"wave": 1,
			"now": 1,
			"some": 1,
			"strong": 1,
			"wore": 1,
			"all": 2,
			"chief": 1,
			"gay": 1,
			"then": 3,
			"slain": 1,
			"large": 1,
			"could": 1,
			"through": 1,
			"foe": 1,
			"thats": 1,
			"angels": 6,
			"king": 2,
			"couch": 1,
			"much": 1,
			"wake": 1,
			"nearer": 1,
			"our": 1,
			"open": 1,
			"equal": 6,
			"loved": 1,
			"echo": 5,
			"still": 2,
			"yet": 1,
			"to": 6,
			"youth": 2,
			"human": 1,
			"cut": 1,
			"keen": 1,
			"hence": 1,
			"ah": 2,
			"may": 1,
			"strife": 1,
			"eve": 1,
			"infant": 5,
			"whose": 1,
			"as": 1,
			"english": 7,
			"end": 14,
			"he": 5,
			"me": 13,
			"sat": 1,
			"flag": 1,
			"fancy": 1,
			"o": 1,
			"translation": 1,
			"the": 11,
			"ghost": 1,
			"theyre": 2,
			"world": 1,
			"stood": 1,
			"her": 1,
			"grand": 1,
			"fire": 1,
			"near": 1,
			"there": 2,
			"in": 15,
			"air": 2,
			"oak": 1
		},
		"repose": {
			"im": 1,
			"parting": 1,
			"his": 1,
			"who": 1,
			"which": 1,
			"of": 3,
			"like": 1,
			"for": 1,
			"my": 1,
			"that": 1,
			"a": 1,
			"on": 2,
			"above": 1,
			"but": 1,
			"and": 6,
			"here": 1,
			"beneath": 1,
			"thats": 1,
			"toil": 1,
			"our": 1,
			"to": 2,
			"springs": 1,
			"at": 1,
			"the": 6,
			"in": 1
		},
		"moon": {
			"sweet": 1,
			"tell": 1,
			"are": 1,
			"who": 1,
			"of": 1,
			"hung": 1,
			"daughter": 1,
			"she": 2,
			"nor": 1,
			"rose": 1,
			"divine": 1,
			"is": 2,
			"looked": 1,
			"like": 1,
			"takes": 1,
			"slow": 1,
			"for": 1,
			"drops": 1,
			"should": 1,
			"my": 1,
			"shines": 1,
			"sits": 2,
			"was": 2,
			"that": 2,
			"or": 5,
			"late": 1,
			"upon": 1,
			"never": 1,
			"on": 3,
			"but": 2,
			"until": 2,
			"be": 1,
			"and": 8,
			"dark": 1,
			"black": 1,
			"thou": 1,
			"looks": 1,
			"from": 1,
			"shone": 2,
			"will": 2,
			"doth": 1,
			"behind": 1,
			"mark": 1,
			"to": 2,
			"into": 1,
			"the": 6,
			"seems": 1,
			"in": 5
		},
		"front": {
			"which": 1,
			"of": 6,
			"like": 1,
			"they": 1,
			"where": 1,
			"for": 1,
			"so": 1,
			"them": 1,
			"when": 1,
			"line": 1,
			"and": 3,
			"from": 1,
			"would": 1,
			"with": 1,
			"all": 2,
			"to": 1,
			"we": 1,
			"o": 1,
			"the": 6,
			"stood": 1
		},
		"wait": {
			"within": 1,
			"loves": 1,
			"his": 2,
			"nor": 1,
			"by": 1,
			"like": 1,
			"for": 6,
			"thy": 1,
			"if": 1,
			"make": 1,
			"an": 2,
			"their": 1,
			"a": 1,
			"upon": 2,
			"on": 5,
			"but": 2,
			"wet": 1,
			"death": 1,
			"until": 1,
			"and": 3,
			"do": 1,
			"henry": 1,
			"with": 2,
			"through": 1,
			"our": 1,
			"before": 1,
			"your": 1,
			"to": 2,
			"he": 1,
			"me": 1,
			"the": 11,
			"in": 3
		},
		"understand": {
			"im": 1,
			"why": 1,
			"you": 1,
			"robert": 1,
			"its": 1,
			"theres": 1,
			"my": 1,
			"john": 1,
			"better": 1,
			"what": 1,
			"understand": 1,
			"a": 2,
			"and": 2,
			"i": 1,
			"he": 1,
			"the": 4
		},
		"hold": {
			"come": 1,
			"look": 1,
			"him": 3,
			"which": 1,
			"of": 9,
			"high": 1,
			"alike": 1,
			"up": 2,
			"not": 1,
			"it": 6,
			"over": 1,
			"by": 1,
			"hard": 1,
			"they": 1,
			"my": 3,
			"thy": 1,
			"least": 1,
			"that": 1,
			"if": 1,
			"reign": 1,
			"an": 3,
			"even": 1,
			"a": 8,
			"them": 1,
			"upon": 1,
			"on": 2,
			"but": 2,
			"thee": 2,
			"and": 3,
			"thou": 2,
			"down": 1,
			"whereer": 1,
			"how": 1,
			"with": 1,
			"strong": 1,
			"all": 2,
			"well": 1,
			"our": 3,
			"still": 5,
			"your": 2,
			"to": 2,
			"art": 1,
			"he": 2,
			"me": 3,
			"o": 2,
			"the": 12,
			"there": 1
		},
		"nothing": {
			"else": 3,
			"more": 2,
			"walks": 1,
			"save": 1,
			"seen": 1,
			"of": 2,
			"up": 1,
			"nor": 1,
			"by": 1,
			"long": 1,
			"is": 6,
			"like": 1,
			"either": 1,
			"they": 1,
			"you": 1,
			"for": 2,
			"past": 3,
			"lost": 1,
			"melancholy": 1,
			"desire": 1,
			"can": 4,
			"oer": 1,
			"did": 1,
			"that": 2,
			"if": 2,
			"make": 1,
			"had": 1,
			"gives": 1,
			"what": 1,
			"beautiful": 1,
			"nothing": 1,
			"have": 1,
			"a": 1,
			"so": 2,
			"true": 1,
			"on": 1,
			"break": 1,
			"but": 22,
			"felt": 1,
			"be": 1,
			"t": 1,
			"earthly": 1,
			"and": 2,
			"i": 1,
			"worthy": 1,
			"ill": 2,
			"with": 2,
			"give": 1,
			"could": 3,
			"thats": 1,
			"behind": 1,
			"wrong": 2,
			"ends": 2,
			"shall": 1,
			"before": 1,
			"to": 7,
			"prove": 1,
			"ah": 1,
			"may": 1,
			"as": 1,
			"done": 1,
			"said": 1,
			"he": 1,
			"at": 1,
			"left": 2,
			"the": 1,
			"sure": 1,
			"her": 1,
			"there": 2,
			"in": 6,
			"flowers": 1
		},
		"creatures": {
			"of": 1,
			"praise": 1,
			"kings": 1,
			"for": 1,
			"should": 1,
			"base": 1,
			"that": 1,
			"so": 2,
			"walk": 1,
			"lives": 1,
			"and": 1,
			"i": 1,
			"here": 1,
			"against": 1,
			"ways": 1,
			"as": 1,
			"at": 1,
			"o": 1,
			"the": 3,
			"in": 2
		},
		"stone": {
			"gates": 1,
			"seemed": 1,
			"fell": 1,
			"it": 2,
			"by": 5,
			"like": 2,
			"they": 2,
			"its": 1,
			"where": 1,
			"thy": 1,
			"walls": 2,
			"that": 5,
			"daily": 1,
			"half": 1,
			"or": 1,
			"so": 1,
			"on": 1,
			"but": 1,
			"and": 6,
			"i": 1,
			"here": 1,
			"too": 1,
			"might": 1,
			"from": 2,
			"beneath": 1,
			"with": 1,
			"around": 1,
			"now": 1,
			"set": 1,
			"all": 1,
			"to": 4,
			"knee": 1,
			"he": 1,
			"sat": 2,
			"the": 9,
			"though": 1,
			"stood": 1,
			"her": 1,
			"passed": 1,
			"there": 1,
			"in": 2
		},
		"stars": {
			"come": 3,
			"more": 1,
			"went": 1,
			"light": 1,
			"his": 1,
			"woe": 1,
			"are": 4,
			"which": 1,
			"hide": 1,
			"of": 6,
			"up": 1,
			"behold": 1,
			"burn": 1,
			"it": 1,
			"over": 1,
			"by": 1,
			"long": 1,
			"is": 1,
			"like": 1,
			"why": 2,
			"lead": 1,
			"together": 1,
			"they": 2,
			"heard": 1,
			"where": 1,
			"for": 1,
			"yes": 1,
			"can": 1,
			"were": 1,
			"that": 3,
			"if": 1,
			"go": 2,
			"or": 1,
			"start": 1,
			"bright": 2,
			"have": 3,
			"so": 2,
			"upon": 2,
			"never": 1,
			"met": 1,
			"on": 1,
			"above": 4,
			"but": 1,
			"when": 1,
			"be": 1,
			"and": 18,
			"dream": 1,
			"how": 1,
			"from": 1,
			"roll": 1,
			"with": 2,
			"shone": 1,
			"will": 1,
			"all": 1,
			"loving": 1,
			"through": 1,
			"shine": 2,
			"shall": 4,
			"only": 1,
			"to": 4,
			"turn": 1,
			"we": 1,
			"he": 2,
			"below": 1,
			"grow": 1,
			"arise": 1,
			"the": 6,
			"in": 8
		},
		"music": {
			"sweet": 1,
			"low": 1,
			"hear": 2,
			"thine": 1,
			"went": 1,
			"breathing": 1,
			"seemed": 1,
			"of": 13,
			"pour": 1,
			"food": 1,
			"joy": 1,
			"not": 1,
			"it": 1,
			"far": 1,
			"by": 1,
			"mute": 1,
			"is": 4,
			"soon": 1,
			"sway": 1,
			"they": 1,
			"for": 1,
			"bore": 1,
			"shines": 1,
			"rang": 1,
			"god": 1,
			"bears": 1,
			"oer": 1,
			"that": 5,
			"what": 1,
			"music": 1,
			"or": 1,
			"waiting": 1,
			"fill": 1,
			"upon": 1,
			"hath": 1,
			"on": 2,
			"charm": 2,
			"deep": 1,
			"but": 1,
			"gone": 1,
			"be": 2,
			"out": 2,
			"and": 6,
			"swell": 1,
			"from": 3,
			"with": 2,
			"around": 1,
			"soft": 1,
			"wave": 1,
			"will": 1,
			"all": 3,
			"could": 1,
			"shall": 1,
			"before": 1,
			"to": 3,
			"poetry": 1,
			"written": 1,
			"as": 2,
			"he": 1,
			"me": 1,
			"at": 1,
			"lies": 1,
			"o": 1,
			"the": 4,
			"though": 1,
			"oft": 1,
			"there": 1,
			"in": 10,
			"shed": 1
		},
		"pleasures": {
			"us": 1,
			"are": 1,
			"of": 6,
			"hymn": 1,
			"pain": 1,
			"every": 1,
			"like": 1,
			"you": 1,
			"did": 1,
			"that": 1,
			"make": 1,
			"but": 1,
			"and": 1,
			"i": 1,
			"now": 1,
			"day": 1,
			"to": 1,
			"round": 1,
			"lie": 1,
			"at": 1,
			"there": 2,
			"in": 1,
			"seem": 1
		},
		"even": {
			"dying": 1,
			"more": 2,
			"are": 1,
			"which": 1,
			"of": 1,
			"up": 1,
			"she": 3,
			"today": 1,
			"mean": 1,
			"like": 1,
			"away": 1,
			"its": 2,
			"those": 1,
			"where": 1,
			"for": 2,
			"my": 1,
			"again": 1,
			"thy": 1,
			"hope": 1,
			"rising": 1,
			"fools": 1,
			"god": 1,
			"that": 1,
			"an": 1,
			"or": 1,
			"a": 1,
			"so": 2,
			"on": 1,
			"poor": 1,
			"thee": 1,
			"when": 1,
			"gone": 1,
			"i": 1,
			"here": 1,
			"too": 1,
			"fought": 1,
			"such": 2,
			"hearts": 1,
			"from": 1,
			"gifts": 1,
			"would": 1,
			"these": 2,
			"while": 1,
			"calm": 1,
			"with": 3,
			"now": 8,
			"gods": 1,
			"our": 1,
			"shall": 1,
			"still": 1,
			"to": 5,
			"flow": 1,
			"as": 13,
			"he": 1,
			"at": 3,
			"the": 5,
			"though": 1,
			"her": 2,
			"in": 11
		},
		"charms": {
			"are": 1,
			"of": 3,
			"by": 1,
			"strike": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"when": 1,
			"and": 2,
			"i": 1,
			"living": 1,
			"yet": 1,
			"to": 4,
			"we": 1,
			"the": 2,
			"world": 1
		},
		"or": {
			"perchance": 1,
			"flower": 1,
			"blue": 2,
			"come": 2,
			"sound": 3,
			"else": 9,
			"fled": 1,
			"dying": 1,
			"look": 2,
			"summer": 2,
			"itself": 1,
			"more": 3,
			"hear": 1,
			"walks": 1,
			"since": 1,
			"lot": 1,
			"england": 1,
			"wish": 2,
			"river": 1,
			"light": 2,
			"earth": 1,
			"pen": 1,
			"doubt": 1,
			"pine": 1,
			"die": 11,
			"cloud": 3,
			"his": 7,
			"stream": 1,
			"hell": 1,
			"him": 4,
			"crest": 1,
			"crossed": 1,
			"see": 4,
			"lady": 1,
			"kiss": 2,
			"women": 1,
			"creed": 1,
			"glen": 1,
			"none": 1,
			"woe": 3,
			"silver": 2,
			"tell": 1,
			"war": 1,
			"wonder": 1,
			"seemed": 1,
			"fears": 1,
			"right": 1,
			"back": 1,
			"warm": 1,
			"under": 1,
			"who": 8,
			"seen": 2,
			"gate": 1,
			"which": 2,
			"deeds": 1,
			"call": 1,
			"of": 26,
			"this": 3,
			"cast": 1,
			"star": 1,
			"rude": 1,
			"worlds": 1,
			"fame": 2,
			"yield": 1,
			"hung": 1,
			"feels": 1,
			"up": 1,
			"triumph": 1,
			"tide": 2,
			"she": 1,
			"find": 1,
			"gold": 5,
			"three": 5,
			"act": 1,
			"age": 2,
			"joy": 1,
			"forth": 2,
			"fruit": 1,
			"bird": 2,
			"scorn": 2,
			"two": 6,
			"pain": 1,
			"thick": 1,
			"chant": 1,
			"sick": 2,
			"rose": 1,
			"aught": 2,
			"mine": 2,
			"solemn": 1,
			"not": 10,
			"divine": 1,
			"praise": 1,
			"sword": 1,
			"it": 4,
			"evil": 2,
			"over": 1,
			"smooth": 2,
			"shake": 1,
			"flight": 1,
			"health": 1,
			"bless": 1,
			"weep": 1,
			"ease": 1,
			"by": 13,
			"try": 1,
			"eyes": 1,
			"jove": 2,
			"long": 2,
			"fountain": 2,
			"bring": 1,
			"mute": 1,
			"something": 1,
			"bind": 1,
			"cold": 2,
			"land": 3,
			"wise": 1,
			"is": 4,
			"soon": 1,
			"glittering": 1,
			"rise": 1,
			"few": 1,
			"like": 17,
			"boy": 1,
			"why": 2,
			"kings": 2,
			"good": 2,
			"care": 5,
			"together": 1,
			"about": 1,
			"they": 1,
			"speech": 1,
			"prayer": 2,
			"grain": 1,
			"nature": 2,
			"stern": 1,
			"mother": 1,
			"grant": 1,
			"thus": 1,
			"pale": 1,
			"seven": 1,
			"new": 2,
			"nay": 1,
			"rosy": 1,
			"without": 2,
			"robert": 1,
			"than": 2,
			"slow": 1,
			"pleasure": 1,
			"een": 1,
			"song": 1,
			"those": 2,
			"sea": 2,
			"where": 9,
			"despair": 1,
			"holy": 1,
			"summers": 2,
			"gray": 2,
			"for": 6,
			"read": 1,
			"hand": 1,
			"heaven": 2,
			"frost": 1,
			"catch": 1,
			"clime": 1,
			"should": 2,
			"surprise": 2,
			"worse": 2,
			"speak": 1,
			"breath": 1,
			"boys": 1,
			"my": 5,
			"blow": 2,
			"whats": 1,
			"hour": 1,
			"great": 1,
			"sighing": 1,
			"short": 3,
			"burning": 1,
			"forgot": 3,
			"thy": 4,
			"smiles": 1,
			"sleep": 4,
			"teach": 3,
			"tone": 1,
			"comes": 1,
			"ere": 2,
			"hopes": 1,
			"shore": 1,
			"soul": 1,
			"passion": 1,
			"hope": 3,
			"wear": 1,
			"seek": 1,
			"rough": 1,
			"any": 4,
			"name": 1,
			"clay": 1,
			"battles": 1,
			"rain": 2,
			"whether": 6,
			"can": 2,
			"shame": 2,
			"were": 2,
			"comfort": 1,
			"oer": 3,
			"need": 1,
			"did": 1,
			"was": 3,
			"runs": 1,
			"that": 19,
			"if": 10,
			"let": 4,
			"show": 2,
			"lips": 1,
			"arm": 1,
			"man": 4,
			"bear": 1,
			"both": 2,
			"another": 2,
			"says": 1,
			"taste": 2,
			"embrace": 1,
			"leaf": 1,
			"make": 2,
			"victory": 1,
			"fall": 4,
			"busy": 1,
			"go": 2,
			"tear": 2,
			"had": 2,
			"climb": 1,
			"what": 5,
			"an": 1,
			"moon": 1,
			"stars": 2,
			"pleasures": 1,
			"or": 16,
			"think": 2,
			"start": 1,
			"bright": 2,
			"have": 3,
			"late": 3,
			"tree": 2,
			"am": 2,
			"tears": 1,
			"isle": 1,
			"bitter": 1,
			"their": 3,
			"a": 29,
			"so": 7,
			"pains": 1,
			"heat": 1,
			"them": 3,
			"true": 3,
			"green": 2,
			"lay": 1,
			"lord": 1,
			"never": 3,
			"hath": 1,
			"leave": 2,
			"walk": 1,
			"whence": 1,
			"love": 1,
			"on": 7,
			"saw": 1,
			"bend": 1,
			"break": 2,
			"feast": 2,
			"old": 3,
			"naked": 1,
			"but": 8,
			"death": 11,
			"time": 1,
			"poor": 1,
			"thee": 1,
			"ye": 1,
			"canst": 1,
			"years": 1,
			"when": 11,
			"gone": 1,
			"deed": 1,
			"turns": 1,
			"merry": 1,
			"sigh": 1,
			"dreams": 3,
			"felt": 1,
			"be": 6,
			"whittier": 1,
			"merit": 1,
			"feet": 1,
			"t": 2,
			"out": 1,
			"rhyme": 1,
			"brave": 1,
			"heart": 1,
			"say": 2,
			"sorrow": 3,
			"close": 1,
			"and": 7,
			"eer": 1,
			"whateer": 1,
			"mothers": 1,
			"grace": 1,
			"sun": 3,
			"do": 4,
			"dark": 1,
			"last": 1,
			"west": 1,
			"move": 1,
			"cries": 2,
			"dream": 1,
			"fate": 1,
			"wounded": 1,
			"grave": 3,
			"i": 8,
			"knew": 1,
			"snow": 1,
			"thou": 3,
			"woman": 1,
			"down": 1,
			"told": 1,
			"less": 2,
			"western": 1,
			"bad": 2,
			"pay": 1,
			"here": 1,
			"south": 1,
			"too": 4,
			"one": 3,
			"such": 1,
			"shining": 1,
			"draw": 1,
			"hate": 2,
			"tall": 1,
			"stands": 1,
			"rather": 2,
			"saint": 2,
			"each": 1,
			"how": 4,
			"from": 7,
			"drink": 1,
			"would": 1,
			"living": 1,
			"lilies": 1,
			"feeling": 1,
			"ill": 5,
			"want": 2,
			"beneath": 2,
			"shield": 1,
			"honor": 1,
			"no": 6,
			"bound": 1,
			"calm": 2,
			"voice": 3,
			"sand": 2,
			"with": 14,
			"sad": 1,
			"soft": 1,
			"wave": 3,
			"now": 1,
			"set": 1,
			"give": 1,
			"some": 5,
			"till": 1,
			"will": 4,
			"strong": 1,
			"all": 6,
			"gale": 1,
			"lose": 3,
			"blest": 1,
			"thought": 4,
			"through": 1,
			"foe": 2,
			"toil": 1,
			"angels": 1,
			"king": 1,
			"lake": 1,
			"guess": 1,
			"dost": 1,
			"being": 3,
			"wealth": 2,
			"our": 3,
			"throne": 1,
			"wrong": 2,
			"day": 2,
			"sense": 1,
			"walked": 1,
			"feel": 2,
			"open": 1,
			"neer": 2,
			"future": 1,
			"fear": 3,
			"night": 1,
			"needs": 1,
			"fallen": 1,
			"stay": 1,
			"shall": 1,
			"before": 1,
			"only": 1,
			"golden": 1,
			"still": 2,
			"your": 3,
			"shade": 1,
			"yet": 3,
			"best": 1,
			"way": 2,
			"to": 35,
			"loud": 1,
			"hill": 1,
			"clouds": 1,
			"speed": 1,
			"into": 3,
			"cut": 1,
			"flame": 1,
			"little": 2,
			"live": 3,
			"freedoms": 1,
			"hence": 1,
			"view": 3,
			"get": 1,
			"know": 1,
			"may": 1,
			"hail": 1,
			"strife": 1,
			"withered": 1,
			"sign": 1,
			"skies": 1,
			"we": 2,
			"glad": 1,
			"loss": 2,
			"store": 1,
			"whose": 1,
			"as": 10,
			"fair": 2,
			"heavens": 1,
			"stand": 2,
			"life": 1,
			"he": 6,
			"me": 6,
			"at": 11,
			"fancy": 1,
			"straight": 1,
			"slumber": 2,
			"frown": 2,
			"wound": 1,
			"led": 1,
			"o": 1,
			"east": 1,
			"left": 2,
			"common": 1,
			"the": 71,
			"ghost": 1,
			"though": 2,
			"her": 2,
			"share": 1,
			"change": 3,
			"young": 3,
			"dead": 2,
			"fire": 3,
			"near": 2,
			"there": 4,
			"in": 40,
			"flowers": 1,
			"air": 2
		},
		"waiting": {
			"star": 1,
			"serene": 1,
			"eyes": 2,
			"together": 1,
			"for": 9,
			"my": 1,
			"again": 2,
			"a": 2,
			"upon": 2,
			"on": 2,
			"and": 1,
			"here": 1,
			"stands": 1,
			"while": 1,
			"till": 6,
			"only": 2,
			"to": 5,
			"he": 1,
			"o": 1,
			"blessed": 1,
			"the": 11,
			"there": 3,
			"north": 1
		},
		"conscience": {
			"made": 1,
			"of": 3,
			"find": 1,
			"does": 1,
			"whatever": 1,
			"not": 1,
			"is": 3,
			"despair": 1,
			"for": 1,
			"my": 1,
			"makes": 1,
			"friend": 1,
			"cried": 1,
			"what": 1,
			"conscience": 1,
			"have": 1,
			"a": 1,
			"hath": 1,
			"mans": 1,
			"and": 2,
			"i": 1,
			"how": 1,
			"from": 1,
			"no": 1,
			"calm": 1,
			"himself": 1,
			"to": 3,
			"into": 1,
			"as": 1
		},
		"field": {
			"his": 2,
			"him": 1,
			"fit": 1,
			"which": 2,
			"of": 22,
			"once": 1,
			"she": 1,
			"command": 1,
			"by": 1,
			"try": 1,
			"alone": 1,
			"is": 3,
			"they": 1,
			"than": 1,
			"where": 4,
			"for": 3,
			"was": 3,
			"or": 2,
			"their": 1,
			"hath": 1,
			"when": 1,
			"be": 1,
			"glory": 1,
			"and": 12,
			"i": 2,
			"one": 1,
			"rather": 1,
			"from": 2,
			"beneath": 1,
			"no": 1,
			"with": 2,
			"some": 1,
			"our": 1,
			"to": 2,
			"borne": 1,
			"he": 2,
			"the": 5,
			"in": 1,
			"flowers": 1
		},
		"think": {
			"low": 1,
			"us": 1,
			"im": 1,
			"his": 1,
			"him": 4,
			"s": 1,
			"ive": 1,
			"who": 1,
			"of": 25,
			"this": 1,
			"she": 1,
			"nor": 1,
			"scorn": 1,
			"not": 5,
			"it": 7,
			"father": 1,
			"is": 1,
			"good": 1,
			"they": 1,
			"you": 2,
			"for": 1,
			"theres": 1,
			"tomorrow": 1,
			"my": 3,
			"forgot": 1,
			"was": 1,
			"that": 12,
			"must": 2,
			"what": 3,
			"or": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"sometimes": 1,
			"upon": 1,
			"on": 7,
			"but": 1,
			"perhaps": 1,
			"thee": 1,
			"ye": 3,
			"when": 4,
			"gone": 1,
			"naught": 1,
			"and": 2,
			"i": 5,
			"such": 1,
			"how": 10,
			"from": 2,
			"while": 1,
			"no": 1,
			"with": 1,
			"himself": 1,
			"all": 1,
			"through": 2,
			"our": 1,
			"patience": 1,
			"to": 4,
			"gently": 1,
			"we": 1,
			"he": 3,
			"o": 3,
			"the": 8,
			"though": 2,
			"her": 1,
			"there": 1,
			"thoughts": 1
		},
		"ran": {
			"itself": 1,
			"his": 2,
			"up": 1,
			"off": 1,
			"lightning": 1,
			"over": 1,
			"by": 1,
			"away": 1,
			"they": 1,
			"for": 2,
			"forgot": 1,
			"sir": 1,
			"oer": 1,
			"sae": 1,
			"on": 1,
			"with": 2,
			"through": 4,
			"before": 1,
			"to": 2,
			"he": 1,
			"the": 4,
			"in": 1
		},
		"de": {
			"come": 2,
			"look": 1,
			"his": 1,
			"of": 1,
			"she": 1,
			"anonymous": 1,
			"sheep": 2,
			"goes": 1,
			"place": 1,
			"far": 1,
			"long": 2,
			"is": 1,
			"farewell": 1,
			"run": 4,
			"flung": 1,
			"queen": 1,
			"was": 1,
			"thin": 1,
			"an": 6,
			"de": 14,
			"moved": 1,
			"am": 1,
			"a": 1,
			"so": 1,
			"lay": 1,
			"whole": 1,
			"on": 2,
			"old": 5,
			"when": 1,
			"vere": 14,
			"and": 2,
			"down": 1,
			"broke": 1,
			"one": 1,
			"some": 2,
			"all": 5,
			"songs": 1,
			"well": 1,
			"road": 1,
			"smoke": 1,
			"night": 1,
			"stay": 4,
			"wood": 1,
			"little": 1,
			"he": 2,
			"translation": 4,
			"the": 3,
			"world": 2
		},
		"finds": {
			"free": 1,
			"his": 3,
			"it": 1,
			"its": 2,
			"rest": 1,
			"that": 1,
			"a": 4,
			"but": 1,
			"mans": 1,
			"and": 2,
			"too": 1,
			"with": 1,
			"some": 2,
			"mark": 1,
			"the": 2,
			"there": 1,
			"in": 3
		},
		"eye": {
			"blue": 1,
			"look": 1,
			"hear": 1,
			"his": 4,
			"alas": 1,
			"back": 1,
			"who": 1,
			"of": 19,
			"this": 2,
			"yield": 1,
			"she": 1,
			"among": 1,
			"beyond": 1,
			"nor": 1,
			"grew": 1,
			"lightning": 1,
			"goes": 1,
			"serene": 1,
			"mine": 1,
			"it": 1,
			"over": 1,
			"by": 3,
			"long": 1,
			"is": 12,
			"like": 3,
			"why": 1,
			"hark": 1,
			"they": 3,
			"wide": 1,
			"nay": 1,
			"een": 1,
			"where": 1,
			"small": 1,
			"rolled": 1,
			"for": 5,
			"should": 2,
			"great": 1,
			"thy": 2,
			"seek": 1,
			"along": 1,
			"bears": 1,
			"did": 1,
			"was": 2,
			"that": 10,
			"another": 1,
			"says": 1,
			"trust": 1,
			"had": 3,
			"what": 1,
			"an": 2,
			"or": 1,
			"eye": 1,
			"bright": 1,
			"their": 1,
			"a": 5,
			"so": 1,
			"sometimes": 1,
			"true": 2,
			"upon": 1,
			"hath": 1,
			"love": 1,
			"on": 2,
			"saw": 1,
			"charm": 1,
			"but": 8,
			"when": 5,
			"lifes": 1,
			"be": 2,
			"t": 1,
			"heart": 1,
			"and": 28,
			"i": 6,
			"too": 1,
			"one": 1,
			"looks": 1,
			"from": 1,
			"sought": 1,
			"would": 1,
			"while": 1,
			"no": 2,
			"with": 6,
			"some": 1,
			"shone": 1,
			"could": 5,
			"has": 3,
			"fortune": 1,
			"shall": 2,
			"natures": 1,
			"yet": 2,
			"mark": 1,
			"to": 7,
			"youth": 1,
			"ah": 1,
			"may": 1,
			"th": 1,
			"hail": 1,
			"whose": 2,
			"as": 4,
			"fair": 2,
			"life": 1,
			"he": 1,
			"me": 2,
			"flag": 1,
			"o": 1,
			"grow": 1,
			"the": 16,
			"her": 1,
			"there": 1,
			"in": 2,
			"grows": 2
		},
		"soil": {
			"free": 1,
			"his": 1,
			"of": 5,
			"nor": 1,
			"they": 1,
			"where": 4,
			"most": 1,
			"that": 1,
			"let": 1,
			"hath": 1,
			"and": 2,
			"from": 1,
			"beneath": 1,
			"these": 1,
			"till": 1,
			"shall": 1,
			"to": 1,
			"o": 1,
			"the": 2,
			"in": 2
		},
		"lest": {
			"precious": 1,
			"men": 1,
			"nor": 1,
			"it": 2,
			"they": 4,
			"worse": 1,
			"my": 1,
			"thy": 1,
			"passion": 1,
			"sudden": 1,
			"that": 1,
			"eye": 1,
			"ye": 1,
			"and": 1,
			"i": 4,
			"thou": 3,
			"with": 1,
			"some": 1,
			"follow": 1,
			"our": 1,
			"mid": 1,
			"we": 4,
			"he": 2,
			"arms": 1,
			"the": 1,
			"in": 1
		},
		"wilt": {
			"find": 1,
			"not": 5,
			"weep": 1,
			"is": 1,
			"away": 1,
			"remain": 1,
			"thy": 1,
			"watch": 1,
			"let": 1,
			"bear": 1,
			"but": 1,
			"when": 1,
			"be": 1,
			"thou": 25,
			"less": 1,
			"while": 1,
			"scarce": 1
		},
		"sweeter": {
			"laws": 1,
			"pine": 1,
			"none": 1,
			"aid": 1,
			"of": 1,
			"spot": 3,
			"sings": 1,
			"far": 2,
			"sod": 1,
			"is": 1,
			"than": 4,
			"sweeter": 1,
			"when": 1,
			"and": 1,
			"breathes": 1,
			"from": 2,
			"much": 1,
			"still": 2,
			"strain": 1,
			"the": 2
		},
		"start": {
			"not": 1,
			"away": 1,
			"for": 2,
			"my": 1,
			"a": 1,
			"but": 2,
			"when": 1,
			"close": 1,
			"and": 2,
			"looks": 1,
			"from": 2,
			"no": 1,
			"to": 1,
			"into": 1,
			"at": 2,
			"the": 2
		},
		"moved": {
			"his": 1,
			"him": 1,
			"nor": 1,
			"not": 1,
			"by": 1,
			"is": 1,
			"about": 1,
			"for": 1,
			"forward": 1,
			"if": 1,
			"what": 1,
			"an": 1,
			"their": 1,
			"a": 1,
			"them": 1,
			"sometimes": 1,
			"on": 1,
			"be": 1,
			"out": 1,
			"and": 1,
			"with": 1,
			"to": 3,
			"into": 1,
			"round": 1,
			"as": 1,
			"at": 1
		},
		"hands": {
			"come": 1,
			"blessd": 1,
			"fierce": 1,
			"his": 2,
			"crossed": 1,
			"weary": 1,
			"are": 7,
			"who": 1,
			"of": 7,
			"this": 1,
			"hung": 1,
			"off": 1,
			"two": 1,
			"serene": 1,
			"lift": 1,
			"every": 1,
			"far": 1,
			"like": 1,
			"together": 2,
			"swept": 1,
			"than": 1,
			"where": 1,
			"for": 1,
			"stones": 1,
			"my": 1,
			"thy": 1,
			"wept": 1,
			"reach": 1,
			"stretched": 1,
			"were": 2,
			"did": 1,
			"was": 1,
			"that": 8,
			"let": 2,
			"full": 1,
			"had": 1,
			"must": 1,
			"hands": 1,
			"their": 2,
			"so": 3,
			"upon": 3,
			"on": 2,
			"when": 1,
			"be": 1,
			"out": 1,
			"and": 21,
			"thou": 1,
			"down": 1,
			"how": 1,
			"would": 1,
			"ill": 1,
			"these": 1,
			"while": 1,
			"with": 3,
			"some": 1,
			"all": 7,
			"then": 2,
			"behind": 1,
			"passing": 1,
			"shall": 1,
			"before": 1,
			"yet": 1,
			"to": 7,
			"may": 1,
			"whose": 1,
			"as": 4,
			"he": 2,
			"at": 3,
			"the": 11,
			"her": 1,
			"in": 7
		},
		"pause": {
			"of": 2,
			"up": 1,
			"where": 2,
			"theres": 1,
			"again": 1,
			"ere": 1,
			"or": 2,
			"on": 1,
			"and": 3,
			"between": 1,
			"while": 1,
			"no": 1,
			"with": 1,
			"to": 4,
			"in": 1
		},
		"bright": {
			"blue": 2,
			"look": 1,
			"summer": 1,
			"within": 1,
			"light": 1,
			"cloud": 1,
			"st": 1,
			"see": 1,
			"thing": 1,
			"are": 1,
			"toward": 1,
			"of": 10,
			"star": 1,
			"she": 2,
			"gold": 2,
			"morning": 1,
			"scorn": 1,
			"brother": 1,
			"rapture": 1,
			"hours": 1,
			"it": 1,
			"army": 1,
			"image": 1,
			"by": 1,
			"eyes": 7,
			"eternity": 1,
			"like": 1,
			"hurrah": 1,
			"ocean": 1,
			"beams": 2,
			"for": 1,
			"suns": 1,
			"my": 2,
			"thy": 1,
			"hopes": 1,
			"yellow": 1,
			"rising": 1,
			"glow": 1,
			"face": 1,
			"dew": 1,
			"were": 1,
			"oer": 1,
			"was": 2,
			"that": 6,
			"let": 1,
			"full": 1,
			"must": 1,
			"stars": 2,
			"or": 1,
			"eye": 2,
			"have": 2,
			"a": 1,
			"sometimes": 1,
			"things": 1,
			"whence": 1,
			"on": 3,
			"above": 1,
			"celestial": 1,
			"filled": 1,
			"but": 1,
			"death": 1,
			"when": 1,
			"dreams": 2,
			"be": 1,
			"wings": 1,
			"t": 1,
			"and": 28,
			"sun": 5,
			"sunshine": 1,
			"dream": 1,
			"i": 2,
			"depths": 1,
			"here": 1,
			"too": 1,
			"steel": 1,
			"one": 1,
			"such": 1,
			"shining": 1,
			"fatherland": 1,
			"shadows": 1,
			"blossom": 1,
			"fields": 2,
			"other": 1,
			"from": 1,
			"while": 1,
			"honor": 1,
			"no": 3,
			"calm": 1,
			"with": 15,
			"will": 1,
			"all": 1,
			"gods": 1,
			"ho": 1,
			"through": 1,
			"angels": 1,
			"well": 1,
			"spring": 1,
			"throne": 2,
			"day": 4,
			"neer": 1,
			"shall": 1,
			"before": 1,
			"still": 1,
			"to": 3,
			"round": 1,
			"may": 2,
			"as": 7,
			"he": 1,
			"me": 1,
			"fancy": 1,
			"the": 9,
			"though": 1,
			"world": 1,
			"her": 1,
			"radiant": 1,
			"young": 1,
			"there": 1,
			"in": 9
		},
		"have": {
			"sweet": 2,
			"come": 6,
			"caught": 1,
			"fled": 6,
			"us": 4,
			"more": 6,
			"sent": 1,
			"wrought": 1,
			"won": 3,
			"died": 6,
			"within": 2,
			"touched": 1,
			"his": 4,
			"struck": 2,
			"him": 1,
			"crossed": 3,
			"faithful": 1,
			"none": 3,
			"hast": 1,
			"woe": 1,
			"surely": 1,
			"weary": 1,
			"seemed": 1,
			"are": 1,
			"made": 6,
			"who": 1,
			"seen": 15,
			"men": 1,
			"of": 2,
			"this": 1,
			"cast": 3,
			"high": 1,
			"hung": 1,
			"kept": 3,
			"once": 2,
			"off": 1,
			"liberty": 1,
			"nor": 2,
			"sight": 2,
			"grown": 3,
			"played": 1,
			"two": 1,
			"pain": 1,
			"part": 1,
			"not": 22,
			"pressed": 1,
			"it": 11,
			"neither": 1,
			"spirits": 1,
			"brought": 4,
			"by": 1,
			"long": 5,
			"something": 1,
			"is": 2,
			"looked": 3,
			"like": 1,
			"away": 1,
			"found": 5,
			"children": 1,
			"sung": 4,
			"kings": 1,
			"forever": 1,
			"force": 1,
			"ever": 5,
			"care": 1,
			"they": 6,
			"you": 7,
			"thus": 1,
			"swept": 1,
			"nay": 1,
			"heard": 10,
			"laid": 1,
			"its": 1,
			"than": 4,
			"yea": 1,
			"richard": 1,
			"run": 1,
			"rolled": 1,
			"holy": 1,
			"just": 1,
			"for": 4,
			"blown": 3,
			"past": 1,
			"read": 1,
			"heaven": 1,
			"become": 1,
			"lost": 5,
			"bloody": 1,
			"bowed": 1,
			"breath": 1,
			"rest": 1,
			"my": 11,
			"spent": 2,
			"words": 1,
			"great": 1,
			"themselves": 1,
			"forgot": 1,
			"freedom": 1,
			"thy": 5,
			"hushed": 1,
			"wept": 3,
			"ere": 1,
			"better": 1,
			"born": 1,
			"most": 1,
			"torn": 2,
			"fools": 1,
			"longer": 1,
			"closed": 1,
			"power": 9,
			"need": 2,
			"that": 3,
			"another": 1,
			"always": 1,
			"often": 1,
			"cried": 1,
			"rode": 1,
			"had": 3,
			"an": 3,
			"nothing": 3,
			"or": 2,
			"moved": 1,
			"trod": 2,
			"their": 15,
			"a": 27,
			"so": 4,
			"given": 4,
			"them": 5,
			"sometimes": 1,
			"joys": 1,
			"upon": 1,
			"never": 6,
			"ceased": 2,
			"many": 2,
			"almost": 1,
			"met": 2,
			"whence": 1,
			"but": 11,
			"knowledge": 1,
			"time": 1,
			"perhaps": 1,
			"known": 9,
			"thee": 2,
			"ye": 6,
			"when": 4,
			"gone": 7,
			"burst": 1,
			"felt": 4,
			"merit": 1,
			"feet": 1,
			"watched": 1,
			"naught": 2,
			"and": 13,
			"grace": 2,
			"truth": 1,
			"do": 1,
			"hid": 1,
			"i": 27,
			"thou": 2,
			"told": 2,
			"here": 2,
			"too": 1,
			"fought": 1,
			"one": 2,
			"between": 1,
			"such": 2,
			"each": 4,
			"how": 1,
			"sought": 2,
			"reason": 1,
			"these": 1,
			"no": 29,
			"bound": 1,
			"called": 2,
			"ears": 1,
			"with": 2,
			"around": 1,
			"now": 2,
			"set": 2,
			"some": 3,
			"shone": 2,
			"learned": 5,
			"till": 2,
			"all": 9,
			"then": 1,
			"thought": 3,
			"could": 1,
			"through": 1,
			"well": 1,
			"spoke": 1,
			"king": 1,
			"turned": 1,
			"our": 3,
			"gathered": 1,
			"page": 1,
			"equal": 2,
			"ends": 1,
			"fallen": 1,
			"mercy": 3,
			"loved": 7,
			"golden": 1,
			"still": 2,
			"your": 5,
			"mingled": 1,
			"yet": 1,
			"way": 1,
			"to": 17,
			"wandered": 2,
			"cut": 1,
			"little": 1,
			"written": 1,
			"get": 1,
			"lived": 3,
			"we": 8,
			"as": 3,
			"borne": 5,
			"heavens": 1,
			"done": 10,
			"said": 4,
			"life": 2,
			"end": 1,
			"he": 3,
			"me": 3,
			"sat": 1,
			"led": 2,
			"weight": 1,
			"left": 11,
			"blessed": 1,
			"the": 41,
			"tis": 2,
			"stood": 1,
			"drawn": 2,
			"her": 4,
			"passed": 13,
			"been": 57,
			"in": 7,
			"shed": 3
		},
		"study": {
			"which": 1,
			"of": 7,
			"not": 1,
			"it": 1,
			"alone": 1,
			"is": 1,
			"than": 1,
			"those": 1,
			"indeed": 1,
			"let": 1,
			"must": 1,
			"what": 1,
			"study": 1,
			"a": 2,
			"so": 1,
			"deep": 1,
			"but": 1,
			"and": 2,
			"such": 1,
			"then": 1,
			"yet": 1,
			"to": 2,
			"poetry": 1,
			"poets": 1,
			"may": 1,
			"we": 1,
			"the": 2,
			"in": 3
		},
		"late": {
			"fled": 1,
			"wi": 1,
			"of": 1,
			"she": 2,
			"not": 1,
			"they": 2,
			"for": 1,
			"theres": 3,
			"that": 1,
			"late": 3,
			"their": 1,
			"a": 2,
			"so": 2,
			"but": 1,
			"ye": 4,
			"be": 1,
			"and": 7,
			"i": 1,
			"too": 3,
			"from": 1,
			"with": 1,
			"then": 1,
			"to": 1,
			"he": 1,
			"at": 1,
			"coming": 1,
			"the": 4,
			"dead": 1,
			"in": 2
		},
		"tree": {
			"summer": 1,
			"loves": 1,
			"beside": 1,
			"fell": 1,
			"next": 1,
			"which": 1,
			"of": 5,
			"nor": 1,
			"fruit": 1,
			"over": 1,
			"by": 2,
			"is": 1,
			"like": 1,
			"hark": 1,
			"they": 1,
			"thus": 1,
			"welcome": 1,
			"can": 1,
			"that": 2,
			"another": 1,
			"what": 1,
			"an": 1,
			"or": 2,
			"a": 2,
			"love": 1,
			"but": 5,
			"and": 9,
			"last": 1,
			"i": 1,
			"thou": 1,
			"one": 2,
			"against": 1,
			"beneath": 1,
			"no": 1,
			"will": 1,
			"thomas": 1,
			"our": 1,
			"still": 1,
			"we": 1,
			"whose": 2,
			"o": 3,
			"the": 4,
			"in": 6
		},
		"blush": {
			"unseen": 1,
			"who": 1,
			"which": 1,
			"of": 1,
			"for": 3,
			"that": 1,
			"them": 1,
			"sometimes": 1,
			"upon": 1,
			"and": 4,
			"here": 1,
			"while": 1,
			"our": 1,
			"before": 1,
			"to": 2,
			"as": 1,
			"happy": 1
		},
		"am": {
			"dying": 6,
			"ready": 3,
			"dust": 1,
			"free": 2,
			"his": 1,
			"hell": 1,
			"weary": 3,
			"right": 1,
			"warm": 2,
			"very": 1,
			"of": 3,
			"blind": 1,
			"up": 1,
			"sick": 2,
			"mine": 1,
			"not": 11,
			"constant": 1,
			"every": 1,
			"far": 1,
			"by": 1,
			"long": 1,
			"something": 1,
			"is": 2,
			"native": 1,
			"run": 1,
			"for": 1,
			"past": 1,
			"lost": 1,
			"my": 4,
			"thy": 2,
			"better": 1,
			"rough": 1,
			"stretched": 1,
			"that": 2,
			"what": 1,
			"an": 2,
			"nothing": 2,
			"even": 1,
			"waiting": 1,
			"have": 1,
			"their": 1,
			"a": 4,
			"so": 2,
			"love": 1,
			"on": 1,
			"fast": 1,
			"old": 5,
			"but": 5,
			"poor": 1,
			"ye": 1,
			"when": 1,
			"gone": 3,
			"and": 5,
			"i": 31,
			"down": 1,
			"here": 1,
			"too": 1,
			"one": 3,
			"from": 2,
			"would": 1,
			"no": 1,
			"bound": 1,
			"called": 1,
			"guilty": 1,
			"singing": 1,
			"sad": 3,
			"now": 1,
			"strong": 2,
			"all": 1,
			"blest": 1,
			"through": 1,
			"mount": 1,
			"turned": 1,
			"nearer": 2,
			"our": 1,
			"wrong": 2,
			"loved": 1,
			"still": 1,
			"your": 1,
			"to": 3,
			"cut": 1,
			"glad": 1,
			"as": 3,
			"happy": 1,
			"he": 5,
			"o": 1,
			"left": 1,
			"the": 13,
			"tis": 1,
			"safe": 2,
			"weak": 2,
			"dead": 1,
			"there": 1,
			"lowly": 1,
			"in": 2
		},
		"tears": {
			"sweet": 1,
			"are": 5,
			"alas": 1,
			"which": 1,
			"of": 7,
			"this": 1,
			"amid": 1,
			"alike": 1,
			"off": 1,
			"nor": 1,
			"forth": 1,
			"dear": 1,
			"two": 1,
			"by": 2,
			"mute": 1,
			"like": 5,
			"away": 4,
			"idle": 2,
			"forever": 1,
			"they": 6,
			"nay": 1,
			"where": 1,
			"for": 6,
			"should": 1,
			"cannot": 1,
			"again": 1,
			"yes": 1,
			"cease": 1,
			"william": 1,
			"were": 2,
			"that": 14,
			"if": 1,
			"drop": 2,
			"half": 1,
			"must": 1,
			"pure": 1,
			"what": 3,
			"oh": 1,
			"or": 2,
			"have": 2,
			"so": 4,
			"upon": 1,
			"leave": 1,
			"on": 2,
			"but": 3,
			"rushed": 1,
			"time": 1,
			"thank": 1,
			"be": 1,
			"t": 1,
			"and": 20,
			"do": 1,
			"i": 7,
			"thou": 1,
			"down": 1,
			"one": 1,
			"such": 1,
			"each": 1,
			"from": 4,
			"would": 2,
			"ill": 2,
			"no": 2,
			"with": 1,
			"will": 4,
			"all": 2,
			"our": 1,
			"shall": 2,
			"your": 1,
			"to": 4,
			"flow": 1,
			"may": 1,
			"apart": 1,
			"yon": 1,
			"we": 2,
			"as": 3,
			"at": 1,
			"o": 1,
			"the": 13,
			"her": 2,
			"there": 3,
			"in": 6
		},
		"gave": {
			"us": 6,
			"his": 2,
			"him": 4,
			"of": 1,
			"this": 2,
			"alike": 1,
			"up": 1,
			"shakespeare": 1,
			"two": 1,
			"place": 1,
			"it": 7,
			"why": 1,
			"you": 1,
			"its": 3,
			"my": 5,
			"enough": 1,
			"therefore": 1,
			"that": 2,
			"or": 1,
			"think": 1,
			"their": 2,
			"a": 2,
			"them": 3,
			"but": 1,
			"iron": 1,
			"thee": 2,
			"ye": 1,
			"say": 1,
			"and": 4,
			"myself": 1,
			"such": 1,
			"from": 1,
			"while": 1,
			"honor": 1,
			"no": 1,
			"soft": 1,
			"through": 1,
			"george": 1,
			"shade": 1,
			"way": 1,
			"to": 7,
			"into": 1,
			"sign": 1,
			"me": 11,
			"chorus": 1,
			"the": 6,
			"her": 4,
			"lowly": 1,
			"in": 2
		},
		"trod": {
			"his": 1,
			"are": 1,
			"under": 1,
			"this": 1,
			"cling": 1,
			"by": 4,
			"is": 1,
			"like": 1,
			"they": 1,
			"you": 1,
			"for": 2,
			"william": 1,
			"a": 1,
			"lord": 1,
			"when": 1,
			"mans": 1,
			"paradise": 1,
			"and": 2,
			"down": 1,
			"with": 2,
			"angels": 1,
			"to": 1,
			"as": 1,
			"he": 1,
			"the": 11,
			"there": 1
		},
		"isle": {
			"which": 1,
			"of": 4,
			"this": 1,
			"beyond": 1,
			"twas": 1,
			"than": 1,
			"where": 1,
			"for": 1,
			"whether": 2,
			"had": 1,
			"or": 1,
			"pause": 1,
			"have": 1,
			"lord": 1,
			"thou": 1,
			"from": 1,
			"no": 1,
			"with": 1,
			"will": 1,
			"to": 1,
			"we": 1,
			"fair": 1,
			"the": 1,
			"oft": 1
		},
		"sae": {
			"weary": 1,
			"bonnie": 1,
			"dear": 1,
			"fresh": 1,
			"fine": 1,
			"is": 1,
			"kindly": 2,
			"holy": 1,
			"for": 1,
			"base": 1,
			"my": 1,
			"did": 1,
			"let": 1,
			"lest": 1,
			"sae": 1,
			"green": 1,
			"never": 1,
			"but": 1,
			"ye": 1,
			"plain": 1,
			"and": 2,
			"lovely": 1,
			"i": 2,
			"early": 1,
			"clear": 1,
			"neer": 1,
			"loud": 1,
			"me": 1,
			"o": 1,
			"scarce": 1
		},
		"making": {
			"earth": 2,
			"his": 1,
			"up": 1,
			"pain": 1,
			"it": 3,
			"thus": 1,
			"than": 1,
			"comes": 1,
			"that": 1,
			"music": 1,
			"a": 1,
			"poor": 1,
			"one": 1,
			"our": 1,
			"rich": 1,
			"the": 3,
			"in": 2
		},
		"horse": {
			"his": 1,
			"fell": 1,
			"who": 1,
			"up": 1,
			"nor": 1,
			"long": 1,
			"is": 3,
			"away": 1,
			"lead": 1,
			"they": 1,
			"should": 1,
			"my": 1,
			"came": 1,
			"what": 1,
			"a": 2,
			"never": 1,
			"and": 10,
			"i": 1,
			"down": 1,
			"while": 1,
			"with": 2,
			"set": 1,
			"doth": 1,
			"shall": 1,
			"to": 3,
			"round": 1,
			"prove": 1,
			"we": 1,
			"whose": 1,
			"the": 3,
			"in": 1
		},
		"prey": {
			"hell": 1,
			"this": 1,
			"hills": 1,
			"nor": 1,
			"lands": 1,
			"leaves": 1,
			"where": 1,
			"lest": 1,
			"fill": 1,
			"a": 1,
			"but": 1,
			"and": 5,
			"give": 1,
			"all": 1,
			"shall": 1,
			"to": 1,
			"in": 1
		},
		"towers": {
			"of": 9,
			"by": 1,
			"rise": 1,
			"oer": 1,
			"on": 1,
			"when": 1,
			"and": 4,
			"these": 1,
			"with": 1,
			"to": 2,
			"we": 1,
			"as": 1,
			"he": 1,
			"the": 2,
			"her": 1
		},
		"danger": {
			"sweet": 1,
			"dare": 1,
			"more": 1,
			"thine": 2,
			"see": 1,
			"every": 1,
			"is": 3,
			"a": 1,
			"when": 1,
			"knows": 1,
			"brave": 1,
			"and": 2,
			"from": 1,
			"no": 1,
			"to": 1,
			"we": 1,
			"whose": 1,
			"as": 1,
			"share": 1
		},
		"ride": {
			"more": 1,
			"word": 1,
			"up": 1,
			"not": 1,
			"like": 1,
			"where": 1,
			"for": 2,
			"along": 1,
			"or": 1,
			"so": 2,
			"upon": 1,
			"hath": 1,
			"on": 4,
			"april": 1,
			"and": 1,
			"whateer": 1,
			"i": 1,
			"with": 7,
			"as": 3,
			"the": 1,
			"there": 1,
			"in": 2
		},
		"fill": {
			"his": 1,
			"of": 1,
			"high": 8,
			"up": 6,
			"today": 1,
			"afar": 1,
			"tomorrow": 2,
			"my": 2,
			"again": 1,
			"let": 1,
			"full": 1,
			"their": 1,
			"a": 3,
			"them": 1,
			"upon": 1,
			"on": 1,
			"poor": 1,
			"from": 1,
			"while": 2,
			"with": 6,
			"all": 1,
			"our": 2,
			"yet": 1,
			"to": 1,
			"heavens": 1,
			"life": 1,
			"me": 1,
			"at": 1,
			"the": 21,
			"her": 1
		},
		"awake": {
			"him": 1,
			"by": 1,
			"is": 1,
			"those": 1,
			"for": 1,
			"my": 4,
			"did": 1,
			"let": 1,
			"pure": 1,
			"awake": 2,
			"them": 1,
			"green": 1,
			"but": 1,
			"thee": 1,
			"t": 1,
			"and": 5,
			"i": 3,
			"from": 1,
			"voice": 1,
			"we": 1,
			"at": 1,
			"arise": 1,
			"the": 1
		},
		"bitter": {
			"sweet": 1,
			"bread": 2,
			"summer": 1,
			"woe": 1,
			"word": 1,
			"call": 1,
			"fruit": 1,
			"scorn": 1,
			"pain": 1,
			"alone": 1,
			"cold": 3,
			"is": 1,
			"cross": 2,
			"prayer": 1,
			"for": 1,
			"drops": 1,
			"frost": 1,
			"cup": 1,
			"hour": 1,
			"ere": 1,
			"waves": 1,
			"rain": 1,
			"oer": 1,
			"need": 1,
			"was": 1,
			"that": 1,
			"taste": 1,
			"tear": 1,
			"have": 1,
			"tears": 2,
			"sometimes": 1,
			"memory": 1,
			"and": 3,
			"foe": 1,
			"nights": 1,
			"to": 1,
			"me": 1,
			"world": 1,
			"sky": 1
		},
		"soldiers": {
			"wife": 1,
			"temple": 1,
			"who": 1,
			"guard": 1,
			"shout": 1,
			"of": 1,
			"after": 1,
			"dwell": 1,
			"far": 1,
			"by": 1,
			"pride": 1,
			"few": 1,
			"cup": 1,
			"clay": 1,
			"were": 1,
			"eye": 1,
			"a": 1,
			"spirit": 1,
			"glance": 1,
			"burst": 2,
			"be": 1,
			"bed": 1,
			"and": 2,
			"doom": 1,
			"last": 1,
			"grave": 1,
			"from": 1,
			"duty": 1,
			"with": 1,
			"slain": 1,
			"thomas": 1,
			"before": 1,
			"to": 2,
			"lie": 1,
			"flow": 1,
			"said": 1,
			"life": 1,
			"the": 1,
			"in": 1
		},
		"winter": {
			"come": 1,
			"of": 3,
			"woods": 1,
			"alone": 1,
			"is": 1,
			"like": 1,
			"laughing": 1,
			"its": 1,
			"sea": 1,
			"just": 1,
			"blow": 1,
			"came": 1,
			"winds": 1,
			"again": 1,
			"comes": 1,
			"closed": 1,
			"bud": 1,
			"was": 1,
			"nothing": 1,
			"but": 1,
			"when": 1,
			"move": 1,
			"i": 1,
			"snow": 4,
			"robin": 1,
			"dull": 1,
			"foul": 1,
			"with": 1,
			"now": 1,
			"all": 1,
			"wild": 2,
			"nights": 1,
			"sleeps": 1,
			"night": 2,
			"only": 1,
			"wind": 3,
			"to": 2,
			"change": 1,
			"there": 1,
			"in": 1,
			"sky": 1
		},
		"their": {
			"sweet": 1,
			"books": 1,
			"sound": 1,
			"low": 1,
			"dare": 1,
			"cool": 1,
			"dying": 2,
			"bread": 5,
			"saviour": 1,
			"sighs": 2,
			"more": 1,
			"ain": 2,
			"ring": 1,
			"lot": 1,
			"blessings": 1,
			"dust": 3,
			"going": 1,
			"loves": 1,
			"parting": 1,
			"virtues": 2,
			"fierce": 1,
			"chase": 1,
			"light": 3,
			"earth": 1,
			"doubt": 1,
			"cloud": 2,
			"his": 3,
			"stream": 1,
			"happiness": 1,
			"banner": 1,
			"midnight": 1,
			"blood": 9,
			"precious": 1,
			"wi": 1,
			"temple": 1,
			"play": 1,
			"bare": 1,
			"thousand": 1,
			"voices": 4,
			"deeper": 1,
			"creed": 1,
			"s": 1,
			"white": 6,
			"none": 1,
			"shades": 1,
			"hast": 1,
			"woe": 2,
			"silver": 3,
			"war": 1,
			"wail": 1,
			"are": 7,
			"story": 5,
			"aid": 1,
			"right": 3,
			"very": 1,
			"who": 1,
			"silent": 5,
			"which": 1,
			"sake": 3,
			"ones": 1,
			"deeds": 1,
			"call": 2,
			"shout": 1,
			"country": 1,
			"of": 22,
			"high": 2,
			"graves": 3,
			"yield": 1,
			"souls": 8,
			"keep": 3,
			"hills": 1,
			"triumph": 3,
			"tide": 1,
			"silence": 1,
			"nor": 1,
			"sons": 1,
			"gold": 2,
			"morning": 2,
			"heavy": 1,
			"sight": 3,
			"joy": 3,
			"fruit": 2,
			"scorn": 1,
			"sheep": 1,
			"race": 1,
			"two": 1,
			"pain": 2,
			"mourn": 1,
			"place": 3,
			"part": 2,
			"fine": 1,
			"lines": 2,
			"limbs": 2,
			"mine": 1,
			"solemn": 2,
			"not": 3,
			"crimson": 1,
			"side": 2,
			"burden": 1,
			"starry": 3,
			"today": 1,
			"proud": 1,
			"praise": 3,
			"it": 1,
			"over": 1,
			"shake": 1,
			"flight": 5,
			"far": 2,
			"mean": 1,
			"spirits": 2,
			"lights": 1,
			"bark": 1,
			"tongue": 1,
			"water": 1,
			"sod": 1,
			"load": 2,
			"by": 2,
			"eyes": 11,
			"fathers": 4,
			"long": 2,
			"bring": 2,
			"pride": 3,
			"land": 4,
			"wise": 1,
			"is": 5,
			"joyous": 3,
			"ships": 1,
			"glittering": 2,
			"author": 1,
			"few": 1,
			"return": 1,
			"away": 3,
			"children": 5,
			"idle": 2,
			"native": 6,
			"people": 2,
			"hallowed": 1,
			"good": 2,
			"force": 1,
			"together": 1,
			"they": 6,
			"speech": 1,
			"prayer": 1,
			"abroad": 1,
			"path": 2,
			"wide": 2,
			"tyrants": 1,
			"guide": 1,
			"mother": 3,
			"mild": 1,
			"pale": 1,
			"new": 1,
			"rosy": 1,
			"leaves": 2,
			"slave": 1,
			"earths": 1,
			"ranks": 7,
			"than": 1,
			"slow": 1,
			"song": 2,
			"where": 2,
			"gentle": 2,
			"lovers": 1,
			"holy": 2,
			"blast": 1,
			"welcome": 3,
			"for": 4,
			"noise": 1,
			"hand": 4,
			"heaven": 1,
			"bosom": 1,
			"cry": 2,
			"bloody": 1,
			"should": 3,
			"lonely": 1,
			"surprise": 1,
			"suns": 1,
			"speak": 1,
			"breath": 4,
			"rest": 3,
			"my": 1,
			"fingers": 1,
			"words": 2,
			"hour": 4,
			"came": 1,
			"great": 4,
			"tender": 1,
			"beauty": 4,
			"short": 1,
			"deaths": 1,
			"desire": 1,
			"freedom": 2,
			"thy": 2,
			"watch": 1,
			"sleep": 1,
			"battle": 1,
			"warrior": 1,
			"ere": 1,
			"hopes": 3,
			"tonight": 1,
			"waves": 1,
			"birth": 5,
			"shadow": 1,
			"ground": 2,
			"hope": 4,
			"flung": 1,
			"seek": 1,
			"various": 3,
			"rising": 1,
			"bells": 1,
			"lords": 2,
			"name": 4,
			"clay": 2,
			"countrys": 3,
			"along": 1,
			"face": 1,
			"faith": 3,
			"god": 1,
			"shame": 1,
			"noble": 2,
			"stroke": 1,
			"were": 5,
			"oer": 1,
			"need": 1,
			"trumpet": 1,
			"cause": 1,
			"did": 3,
			"walls": 1,
			"was": 1,
			"that": 4,
			"swords": 8,
			"lips": 2,
			"man": 1,
			"thin": 1,
			"always": 1,
			"full": 3,
			"fall": 4,
			"broken": 1,
			"gladness": 1,
			"half": 1,
			"trust": 1,
			"hang": 1,
			"perfume": 1,
			"had": 1,
			"must": 2,
			"pure": 1,
			"oh": 1,
			"beautiful": 1,
			"an": 1,
			"front": 1,
			"hold": 1,
			"music": 3,
			"pleasures": 1,
			"even": 1,
			"charms": 3,
			"or": 1,
			"eye": 1,
			"lest": 1,
			"hands": 12,
			"bright": 3,
			"have": 4,
			"tears": 7,
			"isle": 1,
			"horse": 1,
			"prey": 1,
			"towers": 1,
			"bitter": 1,
			"their": 7,
			"a": 6,
			"pains": 1,
			"faces": 5,
			"joys": 2,
			"true": 1,
			"green": 1,
			"gallant": 1,
			"lord": 5,
			"never": 4,
			"spirit": 1,
			"leave": 1,
			"met": 1,
			"love": 9,
			"tomb": 4,
			"on": 7,
			"own": 22,
			"shroud": 1,
			"brain": 1,
			"mountain": 2,
			"memory": 3,
			"old": 1,
			"but": 6,
			"death": 1,
			"foes": 3,
			"time": 5,
			"empty": 1,
			"banners": 7,
			"lives": 4,
			"years": 2,
			"when": 1,
			"deed": 1,
			"turns": 2,
			"terror": 1,
			"length": 1,
			"task": 1,
			"raise": 1,
			"be": 1,
			"bed": 3,
			"feet": 5,
			"wings": 5,
			"glory": 7,
			"line": 2,
			"kind": 4,
			"awful": 2,
			"rage": 1,
			"distant": 1,
			"tried": 2,
			"anguish": 1,
			"head": 3,
			"paradise": 1,
			"close": 1,
			"and": 48,
			"bones": 4,
			"mothers": 1,
			"sun": 2,
			"march": 1,
			"truth": 1,
			"bloom": 1,
			"dark": 2,
			"prize": 1,
			"doom": 2,
			"last": 5,
			"rays": 2,
			"move": 1,
			"cries": 4,
			"black": 1,
			"fate": 2,
			"wounded": 1,
			"blaze": 1,
			"grave": 6,
			"i": 4,
			"thou": 1,
			"haste": 1,
			"guns": 2,
			"tale": 2,
			"down": 2,
			"sunny": 1,
			"home": 3,
			"swell": 2,
			"tower": 1,
			"island": 1,
			"steel": 1,
			"mirth": 2,
			"presence": 3,
			"one": 1,
			"such": 1,
			"shining": 5,
			"rush": 1,
			"against": 1,
			"secret": 1,
			"shadows": 2,
			"hate": 1,
			"arts": 1,
			"state": 1,
			"work": 1,
			"rather": 1,
			"brow": 1,
			"how": 2,
			"hearts": 12,
			"from": 2,
			"gifts": 1,
			"would": 3,
			"living": 2,
			"ill": 1,
			"want": 1,
			"reason": 1,
			"beat": 1,
			"ancient": 1,
			"hidden": 1,
			"these": 1,
			"while": 1,
			"foul": 1,
			"breast": 3,
			"present": 1,
			"no": 2,
			"early": 2,
			"voice": 1,
			"guest": 1,
			"dread": 1,
			"sand": 1,
			"sphere": 1,
			"kingdom": 1,
			"decay": 1,
			"ears": 1,
			"with": 12,
			"around": 2,
			"sad": 2,
			"sweetness": 3,
			"soft": 1,
			"drew": 1,
			"set": 1,
			"give": 1,
			"gaze": 2,
			"foreign": 1,
			"till": 1,
			"hair": 3,
			"meet": 1,
			"heads": 8,
			"will": 5,
			"strong": 2,
			"prayers": 2,
			"all": 7,
			"gay": 1,
			"gods": 3,
			"loving": 1,
			"fires": 2,
			"flesh": 1,
			"notes": 1,
			"foe": 1,
			"songs": 3,
			"toil": 3,
			"service": 1,
			"road": 2,
			"clear": 1,
			"king": 2,
			"shine": 2,
			"couch": 1,
			"peaceful": 1,
			"spring": 1,
			"wake": 1,
			"upward": 1,
			"being": 1,
			"behind": 1,
			"wealth": 3,
			"our": 1,
			"day": 3,
			"passing": 1,
			"frame": 1,
			"night": 1,
			"ends": 1,
			"loved": 1,
			"pity": 1,
			"before": 2,
			"hundred": 2,
			"only": 1,
			"golden": 4,
			"chance": 1,
			"shade": 1,
			"mingled": 1,
			"best": 4,
			"way": 12,
			"course": 4,
			"to": 13,
			"loud": 3,
			"springs": 2,
			"into": 2,
			"round": 1,
			"keen": 1,
			"turn": 3,
			"little": 2,
			"answer": 1,
			"rich": 1,
			"strain": 1,
			"use": 1,
			"homes": 5,
			"heavenly": 2,
			"glorious": 2,
			"turning": 1,
			"wounds": 4,
			"growing": 1,
			"view": 2,
			"know": 1,
			"vows": 1,
			"flow": 2,
			"may": 3,
			"yon": 1,
			"we": 4,
			"simple": 1,
			"loss": 1,
			"spread": 1,
			"as": 3,
			"array": 2,
			"fair": 1,
			"english": 1,
			"happy": 2,
			"life": 2,
			"he": 3,
			"arms": 6,
			"strength": 2,
			"flag": 1,
			"at": 4,
			"seat": 2,
			"point": 1,
			"o": 1,
			"coming": 3,
			"grow": 1,
			"weight": 2,
			"left": 1,
			"rings": 1,
			"streams": 1,
			"the": 23,
			"tis": 1,
			"world": 1,
			"bent": 1,
			"stood": 1,
			"labor": 1,
			"change": 1,
			"radiant": 2,
			"weak": 1,
			"dead": 2,
			"tread": 2,
			"thirst": 1,
			"first": 1,
			"oft": 1,
			"there": 2,
			"lowly": 1,
			"restless": 1,
			"in": 18,
			"purpose": 1,
			"dim": 1,
			"ruin": 1,
			"thoughts": 1,
			"sky": 1
		},
		"fold": {
			"within": 1,
			"him": 1,
			"of": 1,
			"up": 1,
			"joy": 1,
			"it": 2,
			"is": 1,
			"unto": 1,
			"about": 1,
			"they": 1,
			"its": 1,
			"my": 2,
			"a": 1,
			"on": 1,
			"above": 1,
			"but": 1,
			"thee": 1,
			"when": 1,
			"and": 2,
			"thou": 1,
			"how": 1,
			"from": 1,
			"with": 2,
			"your": 1,
			"he": 1,
			"o": 1,
			"the": 1,
			"restless": 1
		},
		"a": {
			"sweet": 12,
			"books": 1,
			"tune": 3,
			"flower": 14,
			"blue": 2,
			"come": 3,
			"sound": 14,
			"low": 2,
			"bow": 2,
			"footnote": 4,
			"cool": 1,
			"foolish": 3,
			"dying": 5,
			"look": 12,
			"summer": 11,
			"more": 11,
			"hear": 2,
			"murmur": 5,
			"wrought": 1,
			"since": 1,
			"blessd": 1,
			"ring": 2,
			"lot": 2,
			"within": 6,
			"wife": 9,
			"unseen": 2,
			"dust": 2,
			"curse": 5,
			"justice": 1,
			"went": 1,
			"parting": 5,
			"worn": 1,
			"wish": 1,
			"river": 4,
			"fierce": 1,
			"free": 3,
			"light": 17,
			"pen": 5,
			"space": 5,
			"doubt": 2,
			"pine": 1,
			"die": 1,
			"cloud": 18,
			"mountains": 1,
			"his": 10,
			"appear": 1,
			"stream": 4,
			"mad": 1,
			"hell": 3,
			"dreary": 3,
			"him": 2,
			"fond": 2,
			"banner": 3,
			"crest": 2,
			"book": 8,
			"midnight": 1,
			"sharp": 2,
			"see": 4,
			"means": 1,
			"valley": 1,
			"narrow": 7,
			"hero": 7,
			"precious": 3,
			"wi": 1,
			"temple": 3,
			"play": 1,
			"lady": 9,
			"bare": 1,
			"kiss": 9,
			"breathing": 1,
			"horn": 2,
			"thousand": 73,
			"tennyson": 1,
			"thing": 29,
			"deeper": 3,
			"fit": 1,
			"s": 1,
			"white": 3,
			"rule": 2,
			"woe": 3,
			"silver": 4,
			"purple": 3,
			"wail": 1,
			"weary": 15,
			"wonder": 3,
			"story": 2,
			"beside": 1,
			"humble": 2,
			"six": 1,
			"right": 3,
			"back": 1,
			"warm": 1,
			"made": 4,
			"word": 31,
			"fell": 3,
			"very": 10,
			"under": 1,
			"who": 9,
			"seen": 1,
			"hollow": 3,
			"silent": 1,
			"guard": 1,
			"lover": 4,
			"which": 14,
			"mist": 3,
			"court": 1,
			"beam": 4,
			"greece": 1,
			"dies": 2,
			"ago": 2,
			"worth": 3,
			"hide": 2,
			"tired": 3,
			"call": 3,
			"shout": 7,
			"country": 10,
			"body": 2,
			"of": 188,
			"brook": 4,
			"this": 6,
			"blind": 1,
			"cast": 1,
			"bonnie": 2,
			"star": 14,
			"season": 4,
			"high": 2,
			"rude": 1,
			"fame": 2,
			"keep": 2,
			"hung": 2,
			"after": 1,
			"hills": 1,
			"daughter": 3,
			"once": 4,
			"up": 5,
			"off": 1,
			"triumph": 1,
			"tide": 5,
			"angel": 2,
			"she": 3,
			"rock": 5,
			"among": 1,
			"shakespeare": 1,
			"silence": 3,
			"beyond": 1,
			"anonymous": 1,
			"nor": 2,
			"sons": 1,
			"sacred": 2,
			"hymn": 4,
			"find": 2,
			"command": 2,
			"gold": 1,
			"three": 1,
			"does": 1,
			"sez": 1,
			"morning": 4,
			"city": 3,
			"heavy": 1,
			"roar": 1,
			"flood": 4,
			"sight": 7,
			"age": 5,
			"stormy": 1,
			"joy": 7,
			"lightning": 1,
			"bird": 10,
			"wheel": 2,
			"scorn": 1,
			"height": 2,
			"brother": 14,
			"sheep": 1,
			"race": 6,
			"dreadful": 2,
			"spot": 3,
			"dear": 3,
			"two": 1,
			"pain": 2,
			"mouth": 2,
			"thick": 2,
			"place": 6,
			"part": 12,
			"pass": 2,
			"chant": 2,
			"sick": 1,
			"fine": 2,
			"rose": 12,
			"lines": 1,
			"beloved": 1,
			"behold": 1,
			"rivers": 1,
			"solemn": 4,
			"sings": 1,
			"not": 5,
			"divine": 1,
			"crimson": 3,
			"burden": 3,
			"starry": 2,
			"proud": 3,
			"hes": 2,
			"dry": 1,
			"praise": 1,
			"sword": 6,
			"it": 8,
			"evil": 1,
			"over": 3,
			"host": 6,
			"shake": 2,
			"magic": 1,
			"shows": 1,
			"maiden": 7,
			"flight": 2,
			"image": 1,
			"fool": 11,
			"far": 6,
			"wisdom": 4,
			"child": 30,
			"health": 5,
			"brought": 2,
			"bark": 4,
			"tongue": 5,
			"bless": 1,
			"water": 2,
			"feeble": 2,
			"sod": 1,
			"load": 4,
			"by": 18,
			"try": 1,
			"fathers": 6,
			"father": 3,
			"bade": 1,
			"alone": 2,
			"long": 22,
			"sorrows": 2,
			"fountain": 4,
			"twixt": 2,
			"nations": 5,
			"mute": 2,
			"something": 3,
			"trace": 2,
			"quiet": 6,
			"matter": 2,
			"cold": 4,
			"pride": 1,
			"land": 16,
			"wise": 3,
			"is": 20,
			"cross": 2,
			"vision": 12,
			"joyous": 4,
			"glittering": 1,
			"rise": 1,
			"few": 31,
			"like": 7,
			"boy": 12,
			"farewell": 1,
			"glass": 6,
			"hard": 3,
			"away": 3,
			"hoary": 1,
			"form": 8,
			"found": 1,
			"sway": 1,
			"gift": 3,
			"why": 3,
			"native": 4,
			"people": 3,
			"sung": 1,
			"kings": 1,
			"good": 16,
			"pleased": 1,
			"care": 2,
			"together": 1,
			"about": 1,
			"steed": 10,
			"they": 3,
			"prayer": 15,
			"path": 8,
			"laughing": 2,
			"faint": 4,
			"funeral": 4,
			"wide": 4,
			"you": 3,
			"nature": 1,
			"tyrants": 3,
			"guide": 2,
			"stern": 2,
			"glowing": 1,
			"mother": 10,
			"mild": 2,
			"thus": 1,
			"new": 10,
			"rosy": 1,
			"leaves": 1,
			"without": 2,
			"sister": 5,
			"slave": 15,
			"its": 1,
			"than": 8,
			"smile": 25,
			"slow": 2,
			"swift": 1,
			"kindly": 2,
			"pleasure": 1,
			"stir": 2,
			"een": 3,
			"poet": 1,
			"song": 14,
			"sea": 9,
			"crown": 8,
			"friends": 1,
			"where": 9,
			"gentle": 10,
			"others": 1,
			"brief": 4,
			"small": 4,
			"richard": 1,
			"train": 1,
			"church": 4,
			"lovers": 1,
			"holy": 8,
			"summers": 6,
			"blast": 3,
			"gray": 6,
			"just": 2,
			"welcome": 2,
			"for": 38,
			"noise": 3,
			"blown": 2,
			"past": 1,
			"hand": 25,
			"heaven": 5,
			"bosom": 2,
			"charge": 2,
			"frost": 4,
			"cup": 6,
			"lost": 2,
			"cry": 7,
			"clime": 1,
			"bloody": 10,
			"should": 1,
			"lonely": 4,
			"base": 1,
			"bowed": 1,
			"theres": 6,
			"melancholy": 2,
			"bride": 5,
			"breath": 17,
			"spite": 1,
			"boys": 1,
			"fixed": 1,
			"rest": 5,
			"my": 9,
			"spent": 1,
			"blow": 7,
			"band": 6,
			"bore": 1,
			"hour": 3,
			"came": 3,
			"standing": 2,
			"note": 3,
			"twilight": 2,
			"great": 20,
			"john": 1,
			"tender": 7,
			"beauty": 2,
			"short": 4,
			"again": 1,
			"burning": 2,
			"touch": 9,
			"thy": 1,
			"yes": 1,
			"watch": 1,
			"wall": 7,
			"greater": 6,
			"morn": 1,
			"vain": 4,
			"sleep": 4,
			"teach": 1,
			"pretty": 4,
			"tone": 4,
			"warrior": 2,
			"peace": 7,
			"majesty": 1,
			"comes": 3,
			"whom": 5,
			"better": 10,
			"ray": 5,
			"shadow": 11,
			"mary": 2,
			"shore": 4,
			"ground": 1,
			"soul": 22,
			"passion": 4,
			"hope": 6,
			"flung": 1,
			"seek": 1,
			"born": 2,
			"garden": 3,
			"various": 2,
			"because": 1,
			"cheer": 4,
			"makes": 1,
			"rough": 5,
			"most": 1,
			"sir": 2,
			"town": 2,
			"yellow": 3,
			"rising": 3,
			"friend": 37,
			"fools": 1,
			"friendship": 2,
			"stretched": 1,
			"name": 25,
			"door": 2,
			"queen": 2,
			"glow": 4,
			"countrys": 1,
			"face": 14,
			"false": 1,
			"sin": 6,
			"battles": 1,
			"dew": 2,
			"rain": 2,
			"faith": 3,
			"god": 20,
			"can": 5,
			"wit": 2,
			"moment": 25,
			"shame": 3,
			"noble": 10,
			"power": 7,
			"were": 2,
			"bud": 2,
			"waking": 2,
			"bears": 1,
			"oer": 3,
			"sudden": 7,
			"shell": 4,
			"trumpet": 2,
			"indeed": 1,
			"cause": 3,
			"did": 6,
			"was": 11,
			"runs": 2,
			"that": 44,
			"rolling": 1,
			"if": 3,
			"let": 4,
			"show": 4,
			"thorn": 3,
			"womans": 8,
			"drop": 14,
			"man": 73,
			"bear": 3,
			"both": 1,
			"thin": 1,
			"says": 1,
			"leaf": 7,
			"full": 6,
			"make": 2,
			"victory": 4,
			"fall": 1,
			"busy": 1,
			"broken": 5,
			"crowd": 3,
			"go": 1,
			"seed": 2,
			"half": 2,
			"trust": 1,
			"sail": 2,
			"tear": 23,
			"desert": 3,
			"perfume": 1,
			"brothers": 5,
			"had": 4,
			"must": 1,
			"general": 5,
			"pure": 3,
			"what": 4,
			"sit": 1,
			"oh": 3,
			"beautiful": 7,
			"an": 5,
			"repose": 1,
			"moon": 1,
			"front": 2,
			"nothing": 1,
			"stone": 15,
			"stars": 1,
			"music": 3,
			"or": 20,
			"waiting": 2,
			"conscience": 2,
			"field": 10,
			"ran": 1,
			"eye": 9,
			"soil": 1,
			"sweeter": 8,
			"start": 1,
			"pause": 1,
			"bright": 13,
			"have": 1,
			"study": 1,
			"late": 1,
			"tree": 13,
			"blush": 1,
			"gave": 2,
			"horse": 6,
			"prey": 4,
			"bitter": 2,
			"soldiers": 9,
			"winter": 1,
			"their": 2,
			"fold": 2,
			"a": 62,
			"so": 8,
			"pains": 1,
			"heat": 1,
			"babe": 3,
			"falls": 1,
			"courage": 1,
			"true": 5,
			"green": 4,
			"flies": 2,
			"upon": 6,
			"gallant": 9,
			"lay": 6,
			"lord": 5,
			"whole": 8,
			"never": 2,
			"many": 1,
			"dawn": 2,
			"spirit": 10,
			"hath": 2,
			"cruel": 3,
			"walk": 2,
			"delight": 1,
			"love": 15,
			"tomb": 7,
			"groan": 4,
			"on": 27,
			"break": 1,
			"quite": 1,
			"charm": 4,
			"red": 6,
			"girl": 4,
			"shroud": 5,
			"brain": 1,
			"evermore": 1,
			"mountain": 2,
			"above": 1,
			"smiling": 6,
			"fast": 2,
			"deep": 10,
			"memory": 1,
			"roaring": 2,
			"feast": 6,
			"celestial": 1,
			"old": 6,
			"filled": 1,
			"but": 22,
			"iron": 1,
			"bell": 5,
			"brown": 1,
			"death": 5,
			"knowledge": 1,
			"time": 24,
			"poor": 16,
			"buried": 1,
			"ye": 1,
			"moving": 1,
			"when": 13,
			"deed": 3,
			"lifes": 2,
			"onward": 1,
			"turns": 1,
			"terror": 1,
			"religious": 1,
			"merry": 6,
			"mans": 4,
			"burst": 2,
			"length": 1,
			"sigh": 13,
			"task": 2,
			"be": 3,
			"bed": 9,
			"ay": 1,
			"weeping": 1,
			"wondrous": 1,
			"t": 2,
			"glory": 6,
			"line": 5,
			"out": 2,
			"kind": 10,
			"rhyme": 1,
			"brave": 9,
			"distant": 3,
			"heart": 39,
			"sorrow": 4,
			"german": 1,
			"head": 6,
			"paradise": 2,
			"close": 4,
			"nobler": 4,
			"verse": 3,
			"and": 138,
			"whateer": 1,
			"bliss": 2,
			"thunder": 1,
			"bones": 1,
			"mothers": 8,
			"grace": 9,
			"sun": 4,
			"march": 1,
			"truth": 4,
			"bloom": 1,
			"fever": 1,
			"dark": 7,
			"doom": 1,
			"last": 6,
			"lone": 6,
			"sunshine": 1,
			"christian": 2,
			"lovely": 4,
			"black": 5,
			"dream": 28,
			"fate": 3,
			"year": 14,
			"wounded": 4,
			"blaze": 1,
			"days": 1,
			"grave": 15,
			"poem": 3,
			"hid": 2,
			"fly": 1,
			"i": 33,
			"worthy": 3,
			"thou": 1,
			"woman": 25,
			"tale": 11,
			"down": 1,
			"told": 1,
			"sunny": 3,
			"bad": 1,
			"home": 8,
			"pay": 1,
			"swell": 2,
			"tower": 1,
			"wretched": 2,
			"here": 3,
			"mournful": 3,
			"too": 6,
			"raised": 1,
			"steel": 2,
			"presence": 6,
			"mortal": 7,
			"one": 9,
			"might": 4,
			"storm": 11,
			"between": 1,
			"breathes": 1,
			"chamber": 4,
			"such": 1,
			"shining": 6,
			"draw": 1,
			"against": 1,
			"perfect": 2,
			"secret": 8,
			"hate": 1,
			"state": 4,
			"work": 3,
			"pearl": 4,
			"blossom": 3,
			"forest": 4,
			"stands": 1,
			"looks": 1,
			"saint": 7,
			"broad": 1,
			"each": 1,
			"brow": 2,
			"how": 3,
			"higher": 2,
			"help": 1,
			"from": 40,
			"sleeping": 1,
			"stranger": 5,
			"marble": 2,
			"drink": 2,
			"strange": 12,
			"across": 2,
			"would": 3,
			"stronger": 5,
			"living": 10,
			"feeling": 4,
			"mind": 14,
			"ill": 2,
			"blade": 3,
			"reason": 3,
			"beneath": 1,
			"maid": 3,
			"hidden": 2,
			"shield": 4,
			"while": 3,
			"foul": 1,
			"breast": 3,
			"honor": 1,
			"present": 2,
			"no": 7,
			"mystic": 5,
			"bound": 4,
			"took": 2,
			"pitiful": 2,
			"calm": 10,
			"roll": 1,
			"rouse": 4,
			"voice": 36,
			"guest": 2,
			"maidens": 3,
			"dread": 1,
			"solitude": 1,
			"sphere": 2,
			"kingdom": 2,
			"goodly": 8,
			"guilty": 3,
			"mighty": 21,
			"breeze": 2,
			"with": 28,
			"around": 2,
			"sad": 5,
			"sweetness": 1,
			"virtue": 2,
			"soft": 4,
			"wave": 6,
			"now": 3,
			"set": 4,
			"single": 17,
			"foreign": 7,
			"flying": 2,
			"some": 2,
			"learned": 1,
			"till": 1,
			"hair": 2,
			"tempest": 4,
			"realm": 4,
			"meet": 2,
			"will": 8,
			"flash": 5,
			"strong": 5,
			"lying": 1,
			"all": 8,
			"chief": 1,
			"patient": 1,
			"grief": 4,
			"desolate": 1,
			"drum": 2,
			"wild": 5,
			"loving": 5,
			"then": 7,
			"room": 2,
			"gale": 1,
			"harvest": 2,
			"large": 5,
			"thought": 16,
			"could": 2,
			"through": 8,
			"pleasant": 11,
			"thomas": 1,
			"foe": 8,
			"has": 6,
			"street": 1,
			"thats": 1,
			"george": 2,
			"well": 5,
			"doth": 2,
			"thread": 1,
			"road": 2,
			"clear": 2,
			"king": 15,
			"couch": 2,
			"lake": 1,
			"master": 4,
			"nights": 1,
			"peaceful": 2,
			"dost": 1,
			"spring": 6,
			"minds": 1,
			"wake": 2,
			"fiery": 6,
			"turned": 1,
			"begun": 1,
			"being": 2,
			"beauteous": 4,
			"nearer": 2,
			"our": 4,
			"throne": 6,
			"wrong": 3,
			"day": 33,
			"sense": 8,
			"passing": 4,
			"aside": 1,
			"gathered": 1,
			"page": 3,
			"frame": 1,
			"future": 2,
			"fear": 3,
			"night": 9,
			"ends": 1,
			"fallen": 1,
			"stay": 1,
			"shall": 4,
			"echo": 2,
			"hundred": 14,
			"only": 1,
			"golden": 11,
			"wind": 5,
			"still": 9,
			"chance": 4,
			"your": 1,
			"shade": 9,
			"mingled": 1,
			"yet": 8,
			"way": 10,
			"mark": 2,
			"course": 2,
			"to": 76,
			"loud": 2,
			"poetry": 1,
			"hill": 5,
			"youth": 7,
			"human": 3,
			"poets": 2,
			"speed": 1,
			"into": 2,
			"round": 6,
			"wood": 1,
			"flame": 5,
			"keen": 1,
			"turn": 2,
			"slowly": 2,
			"lie": 8,
			"little": 86,
			"answer": 1,
			"written": 3,
			"rich": 3,
			"strain": 2,
			"use": 1,
			"backward": 2,
			"heavenly": 5,
			"glorious": 9,
			"spear": 2,
			"know": 1,
			"mould": 1,
			"art": 1,
			"harp": 4,
			"bold": 3,
			"vast": 1,
			"may": 6,
			"strife": 1,
			"whisper": 6,
			"withered": 2,
			"enter": 1,
			"sign": 3,
			"ship": 5,
			"we": 4,
			"glad": 2,
			"simple": 11,
			"whose": 11,
			"falling": 3,
			"as": 15,
			"fair": 10,
			"borne": 1,
			"stand": 3,
			"happy": 9,
			"life": 23,
			"end": 3,
			"he": 25,
			"me": 4,
			"sat": 1,
			"strength": 3,
			"son": 5,
			"flag": 1,
			"gleam": 6,
			"at": 18,
			"fancy": 2,
			"straight": 1,
			"frown": 4,
			"seat": 3,
			"lies": 4,
			"wound": 9,
			"o": 18,
			"chain": 4,
			"greek": 1,
			"weight": 3,
			"left": 1,
			"chorus": 1,
			"blessed": 5,
			"arise": 1,
			"common": 1,
			"the": 63,
			"ghost": 2,
			"tis": 1,
			"waste": 1,
			"though": 3,
			"fight": 2,
			"treasure": 2,
			"sure": 2,
			"world": 32,
			"bent": 1,
			"stood": 1,
			"drawn": 2,
			"seems": 1,
			"house": 11,
			"labor": 1,
			"her": 6,
			"share": 1,
			"change": 11,
			"radiant": 1,
			"safe": 1,
			"young": 5,
			"dead": 1,
			"tread": 1,
			"thirst": 2,
			"fire": 7,
			"scene": 3,
			"oft": 1,
			"soldier": 10,
			"there": 7,
			"grim": 1,
			"lowly": 3,
			"in": 71,
			"forgive": 1,
			"harmony": 1,
			"step": 7,
			"purpose": 2,
			"dim": 1,
			"shed": 1,
			"air": 5,
			"ruin": 1,
			"seem": 1,
			"sky": 3,
			"oak": 4
		},
		"so": {
			"sweet": 19,
			"blue": 1,
			"come": 1,
			"sound": 1,
			"low": 5,
			"cool": 2,
			"taught": 1,
			"wrought": 1,
			"won": 1,
			"since": 3,
			"within": 1,
			"justice": 2,
			"im": 2,
			"christ": 1,
			"worn": 1,
			"fierce": 1,
			"free": 3,
			"light": 2,
			"die": 1,
			"his": 5,
			"dreary": 1,
			"sharp": 1,
			"narrow": 2,
			"bare": 1,
			"faithful": 2,
			"white": 5,
			"weary": 2,
			"are": 1,
			"beside": 1,
			"right": 1,
			"fell": 1,
			"very": 1,
			"under": 2,
			"who": 2,
			"silent": 1,
			"men": 1,
			"dies": 1,
			"of": 5,
			"high": 5,
			"worlds": 1,
			"keep": 1,
			"after": 1,
			"hills": 1,
			"up": 2,
			"she": 7,
			"nor": 1,
			"sacred": 1,
			"does": 1,
			"grew": 1,
			"heavy": 1,
			"age": 2,
			"forth": 3,
			"dear": 3,
			"fresh": 2,
			"thick": 1,
			"serene": 1,
			"pass": 2,
			"fine": 4,
			"mine": 1,
			"sings": 1,
			"not": 1,
			"divine": 1,
			"put": 1,
			"proud": 2,
			"it": 9,
			"shows": 1,
			"perish": 2,
			"twas": 1,
			"far": 7,
			"mean": 2,
			"feeble": 1,
			"by": 4,
			"jim": 1,
			"long": 20,
			"kissed": 1,
			"cold": 2,
			"wise": 3,
			"is": 10,
			"soon": 3,
			"rise": 1,
			"unto": 1,
			"like": 4,
			"hurrah": 2,
			"farewell": 1,
			"hard": 3,
			"away": 1,
			"sung": 1,
			"hallowed": 1,
			"good": 3,
			"either": 1,
			"they": 6,
			"easy": 1,
			"faint": 1,
			"wide": 1,
			"you": 2,
			"glowing": 1,
			"thus": 1,
			"pale": 2,
			"new": 1,
			"heard": 1,
			"without": 2,
			"slow": 1,
			"kindly": 1,
			"those": 1,
			"sea": 1,
			"where": 2,
			"others": 1,
			"brief": 1,
			"small": 2,
			"run": 1,
			"holy": 1,
			"gray": 1,
			"just": 2,
			"for": 6,
			"heaven": 1,
			"should": 1,
			"lonely": 1,
			"suns": 1,
			"sang": 1,
			"take": 1,
			"fixed": 1,
			"my": 12,
			"came": 1,
			"standing": 1,
			"great": 6,
			"john": 1,
			"tender": 1,
			"short": 2,
			"thy": 4,
			"pray": 2,
			"sleep": 1,
			"teach": 1,
			"peace": 1,
			"comes": 1,
			"rang": 1,
			"better": 1,
			"ground": 1,
			"various": 3,
			"because": 1,
			"whether": 1,
			"god": 2,
			"can": 3,
			"noble": 1,
			"were": 1,
			"did": 1,
			"was": 1,
			"runs": 1,
			"that": 21,
			"if": 1,
			"let": 6,
			"both": 2,
			"thin": 3,
			"always": 1,
			"full": 6,
			"busy": 2,
			"often": 1,
			"go": 1,
			"spake": 7,
			"pure": 4,
			"what": 3,
			"beautiful": 3,
			"ran": 2,
			"wilt": 2,
			"bright": 15,
			"have": 1,
			"late": 5,
			"am": 1,
			"trod": 1,
			"fill": 1,
			"their": 1,
			"a": 10,
			"so": 4,
			"falls": 1,
			"sometimes": 1,
			"true": 4,
			"green": 1,
			"gallant": 1,
			"lay": 1,
			"things": 1,
			"many": 9,
			"on": 2,
			"above": 3,
			"fast": 4,
			"deep": 7,
			"old": 1,
			"filled": 1,
			"but": 7,
			"death": 3,
			"time": 1,
			"poor": 2,
			"empty": 1,
			"ye": 2,
			"choose": 1,
			"when": 10,
			"plain": 1,
			"merry": 1,
			"felt": 1,
			"be": 4,
			"firm": 1,
			"having": 1,
			"awful": 1,
			"brave": 1,
			"sweetly": 2,
			"close": 3,
			"and": 28,
			"whateer": 1,
			"march": 1,
			"do": 2,
			"dark": 3,
			"quick": 1,
			"lone": 2,
			"lovely": 2,
			"black": 2,
			"dream": 1,
			"grave": 1,
			"i": 25,
			"thou": 4,
			"robin": 1,
			"bad": 2,
			"home": 1,
			"swell": 1,
			"here": 1,
			"too": 2,
			"might": 1,
			"draw": 1,
			"softly": 2,
			"tall": 2,
			"stands": 1,
			"each": 2,
			"whereer": 1,
			"how": 1,
			"help": 1,
			"from": 4,
			"strange": 2,
			"would": 1,
			"ill": 4,
			"rare": 3,
			"nigh": 3,
			"while": 1,
			"foul": 1,
			"honor": 1,
			"no": 1,
			"calm": 6,
			"called": 1,
			"dread": 3,
			"mighty": 1,
			"with": 7,
			"sad": 5,
			"soft": 4,
			"now": 5,
			"some": 2,
			"learned": 1,
			"flash": 1,
			"strong": 4,
			"lying": 1,
			"all": 4,
			"patient": 1,
			"desolate": 1,
			"gay": 2,
			"wild": 5,
			"loving": 2,
			"familiar": 1,
			"then": 4,
			"large": 3,
			"blest": 1,
			"thought": 1,
			"through": 2,
			"well": 22,
			"doth": 1,
			"clear": 2,
			"much": 27,
			"our": 3,
			"day": 1,
			"sleeps": 1,
			"passing": 1,
			"equal": 1,
			"loved": 4,
			"pity": 1,
			"shall": 9,
			"before": 1,
			"still": 8,
			"your": 1,
			"mingled": 1,
			"yet": 1,
			"to": 16,
			"loud": 1,
			"into": 1,
			"round": 1,
			"keen": 1,
			"turn": 1,
			"slowly": 1,
			"lie": 1,
			"little": 2,
			"rich": 2,
			"live": 1,
			"gently": 1,
			"wounds": 1,
			"sore": 3,
			"ah": 1,
			"bold": 1,
			"vast": 2,
			"may": 5,
			"yon": 1,
			"smiled": 1,
			"we": 10,
			"simple": 1,
			"whose": 2,
			"as": 19,
			"fair": 24,
			"happy": 6,
			"said": 3,
			"he": 17,
			"strength": 1,
			"o": 1,
			"the": 40,
			"though": 2,
			"her": 1,
			"passed": 1,
			"radiant": 1,
			"weak": 2,
			"grand": 4,
			"young": 6,
			"dead": 1,
			"near": 6,
			"oft": 4,
			"there": 1,
			"restless": 1,
			"in": 15,
			"dim": 2,
			"thoughts": 1,
			"shalt": 2
		},
		"pains": {
			"light": 1,
			"his": 1,
			"are": 1,
			"who": 1,
			"which": 1,
			"of": 2,
			"it": 2,
			"by": 1,
			"my": 3,
			"a": 1,
			"heat": 1,
			"be": 1,
			"and": 3,
			"i": 1,
			"no": 1,
			"with": 1,
			"all": 1,
			"could": 1,
			"dost": 1,
			"to": 1,
			"at": 1,
			"the": 1,
			"tis": 1
		},
		"faces": {
			"look": 1,
			"his": 1,
			"are": 1,
			"fresh": 1,
			"they": 1,
			"smile": 2,
			"where": 1,
			"bowed": 1,
			"friend": 1,
			"glow": 1,
			"that": 1,
			"full": 1,
			"had": 1,
			"what": 1,
			"oh": 1,
			"never": 2,
			"almost": 1,
			"on": 1,
			"and": 4,
			"i": 5,
			"how": 1,
			"from": 1,
			"beat": 1,
			"with": 1,
			"sad": 1,
			"lie": 1,
			"we": 1,
			"charles": 1,
			"happy": 1,
			"the": 1
		},
		"heat": {
			"within": 1,
			"of": 1,
			"nor": 2,
			"not": 1,
			"by": 1,
			"rise": 1,
			"where": 1,
			"my": 1,
			"were": 1,
			"that": 2,
			"a": 2,
			"but": 1,
			"and": 5,
			"with": 1,
			"before": 1,
			"o": 3,
			"the": 1
		},
		"babe": {
			"of": 1,
			"up": 1,
			"she": 1,
			"nor": 1,
			"were": 1,
			"that": 2,
			"lay": 1,
			"be": 1,
			"and": 6,
			"looks": 1,
			"with": 1,
			"all": 1,
			"yet": 1,
			"to": 4,
			"in": 3
		},
		"brings": {
			"us": 3,
			"his": 1,
			"back": 1,
			"which": 1,
			"this": 1,
			"not": 1,
			"it": 1,
			"is": 1,
			"for": 1,
			"rest": 1,
			"my": 1,
			"that": 1,
			"music": 1,
			"have": 1,
			"danger": 1,
			"a": 2,
			"upon": 1,
			"thee": 4,
			"and": 1,
			"down": 1,
			"home": 1,
			"from": 1,
			"no": 1,
			"with": 2,
			"our": 1,
			"to": 2,
			"life": 1,
			"me": 2,
			"the": 4,
			"in": 2,
			"thoughts": 1
		},
		"given": {
			"us": 2,
			"more": 1,
			"him": 3,
			"which": 1,
			"up": 1,
			"by": 3,
			"is": 1,
			"away": 1,
			"form": 1,
			"ever": 1,
			"for": 6,
			"my": 2,
			"thy": 3,
			"ground": 1,
			"what": 1,
			"or": 2,
			"bright": 1,
			"their": 1,
			"a": 2,
			"so": 1,
			"above": 1,
			"when": 3,
			"and": 6,
			"i": 2,
			"one": 1,
			"such": 2,
			"till": 1,
			"behind": 1,
			"day": 1,
			"to": 18,
			"as": 1,
			"me": 2,
			"below": 1,
			"the": 2,
			"in": 3,
			"thoughts": 1
		},
		"falls": {
			"his": 1,
			"of": 2,
			"off": 2,
			"she": 1,
			"cold": 1,
			"is": 1,
			"like": 1,
			"short": 1,
			"what": 1,
			"a": 1,
			"upon": 3,
			"on": 6,
			"out": 1,
			"and": 2,
			"between": 1,
			"from": 3,
			"across": 1,
			"early": 1,
			"then": 1,
			"through": 1,
			"before": 1,
			"yet": 1,
			"into": 1,
			"mid": 1,
			"as": 1,
			"he": 1,
			"at": 2,
			"the": 8
		},
		"them": {
			"come": 3,
			"fled": 2,
			"look": 1,
			"more": 3,
			"hear": 1,
			"won": 1,
			"thine": 1,
			"ours": 1,
			"free": 1,
			"die": 1,
			"his": 2,
			"sharp": 1,
			"see": 2,
			"play": 1,
			"are": 1,
			"alas": 1,
			"right": 1,
			"back": 5,
			"aye": 1,
			"word": 1,
			"very": 1,
			"who": 2,
			"silent": 1,
			"which": 1,
			"call": 1,
			"of": 10,
			"cast": 1,
			"yield": 1,
			"pour": 1,
			"up": 3,
			"beyond": 1,
			"forth": 2,
			"two": 1,
			"pain": 1,
			"place": 1,
			"pass": 2,
			"not": 9,
			"side": 1,
			"every": 1,
			"it": 1,
			"over": 2,
			"weep": 2,
			"by": 3,
			"nevermore": 1,
			"long": 1,
			"wise": 1,
			"is": 2,
			"soon": 1,
			"unto": 1,
			"like": 6,
			"away": 1,
			"good": 1,
			"ever": 1,
			"together": 1,
			"they": 2,
			"shot": 4,
			"glowing": 1,
			"thus": 4,
			"nay": 1,
			"strike": 1,
			"afar": 1,
			"without": 1,
			"smile": 1,
			"those": 1,
			"where": 2,
			"for": 5,
			"past": 1,
			"worse": 1,
			"theres": 1,
			"take": 1,
			"speak": 1,
			"my": 1,
			"again": 1,
			"enough": 1,
			"moan": 1,
			"ere": 2,
			"better": 1,
			"wandering": 1,
			"god": 2,
			"oer": 4,
			"indeed": 1,
			"that": 11,
			"if": 2,
			"bear": 2,
			"daily": 1,
			"both": 4,
			"full": 2,
			"fall": 3,
			"ripe": 1,
			"go": 2,
			"gladness": 1,
			"what": 3,
			"sit": 1,
			"an": 1,
			"nothing": 1,
			"or": 1,
			"wilt": 1,
			"sae": 1,
			"their": 4,
			"a": 6,
			"so": 5,
			"true": 2,
			"upon": 1,
			"on": 10,
			"deep": 1,
			"but": 6,
			"when": 2,
			"gone": 1,
			"burst": 1,
			"raise": 1,
			"out": 3,
			"close": 1,
			"and": 33,
			"days": 1,
			"i": 13,
			"thou": 1,
			"down": 3,
			"home": 2,
			"here": 2,
			"too": 1,
			"raised": 1,
			"blossom": 1,
			"how": 2,
			"from": 6,
			"strange": 2,
			"across": 1,
			"sublime": 1,
			"these": 1,
			"while": 2,
			"no": 4,
			"with": 18,
			"now": 5,
			"will": 1,
			"all": 21,
			"wild": 1,
			"then": 3,
			"through": 1,
			"thomas": 2,
			"well": 1,
			"shine": 1,
			"behind": 2,
			"our": 1,
			"wrong": 1,
			"day": 1,
			"fallen": 1,
			"shall": 4,
			"before": 1,
			"still": 5,
			"yet": 2,
			"to": 28,
			"into": 4,
			"round": 2,
			"mid": 1,
			"slowly": 1,
			"lie": 3,
			"live": 1,
			"hence": 1,
			"may": 1,
			"sweep": 1,
			"we": 6,
			"spread": 1,
			"whose": 1,
			"as": 5,
			"he": 2,
			"me": 1,
			"at": 2,
			"below": 1,
			"straight": 1,
			"o": 1,
			"coming": 1,
			"left": 1,
			"the": 18,
			"her": 1,
			"dead": 1,
			"fail": 1,
			"near": 1,
			"first": 1,
			"there": 4,
			"in": 29,
			"aloud": 1,
			"seem": 1
		},
		"sometimes": {
			"his": 2,
			"tell": 1,
			"seen": 1,
			"after": 1,
			"up": 1,
			"among": 1,
			"it": 2,
			"is": 1,
			"they": 1,
			"comes": 1,
			"better": 1,
			"because": 1,
			"fall": 1,
			"had": 2,
			"an": 2,
			"hold": 1,
			"or": 1,
			"sometimes": 1,
			"on": 3,
			"when": 2,
			"say": 1,
			"and": 2,
			"i": 2,
			"thou": 1,
			"from": 1,
			"would": 1,
			"with": 3,
			"lose": 1,
			"through": 1,
			"fear": 1,
			"to": 3,
			"we": 1,
			"falling": 1,
			"at": 1,
			"the": 5,
			"her": 1,
			"in": 1
		},
		"pines": {
			"of": 1,
			"you": 1,
			"where": 2,
			"sing": 1,
			"that": 1,
			"their": 1,
			"so": 2,
			"delight": 1,
			"ye": 1,
			"t": 1,
			"and": 5,
			"how": 1,
			"slain": 1,
			"before": 1,
			"the": 1
		},
		"joys": {
			"voices": 1,
			"are": 2,
			"who": 1,
			"of": 4,
			"off": 1,
			"angel": 1,
			"nor": 1,
			"three": 1,
			"pass": 1,
			"not": 2,
			"wisdom": 1,
			"by": 1,
			"long": 1,
			"is": 1,
			"like": 2,
			"just": 1,
			"for": 2,
			"my": 1,
			"note": 1,
			"thy": 1,
			"hope": 1,
			"born": 1,
			"that": 4,
			"fain": 1,
			"on": 1,
			"when": 3,
			"and": 10,
			"here": 1,
			"too": 1,
			"such": 1,
			"all": 1,
			"our": 1,
			"to": 2,
			"may": 1,
			"we": 3,
			"o": 1,
			"grow": 1,
			"though": 1,
			"in": 3,
			"aloud": 1
		},
		"adieu": {
			"she": 1,
			"dear": 1,
			"for": 5,
			"my": 2,
			"thy": 1,
			"bright": 1,
			"adieu": 4,
			"i": 1,
			"no": 1,
			"soft": 1,
			"to": 1,
			"may": 1,
			"fair": 1,
			"the": 1
		},
		"courage": {
			"none": 1,
			"up": 1,
			"forth": 1,
			"two": 2,
			"not": 1,
			"alone": 1,
			"is": 1,
			"take": 1,
			"god": 1,
			"that": 1,
			"a": 1,
			"sometimes": 1,
			"courage": 9,
			"never": 1,
			"but": 1,
			"length": 1,
			"and": 4,
			"down": 1,
			"henry": 1,
			"with": 2,
			"yet": 1,
			"to": 1,
			"strength": 1,
			"o": 1,
			"the": 4,
			"in": 1,
			"aloud": 1
		},
		"true": {
			"sweet": 1,
			"jean": 1,
			"more": 1,
			"ring": 1,
			"wife": 1,
			"blessings": 1,
			"loves": 4,
			"im": 1,
			"laws": 1,
			"light": 2,
			"doubt": 1,
			"happiness": 3,
			"charity": 1,
			"play": 1,
			"fell": 1,
			"who": 2,
			"which": 1,
			"of": 4,
			"after": 1,
			"liberty": 1,
			"brother": 1,
			"part": 1,
			"not": 2,
			"it": 2,
			"ease": 1,
			"by": 1,
			"jove": 1,
			"is": 1,
			"vision": 1,
			"soon": 1,
			"unto": 1,
			"good": 1,
			"they": 1,
			"nature": 2,
			"than": 2,
			"those": 1,
			"friends": 1,
			"church": 1,
			"lovers": 5,
			"for": 6,
			"fixed": 1,
			"rest": 1,
			"remain": 1,
			"beauty": 2,
			"ere": 1,
			"hope": 1,
			"faith": 1,
			"god": 1,
			"can": 1,
			"wit": 1,
			"that": 2,
			"if": 4,
			"what": 1,
			"oh": 1,
			"or": 1,
			"eye": 1,
			"lest": 1,
			"have": 1,
			"a": 6,
			"so": 1,
			"true": 1,
			"lord": 1,
			"never": 1,
			"delight": 1,
			"love": 13,
			"on": 3,
			"above": 1,
			"but": 5,
			"death": 1,
			"turns": 1,
			"merit": 1,
			"out": 1,
			"heart": 2,
			"and": 13,
			"move": 1,
			"i": 7,
			"thou": 2,
			"judge": 1,
			"how": 1,
			"hearts": 2,
			"gifts": 1,
			"honor": 2,
			"with": 1,
			"sad": 1,
			"realm": 1,
			"service": 1,
			"king": 1,
			"wealth": 1,
			"yet": 3,
			"way": 1,
			"to": 6,
			"poetry": 1,
			"wood": 1,
			"hail": 1,
			"we": 1,
			"whose": 1,
			"as": 8,
			"stand": 7,
			"english": 1,
			"life": 1,
			"he": 1,
			"at": 1,
			"o": 2,
			"the": 9,
			"tis": 1,
			"in": 4
		},
		"sink": {
			"of": 1,
			"alike": 1,
			"dear": 1,
			"by": 1,
			"away": 1,
			"those": 1,
			"heart": 1,
			"and": 3,
			"i": 1,
			"down": 2,
			"beneath": 1,
			"while": 1,
			"to": 3,
			"in": 3
		},
		"green": {
			"earth": 1,
			"birds": 1,
			"his": 1,
			"woe": 1,
			"of": 7,
			"graves": 1,
			"hills": 1,
			"fruit": 1,
			"rivers": 1,
			"water": 1,
			"by": 1,
			"woods": 1,
			"land": 1,
			"is": 5,
			"like": 1,
			"why": 1,
			"they": 1,
			"strike": 1,
			"leaves": 4,
			"sea": 1,
			"where": 3,
			"theres": 1,
			"my": 2,
			"came": 1,
			"again": 1,
			"waves": 1,
			"most": 2,
			"were": 1,
			"shell": 1,
			"was": 1,
			"that": 4,
			"leaf": 1,
			"an": 1,
			"repose": 1,
			"or": 2,
			"tree": 2,
			"blush": 1,
			"isle": 1,
			"a": 5,
			"so": 1,
			"pines": 1,
			"on": 2,
			"but": 3,
			"grass": 5,
			"time": 1,
			"when": 1,
			"plain": 1,
			"be": 2,
			"head": 1,
			"and": 29,
			"i": 1,
			"sunny": 2,
			"how": 1,
			"from": 1,
			"no": 1,
			"calm": 1,
			"with": 4,
			"then": 1,
			"spring": 1,
			"shall": 2,
			"to": 1,
			"into": 1,
			"lie": 1,
			"we": 2,
			"whose": 2,
			"he": 1,
			"me": 1,
			"flag": 1,
			"below": 1,
			"chain": 1,
			"the": 14,
			"trees": 1,
			"there": 1,
			"in": 2
		},
		"flies": {
			"his": 1,
			"of": 1,
			"by": 1,
			"like": 2,
			"you": 1,
			"thy": 1,
			"oer": 1,
			"what": 1,
			"or": 1,
			"brings": 1,
			"lord": 1,
			"on": 1,
			"when": 1,
			"lifes": 1,
			"and": 3,
			"march": 1,
			"i": 1,
			"home": 1,
			"from": 2,
			"with": 1,
			"thomas": 1,
			"to": 1,
			"french": 1,
			"he": 1,
			"the": 3,
			"in": 1
		},
		"upon": {
			"itself": 1,
			"us": 4,
			"thine": 1,
			"earth": 1,
			"his": 39,
			"him": 5,
			"men": 1,
			"of": 2,
			"this": 6,
			"high": 1,
			"rose": 1,
			"mine": 1,
			"dry": 1,
			"every": 1,
			"it": 3,
			"host": 1,
			"by": 1,
			"although": 1,
			"like": 1,
			"ever": 1,
			"you": 2,
			"its": 8,
			"tomorrow": 1,
			"my": 25,
			"deaths": 1,
			"thy": 14,
			"yes": 1,
			"cheer": 1,
			"face": 1,
			"god": 1,
			"that": 11,
			"both": 1,
			"oh": 1,
			"an": 2,
			"de": 1,
			"their": 15,
			"a": 31,
			"them": 6,
			"green": 1,
			"many": 1,
			"thee": 7,
			"t": 3,
			"and": 3,
			"days": 1,
			"i": 1,
			"one": 1,
			"such": 1,
			"saint": 1,
			"each": 1,
			"anothers": 2,
			"these": 1,
			"some": 5,
			"all": 5,
			"then": 1,
			"dost": 1,
			"our": 7,
			"night": 1,
			"only": 1,
			"your": 8,
			"mankind": 1,
			"growing": 1,
			"yon": 2,
			"whose": 3,
			"me": 7,
			"the": 199,
			"tis": 1,
			"bent": 1,
			"her": 25,
			"in": 1,
			"ruin": 1
		},
		"gallant": {
			"flower": 2,
			"crest": 1,
			"back": 1,
			"who": 1,
			"deeds": 1,
			"of": 1,
			"souls": 1,
			"forth": 1,
			"few": 1,
			"good": 1,
			"steed": 2,
			"strive": 1,
			"show": 2,
			"arm": 1,
			"rode": 1,
			"ran": 1,
			"horse": 1,
			"lay": 1,
			"many": 1,
			"spirit": 2,
			"death": 1,
			"and": 2,
			"no": 1,
			"rouse": 1,
			"neer": 1,
			"to": 1,
			"ship": 1,
			"the": 2,
			"tread": 1,
			"there": 1,
			"in": 2
		},
		"folly": {
			"of": 1,
			"joy": 1,
			"by": 1,
			"long": 1,
			"you": 1,
			"theres": 1,
			"born": 1,
			"that": 1,
			"have": 1,
			"a": 1,
			"lay": 1,
			"and": 1,
			"do": 1,
			"then": 2,
			"sleeps": 1,
			"to": 2,
			"into": 1,
			"as": 1,
			"life": 1,
			"he": 1,
			"me": 1,
			"grow": 1,
			"the": 1
		},
		"lay": {
			"low": 1,
			"dying": 4,
			"us": 3,
			"suffering": 1,
			"thine": 1,
			"within": 1,
			"his": 2,
			"him": 14,
			"lady": 1,
			"bare": 1,
			"white": 1,
			"warm": 1,
			"under": 1,
			"who": 2,
			"worth": 1,
			"of": 5,
			"this": 1,
			"up": 1,
			"not": 2,
			"it": 2,
			"by": 2,
			"alone": 1,
			"cold": 1,
			"is": 1,
			"like": 3,
			"they": 1,
			"pale": 1,
			"lightly": 1,
			"for": 2,
			"my": 5,
			"thy": 4,
			"stretched": 1,
			"along": 2,
			"that": 1,
			"make": 1,
			"hold": 1,
			"their": 4,
			"a": 2,
			"so": 1,
			"them": 1,
			"upon": 1,
			"on": 12,
			"when": 2,
			"t": 1,
			"close": 1,
			"and": 7,
			"wounded": 1,
			"hid": 1,
			"i": 1,
			"down": 1,
			"one": 1,
			"from": 1,
			"sleeping": 3,
			"beneath": 2,
			"these": 1,
			"while": 2,
			"no": 1,
			"with": 4,
			"drew": 1,
			"now": 1,
			"all": 2,
			"then": 2,
			"through": 1,
			"asleep": 1,
			"our": 2,
			"passing": 1,
			"aside": 1,
			"open": 1,
			"fallen": 1,
			"your": 2,
			"to": 4,
			"withered": 1,
			"we": 1,
			"whose": 1,
			"he": 1,
			"me": 6,
			"at": 1,
			"below": 1,
			"o": 1,
			"the": 15,
			"her": 2,
			"weak": 1,
			"in": 11
		},
		"things": {
			"sweet": 1,
			"come": 1,
			"else": 1,
			"thine": 1,
			"unseen": 2,
			"went": 1,
			"save": 1,
			"none": 1,
			"are": 9,
			"under": 1,
			"who": 2,
			"which": 1,
			"call": 1,
			"body": 1,
			"of": 3,
			"high": 1,
			"up": 1,
			"she": 1,
			"silence": 1,
			"dear": 1,
			"fade": 1,
			"burn": 1,
			"serve": 1,
			"evil": 1,
			"neither": 1,
			"by": 2,
			"long": 1,
			"is": 1,
			"like": 3,
			"they": 1,
			"without": 1,
			"where": 1,
			"for": 2,
			"lost": 1,
			"should": 1,
			"worse": 1,
			"rest": 1,
			"my": 1,
			"standing": 1,
			"great": 1,
			"john": 1,
			"forgot": 1,
			"thy": 1,
			"because": 1,
			"were": 2,
			"oer": 2,
			"that": 14,
			"if": 2,
			"always": 1,
			"make": 1,
			"crowd": 1,
			"pure": 1,
			"nothing": 1,
			"have": 7,
			"a": 2,
			"so": 1,
			"quite": 1,
			"above": 1,
			"but": 3,
			"death": 1,
			"when": 1,
			"eternal": 3,
			"be": 5,
			"t": 1,
			"and": 9,
			"i": 5,
			"unknown": 1,
			"thou": 2,
			"down": 1,
			"here": 1,
			"too": 5,
			"each": 2,
			"from": 2,
			"living": 1,
			"present": 1,
			"with": 3,
			"around": 1,
			"soft": 1,
			"give": 1,
			"will": 2,
			"all": 4,
			"thought": 1,
			"well": 1,
			"clear": 1,
			"yet": 3,
			"to": 6,
			"round": 1,
			"may": 2,
			"we": 3,
			"as": 1,
			"done": 4,
			"said": 1,
			"he": 1,
			"at": 1,
			"grow": 1,
			"arise": 1,
			"the": 11,
			"though": 1,
			"there": 1,
			"in": 7,
			"seem": 1
		},
		"lord": {
			"come": 1,
			"low": 1,
			"us": 1,
			"more": 1,
			"won": 1,
			"within": 2,
			"england": 1,
			"christ": 2,
			"his": 2,
			"save": 2,
			"tennyson": 19,
			"ii": 1,
			"hast": 1,
			"alas": 1,
			"under": 1,
			"who": 5,
			"greece": 1,
			"of": 36,
			"once": 1,
			"she": 4,
			"dear": 1,
			"beloved": 1,
			"not": 8,
			"put": 1,
			"praise": 7,
			"it": 1,
			"by": 3,
			"eyes": 1,
			"father": 1,
			"alone": 2,
			"is": 13,
			"farewell": 1,
			"why": 1,
			"forever": 1,
			"douglas": 2,
			"steed": 1,
			"een": 1,
			"song": 1,
			"for": 6,
			"take": 1,
			"my": 5,
			"words": 1,
			"john": 2,
			"thy": 3,
			"teach": 1,
			"moan": 1,
			"sits": 1,
			"william": 7,
			"god": 6,
			"shell": 1,
			"was": 3,
			"that": 7,
			"if": 3,
			"let": 2,
			"womans": 1,
			"make": 1,
			"what": 2,
			"or": 1,
			"have": 1,
			"a": 1,
			"so": 3,
			"brings": 1,
			"things": 1,
			"lord": 1,
			"hath": 1,
			"whence": 2,
			"on": 1,
			"sees": 1,
			"but": 6,
			"when": 2,
			"gone": 1,
			"knows": 1,
			"be": 1,
			"van": 1,
			"out": 1,
			"say": 1,
			"and": 12,
			"fly": 1,
			"i": 3,
			"thou": 6,
			"here": 3,
			"how": 4,
			"help": 1,
			"from": 3,
			"with": 9,
			"now": 1,
			"give": 2,
			"will": 1,
			"himself": 2,
			"all": 3,
			"familiar": 1,
			"through": 1,
			"has": 1,
			"king": 3,
			"our": 2,
			"hall": 1,
			"shall": 5,
			"your": 1,
			"to": 13,
			"art": 1,
			"lived": 1,
			"may": 1,
			"sweep": 1,
			"whose": 1,
			"he": 6,
			"me": 1,
			"lies": 1,
			"o": 2,
			"the": 17,
			"tis": 1,
			"though": 2,
			"passed": 1,
			"jesus": 3,
			"in": 8,
			"forgive": 1
		},
		"whole": {
			"earth": 1,
			"see": 1,
			"ages": 1,
			"white": 1,
			"story": 1,
			"of": 4,
			"worlds": 1,
			"souls": 1,
			"hills": 1,
			"city": 2,
			"race": 1,
			"far": 1,
			"long": 1,
			"pride": 1,
			"eternity": 1,
			"away": 1,
			"together": 1,
			"wide": 1,
			"moves": 1,
			"than": 1,
			"pleasure": 2,
			"for": 1,
			"should": 2,
			"great": 1,
			"sadly": 1,
			"soul": 2,
			"wit": 1,
			"were": 1,
			"man": 1,
			"or": 1,
			"their": 1,
			"love": 1,
			"religious": 1,
			"van": 1,
			"line": 5,
			"heart": 1,
			"and": 3,
			"year": 2,
			"i": 2,
			"one": 1,
			"broad": 1,
			"how": 1,
			"through": 1,
			"day": 1,
			"cities": 1,
			"round": 1,
			"may": 1,
			"whose": 1,
			"as": 3,
			"life": 3,
			"the": 1,
			"world": 7,
			"oft": 1,
			"in": 1,
			"air": 1
		},
		"never": {
			"come": 6,
			"dare": 1,
			"more": 4,
			"hear": 1,
			"taught": 1,
			"won": 1,
			"since": 1,
			"died": 1,
			"forget": 6,
			"doubt": 1,
			"die": 1,
			"hell": 1,
			"him": 1,
			"see": 4,
			"kiss": 1,
			"weary": 2,
			"back": 2,
			"made": 4,
			"fell": 1,
			"seen": 4,
			"suffer": 1,
			"which": 1,
			"dies": 7,
			"call": 1,
			"of": 2,
			"kept": 1,
			"once": 1,
			"feels": 1,
			"nor": 2,
			"find": 1,
			"part": 1,
			"pass": 1,
			"aught": 1,
			"dwell": 1,
			"it": 2,
			"shake": 2,
			"shows": 1,
			"far": 1,
			"by": 3,
			"long": 1,
			"cold": 2,
			"is": 1,
			"rise": 3,
			"looked": 1,
			"hoary": 1,
			"sway": 1,
			"either": 1,
			"they": 2,
			"shook": 1,
			"heard": 1,
			"leaves": 1,
			"earths": 1,
			"its": 2,
			"beams": 1,
			"despair": 5,
			"for": 3,
			"past": 1,
			"lost": 2,
			"take": 1,
			"speak": 3,
			"rest": 1,
			"my": 4,
			"spent": 1,
			"blow": 1,
			"whats": 1,
			"bore": 1,
			"again": 2,
			"touch": 1,
			"thy": 2,
			"sing": 1,
			"comes": 4,
			"hope": 1,
			"wear": 1,
			"garden": 1,
			"cease": 1,
			"any": 1,
			"reach": 1,
			"stretched": 1,
			"whether": 1,
			"can": 5,
			"were": 2,
			"flee": 1,
			"did": 4,
			"was": 9,
			"that": 1,
			"let": 2,
			"arm": 1,
			"man": 1,
			"says": 1,
			"taste": 2,
			"spake": 2,
			"half": 1,
			"had": 5,
			"gives": 1,
			"must": 1,
			"what": 1,
			"an": 1,
			"think": 1,
			"ran": 1,
			"have": 3,
			"gave": 2,
			"trod": 2,
			"fill": 1,
			"a": 19,
			"so": 1,
			"never": 6,
			"leave": 2,
			"love": 1,
			"on": 5,
			"saw": 5,
			"break": 1,
			"quite": 1,
			"maryland": 1,
			"old": 1,
			"known": 1,
			"thee": 1,
			"lives": 2,
			"gone": 1,
			"merry": 1,
			"felt": 3,
			"be": 14,
			"brave": 1,
			"and": 4,
			"do": 1,
			"move": 1,
			"dream": 1,
			"ask": 1,
			"i": 2,
			"told": 2,
			"here": 1,
			"too": 1,
			"such": 4,
			"hearts": 1,
			"from": 2,
			"sought": 1,
			"drink": 1,
			"mind": 2,
			"beneath": 1,
			"no": 2,
			"set": 1,
			"shone": 1,
			"learned": 1,
			"till": 1,
			"will": 5,
			"flash": 1,
			"all": 1,
			"desolate": 1,
			"thought": 2,
			"could": 5,
			"doth": 1,
			"wake": 1,
			"turned": 2,
			"our": 1,
			"walked": 1,
			"sleeps": 1,
			"fear": 1,
			"loved": 4,
			"stay": 1,
			"shall": 9,
			"chance": 1,
			"yet": 2,
			"mark": 1,
			"to": 15,
			"clouds": 2,
			"into": 3,
			"hence": 1,
			"get": 1,
			"know": 7,
			"lived": 1,
			"smiled": 2,
			"we": 1,
			"whose": 1,
			"stand": 2,
			"done": 1,
			"he": 2,
			"arms": 1,
			"me": 3,
			"at": 1,
			"point": 1,
			"the": 5,
			"waste": 1,
			"though": 4,
			"fight": 2,
			"sure": 1,
			"seems": 1,
			"her": 2,
			"passed": 2,
			"dead": 1,
			"fail": 2,
			"near": 1,
			"there": 4,
			"in": 5,
			"dim": 1,
			"shed": 1,
			"grows": 1
		},
		"ceased": {
			"its": 1,
			"for": 1,
			"their": 1,
			"but": 1,
			"and": 1,
			"from": 1,
			"with": 2,
			"all": 1,
			"to": 11,
			"the": 1,
			"her": 1,
			"in": 1
		},
		"many": {
			"come": 1,
			"more": 3,
			"birds": 1,
			"die": 1,
			"thousand": 2,
			"voices": 1,
			"tennyson": 2,
			"ages": 1,
			"hast": 1,
			"are": 3,
			"made": 2,
			"who": 1,
			"hollow": 1,
			"men": 1,
			"of": 5,
			"graves": 1,
			"worlds": 1,
			"sons": 1,
			"find": 1,
			"far": 1,
			"eyes": 1,
			"long": 1,
			"is": 1,
			"like": 1,
			"children": 1,
			"good": 2,
			"swept": 1,
			"without": 1,
			"those": 1,
			"where": 1,
			"others": 1,
			"summers": 1,
			"for": 1,
			"should": 1,
			"deaths": 1,
			"times": 3,
			"fools": 1,
			"glow": 1,
			"that": 1,
			"poems": 1,
			"another": 2,
			"make": 1,
			"an": 8,
			"stars": 1,
			"or": 1,
			"de": 1,
			"sweeter": 1,
			"hands": 1,
			"have": 1,
			"tears": 1,
			"a": 140,
			"things": 2,
			"many": 3,
			"cruel": 1,
			"but": 1,
			"poor": 1,
			"years": 3,
			"waters": 1,
			"be": 1,
			"and": 10,
			"bones": 1,
			"dream": 1,
			"days": 1,
			"one": 1,
			"other": 3,
			"till": 1,
			"meet": 1,
			"prayers": 1,
			"then": 1,
			"has": 1,
			"to": 1,
			"springs": 1,
			"little": 1,
			"we": 1,
			"whose": 2,
			"as": 1,
			"happy": 1,
			"me": 1,
			"at": 1,
			"the": 4,
			"though": 1,
			"oft": 1,
			"there": 3,
			"in": 1,
			"seem": 1
		},
		"dawn": {
			"who": 1,
			"of": 9,
			"thyself": 1,
			"rose": 1,
			"behold": 1,
			"began": 1,
			"is": 1,
			"like": 1,
			"mild": 1,
			"where": 1,
			"whats": 1,
			"was": 1,
			"or": 1,
			"on": 4,
			"and": 6,
			"i": 1,
			"with": 1,
			"till": 1,
			"doth": 1,
			"night": 1,
			"shall": 1,
			"still": 1,
			"to": 2,
			"little": 1,
			"sat": 1,
			"o": 1,
			"the": 2,
			"her": 1,
			"in": 1,
			"grows": 1
		},
		"spirit": {
			"come": 1,
			"bow": 1,
			"caught": 1,
			"dare": 1,
			"within": 1,
			"free": 3,
			"earth": 1,
			"die": 1,
			"learn": 1,
			"dance": 1,
			"fell": 1,
			"dies": 1,
			"toward": 1,
			"of": 25,
			"up": 2,
			"among": 1,
			"grew": 1,
			"it": 1,
			"over": 1,
			"by": 1,
			"eyes": 1,
			"alone": 1,
			"twixt": 1,
			"land": 3,
			"is": 5,
			"takes": 1,
			"ever": 1,
			"they": 1,
			"prayer": 1,
			"moves": 1,
			"guide": 1,
			"those": 1,
			"for": 7,
			"burns": 1,
			"take": 1,
			"standing": 1,
			"sighing": 1,
			"again": 1,
			"can": 1,
			"comfort": 12,
			"oer": 2,
			"immortal": 1,
			"did": 1,
			"was": 1,
			"that": 8,
			"let": 1,
			"fall": 1,
			"pure": 1,
			"think": 1,
			"finds": 1,
			"bright": 1,
			"have": 2,
			"a": 1,
			"so": 2,
			"brings": 1,
			"given": 1,
			"sometimes": 1,
			"never": 1,
			"spirit": 1,
			"hath": 1,
			"on": 1,
			"thee": 1,
			"be": 2,
			"sweetly": 1,
			"and": 13,
			"march": 1,
			"do": 1,
			"i": 1,
			"down": 1,
			"broke": 2,
			"here": 1,
			"too": 3,
			"from": 4,
			"would": 1,
			"with": 1,
			"give": 1,
			"till": 1,
			"will": 1,
			"himself": 1,
			"all": 1,
			"through": 1,
			"thats": 1,
			"doth": 2,
			"shine": 1,
			"our": 2,
			"feel": 1,
			"works": 1,
			"shall": 3,
			"before": 1,
			"still": 1,
			"yet": 1,
			"to": 10,
			"poetry": 1,
			"may": 1,
			"we": 1,
			"me": 1,
			"strength": 2,
			"at": 1,
			"lies": 1,
			"o": 2,
			"the": 6,
			"ghost": 1,
			"her": 2,
			"dead": 1,
			"fire": 1,
			"there": 1,
			"in": 11
		},
		"hath": {
			"come": 1,
			"us": 1,
			"wrought": 4,
			"won": 1,
			"since": 1,
			"died": 2,
			"worn": 1,
			"earth": 1,
			"his": 5,
			"hell": 1,
			"crossed": 1,
			"none": 1,
			"made": 9,
			"seen": 3,
			"of": 1,
			"this": 4,
			"kept": 1,
			"grown": 1,
			"not": 10,
			"put": 1,
			"every": 1,
			"it": 2,
			"magic": 1,
			"like": 1,
			"away": 1,
			"found": 2,
			"kings": 1,
			"grant": 1,
			"swept": 1,
			"heard": 1,
			"without": 1,
			"laid": 1,
			"its": 8,
			"kindly": 1,
			"just": 1,
			"for": 2,
			"blown": 2,
			"lost": 1,
			"fixed": 1,
			"my": 2,
			"thy": 2,
			"wept": 1,
			"better": 2,
			"soul": 1,
			"torn": 1,
			"god": 1,
			"power": 5,
			"that": 1,
			"let": 1,
			"often": 1,
			"cried": 1,
			"half": 1,
			"had": 2,
			"must": 1,
			"an": 1,
			"even": 1,
			"charms": 2,
			"trod": 1,
			"their": 2,
			"a": 12,
			"so": 1,
			"given": 2,
			"never": 5,
			"ceased": 3,
			"quite": 1,
			"but": 4,
			"time": 2,
			"known": 2,
			"when": 1,
			"gone": 1,
			"naught": 1,
			"and": 6,
			"i": 1,
			"told": 2,
			"here": 1,
			"raised": 1,
			"such": 1,
			"each": 1,
			"from": 2,
			"strange": 1,
			"while": 1,
			"no": 15,
			"bound": 2,
			"took": 1,
			"with": 1,
			"now": 1,
			"set": 2,
			"some": 1,
			"blest": 1,
			"angels": 1,
			"turned": 3,
			"equal": 1,
			"your": 1,
			"to": 2,
			"into": 1,
			"as": 2,
			"borne": 2,
			"done": 2,
			"said": 2,
			"he": 8,
			"me": 1,
			"at": 1,
			"led": 1,
			"o": 1,
			"left": 6,
			"blessed": 1,
			"the": 12,
			"bent": 1,
			"passed": 3,
			"been": 13,
			"near": 1,
			"oft": 1,
			"there": 1,
			"in": 4,
			"shed": 1
		},
		"ashes": {
			"dust": 1,
			"him": 1,
			"of": 6,
			"over": 1,
			"for": 1,
			"thy": 1,
			"what": 1,
			"on": 2,
			"watched": 1,
			"and": 3,
			"sleeping": 1,
			"wild": 1,
			"to": 2,
			"into": 1,
			"little": 1,
			"live": 1,
			"freedoms": 1,
			"may": 1,
			"at": 1,
			"the": 2
		},
		"almost": {
			"won": 1,
			"touched": 1,
			"made": 1,
			"three": 1,
			"over": 1,
			"long": 1,
			"like": 2,
			"heard": 1,
			"despair": 1,
			"for": 1,
			"lost": 1,
			"smiles": 1,
			"power": 1,
			"oer": 1,
			"think": 1,
			"time": 1,
			"gone": 2,
			"last": 1,
			"all": 1,
			"gay": 1,
			"wild": 1,
			"before": 1,
			"to": 2,
			"as": 2,
			"fair": 1,
			"the": 2
		},
		"cruel": {
			"his": 1,
			"law": 1,
			"war": 3,
			"made": 1,
			"men": 1,
			"ones": 1,
			"country": 1,
			"of": 1,
			"sword": 1,
			"eyes": 1,
			"father": 1,
			"cross": 1,
			"ever": 1,
			"hand": 1,
			"earl": 1,
			"face": 1,
			"false": 1,
			"hands": 2,
			"tree": 1,
			"red": 1,
			"deep": 1,
			"but": 1,
			"death": 1,
			"and": 3,
			"fate": 1,
			"mind": 1,
			"maid": 1,
			"with": 1,
			"storms": 1,
			"still": 1,
			"as": 1,
			"fight": 1
		},
		"leave": {
			"us": 6,
			"his": 2,
			"him": 4,
			"this": 3,
			"off": 1,
			"hes": 1,
			"it": 3,
			"you": 2,
			"my": 3,
			"vain": 1,
			"battles": 1,
			"that": 1,
			"or": 1,
			"their": 4,
			"a": 2,
			"them": 2,
			"love": 1,
			"thee": 7,
			"when": 1,
			"out": 1,
			"and": 6,
			"here": 1,
			"no": 1,
			"with": 2,
			"all": 2,
			"then": 1,
			"behind": 3,
			"our": 2,
			"still": 1,
			"your": 3,
			"to": 9,
			"me": 6,
			"o": 2,
			"the": 22,
			"her": 3,
			"in": 2
		},
		"met": {
			"his": 4,
			"him": 3,
			"wi": 1,
			"who": 1,
			"two": 1,
			"like": 1,
			"my": 2,
			"that": 1,
			"a": 4,
			"on": 1,
			"above": 1,
			"and": 5,
			"i": 1,
			"such": 1,
			"from": 2,
			"with": 1,
			"soggarth": 1,
			"then": 1,
			"to": 1,
			"me": 2,
			"o": 1,
			"the": 2,
			"in": 3
		},
		"walk": {
			"unseen": 1,
			"of": 2,
			"fresh": 1,
			"by": 3,
			"my": 1,
			"therefore": 1,
			"that": 1,
			"or": 1,
			"think": 1,
			"upon": 1,
			"on": 3,
			"evermore": 1,
			"and": 3,
			"thou": 1,
			"these": 1,
			"with": 9,
			"till": 2,
			"desolate": 1,
			"through": 1,
			"our": 1,
			"before": 1,
			"to": 1,
			"as": 1,
			"he": 1,
			"at": 2,
			"the": 3,
			"in": 5
		},
		"whence": {
			"sweet": 1,
			"his": 1,
			"are": 2,
			"this": 3,
			"it": 1,
			"is": 2,
			"they": 2,
			"came": 3,
			"thy": 1,
			"can": 1,
			"that": 2,
			"or": 1,
			"a": 1,
			"be": 1,
			"and": 4,
			"i": 2,
			"thou": 1,
			"one": 1,
			"all": 1,
			"we": 1,
			"he": 7,
			"the": 6
		},
		"delight": {
			"look": 1,
			"summer": 1,
			"which": 1,
			"of": 3,
			"she": 1,
			"lightning": 1,
			"played": 1,
			"by": 3,
			"hurrah": 1,
			"heard": 1,
			"those": 1,
			"where": 1,
			"my": 2,
			"thy": 2,
			"ere": 1,
			"can": 1,
			"sudden": 1,
			"that": 2,
			"must": 1,
			"so": 1,
			"but": 1,
			"thee": 1,
			"and": 8,
			"i": 1,
			"thou": 1,
			"such": 2,
			"from": 1,
			"no": 2,
			"with": 1,
			"till": 1,
			"all": 1,
			"to": 5,
			"into": 1,
			"may": 1,
			"we": 1,
			"as": 1,
			"me": 1,
			"the": 6,
			"in": 9
		},
		"love": {
			"sweet": 1,
			"tune": 1,
			"come": 4,
			"itself": 1,
			"us": 2,
			"more": 2,
			"taught": 1,
			"thine": 1,
			"died": 1,
			"within": 1,
			"earth": 1,
			"pine": 1,
			"die": 2,
			"his": 3,
			"him": 5,
			"see": 1,
			"begin": 1,
			"play": 1,
			"women": 1,
			"none": 1,
			"hast": 1,
			"are": 6,
			"beside": 1,
			"made": 1,
			"who": 1,
			"which": 3,
			"toward": 1,
			"of": 44,
			"this": 1,
			"keep": 1,
			"once": 1,
			"up": 1,
			"she": 5,
			"among": 2,
			"shakespeare": 1,
			"beyond": 1,
			"nor": 4,
			"thyself": 2,
			"grown": 1,
			"forth": 1,
			"goes": 1,
			"dear": 2,
			"lift": 1,
			"mine": 1,
			"not": 13,
			"divine": 3,
			"burn": 1,
			"it": 10,
			"twas": 1,
			"brought": 1,
			"by": 4,
			"long": 2,
			"is": 42,
			"rise": 1,
			"eternity": 1,
			"like": 4,
			"lo": 1,
			"hurrah": 1,
			"farewell": 1,
			"away": 1,
			"forever": 3,
			"good": 1,
			"they": 5,
			"you": 6,
			"thus": 1,
			"without": 1,
			"earths": 1,
			"its": 2,
			"than": 1,
			"those": 1,
			"where": 3,
			"holy": 1,
			"for": 14,
			"blown": 1,
			"should": 2,
			"rest": 2,
			"my": 14,
			"great": 1,
			"john": 1,
			"again": 3,
			"thy": 8,
			"teach": 1,
			"peace": 1,
			"whom": 3,
			"mary": 1,
			"hope": 1,
			"makes": 2,
			"most": 1,
			"god": 1,
			"can": 9,
			"were": 2,
			"comfort": 1,
			"oer": 1,
			"immortal": 2,
			"indeed": 1,
			"did": 1,
			"was": 5,
			"that": 26,
			"if": 6,
			"drop": 1,
			"another": 1,
			"make": 3,
			"half": 1,
			"had": 4,
			"gives": 1,
			"what": 5,
			"oh": 2,
			"an": 1,
			"repose": 1,
			"or": 9,
			"have": 1,
			"their": 5,
			"a": 9,
			"so": 9,
			"them": 1,
			"true": 1,
			"flies": 1,
			"lay": 1,
			"never": 2,
			"hath": 7,
			"love": 6,
			"on": 6,
			"sees": 1,
			"deep": 1,
			"old": 1,
			"but": 8,
			"thee": 32,
			"ye": 1,
			"when": 2,
			"turns": 1,
			"mans": 1,
			"knows": 1,
			"be": 3,
			"t": 2,
			"heart": 1,
			"and": 80,
			"do": 3,
			"ask": 1,
			"i": 19,
			"thou": 5,
			"down": 1,
			"robin": 2,
			"here": 1,
			"too": 2,
			"one": 1,
			"might": 2,
			"against": 1,
			"perfect": 1,
			"looks": 1,
			"each": 1,
			"how": 2,
			"hearts": 1,
			"higher": 1,
			"from": 10,
			"sought": 2,
			"would": 1,
			"beneath": 1,
			"no": 7,
			"took": 2,
			"decay": 1,
			"with": 26,
			"around": 1,
			"now": 2,
			"some": 1,
			"shone": 1,
			"will": 2,
			"all": 3,
			"chief": 1,
			"then": 3,
			"through": 3,
			"has": 7,
			"service": 2,
			"george": 1,
			"well": 1,
			"doth": 4,
			"our": 1,
			"neer": 1,
			"mercy": 1,
			"shall": 5,
			"before": 2,
			"still": 2,
			"yet": 3,
			"best": 3,
			"to": 34,
			"round": 1,
			"prove": 1,
			"lived": 1,
			"may": 5,
			"we": 6,
			"whose": 2,
			"as": 7,
			"fair": 1,
			"charles": 1,
			"happy": 1,
			"me": 16,
			"at": 2,
			"below": 1,
			"o": 9,
			"arise": 2,
			"the": 41,
			"ghost": 1,
			"tis": 2,
			"treasure": 1,
			"her": 8,
			"first": 1,
			"there": 6,
			"in": 10,
			"flowers": 1,
			"grows": 3
		},
		"tomb": {
			"since": 1,
			"of": 4,
			"by": 1,
			"bade": 1,
			"soon": 1,
			"forever": 1,
			"they": 1,
			"where": 2,
			"for": 1,
			"cannot": 1,
			"fixed": 1,
			"my": 1,
			"can": 1,
			"that": 1,
			"if": 1,
			"let": 1,
			"or": 1,
			"a": 2,
			"so": 2,
			"spirit": 1,
			"saw": 1,
			"old": 1,
			"but": 3,
			"death": 1,
			"and": 6,
			"last": 1,
			"thou": 1,
			"from": 1,
			"no": 1,
			"with": 2,
			"then": 1,
			"our": 1,
			"only": 1,
			"enter": 1,
			"whose": 1,
			"as": 1,
			"the": 3,
			"her": 1,
			"young": 1,
			"there": 1,
			"in": 2
		},
		"groan": {
			"which": 1,
			"by": 1,
			"long": 1,
			"where": 1,
			"sir": 1,
			"a": 1,
			"sorrow": 1,
			"and": 7,
			"beneath": 1,
			"these": 1,
			"through": 1,
			"our": 1,
			"to": 1,
			"the": 2
		},
		"on": {
			"come": 2,
			"dying": 1,
			"summer": 2,
			"itself": 1,
			"us": 6,
			"suffering": 1,
			"thine": 1,
			"died": 1,
			"within": 1,
			"dust": 2,
			"going": 1,
			"loves": 1,
			"light": 1,
			"earth": 44,
			"space": 1,
			"mountains": 2,
			"his": 113,
			"dreary": 1,
			"him": 22,
			"book": 1,
			"wi": 1,
			"temple": 3,
			"cheek": 2,
			"ages": 1,
			"war": 1,
			"alas": 1,
			"right": 1,
			"fell": 2,
			"men": 3,
			"which": 15,
			"deeds": 1,
			"holds": 1,
			"of": 8,
			"this": 26,
			"high": 38,
			"keep": 1,
			"calls": 1,
			"hung": 1,
			"after": 1,
			"hills": 6,
			"once": 2,
			"angel": 1,
			"she": 2,
			"rock": 1,
			"nor": 2,
			"sons": 1,
			"age": 1,
			"joy": 3,
			"foam": 1,
			"height": 1,
			"spot": 1,
			"aught": 1,
			"mine": 3,
			"hours": 1,
			"englands": 1,
			"side": 1,
			"put": 1,
			"today": 1,
			"every": 22,
			"it": 11,
			"evil": 2,
			"over": 2,
			"brought": 1,
			"water": 3,
			"by": 8,
			"eyes": 1,
			"jim": 1,
			"sorrows": 1,
			"pride": 1,
			"land": 2,
			"wars": 1,
			"like": 5,
			"form": 1,
			"immortality": 1,
			"kings": 1,
			"ocean": 2,
			"hark": 1,
			"ever": 1,
			"either": 8,
			"they": 8,
			"path": 2,
			"wide": 1,
			"you": 6,
			"nature": 1,
			"mild": 1,
			"new": 1,
			"afar": 1,
			"earths": 1,
			"its": 26,
			"smile": 1,
			"een": 1,
			"those": 6,
			"sea": 1,
			"friends": 1,
			"where": 1,
			"lovers": 1,
			"holy": 2,
			"summers": 1,
			"gray": 1,
			"for": 7,
			"heaven": 3,
			"lost": 1,
			"bloody": 1,
			"lonely": 2,
			"worse": 1,
			"take": 1,
			"breath": 1,
			"tomorrow": 1,
			"my": 59,
			"blow": 1,
			"great": 1,
			"john": 1,
			"deaths": 1,
			"thy": 37,
			"sing": 1,
			"wall": 1,
			"morn": 1,
			"pray": 1,
			"ere": 1,
			"hopes": 1,
			"waves": 1,
			"whom": 5,
			"better": 2,
			"shore": 5,
			"dearest": 2,
			"ground": 2,
			"hope": 3,
			"wear": 1,
			"rough": 1,
			"sir": 3,
			"yellow": 1,
			"rising": 1,
			"fools": 1,
			"sin": 1,
			"faith": 1,
			"god": 1,
			"foot": 1,
			"moment": 1,
			"were": 1,
			"oer": 2,
			"main": 1,
			"did": 1,
			"walls": 1,
			"that": 27,
			"if": 1,
			"lips": 2,
			"man": 4,
			"daily": 1,
			"both": 2,
			"full": 1,
			"victory": 1,
			"steep": 2,
			"crowd": 1,
			"go": 5,
			"gladness": 1,
			"trust": 2,
			"had": 1,
			"general": 1,
			"what": 2,
			"an": 2,
			"wait": 1,
			"nothing": 1,
			"even": 2,
			"charms": 1,
			"or": 3,
			"field": 1,
			"de": 1,
			"soil": 2,
			"tree": 1,
			"towers": 1,
			"ride": 1,
			"their": 19,
			"fold": 1,
			"a": 75,
			"so": 3,
			"them": 10,
			"many": 8,
			"dawn": 1,
			"on": 7,
			"wing": 1,
			"deep": 1,
			"old": 2,
			"but": 2,
			"death": 2,
			"time": 1,
			"thee": 18,
			"ye": 4,
			"when": 3,
			"gone": 1,
			"lifes": 3,
			"onward": 1,
			"eternal": 1,
			"waters": 1,
			"mans": 1,
			"bed": 2,
			"firm": 1,
			"wings": 7,
			"t": 3,
			"glory": 2,
			"highest": 1,
			"line": 1,
			"earthly": 1,
			"distant": 1,
			"heart": 1,
			"and": 58,
			"march": 1,
			"do": 1,
			"last": 1,
			"ask": 1,
			"blaze": 1,
			"i": 9,
			"snow": 1,
			"thou": 2,
			"home": 1,
			"tower": 1,
			"dull": 1,
			"mortal": 2,
			"one": 4,
			"such": 5,
			"rocks": 2,
			"rome": 1,
			"forest": 1,
			"saint": 2,
			"each": 11,
			"anothers": 2,
			"henry": 1,
			"brow": 1,
			"how": 3,
			"hearts": 1,
			"other": 6,
			"from": 8,
			"sleeping": 1,
			"would": 1,
			"beneath": 1,
			"these": 4,
			"while": 1,
			"no": 4,
			"bound": 1,
			"guilty": 1,
			"with": 6,
			"sad": 1,
			"virtue": 1,
			"soft": 1,
			"now": 2,
			"give": 1,
			"some": 6,
			"shone": 1,
			"till": 5,
			"heads": 1,
			"will": 1,
			"strong": 1,
			"himself": 1,
			"prayers": 1,
			"all": 17,
			"gods": 3,
			"then": 2,
			"through": 8,
			"ten": 1,
			"songs": 1,
			"thread": 1,
			"king": 1,
			"mount": 2,
			"nights": 1,
			"our": 23,
			"day": 2,
			"hall": 1,
			"open": 1,
			"equal": 2,
			"before": 2,
			"only": 1,
			"still": 3,
			"your": 31,
			"natures": 1,
			"yet": 1,
			"to": 17,
			"poetry": 2,
			"hill": 2,
			"clouds": 1,
			"human": 2,
			"poets": 1,
			"mankind": 1,
			"heavenly": 4,
			"glorious": 1,
			"freedoms": 3,
			"spear": 1,
			"ah": 1,
			"may": 2,
			"yon": 7,
			"we": 6,
			"spread": 1,
			"whose": 11,
			"as": 7,
			"fair": 5,
			"stand": 1,
			"end": 1,
			"he": 10,
			"me": 25,
			"at": 2,
			"point": 1,
			"o": 2,
			"browning": 1,
			"yonder": 5,
			"blessed": 1,
			"the": 609,
			"though": 1,
			"her": 60,
			"change": 1,
			"fire": 5,
			"trees": 1,
			"there": 2,
			"in": 12,
			"flowers": 2,
			"purpose": 1,
			"ruin": 1,
			"saith": 1,
			"thoughts": 1
		},
		"saw": {
			"within": 1,
			"his": 6,
			"him": 9,
			"of": 1,
			"two": 1,
			"not": 4,
			"it": 3,
			"they": 1,
			"you": 2,
			"its": 1,
			"where": 1,
			"my": 2,
			"standing": 1,
			"john": 1,
			"earl": 1,
			"thy": 1,
			"power": 1,
			"were": 1,
			"was": 2,
			"that": 3,
			"another": 1,
			"nothing": 1,
			"eye": 1,
			"their": 1,
			"a": 12,
			"them": 4,
			"lord": 1,
			"on": 2,
			"but": 2,
			"thee": 8,
			"ye": 3,
			"and": 4,
			"i": 2,
			"how": 1,
			"from": 1,
			"no": 2,
			"with": 1,
			"around": 1,
			"virtue": 1,
			"some": 1,
			"all": 1,
			"gods": 1,
			"your": 1,
			"as": 2,
			"he": 2,
			"me": 1,
			"at": 1,
			"the": 42,
			"though": 1,
			"her": 7,
			"young": 1,
			"in": 3
		},
		"bend": {
			"thine": 1,
			"unseen": 1,
			"see": 1,
			"which": 1,
			"up": 1,
			"a": 1,
			"spirit": 1,
			"on": 2,
			"thee": 1,
			"and": 5,
			"thou": 1,
			"our": 1,
			"to": 2,
			"the": 3,
			"in": 1
		},
		"break": {
			"im": 1,
			"of": 11,
			"up": 1,
			"off": 1,
			"nor": 1,
			"it": 1,
			"over": 1,
			"although": 1,
			"hark": 1,
			"they": 1,
			"you": 1,
			"its": 1,
			"for": 2,
			"my": 2,
			"thy": 2,
			"oer": 1,
			"if": 1,
			"what": 1,
			"lest": 1,
			"a": 3,
			"them": 2,
			"upon": 1,
			"never": 2,
			"on": 1,
			"break": 7,
			"but": 3,
			"when": 1,
			"wondrous": 1,
			"and": 2,
			"i": 1,
			"thou": 1,
			"no": 1,
			"with": 1,
			"gods": 1,
			"through": 3,
			"our": 2,
			"shall": 1,
			"your": 2,
			"yet": 1,
			"as": 1,
			"stand": 1,
			"at": 2,
			"lies": 1,
			"the": 12,
			"in": 3
		},
		"quite": {
			"forget": 1,
			"of": 2,
			"is": 1,
			"my": 1,
			"forgot": 1,
			"oer": 1,
			"that": 2,
			"another": 1,
			"make": 1,
			"a": 1,
			"so": 1,
			"mans": 1,
			"and": 2,
			"one": 1,
			"while": 1,
			"with": 2,
			"all": 1,
			"through": 1,
			"to": 2,
			"as": 4,
			"the": 3,
			"theyre": 1,
			"sure": 2,
			"in": 1
		},
		"wing": {
			"his": 1,
			"of": 1,
			"send": 1,
			"they": 4,
			"you": 1,
			"its": 3,
			"theres": 1,
			"thy": 1,
			"that": 1,
			"their": 1,
			"so": 1,
			"on": 1,
			"and": 3,
			"i": 1,
			"down": 1,
			"from": 1,
			"no": 1,
			"around": 1,
			"all": 1,
			"to": 2,
			"we": 1,
			"whose": 1,
			"as": 1,
			"o": 1,
			"the": 7,
			"in": 1
		},
		"charm": {
			"his": 1,
			"back": 1,
			"which": 1,
			"of": 7,
			"away": 1,
			"thy": 1,
			"can": 2,
			"a": 1,
			"so": 1,
			"thee": 2,
			"and": 2,
			"no": 1,
			"has": 1,
			"wealth": 1,
			"our": 1,
			"to": 3,
			"th": 1,
			"he": 1,
			"the": 3,
			"in": 2
		},
		"sees": {
			"us": 2,
			"him": 2,
			"nor": 1,
			"it": 3,
			"good": 1,
			"my": 2,
			"thy": 1,
			"god": 2,
			"that": 1,
			"let": 1,
			"half": 1,
			"an": 1,
			"or": 2,
			"a": 2,
			"on": 1,
			"deep": 1,
			"but": 2,
			"thee": 2,
			"lilies": 1,
			"while": 2,
			"no": 3,
			"with": 1,
			"through": 1,
			"only": 1,
			"your": 1,
			"as": 1,
			"at": 1,
			"the": 6,
			"her": 1,
			"in": 2
		},
		"maryland": {
			"come": 5,
			"his": 1,
			"james": 1,
			"she": 2,
			"dear": 1,
			"hark": 1,
			"for": 1,
			"should": 1,
			"my": 10,
			"thy": 1,
			"better": 1,
			"remember": 1,
			"but": 2,
			"i": 2,
			"thou": 3,
			"with": 1,
			"round": 1,
			"the": 3
		},
		"own": {
			"sweet": 3,
			"blue": 2,
			"caught": 1,
			"wife": 1,
			"loves": 1,
			"light": 1,
			"his": 3,
			"james": 1,
			"fond": 1,
			"see": 1,
			"blood": 2,
			"temple": 1,
			"surely": 1,
			"are": 1,
			"right": 1,
			"back": 1,
			"ive": 1,
			"word": 1,
			"men": 1,
			"which": 1,
			"sake": 2,
			"deeds": 1,
			"dies": 1,
			"worth": 1,
			"of": 1,
			"this": 1,
			"blind": 1,
			"star": 2,
			"she": 1,
			"shakespeare": 1,
			"sons": 1,
			"grew": 1,
			"bird": 1,
			"dear": 2,
			"pain": 1,
			"place": 1,
			"beloved": 2,
			"side": 1,
			"proud": 3,
			"it": 3,
			"image": 1,
			"by": 1,
			"land": 2,
			"hard": 1,
			"away": 1,
			"children": 1,
			"native": 1,
			"good": 2,
			"mother": 1,
			"new": 1,
			"heard": 1,
			"without": 1,
			"its": 1,
			"kindly": 1,
			"gentle": 1,
			"richard": 1,
			"holy": 1,
			"gray": 1,
			"for": 3,
			"hand": 4,
			"boys": 1,
			"my": 4,
			"words": 1,
			"john": 2,
			"beauty": 1,
			"earl": 1,
			"thy": 3,
			"vain": 1,
			"soul": 2,
			"francis": 1,
			"because": 1,
			"name": 1,
			"clay": 1,
			"william": 1,
			"face": 1,
			"god": 1,
			"can": 1,
			"that": 4,
			"if": 1,
			"lips": 1,
			"fall": 1,
			"trust": 1,
			"had": 1,
			"pure": 1,
			"what": 1,
			"oh": 3,
			"an": 1,
			"nothing": 1,
			"de": 1,
			"their": 1,
			"fold": 1,
			"a": 2,
			"so": 1,
			"true": 1,
			"folly": 1,
			"delight": 1,
			"love": 1,
			"on": 2,
			"red": 1,
			"memory": 1,
			"old": 1,
			"but": 4,
			"self": 2,
			"time": 2,
			"poor": 1,
			"when": 2,
			"lifes": 1,
			"eternal": 2,
			"religious": 1,
			"knows": 1,
			"be": 2,
			"bed": 1,
			"ay": 1,
			"out": 1,
			"kind": 2,
			"heart": 4,
			"verse": 1,
			"and": 24,
			"i": 6,
			"thou": 1,
			"down": 1,
			"sunny": 1,
			"home": 1,
			"tower": 1,
			"island": 1,
			"secret": 1,
			"from": 3,
			"gifts": 1,
			"endless": 1,
			"these": 2,
			"breast": 1,
			"calm": 1,
			"voice": 1,
			"sphere": 1,
			"with": 7,
			"strong": 1,
			"himself": 2,
			"large": 1,
			"could": 1,
			"well": 1,
			"clear": 1,
			"ways": 1,
			"dost": 1,
			"our": 4,
			"day": 1,
			"page": 1,
			"loved": 1,
			"shall": 2,
			"before": 1,
			"still": 2,
			"your": 2,
			"yet": 2,
			"way": 1,
			"to": 6,
			"into": 2,
			"lie": 1,
			"little": 1,
			"use": 4,
			"we": 4,
			"glad": 1,
			"whose": 1,
			"as": 1,
			"throng": 1,
			"fair": 1,
			"life": 2,
			"he": 3,
			"strength": 1,
			"at": 1,
			"fancy": 1,
			"point": 1,
			"o": 2,
			"weight": 1,
			"the": 13,
			"world": 2,
			"scarce": 1,
			"seems": 1,
			"her": 1,
			"young": 1,
			"oft": 1,
			"there": 1,
			"in": 5
		},
		"red": {
			"sweet": 1,
			"loves": 1,
			"light": 1,
			"his": 1,
			"st": 1,
			"wi": 1,
			"are": 1,
			"of": 2,
			"wine": 1,
			"she": 1,
			"rose": 3,
			"sword": 2,
			"began": 1,
			"by": 1,
			"they": 1,
			"sea": 1,
			"for": 1,
			"hand": 1,
			"thy": 1,
			"rang": 1,
			"oer": 1,
			"was": 2,
			"embrace": 1,
			"rode": 1,
			"field": 2,
			"think": 1,
			"their": 1,
			"a": 6,
			"upon": 1,
			"lord": 1,
			"dawn": 2,
			"on": 3,
			"red": 2,
			"mountain": 1,
			"but": 2,
			"when": 1,
			"out": 1,
			"heart": 1,
			"and": 17,
			"grave": 1,
			"i": 1,
			"from": 2,
			"lilies": 1,
			"no": 1,
			"sand": 1,
			"with": 6,
			"around": 1,
			"all": 1,
			"poured": 1,
			"wounds": 1,
			"he": 1,
			"the": 5,
			"sure": 1,
			"young": 1,
			"fire": 1,
			"in": 4,
			"grows": 1
		},
		"girl": {
			"beside": 1,
			"who": 1,
			"of": 1,
			"up": 1,
			"than": 1,
			"for": 1,
			"that": 2,
			"or": 1,
			"on": 1,
			"and": 5,
			"with": 1,
			"will": 1,
			"all": 1,
			"he": 1,
			"below": 1,
			"her": 1,
			"in": 2
		},
		"shroud": {
			"war": 1,
			"of": 3,
			"why": 1,
			"than": 1,
			"for": 1,
			"had": 1,
			"distant": 1,
			"and": 5,
			"ask": 1,
			"while": 1,
			"to": 1,
			"we": 2,
			"as": 1,
			"he": 1,
			"the": 1,
			"in": 2
		},
		"brain": {
			"dying": 1,
			"his": 1,
			"which": 1,
			"this": 1,
			"up": 1,
			"is": 1,
			"like": 1,
			"its": 1,
			"for": 1,
			"thy": 1,
			"god": 1,
			"that": 1,
			"let": 1,
			"a": 2,
			"but": 2,
			"when": 1,
			"and": 8,
			"i": 1,
			"thou": 1,
			"woman": 1,
			"with": 1,
			"sad": 1,
			"till": 1,
			"to": 1,
			"as": 1,
			"the": 3,
			"in": 1
		},
		"evermore": {
			"alas": 1,
			"very": 1,
			"by": 1,
			"they": 2,
			"should": 1,
			"my": 2,
			"sir": 1,
			"a": 1,
			"above": 2,
			"content": 1,
			"and": 2,
			"i": 1,
			"no": 1,
			"then": 1,
			"our": 1,
			"to": 1,
			"we": 1,
			"the": 2,
			"in": 1
		},
		"mountain": {
			"his": 1,
			"crest": 1,
			"see": 1,
			"glen": 1,
			"high": 1,
			"height": 1,
			"two": 1,
			"side": 2,
			"sword": 1,
			"weep": 1,
			"like": 2,
			"they": 1,
			"its": 1,
			"where": 1,
			"wall": 1,
			"along": 1,
			"make": 1,
			"so": 2,
			"on": 1,
			"turns": 1,
			"head": 1,
			"and": 7,
			"thou": 1,
			"haste": 1,
			"storm": 1,
			"from": 1,
			"wild": 1,
			"to": 2,
			"he": 2,
			"the": 4,
			"stood": 1,
			"house": 1,
			"in": 1,
			"air": 1
		},
		"above": {
			"else": 1,
			"look": 1,
			"us": 8,
			"thine": 1,
			"his": 6,
			"him": 1,
			"of": 1,
			"this": 2,
			"nor": 1,
			"two": 1,
			"it": 3,
			"far": 1,
			"by": 3,
			"is": 4,
			"like": 2,
			"they": 1,
			"its": 3,
			"een": 1,
			"where": 2,
			"holy": 1,
			"noise": 1,
			"my": 5,
			"thy": 3,
			"sleep": 1,
			"did": 1,
			"that": 2,
			"if": 2,
			"let": 2,
			"full": 1,
			"pure": 1,
			"what": 1,
			"their": 4,
			"fold": 1,
			"a": 2,
			"them": 3,
			"upon": 2,
			"whence": 1,
			"love": 1,
			"deep": 1,
			"thee": 3,
			"ye": 1,
			"be": 1,
			"head": 1,
			"and": 11,
			"grace": 1,
			"fate": 1,
			"ask": 1,
			"i": 2,
			"told": 1,
			"dull": 1,
			"mortal": 1,
			"such": 2,
			"each": 2,
			"how": 1,
			"across": 1,
			"beneath": 1,
			"these": 1,
			"while": 1,
			"no": 1,
			"with": 2,
			"some": 1,
			"will": 1,
			"himself": 1,
			"all": 9,
			"through": 1,
			"night": 1,
			"shall": 1,
			"still": 1,
			"your": 1,
			"shade": 1,
			"yet": 1,
			"to": 1,
			"we": 1,
			"he": 2,
			"me": 8,
			"below": 2,
			"o": 1,
			"the": 45,
			"tis": 1,
			"her": 4,
			"there": 2,
			"in": 2
		},
		"smiling": {
			"cheek": 2,
			"are": 1,
			"joy": 1,
			"mourn": 1,
			"land": 2,
			"they": 1,
			"my": 1,
			"band": 1,
			"face": 1,
			"that": 1,
			"lips": 1,
			"bright": 1,
			"a": 1,
			"say": 1,
			"and": 2,
			"grace": 1,
			"then": 1,
			"turned": 1,
			"day": 1,
			"to": 1,
			"infant": 1,
			"as": 1,
			"throng": 1,
			"at": 1,
			"left": 1,
			"the": 1,
			"near": 1,
			"sky": 1
		},
		"fast": {
			"his": 2,
			"beyond": 1,
			"nor": 1,
			"serene": 1,
			"every": 1,
			"it": 1,
			"by": 5,
			"away": 2,
			"why": 1,
			"they": 3,
			"for": 1,
			"my": 1,
			"because": 1,
			"oer": 1,
			"that": 1,
			"let": 1,
			"an": 1,
			"falls": 1,
			"on": 1,
			"fast": 1,
			"but": 1,
			"ye": 1,
			"and": 11,
			"thou": 1,
			"one": 1,
			"against": 1,
			"each": 1,
			"help": 1,
			"from": 3,
			"across": 1,
			"while": 1,
			"with": 2,
			"around": 1,
			"through": 1,
			"your": 1,
			"to": 7,
			"into": 1,
			"we": 1,
			"as": 4,
			"the": 7,
			"in": 2
		},
		"chains": {
			"him": 1,
			"tell": 1,
			"of": 2,
			"by": 2,
			"is": 1,
			"for": 1,
			"again": 1,
			"can": 1,
			"or": 1,
			"a": 1,
			"above": 1,
			"and": 1,
			"each": 1,
			"while": 2,
			"rouse": 1,
			"shall": 1,
			"we": 1,
			"as": 1,
			"at": 1,
			"the": 2,
			"in": 2
		},
		"deep": {
			"sound": 1,
			"within": 4,
			"loves": 1,
			"earth": 1,
			"his": 1,
			"blood": 1,
			"glen": 1,
			"are": 2,
			"beside": 1,
			"alas": 1,
			"word": 1,
			"fell": 1,
			"of": 7,
			"after": 1,
			"she": 2,
			"beyond": 1,
			"nor": 1,
			"roar": 1,
			"rivers": 1,
			"rapture": 1,
			"proud": 1,
			"every": 1,
			"praise": 1,
			"by": 1,
			"sorrows": 1,
			"cold": 1,
			"is": 2,
			"like": 2,
			"why": 1,
			"forever": 1,
			"robert": 1,
			"than": 1,
			"sea": 1,
			"where": 2,
			"for": 4,
			"bosom": 1,
			"breath": 1,
			"rest": 1,
			"my": 1,
			"blow": 1,
			"words": 1,
			"vain": 1,
			"peace": 3,
			"seek": 1,
			"closed": 1,
			"were": 1,
			"oer": 1,
			"let": 1,
			"oh": 1,
			"or": 2,
			"their": 1,
			"a": 5,
			"so": 1,
			"joys": 1,
			"lord": 1,
			"almost": 1,
			"groan": 1,
			"on": 1,
			"shroud": 1,
			"time": 1,
			"when": 5,
			"turns": 1,
			"waters": 1,
			"heart": 1,
			"and": 33,
			"thunder": 1,
			"do": 1,
			"black": 1,
			"dream": 1,
			"i": 3,
			"snow": 1,
			"down": 2,
			"shadows": 1,
			"broad": 1,
			"each": 1,
			"from": 3,
			"hidden": 1,
			"with": 4,
			"now": 1,
			"give": 1,
			"shone": 1,
			"all": 1,
			"then": 1,
			"well": 1,
			"still": 1,
			"to": 5,
			"into": 1,
			"cut": 1,
			"round": 1,
			"slowly": 1,
			"know": 1,
			"we": 2,
			"whose": 2,
			"as": 6,
			"fair": 1,
			"stand": 1,
			"life": 1,
			"wound": 1,
			"o": 1,
			"the": 12,
			"though": 2,
			"her": 1,
			"there": 1,
			"in": 22,
			"harmony": 1
		},
		"memory": {
			"within": 1,
			"s": 1,
			"holds": 1,
			"of": 11,
			"this": 1,
			"up": 1,
			"dear": 2,
			"behold": 1,
			"by": 1,
			"is": 3,
			"like": 4,
			"ever": 1,
			"together": 1,
			"oer": 2,
			"if": 1,
			"what": 1,
			"an": 2,
			"have": 1,
			"a": 1,
			"brings": 1,
			"lives": 1,
			"and": 3,
			"from": 2,
			"ill": 1,
			"no": 2,
			"with": 3,
			"now": 1,
			"still": 1,
			"yet": 1,
			"to": 3,
			"may": 1,
			"the": 1,
			"her": 2,
			"seem": 1
		},
		"roaring": {
			"stream": 1,
			"of": 1,
			"tide": 3,
			"crown": 1,
			"main": 1,
			"on": 1,
			"waters": 1,
			"and": 2,
			"down": 1,
			"with": 2,
			"night": 1,
			"into": 1,
			"as": 1,
			"the": 3,
			"fire": 1
		},
		"feast": {
			"his": 1,
			"of": 4,
			"rose": 1,
			"not": 1,
			"by": 1,
			"is": 1,
			"shook": 1,
			"you": 1,
			"my": 1,
			"was": 1,
			"must": 1,
			"oh": 1,
			"or": 1,
			"but": 1,
			"close": 1,
			"and": 6,
			"i": 1,
			"such": 2,
			"each": 1,
			"with": 2,
			"till": 1,
			"wild": 1,
			"to": 1,
			"as": 1,
			"he": 1,
			"at": 1,
			"change": 1
		},
		"celestial": {
			"light": 3,
			"stream": 1,
			"struck": 1,
			"white": 1,
			"who": 1,
			"worth": 1,
			"country": 1,
			"this": 1,
			"souls": 1,
			"lands": 1,
			"eyes": 1,
			"is": 1,
			"they": 1,
			"rosy": 1,
			"beauty": 1,
			"burning": 1,
			"morn": 1,
			"peace": 1,
			"were": 1,
			"a": 1,
			"love": 1,
			"when": 1,
			"grace": 2,
			"i": 1,
			"with": 1,
			"shall": 1,
			"homes": 1,
			"whose": 1,
			"fire": 1,
			"harmony": 1
		},
		"old": {
			"books": 1,
			"tune": 1,
			"come": 1,
			"won": 1,
			"ring": 2,
			"england": 5,
			"going": 1,
			"loves": 1,
			"went": 1,
			"his": 2,
			"hero": 1,
			"lady": 1,
			"thousand": 1,
			"s": 1,
			"rule": 1,
			"are": 1,
			"amidst": 1,
			"under": 1,
			"who": 3,
			"greece": 1,
			"ones": 1,
			"of": 3,
			"this": 2,
			"blind": 1,
			"high": 2,
			"graves": 1,
			"up": 1,
			"among": 1,
			"age": 5,
			"place": 1,
			"lines": 1,
			"not": 2,
			"sword": 2,
			"it": 1,
			"over": 1,
			"sod": 1,
			"by": 4,
			"father": 1,
			"woods": 2,
			"land": 3,
			"wars": 1,
			"is": 1,
			"cross": 1,
			"forms": 1,
			"care": 1,
			"they": 1,
			"you": 1,
			"mother": 1,
			"thus": 1,
			"afar": 1,
			"leaves": 1,
			"slave": 1,
			"song": 1,
			"friends": 1,
			"where": 5,
			"church": 4,
			"gray": 4,
			"for": 4,
			"should": 1,
			"lonely": 1,
			"my": 3,
			"came": 2,
			"john": 1,
			"hushed": 1,
			"warrior": 2,
			"ere": 1,
			"hope": 1,
			"fools": 1,
			"name": 2,
			"door": 1,
			"queen": 1,
			"along": 1,
			"face": 1,
			"battles": 1,
			"faith": 1,
			"were": 2,
			"cause": 2,
			"was": 2,
			"that": 3,
			"swords": 1,
			"let": 1,
			"man": 39,
			"bear": 1,
			"reign": 1,
			"half": 1,
			"rode": 1,
			"what": 1,
			"oh": 1,
			"stone": 6,
			"or": 2,
			"tree": 1,
			"isle": 1,
			"towers": 1,
			"their": 2,
			"a": 2,
			"so": 2,
			"faces": 1,
			"lord": 1,
			"hath": 1,
			"love": 4,
			"on": 5,
			"red": 1,
			"feast": 1,
			"old": 1,
			"but": 1,
			"brown": 1,
			"time": 3,
			"when": 3,
			"gone": 1,
			"mans": 4,
			"be": 2,
			"t": 3,
			"glory": 1,
			"out": 1,
			"earthly": 2,
			"heart": 1,
			"head": 1,
			"and": 35,
			"dark": 1,
			"year": 1,
			"days": 3,
			"i": 4,
			"knew": 1,
			"thou": 1,
			"down": 1,
			"less": 1,
			"home": 10,
			"tower": 1,
			"here": 1,
			"work": 1,
			"fields": 1,
			"from": 1,
			"maid": 2,
			"nigh": 1,
			"while": 1,
			"no": 1,
			"took": 1,
			"roll": 1,
			"voice": 1,
			"with": 4,
			"around": 1,
			"soggarth": 1,
			"now": 1,
			"will": 2,
			"all": 1,
			"familiar": 10,
			"then": 1,
			"street": 1,
			"doth": 1,
			"day": 2,
			"hall": 2,
			"aside": 1,
			"night": 1,
			"ends": 1,
			"loved": 2,
			"stay": 1,
			"hundred": 1,
			"shade": 1,
			"yet": 2,
			"best": 1,
			"way": 1,
			"to": 6,
			"flame": 1,
			"slowly": 1,
			"little": 1,
			"get": 1,
			"prove": 1,
			"art": 1,
			"ah": 1,
			"whose": 1,
			"as": 2,
			"english": 3,
			"life": 1,
			"sat": 2,
			"strength": 1,
			"flag": 2,
			"at": 6,
			"below": 1,
			"the": 17,
			"world": 3,
			"bent": 2,
			"stood": 1,
			"house": 3,
			"her": 1,
			"fire": 1,
			"trees": 2,
			"near": 1,
			"in": 8,
			"flowers": 1,
			"oak": 1
		},
		"filled": {
			"up": 1,
			"like": 1,
			"for": 1,
			"my": 1,
			"thy": 1,
			"if": 1,
			"and": 4,
			"with": 11,
			"me": 1,
			"the": 9,
			"her": 1,
			"there": 1
		},
		"content": {
			"within": 1,
			"thyself": 1,
			"quiet": 1,
			"is": 1,
			"farewell": 1,
			"than": 1,
			"for": 1,
			"my": 1,
			"makes": 1,
			"if": 1,
			"a": 1,
			"poor": 1,
			"until": 1,
			"out": 1,
			"and": 2,
			"might": 1,
			"with": 1,
			"wealth": 1,
			"to": 3,
			"o": 1,
			"the": 2,
			"though": 1,
			"in": 1
		},
		"naked": {
			"floor": 1,
			"you": 1,
			"nature": 1,
			"without": 1,
			"shame": 1,
			"did": 1,
			"both": 1,
			"make": 1,
			"have": 1,
			"a": 1,
			"feet": 1,
			"and": 1,
			"strand": 1,
			"with": 1,
			"to": 2,
			"we": 1,
			"me": 1,
			"at": 1,
			"the": 1,
			"trees": 1,
			"in": 1
		},
		"but": {
			"sweet": 2,
			"come": 5,
			"low": 1,
			"else": 2,
			"dying": 1,
			"look": 2,
			"itself": 1,
			"us": 1,
			"more": 5,
			"hear": 3,
			"sent": 1,
			"murmur": 1,
			"since": 3,
			"thine": 1,
			"blessd": 2,
			"ring": 1,
			"ours": 1,
			"unseen": 1,
			"dust": 1,
			"justice": 1,
			"loves": 2,
			"went": 1,
			"im": 3,
			"christ": 1,
			"free": 1,
			"forget": 1,
			"doubt": 3,
			"die": 6,
			"cloud": 1,
			"his": 16,
			"hell": 1,
			"him": 6,
			"sharp": 1,
			"charity": 1,
			"see": 4,
			"narrow": 1,
			"wi": 1,
			"learn": 1,
			"none": 7,
			"hast": 1,
			"tell": 3,
			"wonder": 1,
			"are": 1,
			"alas": 3,
			"made": 1,
			"aye": 1,
			"fell": 1,
			"who": 13,
			"which": 2,
			"holds": 1,
			"hide": 1,
			"sounds": 1,
			"of": 14,
			"this": 19,
			"cast": 1,
			"high": 1,
			"rude": 1,
			"yield": 1,
			"souls": 1,
			"keep": 3,
			"hung": 1,
			"kept": 1,
			"after": 5,
			"once": 10,
			"up": 4,
			"off": 2,
			"she": 11,
			"silence": 2,
			"beyond": 1,
			"find": 1,
			"gold": 2,
			"three": 2,
			"grew": 1,
			"heavy": 1,
			"thyself": 1,
			"joy": 1,
			"dreadful": 1,
			"dear": 1,
			"two": 3,
			"pain": 2,
			"thick": 1,
			"serene": 1,
			"pass": 1,
			"mine": 1,
			"not": 41,
			"rapture": 1,
			"constant": 1,
			"today": 1,
			"proud": 1,
			"every": 8,
			"it": 14,
			"evil": 1,
			"over": 1,
			"twas": 2,
			"neither": 2,
			"far": 3,
			"wisdom": 5,
			"weep": 1,
			"by": 10,
			"eyes": 1,
			"jove": 1,
			"nevermore": 1,
			"alone": 1,
			"shut": 1,
			"long": 1,
			"something": 1,
			"wars": 1,
			"is": 9,
			"soon": 3,
			"rise": 1,
			"looked": 3,
			"few": 2,
			"unto": 1,
			"like": 4,
			"takes": 1,
			"lo": 4,
			"hard": 1,
			"children": 1,
			"why": 2,
			"hark": 2,
			"force": 1,
			"ever": 3,
			"either": 1,
			"care": 1,
			"they": 11,
			"easy": 1,
			"faint": 1,
			"you": 10,
			"nature": 6,
			"shot": 1,
			"tyrants": 1,
			"grant": 3,
			"heard": 1,
			"leaves": 8,
			"without": 1,
			"laid": 1,
			"its": 5,
			"than": 1,
			"smile": 2,
			"slow": 1,
			"kindly": 1,
			"lightly": 2,
			"those": 5,
			"friends": 1,
			"where": 7,
			"small": 2,
			"run": 1,
			"gray": 1,
			"just": 2,
			"for": 32,
			"noise": 1,
			"heaven": 2,
			"lost": 2,
			"cry": 1,
			"should": 1,
			"base": 1,
			"theres": 5,
			"take": 1,
			"cannot": 5,
			"speak": 1,
			"spite": 1,
			"autumn": 1,
			"fixed": 1,
			"rest": 1,
			"my": 20,
			"whats": 2,
			"count": 1,
			"words": 1,
			"john": 1,
			"beauty": 1,
			"short": 1,
			"again": 1,
			"shines": 1,
			"freedom": 1,
			"thy": 9,
			"watch": 1,
			"greater": 1,
			"hushed": 1,
			"vain": 2,
			"sleep": 1,
			"teach": 1,
			"peace": 2,
			"ere": 1,
			"tonight": 1,
			"passion": 2,
			"wear": 2,
			"seek": 1,
			"born": 1,
			"gather": 1,
			"remember": 4,
			"strive": 1,
			"most": 1,
			"sir": 1,
			"fools": 1,
			"friendship": 1,
			"longer": 1,
			"closed": 1,
			"faith": 2,
			"whether": 2,
			"god": 10,
			"can": 1,
			"noble": 1,
			"were": 2,
			"waking": 1,
			"oer": 3,
			"need": 1,
			"indeed": 1,
			"did": 2,
			"was": 2,
			"that": 23,
			"if": 21,
			"let": 8,
			"womans": 1,
			"man": 5,
			"both": 1,
			"always": 3,
			"full": 1,
			"make": 3,
			"victory": 1,
			"often": 1,
			"broken": 1,
			"go": 4,
			"cried": 1,
			"half": 7,
			"trust": 4,
			"desert": 1,
			"had": 1,
			"must": 1,
			"climb": 1,
			"pure": 1,
			"what": 26,
			"sit": 1,
			"oh": 10,
			"beautiful": 1,
			"an": 16,
			"wait": 2,
			"nothing": 3,
			"pleasures": 1,
			"even": 2,
			"or": 4,
			"conscience": 1,
			"de": 3,
			"eye": 1,
			"sweeter": 3,
			"start": 1,
			"hands": 1,
			"have": 3,
			"late": 1,
			"blush": 1,
			"ride": 1,
			"bitter": 2,
			"winter": 1,
			"their": 10,
			"a": 82,
			"so": 1,
			"brings": 2,
			"given": 1,
			"falls": 1,
			"them": 5,
			"sometimes": 1,
			"true": 2,
			"folly": 2,
			"lay": 1,
			"things": 3,
			"lord": 1,
			"never": 15,
			"many": 3,
			"hath": 1,
			"leave": 5,
			"whence": 1,
			"love": 8,
			"on": 18,
			"saw": 4,
			"above": 3,
			"deep": 3,
			"memory": 2,
			"celestial": 1,
			"but": 2,
			"iron": 1,
			"infinite": 1,
			"death": 2,
			"knowledge": 1,
			"time": 1,
			"empty": 1,
			"thee": 7,
			"ye": 2,
			"choose": 1,
			"canst": 2,
			"lives": 2,
			"years": 2,
			"when": 38,
			"eat": 1,
			"gone": 2,
			"onward": 1,
			"turns": 1,
			"felt": 1,
			"raise": 1,
			"be": 3,
			"merit": 1,
			"t": 4,
			"glory": 1,
			"out": 3,
			"kind": 1,
			"naught": 2,
			"heart": 2,
			"say": 1,
			"and": 21,
			"thunder": 1,
			"grace": 1,
			"truth": 1,
			"do": 1,
			"myself": 1,
			"black": 1,
			"dream": 1,
			"fate": 1,
			"wounded": 1,
			"blaze": 1,
			"i": 43,
			"thou": 17,
			"down": 3,
			"sunny": 1,
			"robin": 1,
			"dull": 1,
			"here": 9,
			"too": 2,
			"raised": 1,
			"one": 33,
			"between": 1,
			"such": 2,
			"draw": 1,
			"shadows": 1,
			"work": 1,
			"looks": 1,
			"each": 2,
			"anothers": 1,
			"how": 5,
			"help": 1,
			"other": 1,
			"from": 3,
			"would": 2,
			"living": 1,
			"mind": 1,
			"ill": 7,
			"want": 1,
			"blade": 1,
			"these": 1,
			"while": 8,
			"foul": 1,
			"breast": 2,
			"present": 2,
			"no": 11,
			"took": 1,
			"mighty": 2,
			"with": 23,
			"around": 1,
			"sad": 4,
			"virtue": 1,
			"soft": 1,
			"drew": 1,
			"now": 29,
			"give": 6,
			"single": 2,
			"flying": 1,
			"some": 8,
			"till": 2,
			"meet": 1,
			"will": 4,
			"strong": 1,
			"twenty": 1,
			"lying": 1,
			"all": 25,
			"chief": 1,
			"gay": 2,
			"wild": 2,
			"then": 3,
			"large": 1,
			"could": 1,
			"through": 5,
			"has": 3,
			"thats": 1,
			"toil": 1,
			"well": 5,
			"doth": 1,
			"peaceful": 2,
			"minds": 1,
			"being": 6,
			"our": 9,
			"day": 3,
			"walked": 1,
			"neer": 1,
			"night": 1,
			"patience": 1,
			"ends": 1,
			"mercy": 1,
			"stay": 3,
			"before": 2,
			"only": 11,
			"still": 20,
			"chance": 1,
			"your": 6,
			"mingled": 1,
			"yet": 9,
			"mark": 1,
			"to": 57,
			"clouds": 1,
			"human": 1,
			"into": 3,
			"round": 1,
			"thinking": 1,
			"slowly": 1,
			"little": 7,
			"live": 1,
			"gently": 1,
			"heavenly": 1,
			"turning": 1,
			"know": 8,
			"sore": 1,
			"art": 2,
			"ah": 4,
			"may": 3,
			"we": 21,
			"infant": 1,
			"whose": 1,
			"as": 26,
			"heavens": 1,
			"happy": 2,
			"said": 3,
			"life": 5,
			"he": 40,
			"me": 1,
			"gleam": 1,
			"at": 6,
			"o": 13,
			"yonder": 1,
			"common": 1,
			"the": 161,
			"tis": 4,
			"waste": 1,
			"though": 5,
			"fight": 1,
			"sure": 1,
			"stood": 1,
			"scarce": 1,
			"house": 1,
			"labor": 1,
			"her": 8,
			"passed": 1,
			"change": 1,
			"young": 2,
			"tread": 1,
			"fire": 1,
			"near": 4,
			"first": 2,
			"soldier": 1,
			"there": 11,
			"in": 54,
			"flowers": 1,
			"forgive": 2,
			"dim": 2,
			"grows": 1
		},
		"iron": {
			"gates": 1,
			"of": 2,
			"flood": 1,
			"limbs": 1,
			"tongue": 1,
			"is": 1,
			"they": 1,
			"glowing": 1,
			"rolled": 1,
			"bride": 1,
			"vain": 1,
			"door": 1,
			"foot": 1,
			"walls": 1,
			"was": 1,
			"that": 1,
			"front": 1,
			"have": 1,
			"a": 1,
			"never": 1,
			"death": 1,
			"and": 2,
			"against": 1,
			"now": 1,
			"tempest": 1,
			"will": 1,
			"all": 1,
			"neer": 1,
			"to": 2,
			"mould": 1,
			"hail": 1,
			"he": 1,
			"chain": 2,
			"grand": 1,
			"tread": 1,
			"in": 1
		},
		"bell": {
			"wish": 1,
			"of": 1,
			"it": 1,
			"is": 2,
			"slow": 1,
			"for": 1,
			"should": 1,
			"came": 1,
			"oer": 1,
			"that": 2,
			"or": 1,
			"their": 1,
			"a": 4,
			"but": 2,
			"be": 1,
			"and": 2,
			"with": 2,
			"to": 1,
			"as": 1,
			"rings": 1,
			"the": 3
		},
		"infinite": {
			"fierce": 1,
			"wonder": 1,
			"of": 1,
			"anonymous": 1,
			"host": 1,
			"despair": 1,
			"for": 1,
			"majesty": 1,
			"wrath": 1,
			"a": 1,
			"so": 1,
			"be": 1,
			"and": 1,
			"how": 1,
			"hearts": 1,
			"mind": 1,
			"sweetness": 1,
			"day": 1,
			"as": 1,
			"the": 1,
			"in": 1
		},
		"glance": {
			"hast": 1,
			"of": 4,
			"among": 1,
			"soon": 1,
			"hurrah": 1,
			"shot": 1,
			"theres": 1,
			"did": 1,
			"was": 1,
			"that": 2,
			"and": 5,
			"i": 1,
			"told": 1,
			"would": 2,
			"our": 1,
			"to": 2,
			"he": 1,
			"at": 2,
			"straight": 1,
			"the": 3,
			"there": 1
		},
		"grass": {
			"earth": 1,
			"appear": 1,
			"see": 1,
			"ages": 1,
			"under": 5,
			"which": 1,
			"of": 1,
			"nor": 1,
			"is": 3,
			"its": 6,
			"was": 2,
			"that": 4,
			"make": 1,
			"half": 1,
			"have": 1,
			"upon": 1,
			"on": 1,
			"but": 1,
			"and": 10,
			"i": 1,
			"from": 1,
			"beneath": 2,
			"with": 3,
			"then": 1,
			"thats": 1,
			"passing": 1,
			"mingled": 1,
			"to": 1,
			"growing": 1,
			"art": 1,
			"we": 2,
			"as": 1,
			"he": 1,
			"o": 1,
			"the": 5,
			"in": 2,
			"grows": 2
		},
		"wet": {
			"his": 1,
			"this": 1,
			"swift": 1,
			"theres": 1,
			"oer": 1,
			"if": 1,
			"above": 1,
			"be": 1,
			"with": 8,
			"will": 1,
			"has": 1,
			"to": 2,
			"o": 1,
			"in": 1
		},
		"brown": {
			"bread": 1,
			"who": 1,
			"of": 3,
			"bird": 1,
			"it": 1,
			"eyes": 1,
			"steed": 1,
			"leaves": 2,
			"lightly": 1,
			"where": 1,
			"came": 2,
			"john": 1,
			"arm": 1,
			"had": 1,
			"must": 1,
			"above": 1,
			"but": 1,
			"brown": 1,
			"be": 1,
			"and": 6,
			"one": 1,
			"fields": 1,
			"from": 1,
			"no": 1,
			"with": 2,
			"hair": 2,
			"round": 2,
			"mould": 1,
			"at": 1,
			"the": 2,
			"stood": 1,
			"in": 1
		},
		"death": {
			"come": 2,
			"else": 1,
			"us": 1,
			"more": 1,
			"sent": 2,
			"loves": 1,
			"wish": 1,
			"his": 6,
			"book": 1,
			"hast": 1,
			"alas": 1,
			"back": 1,
			"made": 1,
			"which": 2,
			"of": 13,
			"this": 1,
			"souls": 1,
			"calls": 1,
			"hung": 1,
			"once": 1,
			"she": 5,
			"nor": 2,
			"whatever": 1,
			"two": 1,
			"behold": 1,
			"proud": 1,
			"it": 2,
			"by": 1,
			"alone": 1,
			"long": 1,
			"bind": 1,
			"cold": 1,
			"is": 23,
			"although": 1,
			"like": 3,
			"immortality": 2,
			"good": 2,
			"they": 1,
			"you": 2,
			"leaves": 1,
			"its": 2,
			"than": 1,
			"where": 3,
			"yea": 1,
			"welcome": 1,
			"for": 5,
			"should": 1,
			"take": 1,
			"boys": 1,
			"my": 5,
			"came": 1,
			"thy": 1,
			"comes": 1,
			"therefore": 1,
			"remember": 1,
			"makes": 1,
			"most": 1,
			"fools": 1,
			"along": 1,
			"god": 1,
			"can": 3,
			"were": 1,
			"flee": 1,
			"immortal": 1,
			"did": 1,
			"was": 2,
			"that": 10,
			"let": 2,
			"go": 1,
			"rode": 3,
			"had": 3,
			"must": 3,
			"what": 3,
			"oh": 2,
			"or": 2,
			"bright": 2,
			"their": 2,
			"a": 1,
			"so": 2,
			"upon": 2,
			"hath": 4,
			"on": 3,
			"but": 2,
			"death": 1,
			"knowledge": 1,
			"poor": 1,
			"perhaps": 1,
			"thee": 1,
			"ye": 2,
			"when": 3,
			"be": 5,
			"out": 3,
			"dumb": 1,
			"sweetly": 1,
			"and": 39,
			"eer": 1,
			"whateer": 1,
			"dark": 2,
			"i": 9,
			"thou": 2,
			"broke": 1,
			"here": 1,
			"between": 2,
			"such": 2,
			"how": 3,
			"from": 7,
			"no": 2,
			"called": 1,
			"with": 1,
			"around": 1,
			"drew": 1,
			"now": 3,
			"will": 1,
			"all": 3,
			"then": 1,
			"through": 1,
			"has": 2,
			"george": 1,
			"well": 1,
			"begun": 1,
			"nearer": 1,
			"our": 1,
			"day": 1,
			"shall": 4,
			"before": 1,
			"still": 2,
			"your": 1,
			"to": 21,
			"into": 3,
			"round": 1,
			"turn": 1,
			"may": 1,
			"we": 4,
			"spread": 1,
			"as": 5,
			"charles": 1,
			"he": 2,
			"flag": 1,
			"at": 3,
			"o": 8,
			"browning": 1,
			"left": 1,
			"the": 31,
			"her": 1,
			"near": 1,
			"there": 2,
			"in": 17,
			"air": 1
		},
		"knowledge": {
			"taught": 1,
			"dust": 1,
			"him": 1,
			"of": 4,
			"fame": 1,
			"nor": 1,
			"by": 1,
			"is": 4,
			"without": 1,
			"greater": 1,
			"comes": 3,
			"need": 1,
			"both": 1,
			"or": 1,
			"so": 1,
			"knowledge": 2,
			"and": 1,
			"no": 1,
			"to": 2,
			"we": 1,
			"grow": 1
		},
		"self": {
			"nor": 1,
			"is": 1,
			"like": 1,
			"again": 1,
			"that": 2,
			"adieu": 1,
			"love": 1,
			"be": 3,
			"i": 1,
			"from": 1,
			"living": 1,
			"shall": 1,
			"to": 2,
			"may": 1,
			"the": 3,
			"oft": 1,
			"in": 3
		},
		"foes": {
			"are": 2,
			"right": 1,
			"who": 1,
			"she": 1,
			"englands": 1,
			"host": 1,
			"its": 1,
			"bore": 1,
			"john": 1,
			"wept": 1,
			"therefore": 1,
			"was": 1,
			"that": 1,
			"but": 1,
			"until": 1,
			"and": 1,
			"do": 1,
			"lone": 1,
			"how": 2,
			"no": 1,
			"with": 4,
			"now": 2,
			"strong": 1,
			"then": 1,
			"shall": 1,
			"to": 1,
			"may": 1,
			"whose": 1,
			"he": 2,
			"o": 1,
			"the": 3
		},
		"rushed": {
			"by": 2,
			"together": 1,
			"oer": 1,
			"both": 1,
			"upon": 1,
			"on": 2,
			"roaring": 1,
			"but": 2,
			"onward": 1,
			"out": 1,
			"and": 1,
			"while": 1,
			"with": 1,
			"to": 2,
			"into": 2,
			"the": 3
		},
		"time": {
			"look": 1,
			"taught": 1,
			"free": 1,
			"his": 1,
			"are": 1,
			"fell": 1,
			"who": 1,
			"of": 14,
			"this": 1,
			"up": 1,
			"she": 1,
			"nor": 3,
			"does": 1,
			"goes": 1,
			"behold": 1,
			"serve": 1,
			"began": 1,
			"by": 1,
			"is": 11,
			"soon": 2,
			"unto": 2,
			"like": 3,
			"return": 1,
			"forever": 1,
			"you": 1,
			"where": 1,
			"for": 17,
			"take": 1,
			"rest": 1,
			"my": 1,
			"came": 1,
			"enough": 2,
			"thy": 2,
			"ere": 2,
			"makes": 3,
			"most": 2,
			"were": 2,
			"did": 2,
			"was": 5,
			"that": 5,
			"willie": 1,
			"let": 1,
			"man": 1,
			"both": 1,
			"had": 3,
			"oh": 1,
			"even": 1,
			"or": 4,
			"bright": 1,
			"have": 1,
			"a": 3,
			"so": 2,
			"hath": 1,
			"love": 1,
			"on": 3,
			"fast": 1,
			"but": 3,
			"infinite": 1,
			"when": 9,
			"be": 5,
			"naught": 1,
			"say": 1,
			"and": 33,
			"bliss": 1,
			"i": 6,
			"worthy": 1,
			"thou": 1,
			"from": 1,
			"would": 1,
			"these": 1,
			"while": 3,
			"no": 4,
			"with": 2,
			"some": 1,
			"will": 6,
			"all": 2,
			"ho": 1,
			"could": 2,
			"through": 1,
			"has": 4,
			"thats": 1,
			"doth": 2,
			"dost": 1,
			"day": 1,
			"shall": 8,
			"still": 1,
			"yet": 2,
			"to": 28,
			"cut": 1,
			"turn": 1,
			"hence": 1,
			"may": 3,
			"we": 2,
			"whose": 1,
			"as": 3,
			"he": 1,
			"at": 1,
			"o": 1,
			"the": 20,
			"tis": 1,
			"her": 2,
			"there": 2,
			"in": 7
		},
		"poor": {
			"ring": 1,
			"dust": 1,
			"went": 1,
			"die": 1,
			"his": 1,
			"mad": 1,
			"are": 4,
			"which": 1,
			"holds": 1,
			"body": 1,
			"of": 5,
			"rude": 1,
			"souls": 2,
			"she": 1,
			"nor": 1,
			"gold": 1,
			"by": 1,
			"fathers": 1,
			"cold": 2,
			"land": 1,
			"is": 1,
			"farewell": 1,
			"children": 1,
			"about": 1,
			"they": 1,
			"nature": 1,
			"yea": 1,
			"lovers": 1,
			"for": 2,
			"came": 2,
			"john": 1,
			"wept": 1,
			"whom": 1,
			"mary": 1,
			"soul": 2,
			"sir": 1,
			"fools": 1,
			"queen": 1,
			"power": 1,
			"shell": 1,
			"indeed": 2,
			"that": 6,
			"womans": 1,
			"lips": 1,
			"man": 4,
			"make": 1,
			"fall": 1,
			"even": 1,
			"soil": 1,
			"hands": 1,
			"a": 2,
			"so": 1,
			"on": 1,
			"old": 4,
			"naked": 1,
			"but": 2,
			"mans": 7,
			"be": 1,
			"heart": 7,
			"verse": 1,
			"and": 18,
			"i": 3,
			"unknown": 2,
			"woman": 1,
			"down": 1,
			"robin": 1,
			"here": 1,
			"saint": 1,
			"how": 1,
			"from": 2,
			"with": 1,
			"soggarth": 2,
			"gay": 1,
			"our": 1,
			"way": 1,
			"to": 5,
			"human": 1,
			"little": 1,
			"religion": 1,
			"may": 1,
			"we": 2,
			"whose": 2,
			"as": 2,
			"stand": 1,
			"done": 2,
			"said": 1,
			"he": 1,
			"the": 8,
			"though": 1,
			"world": 1,
			"weak": 1,
			"in": 3
		},
		"empty": {
			"within": 1,
			"of": 1,
			"place": 1,
			"where": 1,
			"words": 1,
			"that": 1,
			"tomb": 1,
			"dreams": 1,
			"heart": 1,
			"and": 5,
			"dream": 1,
			"guns": 1,
			"one": 1,
			"from": 2,
			"breast": 1,
			"with": 2,
			"all": 1,
			"night": 1,
			"the": 1,
			"sky": 1
		},
		"perhaps": {
			"are": 1,
			"under": 1,
			"next": 1,
			"who": 1,
			"she": 1,
			"it": 2,
			"by": 2,
			"is": 1,
			"they": 1,
			"thy": 1,
			"were": 1,
			"that": 1,
			"if": 1,
			"another": 2,
			"think": 1,
			"their": 2,
			"a": 1,
			"thee": 1,
			"thou": 1,
			"too": 1,
			"some": 3,
			"then": 1,
			"well": 1,
			"we": 1,
			"as": 1,
			"he": 1,
			"o": 1,
			"the": 6,
			"in": 1,
			"forgive": 1
		},
		"buried": {
			"him": 2,
			"sorrows": 1,
			"soul": 1,
			"sin": 1,
			"oh": 1,
			"joys": 1,
			"deep": 1,
			"and": 3,
			"from": 2,
			"with": 1,
			"now": 1,
			"we": 1,
			"the": 1,
			"there": 1,
			"in": 6
		},
		"known": {
			"since": 1,
			"deeper": 1,
			"are": 1,
			"of": 3,
			"she": 1,
			"it": 1,
			"boy": 1,
			"kings": 1,
			"lost": 1,
			"was": 1,
			"full": 1,
			"had": 1,
			"what": 2,
			"falls": 1,
			"them": 1,
			"but": 2,
			"and": 4,
			"i": 1,
			"from": 1,
			"to": 6,
			"we": 1,
			"happy": 1,
			"me": 1,
			"o": 1,
			"the": 7,
			"tis": 1,
			"her": 1,
			"there": 1,
			"in": 1
		},
		"thee": {
			"sweet": 2,
			"come": 2,
			"low": 1,
			"dare": 1,
			"footnote": 1,
			"look": 1,
			"saviour": 1,
			"sighs": 2,
			"suffering": 1,
			"more": 6,
			"hear": 1,
			"since": 1,
			"blessd": 1,
			"wish": 1,
			"earth": 1,
			"forget": 1,
			"die": 1,
			"his": 2,
			"hast": 2,
			"tell": 2,
			"weary": 1,
			"are": 4,
			"alas": 1,
			"back": 1,
			"ive": 1,
			"who": 6,
			"sweetest": 1,
			"which": 1,
			"call": 1,
			"of": 4,
			"this": 5,
			"daughter": 2,
			"once": 5,
			"she": 2,
			"rock": 3,
			"shakespeare": 1,
			"anonymous": 1,
			"nor": 3,
			"gold": 2,
			"three": 1,
			"does": 1,
			"joy": 1,
			"forth": 3,
			"mine": 2,
			"not": 17,
			"fade": 1,
			"praise": 1,
			"it": 2,
			"over": 2,
			"twas": 1,
			"spirits": 1,
			"child": 1,
			"weep": 1,
			"by": 7,
			"father": 1,
			"alone": 3,
			"long": 1,
			"bring": 3,
			"land": 1,
			"is": 7,
			"although": 1,
			"author": 1,
			"eternity": 1,
			"like": 3,
			"return": 1,
			"hurrah": 1,
			"boy": 3,
			"glass": 1,
			"away": 2,
			"found": 1,
			"why": 1,
			"native": 1,
			"please": 1,
			"forever": 1,
			"good": 1,
			"they": 3,
			"believe": 1,
			"tyrants": 1,
			"thus": 1,
			"nay": 3,
			"without": 2,
			"robert": 2,
			"its": 2,
			"than": 1,
			"song": 1,
			"those": 2,
			"where": 3,
			"yea": 1,
			"looking": 1,
			"for": 17,
			"hand": 1,
			"should": 1,
			"lonely": 1,
			"take": 2,
			"rest": 3,
			"my": 14,
			"blow": 1,
			"whats": 1,
			"great": 1,
			"john": 2,
			"tender": 2,
			"again": 1,
			"desire": 1,
			"thy": 7,
			"sing": 1,
			"ere": 1,
			"tonight": 1,
			"birth": 1,
			"mary": 2,
			"remember": 1,
			"francis": 1,
			"cease": 1,
			"torn": 1,
			"friendship": 1,
			"william": 2,
			"face": 4,
			"trembling": 2,
			"god": 3,
			"can": 2,
			"flee": 1,
			"immortal": 1,
			"was": 2,
			"that": 5,
			"if": 3,
			"let": 4,
			"show": 1,
			"man": 3,
			"bear": 1,
			"fain": 1,
			"jerusalem": 1,
			"go": 3,
			"must": 1,
			"climb": 1,
			"what": 10,
			"oh": 4,
			"an": 1,
			"wait": 1,
			"nothing": 1,
			"even": 2,
			"or": 5,
			"think": 2,
			"have": 4,
			"am": 2,
			"sae": 1,
			"their": 4,
			"a": 10,
			"so": 7,
			"adieu": 1,
			"lay": 1,
			"lord": 7,
			"cruel": 1,
			"love": 5,
			"on": 10,
			"evermore": 1,
			"above": 1,
			"old": 2,
			"but": 6,
			"death": 3,
			"poor": 1,
			"known": 1,
			"thee": 2,
			"when": 16,
			"mans": 1,
			"sigh": 1,
			"felt": 1,
			"be": 2,
			"t": 2,
			"veil": 1,
			"naught": 1,
			"say": 1,
			"paradise": 1,
			"close": 1,
			"and": 45,
			"grace": 1,
			"lone": 1,
			"lovely": 1,
			"myself": 1,
			"fate": 1,
			"i": 30,
			"unknown": 1,
			"worthy": 1,
			"thou": 14,
			"down": 6,
			"robin": 2,
			"home": 1,
			"swell": 1,
			"here": 6,
			"too": 2,
			"one": 1,
			"between": 1,
			"judge": 1,
			"each": 1,
			"henry": 1,
			"how": 3,
			"help": 1,
			"from": 12,
			"sought": 1,
			"drink": 1,
			"across": 2,
			"ill": 2,
			"while": 7,
			"no": 10,
			"bound": 1,
			"roll": 1,
			"rouse": 1,
			"maidens": 1,
			"alfred": 2,
			"with": 16,
			"sad": 1,
			"now": 3,
			"give": 1,
			"some": 1,
			"till": 1,
			"lying": 2,
			"all": 11,
			"then": 3,
			"thought": 1,
			"has": 1,
			"well": 7,
			"doth": 1,
			"king": 2,
			"mount": 1,
			"behind": 1,
			"nearer": 1,
			"our": 2,
			"wrong": 1,
			"feel": 1,
			"neer": 1,
			"night": 1,
			"shall": 9,
			"before": 4,
			"still": 5,
			"natures": 1,
			"yet": 7,
			"best": 2,
			"to": 34,
			"clouds": 1,
			"round": 1,
			"turn": 1,
			"mid": 1,
			"lie": 1,
			"rich": 2,
			"gently": 1,
			"glorious": 1,
			"growing": 2,
			"hence": 1,
			"ah": 2,
			"may": 2,
			"apart": 1,
			"we": 5,
			"glad": 1,
			"whose": 2,
			"as": 9,
			"array": 1,
			"stand": 2,
			"said": 1,
			"life": 1,
			"he": 2,
			"at": 4,
			"o": 26,
			"grow": 1,
			"the": 42,
			"tis": 2,
			"though": 6,
			"her": 4,
			"young": 1,
			"near": 1,
			"there": 7,
			"in": 32,
			"forgive": 1,
			"step": 2
		},
		"ye": {
			"sweet": 2,
			"come": 2,
			"low": 2,
			"dare": 1,
			"dying": 2,
			"look": 1,
			"hear": 4,
			"died": 1,
			"gates": 1,
			"free": 1,
			"birds": 1,
			"mountains": 1,
			"law": 1,
			"see": 2,
			"faithful": 1,
			"ages": 1,
			"shades": 2,
			"tell": 1,
			"wail": 1,
			"are": 6,
			"aye": 1,
			"fell": 1,
			"who": 13,
			"men": 3,
			"call": 2,
			"of": 6,
			"blind": 1,
			"bonnie": 2,
			"high": 1,
			"hills": 1,
			"once": 1,
			"up": 1,
			"she": 1,
			"sons": 2,
			"find": 3,
			"heavy": 1,
			"forth": 1,
			"fresh": 1,
			"mourn": 1,
			"lift": 1,
			"chant": 1,
			"slaves": 1,
			"behold": 2,
			"not": 7,
			"today": 1,
			"proud": 1,
			"praise": 1,
			"it": 1,
			"weep": 1,
			"by": 2,
			"pride": 1,
			"rise": 1,
			"kings": 1,
			"you": 1,
			"thus": 1,
			"kindly": 1,
			"for": 2,
			"should": 3,
			"cannot": 7,
			"rest": 1,
			"my": 1,
			"heroes": 1,
			"winds": 3,
			"great": 1,
			"watch": 1,
			"vain": 3,
			"wept": 1,
			"seek": 1,
			"most": 1,
			"win": 1,
			"lords": 1,
			"rain": 1,
			"can": 3,
			"were": 4,
			"walls": 1,
			"that": 7,
			"man": 2,
			"bear": 1,
			"another": 3,
			"says": 1,
			"make": 1,
			"fall": 1,
			"trust": 1,
			"must": 2,
			"or": 1,
			"field": 1,
			"have": 6,
			"blush": 1,
			"gave": 1,
			"sae": 1,
			"towers": 1,
			"soldiers": 1,
			"a": 3,
			"so": 2,
			"them": 1,
			"pines": 1,
			"gallant": 2,
			"never": 2,
			"ashes": 1,
			"love": 3,
			"on": 2,
			"but": 1,
			"brown": 1,
			"foes": 1,
			"poor": 1,
			"known": 1,
			"ye": 3,
			"when": 1,
			"eat": 1,
			"merry": 1,
			"knows": 1,
			"raise": 1,
			"be": 2,
			"firm": 1,
			"brave": 7,
			"say": 2,
			"and": 11,
			"march": 1,
			"bloom": 1,
			"do": 1,
			"christian": 1,
			"move": 1,
			"i": 3,
			"pay": 1,
			"here": 2,
			"too": 2,
			"shining": 1,
			"rocks": 1,
			"arts": 1,
			"each": 1,
			"how": 2,
			"hearts": 1,
			"from": 1,
			"would": 1,
			"living": 2,
			"beneath": 1,
			"no": 1,
			"bid": 1,
			"rouse": 1,
			"with": 5,
			"give": 3,
			"will": 2,
			"strong": 1,
			"all": 3,
			"gods": 1,
			"wild": 3,
			"comrades": 1,
			"then": 1,
			"notes": 1,
			"well": 1,
			"mercy": 1,
			"shall": 10,
			"still": 4,
			"your": 3,
			"mark": 1,
			"to": 7,
			"loud": 1,
			"lie": 3,
			"little": 2,
			"rich": 1,
			"heavenly": 1,
			"know": 3,
			"may": 4,
			"hail": 2,
			"powers": 1,
			"whose": 1,
			"as": 1,
			"fair": 1,
			"heavens": 2,
			"happy": 1,
			"done": 1,
			"said": 1,
			"he": 1,
			"me": 2,
			"o": 3,
			"blessed": 1,
			"the": 22,
			"tis": 1,
			"been": 2,
			"tread": 2,
			"in": 2
		},
		"choose": {
			"thine": 1,
			"of": 1,
			"this": 1,
			"for": 1,
			"thy": 1,
			"what": 1,
			"an": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"but": 1,
			"and": 2,
			"i": 1,
			"one": 1,
			"between": 1,
			"then": 1,
			"to": 2,
			"the": 1,
			"first": 1,
			"in": 1
		},
		"banners": {
			"him": 1,
			"dance": 1,
			"alone": 1,
			"they": 1,
			"pale": 1,
			"swept": 1,
			"go": 1,
			"wait": 1,
			"bright": 2,
			"on": 2,
			"and": 3,
			"fly": 1,
			"with": 1,
			"wave": 3,
			"gay": 1,
			"before": 1,
			"at": 1,
			"the": 1
		},
		"canst": {
			"hear": 1,
			"who": 1,
			"find": 1,
			"lift": 1,
			"not": 14,
			"by": 1,
			"without": 1,
			"read": 1,
			"reach": 1,
			"if": 1,
			"bear": 1,
			"make": 1,
			"sit": 1,
			"on": 1,
			"thee": 1,
			"say": 1,
			"and": 1,
			"thou": 10,
			"while": 1,
			"with": 1,
			"give": 1,
			"stay": 1,
			"live": 1,
			"get": 1,
			"know": 1
		},
		"lives": {
			"more": 2,
			"within": 2,
			"surely": 1,
			"are": 1,
			"who": 2,
			"of": 2,
			"nor": 1,
			"not": 4,
			"today": 1,
			"by": 1,
			"is": 1,
			"like": 2,
			"away": 1,
			"its": 2,
			"for": 1,
			"thy": 1,
			"whom": 1,
			"along": 1,
			"were": 1,
			"that": 4,
			"busy": 1,
			"a": 1,
			"out": 1,
			"and": 9,
			"between": 1,
			"from": 1,
			"sublime": 1,
			"beat": 1,
			"with": 1,
			"through": 1,
			"thomas": 1,
			"george": 1,
			"yet": 1,
			"to": 5,
			"we": 1,
			"as": 3,
			"he": 3,
			"at": 1,
			"the": 6,
			"change": 1,
			"there": 1,
			"in": 10
		},
		"years": {
			"more": 1,
			"since": 2,
			"forget": 1,
			"wi": 1,
			"hast": 1,
			"are": 2,
			"back": 1,
			"ive": 1,
			"which": 1,
			"ago": 4,
			"of": 20,
			"kept": 1,
			"after": 3,
			"once": 2,
			"brother": 1,
			"it": 1,
			"began": 1,
			"by": 4,
			"alone": 1,
			"long": 2,
			"is": 2,
			"like": 1,
			"return": 1,
			"away": 1,
			"pale": 1,
			"than": 1,
			"for": 3,
			"should": 1,
			"darling": 1,
			"my": 1,
			"again": 1,
			"comes": 1,
			"ere": 1,
			"were": 1,
			"that": 3,
			"if": 1,
			"full": 1,
			"go": 2,
			"had": 1,
			"what": 1,
			"or": 1,
			"finds": 1,
			"bright": 1,
			"have": 3,
			"their": 5,
			"a": 3,
			"so": 2,
			"on": 1,
			"old": 2,
			"but": 3,
			"time": 1,
			"thee": 1,
			"gone": 3,
			"t": 1,
			"and": 27,
			"do": 1,
			"i": 1,
			"thou": 1,
			"dull": 1,
			"would": 1,
			"no": 1,
			"roll": 1,
			"with": 3,
			"set": 1,
			"till": 1,
			"all": 1,
			"has": 1,
			"day": 1,
			"shall": 1,
			"before": 1,
			"still": 1,
			"yet": 1,
			"best": 1,
			"to": 5,
			"eve": 1,
			"we": 2,
			"as": 2,
			"at": 1,
			"the": 4,
			"scarce": 1,
			"seems": 1,
			"her": 2,
			"fire": 2,
			"there": 1,
			"in": 5,
			"seem": 1
		},
		"moving": {
			"us": 1,
			"right": 1,
			"toward": 1,
			"lines": 1,
			"lights": 1,
			"why": 1,
			"hark": 1,
			"about": 1,
			"slow": 2,
			"full": 1,
			"or": 1,
			"a": 1,
			"on": 2,
			"heart": 1,
			"notes": 1,
			"frame": 1,
			"to": 1,
			"me": 1,
			"seems": 1
		},
		"when": {
			"come": 1,
			"summer": 1,
			"suffering": 1,
			"more": 1,
			"wrought": 1,
			"thine": 1,
			"going": 1,
			"loves": 1,
			"im": 2,
			"christ": 2,
			"light": 2,
			"earth": 2,
			"die": 1,
			"his": 14,
			"mad": 1,
			"law": 1,
			"thousand": 1,
			"deeper": 1,
			"science": 1,
			"none": 3,
			"war": 3,
			"weary": 1,
			"are": 3,
			"fears": 1,
			"made": 1,
			"amidst": 1,
			"fell": 2,
			"next": 3,
			"who": 1,
			"sweetest": 1,
			"men": 4,
			"beam": 2,
			"greece": 2,
			"of": 3,
			"this": 9,
			"high": 1,
			"once": 7,
			"she": 23,
			"sacred": 1,
			"age": 1,
			"darkness": 1,
			"two": 2,
			"fresh": 1,
			"pain": 1,
			"pass": 1,
			"sick": 1,
			"rose": 1,
			"not": 1,
			"fade": 1,
			"hes": 2,
			"every": 4,
			"it": 21,
			"over": 3,
			"shake": 1,
			"neither": 1,
			"by": 8,
			"eyes": 1,
			"alone": 2,
			"sorrows": 1,
			"twixt": 1,
			"is": 4,
			"unto": 1,
			"like": 4,
			"lo": 2,
			"hard": 1,
			"away": 1,
			"forever": 1,
			"good": 1,
			"they": 34,
			"prayer": 1,
			"you": 24,
			"nature": 1,
			"thus": 2,
			"pale": 1,
			"new": 1,
			"earths": 1,
			"its": 7,
			"swift": 1,
			"pleasure": 2,
			"those": 3,
			"friends": 1,
			"where": 1,
			"others": 2,
			"looking": 1,
			"lovers": 1,
			"just": 1,
			"for": 3,
			"past": 1,
			"heaven": 3,
			"lost": 1,
			"tomorrow": 1,
			"autumn": 4,
			"rest": 1,
			"my": 22,
			"words": 2,
			"came": 1,
			"winds": 1,
			"john": 1,
			"deaths": 1,
			"shines": 1,
			"themselves": 1,
			"freedom": 2,
			"thy": 5,
			"greater": 1,
			"hushed": 1,
			"sleep": 1,
			"peace": 1,
			"comes": 1,
			"hopes": 1,
			"waves": 1,
			"rang": 2,
			"mary": 1,
			"soul": 2,
			"hope": 2,
			"strive": 1,
			"makes": 1,
			"most": 5,
			"evening": 3,
			"name": 1,
			"faith": 1,
			"god": 7,
			"can": 1,
			"moment": 1,
			"were": 3,
			"waking": 1,
			"oer": 3,
			"shell": 1,
			"did": 2,
			"was": 3,
			"that": 12,
			"if": 1,
			"lips": 1,
			"cares": 1,
			"man": 7,
			"both": 1,
			"fall": 2,
			"half": 1,
			"what": 1,
			"beautiful": 1,
			"music": 1,
			"pleasures": 1,
			"even": 1,
			"or": 3,
			"de": 1,
			"finds": 1,
			"wilt": 3,
			"hands": 1,
			"their": 4,
			"a": 22,
			"so": 1,
			"falls": 3,
			"upon": 2,
			"things": 1,
			"lord": 1,
			"many": 2,
			"hath": 1,
			"almost": 1,
			"love": 5,
			"on": 16,
			"fast": 1,
			"deep": 1,
			"memory": 1,
			"death": 4,
			"time": 4,
			"empty": 1,
			"ye": 1,
			"lifes": 2,
			"april": 2,
			"turns": 1,
			"roses": 1,
			"t": 2,
			"out": 1,
			"earthly": 1,
			"anguish": 1,
			"close": 1,
			"and": 21,
			"order": 1,
			"bliss": 1,
			"sun": 1,
			"truth": 1,
			"dark": 1,
			"last": 3,
			"west": 1,
			"sunshine": 1,
			"fate": 1,
			"wounded": 1,
			"i": 77,
			"thou": 27,
			"down": 5,
			"dull": 1,
			"here": 1,
			"mortal": 1,
			"one": 3,
			"such": 4,
			"rocks": 1,
			"shadows": 1,
			"each": 2,
			"hearts": 3,
			"other": 1,
			"from": 9,
			"marble": 1,
			"feeling": 1,
			"ill": 1,
			"reason": 1,
			"duty": 1,
			"no": 1,
			"called": 1,
			"mighty": 1,
			"with": 12,
			"around": 1,
			"soft": 1,
			"now": 2,
			"give": 1,
			"some": 8,
			"meet": 1,
			"will": 3,
			"all": 27,
			"chief": 1,
			"grief": 2,
			"then": 1,
			"ho": 1,
			"poured": 1,
			"thought": 1,
			"through": 1,
			"george": 1,
			"clear": 1,
			"king": 1,
			"nights": 1,
			"spring": 1,
			"wake": 1,
			"turned": 1,
			"nearer": 1,
			"our": 16,
			"storms": 3,
			"day": 1,
			"passing": 1,
			"fortune": 1,
			"night": 3,
			"mercy": 1,
			"shall": 16,
			"only": 2,
			"golden": 1,
			"your": 9,
			"to": 18,
			"loud": 1,
			"clouds": 3,
			"youth": 1,
			"springs": 1,
			"into": 1,
			"round": 2,
			"little": 1,
			"religion": 1,
			"gently": 1,
			"heavenly": 1,
			"wounds": 1,
			"sore": 1,
			"eve": 1,
			"smiled": 1,
			"we": 47,
			"simple": 1,
			"as": 7,
			"happy": 1,
			"said": 2,
			"life": 2,
			"he": 53,
			"me": 2,
			"at": 12,
			"o": 1,
			"coming": 1,
			"yonder": 1,
			"left": 1,
			"the": 234,
			"tis": 1,
			"theyre": 1,
			"bent": 1,
			"her": 8,
			"change": 1,
			"young": 1,
			"near": 1,
			"first": 10,
			"jesus": 2,
			"there": 2,
			"in": 18,
			"flowers": 2,
			"thoughts": 2
		},
		"eat": {
			"earth": 1,
			"his": 1,
			"of": 2,
			"up": 1,
			"cold": 1,
			"they": 1,
			"you": 1,
			"that": 1,
			"sae": 1,
			"their": 2,
			"so": 1,
			"them": 1,
			"and": 5,
			"some": 1,
			"all": 1,
			"your": 1,
			"to": 1,
			"the": 2
		},
		"gone": {
			"sweet": 1,
			"his": 2,
			"mad": 1,
			"alas": 1,
			"which": 1,
			"of": 2,
			"wine": 1,
			"once": 1,
			"she": 1,
			"beyond": 2,
			"age": 1,
			"not": 1,
			"today": 1,
			"over": 1,
			"by": 6,
			"is": 1,
			"unto": 1,
			"they": 1,
			"you": 1,
			"nature": 1,
			"mother": 1,
			"without": 1,
			"small": 1,
			"for": 3,
			"short": 1,
			"sing": 1,
			"ere": 2,
			"mary": 1,
			"can": 1,
			"was": 1,
			"that": 1,
			"if": 1,
			"what": 2,
			"oh": 1,
			"or": 1,
			"think": 1,
			"their": 1,
			"a": 2,
			"spirit": 1,
			"on": 2,
			"quite": 1,
			"above": 1,
			"but": 6,
			"poor": 1,
			"when": 1,
			"gone": 2,
			"out": 2,
			"and": 19,
			"i": 2,
			"down": 3,
			"from": 2,
			"strange": 1,
			"ill": 1,
			"while": 1,
			"solitude": 1,
			"with": 2,
			"now": 1,
			"through": 2,
			"our": 3,
			"day": 1,
			"before": 7,
			"only": 1,
			"to": 14,
			"into": 2,
			"ah": 1,
			"we": 3,
			"he": 2,
			"below": 1,
			"o": 1,
			"the": 18,
			"though": 1,
			"there": 2,
			"in": 1
		},
		"deed": {
			"dying": 1,
			"more": 1,
			"of": 5,
			"off": 1,
			"nor": 1,
			"is": 5,
			"than": 1,
			"for": 1,
			"because": 1,
			"power": 1,
			"was": 4,
			"if": 1,
			"an": 1,
			"or": 1,
			"when": 1,
			"and": 8,
			"thou": 1,
			"shall": 1,
			"to": 2,
			"little": 1,
			"he": 3,
			"the": 1,
			"in": 1
		},
		"lifes": {
			"flower": 1,
			"low": 1,
			"woes": 1,
			"more": 1,
			"dreary": 1,
			"wi": 1,
			"woe": 1,
			"story": 1,
			"sweetest": 2,
			"of": 1,
			"star": 1,
			"wine": 1,
			"angel": 1,
			"stormy": 1,
			"race": 1,
			"dear": 1,
			"sands": 1,
			"solemn": 1,
			"water": 2,
			"load": 1,
			"cross": 1,
			"hard": 1,
			"form": 1,
			"they": 1,
			"path": 1,
			"wide": 1,
			"smile": 1,
			"sea": 1,
			"small": 1,
			"welcome": 1,
			"cup": 2,
			"lost": 1,
			"autumn": 1,
			"great": 2,
			"short": 1,
			"again": 1,
			"thy": 1,
			"morn": 1,
			"battle": 1,
			"that": 1,
			"nothing": 1,
			"have": 1,
			"a": 5,
			"so": 1,
			"joys": 1,
			"green": 1,
			"things": 1,
			"own": 1,
			"but": 2,
			"eternal": 1,
			"be": 1,
			"feet": 1,
			"having": 1,
			"fever": 1,
			"dark": 1,
			"last": 2,
			"tale": 2,
			"dull": 1,
			"forest": 1,
			"sublime": 1,
			"worst": 1,
			"toil": 1,
			"page": 1,
			"shall": 1,
			"way": 1,
			"to": 1,
			"little": 1,
			"flow": 1,
			"vast": 1,
			"glad": 1,
			"fair": 1,
			"life": 1,
			"the": 1,
			"young": 2
		},
		"onward": {
			"his": 1,
			"who": 1,
			"she": 1,
			"nor": 1,
			"pass": 1,
			"it": 1,
			"by": 1,
			"they": 1,
			"where": 1,
			"for": 1,
			"oer": 1,
			"did": 1,
			"what": 1,
			"a": 1,
			"ye": 1,
			"and": 1,
			"i": 1,
			"each": 1,
			"roll": 2,
			"with": 2,
			"all": 1,
			"still": 2,
			"way": 1,
			"to": 4,
			"into": 1,
			"strain": 1,
			"we": 1,
			"as": 1,
			"he": 1,
			"the": 2,
			"in": 2
		},
		"april": {
			"men": 1,
			"of": 2,
			"tide": 1,
			"by": 1,
			"woods": 1,
			"farewell": 1,
			"for": 1,
			"came": 1,
			"winds": 1,
			"morn": 1,
			"dew": 1,
			"rain": 1,
			"tears": 1,
			"spirit": 1,
			"on": 1,
			"but": 1,
			"when": 1,
			"burst": 1,
			"and": 1,
			"with": 1,
			"all": 1,
			"ho": 1,
			"day": 3,
			"world": 1
		},
		"turns": {
			"his": 4,
			"none": 1,
			"up": 1,
			"not": 1,
			"it": 1,
			"earths": 1,
			"its": 1,
			"again": 1,
			"god": 1,
			"a": 1,
			"them": 1,
			"on": 2,
			"out": 1,
			"and": 3,
			"from": 2,
			"with": 1,
			"aside": 1,
			"to": 10,
			"he": 1,
			"at": 1,
			"the": 7,
			"in": 3
		},
		"eternal": {
			"summer": 2,
			"light": 1,
			"birds": 1,
			"charity": 1,
			"law": 1,
			"wi": 1,
			"war": 1,
			"right": 1,
			"which": 1,
			"beam": 1,
			"of": 4,
			"fame": 2,
			"hills": 1,
			"silence": 1,
			"hymn": 1,
			"city": 1,
			"joy": 1,
			"foam": 1,
			"pain": 1,
			"praise": 2,
			"wisdom": 1,
			"is": 2,
			"form": 1,
			"pleasure": 1,
			"noise": 1,
			"frost": 1,
			"beauty": 1,
			"smiles": 1,
			"sleep": 1,
			"peace": 3,
			"shore": 1,
			"soul": 1,
			"hope": 1,
			"sir": 1,
			"friend": 1,
			"wrath": 1,
			"god": 1,
			"power": 2,
			"oer": 1,
			"sabbath": 1,
			"cause": 1,
			"that": 1,
			"spake": 1,
			"must": 1,
			"what": 1,
			"stars": 1,
			"or": 2,
			"their": 1,
			"deep": 1,
			"known": 1,
			"years": 2,
			"moving": 1,
			"sorrow": 1,
			"and": 6,
			"bloom": 1,
			"year": 1,
			"i": 1,
			"home": 2,
			"one": 1,
			"mind": 1,
			"now": 3,
			"tempest": 1,
			"blest": 1,
			"thought": 1,
			"king": 3,
			"master": 1,
			"ways": 1,
			"throne": 1,
			"day": 6,
			"to": 2,
			"youth": 1,
			"use": 1,
			"we": 1,
			"life": 2,
			"wound": 1,
			"o": 2,
			"gain": 1,
			"the": 1,
			"in": 1,
			"step": 1,
			"shalt": 1
		},
		"terror": {
			"his": 1,
			"of": 3,
			"is": 1,
			"laid": 1,
			"were": 1,
			"that": 1,
			"if": 1,
			"or": 1,
			"a": 1,
			"but": 1,
			"be": 1,
			"dumb": 1,
			"and": 3,
			"haste": 1,
			"sublime": 1,
			"no": 1,
			"to": 2,
			"the": 2,
			"in": 1
		},
		"honest": {
			"wife": 1,
			"doubt": 3,
			"men": 1,
			"fame": 3,
			"gentle": 1,
			"just": 1,
			"for": 1,
			"words": 1,
			"man": 1,
			"front": 1,
			"but": 1,
			"heart": 1,
			"and": 1,
			"truth": 2,
			"tale": 2,
			"living": 1,
			"thought": 1,
			"toil": 1,
			"natures": 1,
			"way": 1,
			"to": 1,
			"as": 1,
			"fight": 1,
			"in": 1,
			"sky": 1
		},
		"plain": {
			"thine": 1,
			"his": 1,
			"save": 1,
			"of": 2,
			"not": 1,
			"it": 1,
			"by": 2,
			"is": 1,
			"they": 2,
			"shook": 1,
			"where": 1,
			"for": 1,
			"blown": 1,
			"lonely": 1,
			"comes": 1,
			"yellow": 1,
			"william": 1,
			"that": 2,
			"an": 1,
			"their": 2,
			"a": 3,
			"flies": 1,
			"above": 1,
			"but": 1,
			"when": 1,
			"and": 12,
			"truth": 1,
			"i": 1,
			"thou": 2,
			"too": 1,
			"living": 1,
			"no": 1,
			"with": 2,
			"then": 3,
			"turned": 1,
			"our": 1,
			"before": 1,
			"to": 1,
			"as": 1,
			"he": 1,
			"me": 1,
			"below": 1,
			"o": 1,
			"the": 4,
			"tis": 2
		},
		"religious": {
			"of": 2,
			"it": 1,
			"and": 2,
			"truth": 1,
			"thought": 2,
			"poetry": 3,
			"thinking": 1,
			"as": 1,
			"life": 6,
			"world": 1,
			"in": 1,
			"thoughts": 2
		},
		"until": {
			"mine": 1,
			"by": 1,
			"like": 1,
			"they": 4,
			"my": 1,
			"that": 3,
			"their": 1,
			"lord": 1,
			"death": 1,
			"i": 1,
			"from": 1,
			"we": 1,
			"he": 4,
			"at": 4,
			"the": 5
		},
		"merry": {
			"sweet": 1,
			"sound": 1,
			"birds": 1,
			"dance": 1,
			"who": 1,
			"men": 1,
			"of": 1,
			"season": 1,
			"hours": 1,
			"is": 1,
			"for": 1,
			"tender": 1,
			"were": 1,
			"was": 1,
			"let": 1,
			"feast": 1,
			"brown": 2,
			"time": 1,
			"heart": 2,
			"i": 1,
			"one": 1,
			"while": 1,
			"singing": 1,
			"all": 1,
			"comrades": 1,
			"songs": 1,
			"our": 1,
			"day": 1,
			"little": 1,
			"skies": 1,
			"as": 2,
			"he": 2,
			"the": 1,
			"though": 1,
			"world": 1
		},
		"thank": {
			"a": 1,
			"god": 6,
			"the": 2,
			"thee": 7,
			"him": 1,
			"for": 1,
			"whatever": 1,
			"you": 1,
			"heaven": 1
		},
		"waters": {
			"sweet": 1,
			"blue": 2,
			"crossed": 1,
			"kiss": 1,
			"are": 1,
			"back": 1,
			"worth": 1,
			"of": 2,
			"cast": 1,
			"pour": 1,
			"after": 1,
			"over": 1,
			"water": 1,
			"woods": 1,
			"kissed": 1,
			"like": 1,
			"forever": 1,
			"where": 1,
			"run": 1,
			"again": 1,
			"thy": 1,
			"cease": 1,
			"faith": 1,
			"oer": 1,
			"rolling": 1,
			"fall": 1,
			"pure": 1,
			"music": 1,
			"ran": 1,
			"never": 1,
			"on": 3,
			"thee": 1,
			"be": 1,
			"and": 1,
			"i": 1,
			"down": 1,
			"draw": 1,
			"from": 2,
			"with": 1,
			"will": 1,
			"flash": 1,
			"all": 1,
			"spring": 2,
			"neer": 1,
			"needs": 1,
			"yet": 1,
			"lie": 1,
			"know": 1,
			"ah": 1,
			"as": 3,
			"gleam": 1,
			"the": 2,
			"though": 1,
			"there": 1,
			"in": 1
		},
		"mans": {
			"died": 1,
			"are": 1,
			"she": 1,
			"part": 1,
			"it": 2,
			"is": 1,
			"like": 1,
			"weakness": 3,
			"without": 1,
			"pleasure": 1,
			"for": 1,
			"judgment": 1,
			"rest": 1,
			"words": 1,
			"tender": 1,
			"thy": 1,
			"better": 1,
			"soul": 1,
			"garden": 1,
			"most": 2,
			"door": 1,
			"face": 1,
			"sin": 2,
			"foot": 1,
			"were": 1,
			"arm": 1,
			"another": 1,
			"trust": 1,
			"what": 1,
			"conscience": 1,
			"eye": 1,
			"given": 1,
			"true": 1,
			"spirit": 1,
			"love": 1,
			"on": 1,
			"own": 1,
			"feast": 1,
			"but": 1,
			"death": 1,
			"poor": 1,
			"ye": 1,
			"terror": 1,
			"plain": 1,
			"bed": 1,
			"heart": 6,
			"and": 1,
			"doom": 1,
			"thou": 1,
			"greet": 1,
			"wretched": 1,
			"shining": 1,
			"work": 1,
			"mind": 1,
			"no": 1,
			"dread": 1,
			"virtue": 1,
			"gods": 1,
			"clear": 1,
			"day": 4,
			"fear": 1,
			"mark": 1,
			"into": 1,
			"art": 1,
			"life": 2,
			"fancy": 1,
			"frown": 1,
			"the": 4,
			"fire": 1,
			"first": 1,
			"dim": 1,
			"thoughts": 1
		},
		"burst": {
			"of": 3,
			"this": 1,
			"high": 1,
			"its": 1,
			"on": 2,
			"but": 1,
			"out": 1,
			"and": 4,
			"from": 2,
			"all": 1,
			"to": 2,
			"into": 1,
			"round": 1,
			"the": 7,
			"in": 1
		},
		"length": {
			"of": 5,
			"its": 2,
			"een": 1,
			"my": 1,
			"thy": 1,
			"makes": 1,
			"along": 1,
			"that": 2,
			"but": 2,
			"and": 4,
			"i": 2,
			"broke": 1,
			"one": 1,
			"such": 1,
			"from": 1,
			"before": 1,
			"yet": 1,
			"to": 6,
			"into": 1,
			"at": 1,
			"the": 6,
			"in": 2,
			"grows": 1
		},
		"sigh": {
			"alas": 1,
			"of": 2,
			"she": 1,
			"nor": 3,
			"over": 1,
			"alone": 1,
			"for": 9,
			"my": 1,
			"that": 3,
			"think": 1,
			"their": 1,
			"a": 2,
			"on": 1,
			"but": 1,
			"and": 8,
			"one": 1,
			"while": 1,
			"no": 4,
			"with": 1,
			"gods": 1,
			"yet": 2,
			"to": 3,
			"we": 1,
			"as": 1,
			"he": 1,
			"at": 1,
			"o": 1,
			"the": 6,
			"tis": 1
		},
		"dreams": {
			"sweet": 1,
			"books": 1,
			"earth": 1,
			"his": 1,
			"charity": 1,
			"are": 3,
			"call": 2,
			"of": 12,
			"does": 1,
			"proud": 1,
			"by": 1,
			"is": 1,
			"you": 1,
			"queen": 1,
			"william": 1,
			"oer": 1,
			"that": 3,
			"half": 2,
			"bright": 1,
			"have": 2,
			"awake": 1,
			"upon": 1,
			"but": 1,
			"empty": 1,
			"and": 8,
			"i": 5,
			"these": 1,
			"now": 1,
			"give": 1,
			"some": 1,
			"through": 1,
			"begun": 1,
			"to": 2,
			"may": 1,
			"we": 1,
			"he": 2,
			"the": 3,
			"her": 1,
			"in": 1
		},
		"felt": {
			"within": 1,
			"free": 1,
			"his": 1,
			"not": 1,
			"it": 5,
			"far": 1,
			"for": 1,
			"thy": 1,
			"power": 1,
			"oer": 1,
			"that": 1,
			"or": 2,
			"a": 6,
			"so": 1,
			"them": 1,
			"on": 1,
			"but": 1,
			"and": 1,
			"presence": 1,
			"how": 1,
			"no": 2,
			"with": 1,
			"through": 1,
			"before": 1,
			"mankind": 1,
			"as": 2,
			"at": 1,
			"the": 7,
			"her": 2,
			"in": 3
		},
		"task": {
			"book": 1,
			"ii": 2,
			"hast": 1,
			"of": 4,
			"she": 1,
			"not": 1,
			"quiet": 1,
			"is": 1,
			"for": 1,
			"indeed": 1,
			"was": 2,
			"what": 1,
			"but": 1,
			"and": 3,
			"i": 1,
			"while": 1,
			"will": 1,
			"to": 1,
			"the": 2,
			"in": 1
		},
		"knows": {
			"more": 1,
			"ours": 1,
			"im": 1,
			"his": 1,
			"who": 1,
			"which": 1,
			"of": 1,
			"nor": 1,
			"not": 6,
			"it": 1,
			"neither": 1,
			"you": 1,
			"mother": 1,
			"its": 1,
			"where": 2,
			"burns": 1,
			"thy": 2,
			"whom": 1,
			"that": 4,
			"let": 1,
			"full": 2,
			"half": 1,
			"what": 1,
			"an": 1,
			"so": 1,
			"and": 2,
			"i": 1,
			"each": 1,
			"how": 1,
			"no": 5,
			"well": 1,
			"best": 1,
			"he": 1,
			"me": 1,
			"the": 6
		},
		"raise": {
			"us": 1,
			"his": 1,
			"him": 1,
			"who": 1,
			"this": 1,
			"angel": 1,
			"it": 2,
			"they": 1,
			"where": 1,
			"for": 2,
			"my": 2,
			"thy": 1,
			"that": 1,
			"their": 2,
			"a": 1,
			"ye": 1,
			"and": 2,
			"such": 1,
			"with": 1,
			"all": 1,
			"your": 1,
			"to": 1,
			"loud": 2,
			"vows": 2,
			"me": 2,
			"the": 8,
			"jesus": 1
		},
		"be": {
			"sweet": 3,
			"blue": 1,
			"come": 4,
			"else": 1,
			"fled": 1,
			"bread": 1,
			"us": 1,
			"more": 7,
			"sent": 1,
			"taught": 3,
			"wrought": 2,
			"won": 6,
			"since": 2,
			"thine": 9,
			"ours": 5,
			"within": 2,
			"ready": 1,
			"england": 1,
			"christ": 2,
			"free": 16,
			"light": 1,
			"his": 10,
			"save": 1,
			"hell": 1,
			"see": 1,
			"lady": 1,
			"bare": 1,
			"faithful": 2,
			"right": 3,
			"made": 5,
			"aye": 1,
			"very": 3,
			"under": 1,
			"who": 3,
			"seen": 13,
			"silent": 2,
			"men": 1,
			"which": 1,
			"deeds": 1,
			"of": 18,
			"this": 10,
			"cast": 1,
			"bonnie": 1,
			"rude": 1,
			"kept": 1,
			"learning": 1,
			"after": 1,
			"once": 1,
			"up": 5,
			"she": 5,
			"beyond": 1,
			"nor": 6,
			"heavy": 2,
			"joy": 4,
			"scorn": 1,
			"beheld": 1,
			"dear": 1,
			"two": 1,
			"fresh": 1,
			"pass": 1,
			"slaves": 2,
			"beloved": 1,
			"mine": 3,
			"not": 19,
			"hours": 1,
			"constant": 1,
			"put": 4,
			"today": 1,
			"proud": 4,
			"every": 1,
			"praise": 1,
			"pressed": 1,
			"it": 23,
			"over": 2,
			"host": 1,
			"smooth": 1,
			"wisdom": 2,
			"brought": 1,
			"by": 20,
			"alone": 4,
			"shut": 1,
			"long": 5,
			"twixt": 2,
			"mute": 1,
			"something": 1,
			"quiet": 3,
			"matter": 1,
			"cold": 1,
			"wise": 7,
			"is": 4,
			"joyous": 1,
			"soon": 14,
			"few": 1,
			"unto": 1,
			"like": 6,
			"lo": 1,
			"glass": 1,
			"away": 2,
			"found": 13,
			"why": 9,
			"sung": 6,
			"forever": 3,
			"good": 6,
			"pleased": 2,
			"ever": 2,
			"they": 5,
			"you": 5,
			"tyrants": 1,
			"glowing": 1,
			"mild": 1,
			"thus": 4,
			"swept": 1,
			"rosy": 1,
			"heard": 7,
			"leaves": 1,
			"without": 4,
			"earths": 1,
			"laid": 5,
			"its": 4,
			"than": 3,
			"swift": 2,
			"pleasure": 1,
			"those": 1,
			"friends": 1,
			"where": 5,
			"brief": 1,
			"run": 1,
			"press": 1,
			"just": 6,
			"for": 26,
			"blown": 1,
			"past": 2,
			"judgment": 1,
			"read": 1,
			"heaven": 1,
			"lost": 6,
			"worse": 1,
			"fixed": 1,
			"my": 25,
			"spent": 2,
			"whats": 1,
			"heroes": 1,
			"winds": 1,
			"great": 2,
			"john": 2,
			"again": 5,
			"earl": 2,
			"forgot": 2,
			"enough": 1,
			"freedom": 1,
			"thy": 10,
			"yes": 1,
			"watch": 1,
			"greater": 1,
			"hushed": 1,
			"vain": 1,
			"peace": 2,
			"ere": 2,
			"better": 6,
			"hope": 1,
			"born": 5,
			"strive": 1,
			"because": 2,
			"rough": 2,
			"most": 2,
			"sir": 1,
			"times": 1,
			"torn": 3,
			"friend": 2,
			"lords": 1,
			"clay": 1,
			"queen": 22,
			"william": 1,
			"false": 3,
			"sin": 1,
			"god": 1,
			"noble": 2,
			"were": 3,
			"comfort": 2,
			"oer": 4,
			"crowned": 1,
			"sudden": 1,
			"indeed": 1,
			"did": 1,
			"that": 20,
			"if": 8,
			"let": 4,
			"bear": 1,
			"fain": 1,
			"always": 1,
			"full": 2,
			"often": 1,
			"broken": 1,
			"perfume": 1,
			"had": 5,
			"general": 1,
			"what": 3,
			"an": 4,
			"nothing": 2,
			"or": 6,
			"moved": 1,
			"hands": 1,
			"bright": 2,
			"late": 1,
			"tears": 1,
			"trod": 2,
			"their": 3,
			"a": 49,
			"so": 18,
			"heat": 1,
			"given": 8,
			"sometimes": 1,
			"true": 11,
			"green": 2,
			"upon": 2,
			"lay": 1,
			"lord": 2,
			"never": 2,
			"many": 1,
			"met": 2,
			"love": 3,
			"on": 11,
			"saw": 1,
			"break": 1,
			"red": 1,
			"girl": 1,
			"above": 1,
			"deep": 1,
			"content": 2,
			"but": 26,
			"death": 2,
			"time": 1,
			"poor": 1,
			"perhaps": 2,
			"buried": 1,
			"known": 1,
			"ye": 4,
			"when": 7,
			"gone": 5,
			"eternal": 1,
			"honest": 1,
			"be": 3,
			"weeping": 1,
			"out": 6,
			"kind": 2,
			"dumb": 1,
			"brave": 3,
			"naught": 1,
			"german": 1,
			"and": 47,
			"bliss": 1,
			"do": 1,
			"dark": 2,
			"myself": 1,
			"black": 1,
			"ask": 1,
			"grave": 1,
			"hid": 2,
			"i": 13,
			"unknown": 1,
			"worthy": 3,
			"thou": 19,
			"down": 3,
			"told": 5,
			"less": 1,
			"bad": 1,
			"broke": 2,
			"here": 6,
			"too": 3,
			"raised": 1,
			"mortal": 1,
			"one": 8,
			"might": 1,
			"such": 1,
			"perfect": 1,
			"work": 1,
			"rather": 2,
			"each": 2,
			"how": 1,
			"other": 3,
			"from": 2,
			"sought": 1,
			"strange": 1,
			"stronger": 1,
			"ill": 1,
			"beneath": 1,
			"these": 1,
			"while": 2,
			"foul": 1,
			"no": 14,
			"bound": 3,
			"pitiful": 16,
			"calm": 2,
			"called": 1,
			"guest": 1,
			"alfred": 1,
			"with": 28,
			"around": 1,
			"sad": 1,
			"soft": 2,
			"now": 9,
			"some": 3,
			"learned": 1,
			"till": 1,
			"strong": 2,
			"all": 13,
			"chief": 1,
			"patient": 11,
			"gay": 3,
			"gods": 2,
			"wild": 1,
			"then": 1,
			"slain": 2,
			"blest": 6,
			"thought": 1,
			"through": 2,
			"ten": 1,
			"angels": 2,
			"george": 1,
			"well": 5,
			"clear": 1,
			"king": 1,
			"much": 1,
			"nearer": 3,
			"our": 14,
			"wrong": 2,
			"aside": 1,
			"gathered": 2,
			"needs": 1,
			"equal": 1,
			"loved": 7,
			"stay": 1,
			"before": 2,
			"only": 1,
			"still": 11,
			"your": 6,
			"yet": 4,
			"to": 41,
			"poetry": 1,
			"into": 1,
			"round": 2,
			"little": 1,
			"rich": 2,
			"glorious": 3,
			"growing": 1,
			"bold": 4,
			"may": 2,
			"we": 3,
			"glad": 5,
			"spread": 1,
			"whose": 1,
			"as": 21,
			"fair": 1,
			"heavens": 2,
			"happy": 3,
			"done": 23,
			"said": 4,
			"life": 2,
			"he": 8,
			"at": 16,
			"led": 1,
			"o": 5,
			"coming": 1,
			"gain": 1,
			"left": 2,
			"the": 83,
			"though": 2,
			"sure": 12,
			"world": 1,
			"bent": 1,
			"drawn": 2,
			"her": 2,
			"safe": 2,
			"weak": 1,
			"young": 3,
			"dead": 1,
			"fire": 1,
			"near": 6,
			"there": 9,
			"grim": 1,
			"lowly": 1,
			"in": 34,
			"forgive": 1,
			"dim": 4,
			"shed": 2,
			"thoughts": 1
		},
		"bed": {
			"sweet": 1,
			"wife": 1,
			"mountains": 1,
			"lady": 1,
			"of": 9,
			"she": 3,
			"sick": 1,
			"not": 1,
			"dry": 1,
			"by": 1,
			"prayer": 1,
			"mother": 1,
			"seven": 1,
			"where": 2,
			"for": 5,
			"bloody": 1,
			"my": 2,
			"thy": 1,
			"that": 2,
			"or": 2,
			"blush": 1,
			"a": 1,
			"so": 1,
			"lay": 1,
			"death": 1,
			"canst": 1,
			"and": 14,
			"i": 1,
			"from": 1,
			"with": 3,
			"around": 1,
			"now": 2,
			"till": 1,
			"then": 2,
			"has": 1,
			"yet": 1,
			"to": 1,
			"he": 2,
			"at": 2,
			"the": 3,
			"tis": 1,
			"though": 2,
			"her": 4,
			"in": 4
		},
		"firm": {
			"holds": 1,
			"of": 2,
			"land": 1,
			"friends": 1,
			"ground": 1,
			"closed": 1,
			"on": 2,
			"and": 3,
			"doth": 1,
			"shall": 1,
			"as": 3,
			"stand": 2,
			"the": 2,
			"seems": 1
		},
		"van": {
			"of": 2,
			"kissed": 1,
			"like": 1,
			"heard": 1,
			"soul": 1,
			"remember": 1,
			"wrath": 1,
			"god": 1,
			"man": 2,
			"on": 1,
			"heart": 1,
			"and": 1,
			"with": 2,
			"we": 1,
			"fair": 1,
			"o": 1,
			"the": 2
		},
		"whittier": {
			"hymn": 1,
			"they": 1,
			"song": 1,
			"words": 1,
			"heroes": 1,
			"freedom": 1,
			"or": 1,
			"a": 1,
			"old": 1,
			"and": 2,
			"i": 1,
			"judge": 1,
			"strong": 1,
			"has": 1,
			"whose": 1,
			"the": 4,
			"there": 1
		},
		"ay": {
			"call": 1,
			"dear": 1,
			"every": 1,
			"it": 1,
			"is": 1,
			"they": 1,
			"press": 1,
			"note": 1,
			"sing": 1,
			"let": 2,
			"often": 1,
			"tear": 2,
			"but": 1,
			"ay": 1,
			"and": 1,
			"one": 1,
			"as": 1,
			"me": 4,
			"tis": 1
		},
		"roses": {
			"fierce": 1,
			"beside": 1,
			"of": 3,
			"is": 1,
			"its": 1,
			"for": 1,
			"my": 1,
			"crowned": 1,
			"beautiful": 1,
			"have": 2,
			"their": 1,
			"a": 2,
			"red": 1,
			"death": 1,
			"when": 1,
			"roses": 1,
			"and": 8,
			"here": 1,
			"too": 1,
			"from": 1,
			"while": 1,
			"soft": 1,
			"will": 1,
			"then": 1,
			"into": 1,
			"round": 1,
			"as": 1,
			"o": 1,
			"the": 2,
			"though": 1,
			"dead": 1,
			"in": 3
		},
		"weeping": {
			"beyond": 1,
			"dry": 1,
			"over": 1,
			"eyes": 1,
			"heard": 1,
			"friends": 1,
			"oer": 1,
			"was": 1,
			"eye": 1,
			"upon": 1,
			"and": 1,
			"i": 3,
			"each": 1,
			"would": 1,
			"guilty": 1,
			"walked": 1,
			"open": 1,
			"shall": 1,
			"at": 3,
			"led": 1,
			"the": 1,
			"near": 1,
			"there": 1,
			"in": 1
		},
		"merit": {
			"of": 2,
			"praise": 1,
			"is": 3,
			"those": 1,
			"for": 1,
			"heaven": 1,
			"take": 1,
			"that": 2,
			"show": 1,
			"on": 1,
			"but": 1,
			"lives": 1,
			"and": 1,
			"i": 1,
			"to": 1,
			"the": 2
		},
		"feet": {
			"footnote": 1,
			"thine": 1,
			"within": 1,
			"crossed": 1,
			"are": 3,
			"under": 1,
			"who": 1,
			"which": 1,
			"of": 11,
			"this": 1,
			"nor": 1,
			"joy": 1,
			"mine": 1,
			"by": 1,
			"long": 1,
			"like": 2,
			"earths": 1,
			"where": 1,
			"yea": 1,
			"for": 1,
			"should": 1,
			"theres": 1,
			"my": 1,
			"again": 1,
			"therefore": 1,
			"sir": 1,
			"forward": 1,
			"can": 1,
			"were": 1,
			"that": 5,
			"if": 1,
			"willie": 1,
			"full": 1,
			"had": 1,
			"oh": 1,
			"or": 1,
			"have": 9,
			"a": 1,
			"so": 1,
			"never": 1,
			"on": 3,
			"quite": 1,
			"above": 2,
			"but": 2,
			"when": 1,
			"be": 1,
			"out": 1,
			"and": 23,
			"do": 1,
			"wounded": 1,
			"i": 10,
			"between": 1,
			"draw": 1,
			"each": 1,
			"whereer": 1,
			"how": 2,
			"while": 2,
			"no": 1,
			"with": 4,
			"sad": 1,
			"some": 1,
			"till": 2,
			"all": 1,
			"then": 1,
			"through": 1,
			"doth": 2,
			"our": 1,
			"shall": 1,
			"to": 5,
			"slowly": 1,
			"may": 1,
			"we": 1,
			"whose": 1,
			"as": 1,
			"charles": 1,
			"he": 2,
			"lies": 1,
			"the": 11,
			"her": 2,
			"in": 2
		},
		"wondrous": {
			"midnight": 1,
			"play": 1,
			"sight": 1,
			"chant": 1,
			"land": 1,
			"wise": 1,
			"gift": 1,
			"you": 1,
			"hand": 1,
			"power": 1,
			"make": 1,
			"true": 1,
			"kind": 1,
			"tale": 1,
			"strange": 1,
			"these": 1,
			"realm": 1,
			"thought": 1,
			"wealth": 1,
			"works": 1,
			"frame": 1,
			"shall": 1,
			"to": 1,
			"youth": 1,
			"fair": 1
		},
		"wings": {
			"within": 1,
			"his": 1,
			"begin": 1,
			"voices": 1,
			"seemed": 1,
			"of": 15,
			"up": 1,
			"by": 1,
			"kings": 1,
			"they": 1,
			"those": 1,
			"for": 1,
			"great": 1,
			"short": 1,
			"peace": 1,
			"hope": 1,
			"flung": 1,
			"oer": 2,
			"immortal": 1,
			"that": 2,
			"bear": 1,
			"tears": 1,
			"a": 1,
			"on": 2,
			"but": 1,
			"and": 15,
			"i": 2,
			"down": 1,
			"would": 1,
			"these": 1,
			"with": 1,
			"around": 1,
			"your": 1,
			"to": 4,
			"ah": 1,
			"withered": 1,
			"we": 1,
			"at": 2,
			"the": 5,
			"though": 1,
			"in": 4
		},
		"t": {
			"law": 1,
			"fears": 1,
			"she": 1,
			"nor": 1,
			"find": 1,
			"is": 89,
			"you": 1,
			"heaven": 1,
			"were": 9,
			"was": 29,
			"that": 1,
			"if": 1,
			"what": 1,
			"have": 1,
			"a": 2,
			"love": 1,
			"but": 1,
			"ye": 1,
			"other": 3,
			"would": 2,
			"will": 5,
			"thought": 1,
			"has": 1,
			"golden": 1,
			"may": 1,
			"as": 2,
			"fair": 1,
			"at": 1,
			"the": 1
		},
		"glory": {
			"come": 1,
			"us": 1,
			"hear": 1,
			"thine": 1,
			"die": 1,
			"his": 2,
			"stream": 1,
			"him": 1,
			"see": 1,
			"are": 1,
			"story": 1,
			"made": 1,
			"seen": 1,
			"dies": 1,
			"of": 14,
			"this": 1,
			"beyond": 1,
			"not": 2,
			"fade": 1,
			"praise": 1,
			"is": 6,
			"rise": 1,
			"lead": 1,
			"hark": 1,
			"ever": 1,
			"heard": 1,
			"its": 1,
			"those": 1,
			"where": 2,
			"for": 1,
			"past": 1,
			"my": 2,
			"came": 1,
			"great": 1,
			"again": 3,
			"freedom": 1,
			"smiles": 1,
			"comes": 1,
			"hopes": 1,
			"whom": 1,
			"born": 1,
			"crowned": 2,
			"that": 3,
			"if": 1,
			"what": 1,
			"stars": 1,
			"or": 3,
			"finds": 1,
			"fill": 1,
			"a": 2,
			"lord": 1,
			"on": 1,
			"but": 1,
			"when": 3,
			"be": 2,
			"glory": 11,
			"out": 1,
			"and": 19,
			"do": 1,
			"move": 1,
			"down": 1,
			"too": 2,
			"one": 1,
			"might": 1,
			"from": 5,
			"with": 3,
			"around": 1,
			"everlasting": 1,
			"now": 1,
			"set": 1,
			"shone": 1,
			"will": 1,
			"then": 1,
			"asleep": 1,
			"doth": 1,
			"our": 1,
			"throne": 1,
			"fallen": 1,
			"yet": 1,
			"to": 14,
			"round": 2,
			"th": 1,
			"we": 1,
			"whose": 1,
			"as": 1,
			"charles": 1,
			"at": 1,
			"o": 2,
			"yonder": 1,
			"arise": 2,
			"the": 5,
			"seems": 1,
			"there": 2,
			"in": 12,
			"dim": 1
		},
		"veil": {
			"of": 2,
			"mine": 1,
			"is": 3,
			"thy": 1,
			"if": 1,
			"so": 1,
			"when": 1,
			"and": 1,
			"between": 1,
			"aside": 1,
			"to": 1,
			"into": 1,
			"apart": 1,
			"the": 4,
			"in": 1
		},
		"having": {
			"sent": 1,
			"none": 1,
			"unto": 1,
			"power": 1,
			"a": 2,
			"so": 2,
			"thee": 2,
			"felt": 1,
			"and": 2,
			"such": 1,
			"all": 1,
			"spoke": 1,
			"behind": 1,
			"mercy": 1,
			"loved": 1,
			"human": 1,
			"said": 1,
			"life": 1,
			"the": 2,
			"been": 3,
			"in": 1
		},
		"highest": {
			"thing": 1,
			"which": 1,
			"of": 4,
			"star": 1,
			"nor": 1,
			"height": 1,
			"wise": 1,
			"gift": 1,
			"where": 1,
			"heaven": 2,
			"god": 1,
			"that": 1,
			"wing": 1,
			"religious": 1,
			"knows": 1,
			"and": 1,
			"bliss": 1,
			"truth": 1,
			"thou": 1,
			"each": 1,
			"sphere": 1,
			"to": 1,
			"use": 1
		},
		"line": {
			"earth": 1,
			"ii": 1,
			"which": 1,
			"of": 3,
			"once": 1,
			"it": 1,
			"like": 1,
			"they": 1,
			"swept": 1,
			"its": 1,
			"for": 1,
			"heaven": 1,
			"freedom": 1,
			"comes": 1,
			"was": 1,
			"that": 2,
			"had": 1,
			"or": 2,
			"bright": 1,
			"a": 3,
			"whence": 1,
			"on": 1,
			"but": 1,
			"when": 2,
			"out": 1,
			"and": 12,
			"i": 1,
			"here": 2,
			"too": 1,
			"one": 1,
			"such": 1,
			"against": 1,
			"how": 1,
			"across": 1,
			"beneath": 1,
			"much": 1,
			"our": 1,
			"still": 1,
			"your": 1,
			"to": 2,
			"mid": 1,
			"we": 1,
			"as": 1,
			"gleam": 1,
			"o": 1,
			"the": 6,
			"her": 1,
			"in": 1
		},
		"out": {
			"sweet": 1,
			"itself": 1,
			"more": 1,
			"ring": 1,
			"his": 7,
			"wi": 1,
			"none": 1,
			"who": 2,
			"silent": 1,
			"which": 3,
			"of": 97,
			"this": 3,
			"among": 1,
			"limbs": 1,
			"by": 2,
			"twixt": 1,
			"pride": 1,
			"is": 1,
			"like": 3,
			"they": 1,
			"its": 3,
			"where": 4,
			"brief": 1,
			"for": 5,
			"speak": 1,
			"my": 5,
			"sighing": 1,
			"freedom": 1,
			"thy": 4,
			"false": 1,
			"god": 1,
			"oer": 2,
			"that": 5,
			"if": 1,
			"another": 2,
			"spake": 2,
			"perfume": 1,
			"an": 4,
			"have": 1,
			"their": 3,
			"a": 8,
			"so": 1,
			"true": 1,
			"upon": 2,
			"almost": 1,
			"on": 9,
			"above": 2,
			"old": 1,
			"but": 3,
			"ye": 1,
			"when": 1,
			"lifes": 1,
			"out": 1,
			"and": 24,
			"west": 1,
			"i": 3,
			"against": 1,
			"anothers": 1,
			"from": 13,
			"ill": 1,
			"beneath": 1,
			"with": 8,
			"now": 1,
			"all": 3,
			"wild": 2,
			"through": 2,
			"spoke": 1,
			"nights": 1,
			"our": 5,
			"fear": 1,
			"your": 1,
			"yet": 1,
			"to": 16,
			"loud": 1,
			"poetry": 1,
			"into": 1,
			"use": 1,
			"whose": 1,
			"as": 2,
			"me": 1,
			"at": 3,
			"o": 3,
			"the": 48,
			"her": 2,
			"young": 1,
			"fire": 1,
			"there": 2,
			"in": 17
		},
		"kind": {
			"look": 1,
			"word": 1,
			"who": 2,
			"deeds": 1,
			"of": 12,
			"this": 1,
			"cast": 1,
			"she": 1,
			"does": 1,
			"act": 1,
			"grown": 1,
			"not": 1,
			"by": 1,
			"is": 1,
			"unto": 1,
			"those": 1,
			"for": 1,
			"hand": 1,
			"words": 1,
			"whom": 1,
			"soul": 1,
			"face": 1,
			"that": 4,
			"if": 1,
			"faces": 1,
			"them": 1,
			"on": 1,
			"old": 1,
			"but": 2,
			"and": 15,
			"i": 1,
			"such": 1,
			"hearts": 1,
			"from": 1,
			"voice": 1,
			"then": 1,
			"angels": 1,
			"to": 7,
			"we": 1,
			"as": 1,
			"at": 1,
			"o": 2,
			"the": 1,
			"dead": 1,
			"in": 1,
			"thoughts": 1
		},
		"awful": {
			"river": 1,
			"light": 1,
			"of": 2,
			"tide": 1,
			"joy": 1,
			"burden": 1,
			"it": 1,
			"jove": 1,
			"is": 1,
			"form": 2,
			"guide": 1,
			"thus": 1,
			"hand": 1,
			"hour": 1,
			"morn": 1,
			"face": 1,
			"power": 1,
			"sabbath": 1,
			"cause": 1,
			"that": 1,
			"oh": 1,
			"eye": 1,
			"on": 1,
			"but": 1,
			"time": 1,
			"head": 1,
			"and": 2,
			"i": 1,
			"brow": 1,
			"calm": 1,
			"voice": 2,
			"will": 1,
			"day": 1,
			"course": 1,
			"strength": 1,
			"frown": 1,
			"lies": 1,
			"waste": 1
		},
		"dumb": {
			"keep": 1,
			"she": 1,
			"it": 1,
			"they": 1,
			"you": 1,
			"thus": 1,
			"despair": 1,
			"again": 1,
			"clay": 1,
			"that": 1,
			"let": 1,
			"or": 1,
			"a": 3,
			"be": 1,
			"whittier": 1,
			"and": 5,
			"beneath": 1,
			"breast": 1,
			"no": 1,
			"with": 1,
			"turned": 1,
			"shall": 2,
			"yet": 1,
			"to": 2,
			"mid": 1,
			"we": 1,
			"grow": 1,
			"the": 2,
			"there": 1,
			"in": 1
		},
		"earthly": {
			"thing": 1,
			"are": 1,
			"sake": 1,
			"call": 2,
			"of": 1,
			"something": 1,
			"cross": 1,
			"vision": 1,
			"sway": 1,
			"nature": 1,
			"friends": 1,
			"should": 1,
			"vain": 1,
			"passion": 1,
			"hope": 2,
			"power": 1,
			"that": 1,
			"cares": 1,
			"gives": 1,
			"what": 1,
			"a": 1,
			"joys": 1,
			"things": 3,
			"love": 2,
			"but": 1,
			"and": 1,
			"bliss": 1,
			"i": 2,
			"home": 1,
			"such": 1,
			"sphere": 1,
			"grief": 1,
			"night": 1,
			"to": 1,
			"round": 1,
			"mould": 2,
			"strife": 1,
			"life": 1,
			"left": 1,
			"the": 1,
			"house": 1,
			"flowers": 1,
			"sky": 1,
			"grows": 1
		},
		"rhyme": {
			"of": 1,
			"nor": 1,
			"unto": 1,
			"where": 1,
			"have": 1,
			"love": 1,
			"on": 2,
			"thee": 1,
			"and": 4,
			"i": 1,
			"from": 1,
			"then": 1,
			"still": 1,
			"to": 2,
			"may": 1,
			"he": 1,
			"the": 4
		},
		"watched": {
			"this": 1,
			"it": 1,
			"over": 1,
			"by": 2,
			"you": 1,
			"earths": 1,
			"where": 1,
			"for": 2,
			"were": 1,
			"a": 2,
			"them": 1,
			"on": 1,
			"and": 2,
			"i": 1,
			"till": 1,
			"our": 1,
			"shall": 1,
			"before": 1,
			"to": 1,
			"yon": 1,
			"the": 1,
			"her": 2
		},
		"brave": {
			"went": 1,
			"his": 2,
			"are": 1,
			"alas": 1,
			"warm": 1,
			"who": 8,
			"men": 5,
			"greece": 1,
			"of": 1,
			"high": 1,
			"amid": 1,
			"sons": 1,
			"sight": 1,
			"brother": 1,
			"it": 1,
			"weep": 1,
			"is": 3,
			"like": 1,
			"they": 1,
			"thus": 1,
			"new": 1,
			"ranks": 1,
			"song": 1,
			"boys": 1,
			"words": 1,
			"earl": 2,
			"thy": 1,
			"soul": 1,
			"francis": 1,
			"can": 1,
			"that": 2,
			"man": 3,
			"what": 1,
			"music": 1,
			"or": 1,
			"courage": 2,
			"lord": 1,
			"love": 1,
			"on": 2,
			"old": 1,
			"but": 1,
			"thee": 1,
			"when": 2,
			"mans": 2,
			"be": 1,
			"heart": 2,
			"german": 2,
			"and": 12,
			"last": 1,
			"i": 1,
			"bids": 1,
			"henry": 1,
			"how": 1,
			"hearts": 1,
			"from": 1,
			"while": 1,
			"no": 1,
			"maidens": 1,
			"all": 2,
			"then": 1,
			"thomas": 1,
			"foe": 1,
			"songs": 1,
			"much": 1,
			"sleeps": 1,
			"shall": 1,
			"still": 1,
			"yet": 2,
			"to": 4,
			"youth": 1,
			"whose": 1,
			"at": 1,
			"o": 3,
			"the": 7,
			"tis": 1,
			"young": 2,
			"in": 4
		},
		"rage": {
			"which": 1,
			"of": 3,
			"father": 1,
			"like": 1,
			"for": 1,
			"blow": 1,
			"did": 1,
			"was": 2,
			"had": 1,
			"or": 2,
			"have": 1,
			"so": 1,
			"but": 1,
			"and": 5,
			"against": 1,
			"no": 1,
			"till": 1,
			"all": 1,
			"then": 1,
			"king": 1,
			"to": 1,
			"the": 2,
			"in": 1
		},
		"distant": {
			"dying": 1,
			"mountains": 1,
			"his": 1,
			"save": 1,
			"ages": 1,
			"sounds": 1,
			"of": 2,
			"up": 1,
			"lands": 1,
			"weep": 1,
			"woods": 1,
			"land": 1,
			"please": 1,
			"sea": 2,
			"friends": 1,
			"past": 1,
			"fall": 1,
			"or": 1,
			"field": 1,
			"on": 2,
			"but": 1,
			"time": 1,
			"and": 2,
			"thunder": 1,
			"comrades": 1,
			"to": 1,
			"hill": 2,
			"the": 1,
			"there": 2,
			"step": 1,
			"dim": 3
		},
		"tried": {
			"nor": 1,
			"where": 1,
			"heroes": 1,
			"whether": 1,
			"what": 1,
			"them": 1,
			"spirit": 1,
			"out": 1,
			"and": 2,
			"one": 1,
			"how": 1,
			"foul": 1,
			"all": 1,
			"our": 1,
			"to": 4,
			"at": 1,
			"the": 2,
			"fight": 1,
			"in": 1
		},
		"naught": {
			"us": 1,
			"of": 1,
			"beyond": 1,
			"mine": 1,
			"weep": 1,
			"is": 1,
			"why": 1,
			"they": 1,
			"freedom": 1,
			"was": 1,
			"that": 2,
			"broken": 1,
			"have": 1,
			"a": 2,
			"above": 1,
			"but": 11,
			"naught": 2,
			"told": 1,
			"our": 1,
			"day": 1,
			"to": 3,
			"at": 1,
			"o": 1,
			"the": 1,
			"in": 3
		},
		"sweetly": {
			"itself": 1,
			"she": 2,
			"does": 1,
			"thyself": 1,
			"played": 1,
			"solemn": 1,
			"sings": 1,
			"it": 1,
			"sung": 1,
			"about": 1,
			"sang": 1,
			"sing": 2,
			"sleep": 1,
			"along": 1,
			"were": 1,
			"oer": 1,
			"did": 2,
			"on": 2,
			"shall": 1,
			"to": 1,
			"into": 1,
			"lived": 1,
			"as": 1,
			"said": 1,
			"the": 1,
			"in": 2
		},
		"heart": {
			"sweet": 2,
			"come": 2,
			"cool": 1,
			"itself": 1,
			"more": 1,
			"thine": 1,
			"within": 7,
			"free": 1,
			"his": 1,
			"him": 1,
			"seemed": 2,
			"are": 3,
			"alas": 3,
			"back": 1,
			"made": 1,
			"who": 2,
			"which": 5,
			"of": 39,
			"this": 1,
			"high": 1,
			"once": 4,
			"she": 2,
			"nor": 2,
			"grew": 4,
			"grown": 1,
			"cling": 1,
			"forth": 1,
			"goes": 1,
			"rose": 1,
			"not": 1,
			"awe": 1,
			"divine": 1,
			"every": 1,
			"it": 7,
			"twas": 1,
			"far": 1,
			"tongue": 1,
			"by": 2,
			"alone": 1,
			"long": 1,
			"breaks": 1,
			"is": 36,
			"although": 1,
			"like": 7,
			"takes": 1,
			"away": 2,
			"found": 1,
			"forever": 1,
			"douglas": 1,
			"pleased": 1,
			"they": 6,
			"you": 1,
			"mother": 1,
			"new": 1,
			"its": 2,
			"than": 3,
			"those": 1,
			"where": 3,
			"richard": 1,
			"just": 1,
			"for": 10,
			"heaven": 1,
			"should": 4,
			"fixed": 1,
			"again": 3,
			"thy": 2,
			"ere": 1,
			"ray": 1,
			"mary": 1,
			"remember": 2,
			"makes": 2,
			"most": 1,
			"faith": 1,
			"can": 9,
			"were": 1,
			"did": 3,
			"was": 22,
			"that": 22,
			"if": 2,
			"willie": 1,
			"let": 1,
			"another": 1,
			"fall": 1,
			"go": 1,
			"had": 4,
			"must": 7,
			"what": 4,
			"oh": 3,
			"music": 1,
			"or": 4,
			"ran": 1,
			"have": 4,
			"gave": 1,
			"awake": 1,
			"their": 1,
			"a": 8,
			"so": 3,
			"true": 1,
			"lay": 1,
			"lord": 1,
			"never": 1,
			"hath": 7,
			"almost": 1,
			"on": 5,
			"but": 4,
			"death": 1,
			"poor": 1,
			"thee": 2,
			"ye": 1,
			"lives": 1,
			"when": 3,
			"be": 3,
			"t": 1,
			"out": 1,
			"heart": 1,
			"close": 1,
			"and": 64,
			"whateer": 1,
			"do": 1,
			"dream": 1,
			"hid": 1,
			"fly": 1,
			"i": 7,
			"thou": 4,
			"bids": 1,
			"swell": 1,
			"here": 3,
			"too": 2,
			"one": 3,
			"such": 1,
			"how": 1,
			"from": 6,
			"would": 4,
			"beat": 2,
			"beneath": 1,
			"while": 2,
			"no": 4,
			"voice": 1,
			"with": 20,
			"around": 1,
			"sad": 1,
			"now": 1,
			"till": 1,
			"will": 5,
			"strong": 1,
			"all": 2,
			"gods": 1,
			"then": 2,
			"could": 1,
			"through": 2,
			"has": 4,
			"songs": 1,
			"thats": 2,
			"asleep": 1,
			"doth": 4,
			"dost": 1,
			"shall": 7,
			"only": 1,
			"still": 3,
			"your": 1,
			"yet": 1,
			"to": 21,
			"into": 1,
			"gently": 1,
			"may": 3,
			"we": 2,
			"whose": 2,
			"as": 14,
			"he": 6,
			"me": 1,
			"at": 4,
			"lies": 1,
			"o": 7,
			"grow": 2,
			"the": 17,
			"though": 3,
			"stood": 1,
			"seems": 1,
			"her": 5,
			"oft": 1,
			"there": 2,
			"in": 22,
			"grows": 5
		},
		"vere": {
			"lady": 2,
			"of": 1,
			"you": 2,
			"take": 1,
			"my": 1,
			"sir": 1,
			"if": 1,
			"de": 12,
			"when": 1,
			"i": 1,
			"from": 1,
			"some": 1,
			"there": 1
		},
		"say": {
			"more": 1,
			"since": 1,
			"loves": 1,
			"im": 1,
			"christ": 1,
			"his": 1,
			"him": 1,
			"kiss": 1,
			"surely": 1,
			"who": 1,
			"of": 3,
			"this": 2,
			"once": 1,
			"she": 1,
			"does": 1,
			"two": 1,
			"behold": 2,
			"not": 8,
			"hes": 1,
			"it": 4,
			"by": 1,
			"father": 1,
			"jove": 1,
			"something": 1,
			"is": 3,
			"unto": 1,
			"like": 1,
			"lo": 1,
			"hurrah": 1,
			"farewell": 2,
			"good": 2,
			"about": 1,
			"you": 2,
			"thus": 1,
			"sister": 1,
			"where": 1,
			"for": 3,
			"theres": 2,
			"spite": 1,
			"tomorrow": 1,
			"my": 4,
			"thy": 4,
			"yes": 1,
			"peace": 1,
			"ere": 1,
			"god": 2,
			"can": 2,
			"indeed": 1,
			"was": 1,
			"that": 9,
			"if": 2,
			"both": 1,
			"gives": 1,
			"what": 3,
			"an": 1,
			"think": 2,
			"a": 3,
			"so": 2,
			"true": 1,
			"things": 1,
			"whence": 1,
			"love": 1,
			"above": 1,
			"but": 6,
			"perhaps": 1,
			"thee": 1,
			"ye": 2,
			"raise": 1,
			"t": 1,
			"close": 1,
			"and": 7,
			"eer": 1,
			"truth": 2,
			"i": 9,
			"here": 2,
			"one": 2,
			"how": 1,
			"drink": 1,
			"no": 6,
			"with": 2,
			"soggarth": 1,
			"now": 1,
			"some": 1,
			"through": 1,
			"well": 3,
			"doth": 2,
			"king": 1,
			"passing": 4,
			"shall": 2,
			"only": 1,
			"your": 1,
			"yet": 1,
			"to": 8,
			"into": 1,
			"heavenly": 1,
			"ah": 1,
			"we": 6,
			"as": 4,
			"happy": 1,
			"life": 1,
			"he": 4,
			"me": 2,
			"o": 3,
			"the": 8,
			"though": 2,
			"oft": 1,
			"in": 3,
			"forgive": 1
		},
		"sorrow": {
			"come": 2,
			"free": 1,
			"shades": 1,
			"who": 1,
			"men": 1,
			"which": 1,
			"dies": 1,
			"of": 3,
			"calls": 1,
			"pour": 1,
			"after": 1,
			"she": 1,
			"silence": 1,
			"pain": 1,
			"fade": 1,
			"every": 1,
			"by": 1,
			"is": 6,
			"rise": 1,
			"about": 1,
			"thus": 1,
			"its": 1,
			"than": 2,
			"where": 1,
			"for": 5,
			"cannot": 1,
			"tomorrow": 1,
			"bore": 1,
			"words": 1,
			"thy": 1,
			"smiles": 1,
			"sin": 2,
			"oer": 2,
			"did": 1,
			"that": 3,
			"let": 1,
			"fall": 1,
			"or": 1,
			"a": 2,
			"upon": 1,
			"never": 1,
			"many": 1,
			"leave": 1,
			"on": 2,
			"but": 4,
			"when": 3,
			"be": 2,
			"out": 1,
			"and": 17,
			"i": 1,
			"thou": 1,
			"down": 2,
			"here": 1,
			"from": 1,
			"calm": 1,
			"with": 2,
			"set": 1,
			"has": 1,
			"shall": 2,
			"still": 1,
			"yet": 1,
			"to": 2,
			"as": 3,
			"stand": 1,
			"done": 1,
			"he": 1,
			"o": 1,
			"grow": 1,
			"labor": 1,
			"share": 1,
			"there": 1
		},
		"german": {
			"loves": 1,
			"blood": 1,
			"of": 20,
			"this": 1,
			"tongue": 1,
			"land": 1,
			"song": 2,
			"comes": 1,
			"name": 1,
			"that": 1,
			"or": 1,
			"love": 1,
			"and": 1,
			"hearts": 1,
			"maid": 2,
			"fires": 1,
			"songs": 1,
			"rhine": 2,
			"shall": 1,
			"to": 1,
			"whose": 1,
			"as": 1,
			"me": 1
		},
		"anguish": {
			"earth": 1,
			"are": 1,
			"which": 1,
			"of": 2,
			"does": 1,
			"far": 1,
			"hangs": 1,
			"long": 1,
			"they": 1,
			"heard": 1,
			"for": 1,
			"that": 1,
			"gives": 1,
			"or": 1,
			"a": 1,
			"fast": 1,
			"dumb": 1,
			"and": 1,
			"how": 1,
			"these": 1,
			"now": 1,
			"then": 1,
			"through": 1,
			"to": 1,
			"turn": 1,
			"lie": 1,
			"we": 1,
			"at": 1,
			"the": 2
		},
		"head": {
			"walks": 1,
			"his": 2,
			"see": 1,
			"hast": 1,
			"which": 1,
			"dies": 1,
			"of": 5,
			"up": 1,
			"nor": 2,
			"not": 2,
			"dwell": 1,
			"proud": 1,
			"it": 1,
			"by": 1,
			"is": 3,
			"like": 1,
			"forever": 1,
			"good": 1,
			"they": 1,
			"you": 1,
			"without": 1,
			"its": 1,
			"those": 1,
			"for": 3,
			"bowed": 1,
			"darling": 1,
			"my": 3,
			"ground": 1,
			"were": 1,
			"immortal": 1,
			"was": 1,
			"that": 3,
			"if": 1,
			"let": 1,
			"must": 2,
			"an": 1,
			"or": 2,
			"making": 1,
			"a": 4,
			"so": 2,
			"upon": 7,
			"many": 1,
			"hath": 2,
			"tomb": 1,
			"on": 10,
			"above": 2,
			"but": 3,
			"time": 1,
			"thee": 1,
			"when": 1,
			"and": 41,
			"i": 2,
			"down": 1,
			"judge": 1,
			"looks": 1,
			"how": 1,
			"ill": 1,
			"no": 4,
			"with": 7,
			"now": 1,
			"till": 2,
			"all": 1,
			"then": 3,
			"well": 1,
			"king": 1,
			"your": 1,
			"to": 9,
			"into": 1,
			"round": 1,
			"art": 1,
			"as": 2,
			"stand": 1,
			"he": 3,
			"me": 1,
			"led": 1,
			"o": 1,
			"the": 7,
			"sure": 1,
			"her": 2,
			"change": 1,
			"there": 1,
			"in": 3
		},
		"paradise": {
			"his": 1,
			"james": 1,
			"who": 1,
			"of": 3,
			"nor": 1,
			"by": 2,
			"thus": 1,
			"where": 1,
			"lost": 5,
			"sin": 1,
			"immortal": 1,
			"that": 2,
			"another": 1,
			"full": 1,
			"so": 2,
			"never": 1,
			"but": 1,
			"lives": 1,
			"be": 1,
			"and": 2,
			"i": 3,
			"from": 2,
			"could": 1,
			"doth": 1,
			"our": 2,
			"to": 1,
			"he": 1,
			"o": 8,
			"the": 3,
			"tis": 1,
			"jesus": 1,
			"in": 1
		},
		"close": {
			"his": 2,
			"beside": 2,
			"under": 1,
			"of": 4,
			"she": 1,
			"it": 1,
			"by": 8,
			"together": 1,
			"about": 1,
			"they": 1,
			"nature": 1,
			"than": 1,
			"should": 1,
			"my": 1,
			"thy": 1,
			"oer": 1,
			"that": 2,
			"their": 1,
			"a": 2,
			"them": 1,
			"upon": 2,
			"on": 1,
			"above": 1,
			"but": 1,
			"out": 1,
			"close": 1,
			"and": 11,
			"i": 1,
			"how": 1,
			"would": 1,
			"ill": 1,
			"while": 1,
			"with": 1,
			"around": 1,
			"through": 1,
			"angels": 1,
			"behind": 2,
			"our": 1,
			"before": 1,
			"your": 2,
			"to": 8,
			"round": 1,
			"thinking": 1,
			"as": 2,
			"sat": 1,
			"at": 1,
			"o": 1,
			"the": 12,
			"scarce": 1,
			"in": 1
		},
		"nobler": {
			"loves": 1,
			"deeds": 1,
			"of": 1,
			"it": 1,
			"pride": 1,
			"is": 1,
			"nature": 2,
			"for": 1,
			"band": 1,
			"name": 1,
			"cares": 1,
			"a": 1,
			"and": 2,
			"grace": 1,
			"living": 1,
			"breast": 1,
			"will": 1,
			"our": 1,
			"shall": 1,
			"we": 1,
			"life": 1,
			"in": 2
		},
		"verse": {
			"of": 1,
			"is": 1,
			"for": 2,
			"should": 1,
			"again": 1,
			"can": 1,
			"that": 1,
			"or": 1,
			"and": 5,
			"how": 1,
			"no": 1,
			"guest": 1,
			"shall": 1,
			"may": 2,
			"we": 1,
			"as": 2,
			"the": 5
		},
		"and": {
			"sweet": 30,
			"books": 1,
			"tune": 1,
			"perchance": 1,
			"flower": 10,
			"blue": 4,
			"come": 15,
			"sound": 8,
			"low": 17,
			"else": 1,
			"bow": 4,
			"caught": 1,
			"dare": 5,
			"fled": 1,
			"cool": 2,
			"foolish": 2,
			"breaking": 2,
			"dying": 7,
			"bread": 1,
			"look": 6,
			"summer": 2,
			"saviour": 2,
			"itself": 1,
			"woes": 4,
			"sighs": 2,
			"us": 15,
			"suffering": 3,
			"more": 30,
			"hear": 17,
			"sent": 4,
			"taught": 4,
			"murmur": 2,
			"wrought": 1,
			"won": 4,
			"since": 4,
			"thine": 5,
			"blessd": 4,
			"ring": 4,
			"died": 8,
			"within": 2,
			"wife": 5,
			"ready": 2,
			"unseen": 1,
			"blessings": 1,
			"dust": 7,
			"going": 1,
			"curse": 2,
			"blew": 2,
			"justice": 2,
			"loves": 6,
			"went": 8,
			"im": 7,
			"parting": 2,
			"virtues": 2,
			"christ": 4,
			"worn": 6,
			"wish": 2,
			"river": 4,
			"fierce": 3,
			"chase": 2,
			"free": 19,
			"laws": 1,
			"light": 27,
			"earth": 24,
			"birds": 3,
			"pen": 4,
			"forget": 2,
			"space": 4,
			"forehead": 3,
			"doubt": 7,
			"touched": 3,
			"pine": 8,
			"die": 15,
			"cloud": 3,
			"mountains": 2,
			"his": 148,
			"stream": 3,
			"save": 4,
			"struck": 2,
			"st": 3,
			"hell": 6,
			"dreary": 11,
			"him": 15,
			"fond": 4,
			"banner": 3,
			"crest": 1,
			"ear": 1,
			"midnight": 3,
			"sharp": 2,
			"crossed": 2,
			"charity": 1,
			"law": 7,
			"see": 25,
			"blood": 9,
			"leap": 3,
			"narrow": 4,
			"hero": 1,
			"precious": 1,
			"wi": 1,
			"begin": 1,
			"cheek": 2,
			"play": 6,
			"bare": 6,
			"kiss": 4,
			"women": 7,
			"faithful": 4,
			"breathing": 1,
			"horn": 3,
			"voices": 5,
			"thing": 3,
			"deeper": 3,
			"fit": 3,
			"ii": 1,
			"passions": 1,
			"learn": 4,
			"white": 13,
			"glen": 2,
			"rule": 1,
			"science": 1,
			"none": 6,
			"shades": 3,
			"woe": 14,
			"silver": 3,
			"purple": 4,
			"surely": 2,
			"tell": 12,
			"war": 3,
			"wail": 2,
			"weary": 9,
			"wonder": 2,
			"dance": 3,
			"seemed": 3,
			"are": 44,
			"saints": 3,
			"story": 1,
			"fears": 18,
			"aid": 1,
			"beside": 1,
			"humble": 2,
			"six": 1,
			"alas": 1,
			"right": 11,
			"back": 6,
			"warm": 6,
			"made": 8,
			"aye": 4,
			"ive": 2,
			"amidst": 1,
			"word": 1,
			"fell": 15,
			"very": 2,
			"under": 4,
			"next": 2,
			"who": 21,
			"hollow": 5,
			"sweetest": 3,
			"silent": 22,
			"guard": 6,
			"men": 17,
			"lover": 1,
			"suffer": 3,
			"which": 15,
			"court": 2,
			"greece": 1,
			"deeds": 2,
			"holds": 1,
			"dies": 4,
			"hide": 4,
			"call": 16,
			"shout": 7,
			"country": 4,
			"steps": 2,
			"toward": 1,
			"body": 3,
			"sounds": 1,
			"of": 197,
			"brook": 1,
			"this": 25,
			"blind": 5,
			"cast": 13,
			"star": 3,
			"season": 1,
			"high": 20,
			"rude": 3,
			"graves": 1,
			"fame": 7,
			"amid": 2,
			"yield": 3,
			"souls": 2,
			"keep": 11,
			"calls": 4,
			"pour": 2,
			"hung": 3,
			"talk": 3,
			"wine": 7,
			"kept": 5,
			"learning": 6,
			"after": 11,
			"hills": 6,
			"wander": 2,
			"daughter": 1,
			"once": 8,
			"feels": 2,
			"up": 27,
			"off": 1,
			"food": 1,
			"triumph": 4,
			"tide": 2,
			"breathe": 2,
			"angel": 1,
			"she": 56,
			"rock": 1,
			"liberty": 4,
			"among": 2,
			"silence": 5,
			"beyond": 3,
			"anonymous": 1,
			"nor": 5,
			"sons": 1,
			"sacred": 1,
			"find": 13,
			"blossoms": 3,
			"command": 1,
			"gold": 17,
			"three": 3,
			"does": 3,
			"morning": 4,
			"act": 1,
			"grew": 2,
			"thyself": 1,
			"roar": 7,
			"flood": 2,
			"sight": 4,
			"whatever": 2,
			"age": 3,
			"stormy": 3,
			"darkness": 8,
			"joy": 16,
			"cling": 1,
			"forth": 4,
			"foam": 4,
			"bird": 4,
			"wheel": 1,
			"scorn": 5,
			"height": 2,
			"brother": 2,
			"sheep": 1,
			"beheld": 1,
			"race": 2,
			"goes": 2,
			"dreadful": 1,
			"dear": 5,
			"two": 2,
			"fresh": 4,
			"pain": 18,
			"mouth": 1,
			"thick": 2,
			"mourn": 2,
			"place": 8,
			"serene": 3,
			"lift": 6,
			"part": 2,
			"pass": 7,
			"lands": 5,
			"chant": 2,
			"sick": 7,
			"fine": 3,
			"sands": 2,
			"rose": 2,
			"slaves": 2,
			"limbs": 3,
			"mine": 10,
			"behold": 4,
			"rivers": 1,
			"solemn": 7,
			"sings": 3,
			"not": 58,
			"awe": 2,
			"fade": 3,
			"divine": 5,
			"hours": 1,
			"dwell": 3,
			"burn": 4,
			"serve": 1,
			"englands": 1,
			"crimson": 3,
			"side": 3,
			"put": 9,
			"starry": 1,
			"today": 2,
			"depart": 1,
			"proud": 9,
			"dry": 2,
			"every": 36,
			"praise": 8,
			"sword": 4,
			"it": 64,
			"evil": 9,
			"over": 12,
			"host": 2,
			"smooth": 8,
			"shake": 5,
			"began": 1,
			"shows": 2,
			"maiden": 1,
			"flight": 2,
			"image": 1,
			"perish": 3,
			"eager": 2,
			"twas": 1,
			"neither": 3,
			"far": 15,
			"spirits": 1,
			"hangs": 2,
			"wisdom": 7,
			"child": 4,
			"health": 6,
			"lights": 3,
			"brought": 3,
			"bark": 2,
			"bless": 9,
			"weep": 10,
			"water": 4,
			"send": 1,
			"ease": 7,
			"feeble": 1,
			"load": 1,
			"by": 70,
			"try": 2,
			"eyes": 15,
			"jim": 5,
			"father": 2,
			"bade": 5,
			"jove": 1,
			"woods": 1,
			"alone": 4,
			"shut": 6,
			"long": 13,
			"sorrows": 6,
			"fountain": 2,
			"bring": 3,
			"corn": 4,
			"twixt": 1,
			"kissed": 6,
			"nations": 1,
			"mute": 1,
			"something": 6,
			"bind": 1,
			"quiet": 9,
			"cold": 23,
			"pride": 11,
			"land": 7,
			"wars": 2,
			"wise": 1,
			"is": 30,
			"vision": 1,
			"joyous": 2,
			"ships": 4,
			"soon": 10,
			"rise": 12,
			"although": 2,
			"looked": 11,
			"eternity": 3,
			"few": 1,
			"unto": 6,
			"like": 42,
			"takes": 5,
			"return": 2,
			"lo": 21,
			"hurrah": 1,
			"boy": 1,
			"farewell": 3,
			"fairest": 2,
			"hard": 4,
			"away": 9,
			"hoary": 4,
			"form": 2,
			"found": 6,
			"sway": 1,
			"children": 6,
			"forms": 2,
			"why": 5,
			"native": 4,
			"people": 5,
			"sung": 3,
			"immortality": 2,
			"hallowed": 1,
			"kings": 3,
			"forever": 8,
			"good": 27,
			"lead": 4,
			"pleased": 3,
			"ocean": 5,
			"hark": 3,
			"force": 3,
			"ever": 17,
			"care": 9,
			"together": 4,
			"about": 4,
			"steed": 1,
			"they": 58,
			"shook": 6,
			"speech": 1,
			"prayer": 7,
			"easy": 1,
			"grain": 1,
			"abroad": 3,
			"laughing": 1,
			"faint": 6,
			"gazed": 5,
			"funeral": 1,
			"wide": 15,
			"you": 27,
			"nature": 12,
			"shot": 1,
			"tyrants": 1,
			"guide": 3,
			"stern": 3,
			"glowing": 3,
			"mother": 8,
			"grant": 4,
			"thus": 25,
			"pale": 13,
			"seven": 2,
			"new": 10,
			"nay": 1,
			"strike": 3,
			"weakness": 1,
			"heard": 9,
			"leaves": 6,
			"without": 5,
			"robert": 1,
			"slave": 1,
			"earths": 2,
			"laid": 7,
			"its": 33,
			"than": 9,
			"smile": 5,
			"slow": 12,
			"swift": 3,
			"kindly": 1,
			"lightly": 2,
			"pleasure": 8,
			"stir": 2,
			"een": 2,
			"poet": 2,
			"song": 9,
			"those": 13,
			"sea": 9,
			"crown": 3,
			"friends": 2,
			"where": 33,
			"gentle": 10,
			"others": 3,
			"looking": 3,
			"brief": 2,
			"despair": 2,
			"small": 6,
			"run": 2,
			"rolled": 2,
			"church": 2,
			"lovers": 2,
			"holy": 14,
			"press": 5,
			"summers": 1,
			"blast": 1,
			"gray": 12,
			"just": 6,
			"welcome": 2,
			"for": 79,
			"burns": 2,
			"blown": 1,
			"drops": 1,
			"past": 5,
			"judgment": 2,
			"read": 7,
			"hand": 2,
			"heaven": 11,
			"stones": 1,
			"charge": 4,
			"frost": 3,
			"cup": 1,
			"lost": 9,
			"catch": 6,
			"cry": 7,
			"clime": 2,
			"bloody": 9,
			"should": 2,
			"lonely": 9,
			"surprise": 1,
			"base": 3,
			"worse": 2,
			"bowed": 2,
			"suns": 1,
			"darling": 1,
			"sang": 4,
			"theres": 8,
			"take": 24,
			"melancholy": 2,
			"cannot": 4,
			"speak": 4,
			"breath": 4,
			"spite": 3,
			"boys": 7,
			"tomorrow": 4,
			"autumn": 1,
			"fixed": 1,
			"rest": 21,
			"my": 78,
			"spent": 1,
			"blow": 3,
			"whats": 6,
			"fingers": 1,
			"band": 3,
			"bore": 4,
			"count": 5,
			"words": 7,
			"hour": 2,
			"came": 6,
			"standing": 1,
			"note": 2,
			"heroes": 1,
			"twilight": 1,
			"winds": 8,
			"great": 11,
			"john": 1,
			"tender": 13,
			"sighing": 1,
			"beauty": 8,
			"short": 3,
			"again": 7,
			"deaths": 1,
			"desire": 1,
			"shines": 2,
			"themselves": 1,
			"burning": 2,
			"forgot": 2,
			"touch": 1,
			"enough": 5,
			"freedom": 3,
			"thy": 52,
			"sing": 7,
			"smiles": 7,
			"watch": 11,
			"wall": 2,
			"greater": 2,
			"morn": 2,
			"hushed": 1,
			"vain": 5,
			"pray": 11,
			"sleep": 8,
			"teach": 3,
			"pretty": 1,
			"tone": 1,
			"moan": 2,
			"peace": 20,
			"majesty": 4,
			"comes": 3,
			"wept": 6,
			"ere": 7,
			"hopes": 3,
			"tonight": 3,
			"ourselves": 1,
			"waves": 9,
			"birth": 3,
			"whom": 2,
			"rang": 3,
			"better": 3,
			"shadow": 4,
			"least": 1,
			"mary": 3,
			"shore": 7,
			"dearest": 3,
			"therefore": 5,
			"ground": 1,
			"sadly": 1,
			"soul": 13,
			"passion": 5,
			"hope": 13,
			"flung": 6,
			"wear": 3,
			"seek": 3,
			"born": 2,
			"garden": 1,
			"gather": 3,
			"remember": 1,
			"strive": 2,
			"various": 1,
			"cheer": 2,
			"cease": 4,
			"makes": 14,
			"any": 1,
			"most": 9,
			"sir": 5,
			"times": 3,
			"wandering": 4,
			"held": 5,
			"torn": 2,
			"town": 1,
			"evening": 4,
			"yellow": 5,
			"rising": 2,
			"win": 1,
			"friend": 4,
			"wrath": 2,
			"bells": 3,
			"lords": 2,
			"fools": 2,
			"streets": 2,
			"friendship": 1,
			"stretched": 1,
			"name": 3,
			"clay": 1,
			"glow": 2,
			"sits": 2,
			"along": 7,
			"longer": 1,
			"william": 1,
			"face": 4,
			"false": 2,
			"forward": 2,
			"closed": 2,
			"sin": 6,
			"battles": 1,
			"trembling": 2,
			"dew": 3,
			"rain": 4,
			"faith": 14,
			"whether": 4,
			"god": 25,
			"can": 5,
			"wit": 2,
			"foot": 3,
			"moment": 1,
			"shame": 12,
			"noble": 3,
			"power": 11,
			"were": 14,
			"bud": 1,
			"comfort": 5,
			"flee": 2,
			"bears": 2,
			"oer": 26,
			"crowned": 5,
			"sudden": 3,
			"shell": 3,
			"trumpet": 3,
			"did": 5,
			"walls": 1,
			"was": 32,
			"runs": 2,
			"that": 85,
			"rolling": 1,
			"swords": 1,
			"if": 39,
			"let": 45,
			"show": 4,
			"thorn": 1,
			"womans": 1,
			"lips": 6,
			"drop": 1,
			"cares": 3,
			"arm": 1,
			"man": 13,
			"bear": 8,
			"daily": 2,
			"both": 8,
			"thin": 3,
			"fain": 2,
			"another": 1,
			"says": 2,
			"jerusalem": 1,
			"taste": 2,
			"embrace": 2,
			"full": 11,
			"make": 34,
			"victory": 3,
			"fall": 12,
			"steep": 4,
			"busy": 1,
			"ripe": 5,
			"often": 6,
			"broken": 4,
			"crowd": 1,
			"go": 22,
			"spake": 2,
			"cried": 3,
			"reign": 1,
			"gladness": 2,
			"half": 12,
			"trust": 8,
			"hang": 3,
			"sail": 4,
			"tear": 3,
			"desert": 3,
			"perfume": 2,
			"brothers": 1,
			"had": 17,
			"gives": 10,
			"must": 6,
			"climb": 2,
			"pure": 8,
			"what": 65,
			"sit": 2,
			"oh": 15,
			"beautiful": 7,
			"an": 14,
			"moon": 2,
			"front": 1,
			"wait": 7,
			"understand": 3,
			"hold": 13,
			"nothing": 19,
			"creatures": 1,
			"stone": 3,
			"stars": 6,
			"music": 4,
			"pleasures": 3,
			"even": 8,
			"or": 5,
			"waiting": 6,
			"conscience": 1,
			"field": 2,
			"think": 10,
			"ran": 1,
			"finds": 1,
			"eye": 7,
			"soil": 1,
			"lest": 1,
			"wilt": 2,
			"sweeter": 4,
			"moved": 1,
			"hands": 8,
			"pause": 2,
			"bright": 24,
			"have": 13,
			"study": 2,
			"late": 4,
			"tree": 5,
			"blush": 3,
			"am": 3,
			"tears": 20,
			"gave": 10,
			"sae": 3,
			"making": 4,
			"horse": 3,
			"towers": 7,
			"danger": 3,
			"ride": 4,
			"fill": 8,
			"awake": 1,
			"bitter": 3,
			"winter": 4,
			"their": 55,
			"fold": 4,
			"a": 177,
			"so": 69,
			"pains": 2,
			"faces": 1,
			"heat": 2,
			"brings": 4,
			"given": 1,
			"falls": 2,
			"them": 12,
			"sometimes": 5,
			"pines": 4,
			"joys": 4,
			"adieu": 2,
			"courage": 2,
			"true": 32,
			"sink": 2,
			"green": 8,
			"flies": 2,
			"upon": 13,
			"gallant": 2,
			"folly": 6,
			"lay": 13,
			"things": 10,
			"lord": 4,
			"whole": 2,
			"never": 18,
			"ceased": 2,
			"many": 37,
			"spirit": 5,
			"hath": 4,
			"ashes": 3,
			"almost": 3,
			"cruel": 4,
			"leave": 15,
			"met": 1,
			"walk": 3,
			"whence": 3,
			"delight": 2,
			"love": 50,
			"groan": 1,
			"on": 111,
			"saw": 15,
			"bend": 4,
			"break": 3,
			"quite": 3,
			"wing": 3,
			"charm": 1,
			"sees": 3,
			"own": 1,
			"red": 10,
			"shroud": 1,
			"brain": 8,
			"mountain": 2,
			"above": 6,
			"smiling": 6,
			"fast": 5,
			"chains": 1,
			"deep": 22,
			"memory": 1,
			"roaring": 1,
			"feast": 2,
			"old": 15,
			"filled": 5,
			"content": 1,
			"but": 35,
			"iron": 3,
			"bell": 2,
			"infinite": 2,
			"glance": 1,
			"grass": 4,
			"wet": 4,
			"brown": 3,
			"death": 37,
			"knowledge": 1,
			"self": 1,
			"foes": 2,
			"rushed": 1,
			"time": 6,
			"poor": 9,
			"perhaps": 6,
			"buried": 2,
			"thee": 24,
			"ye": 19,
			"choose": 3,
			"banners": 3,
			"canst": 1,
			"lives": 9,
			"years": 6,
			"moving": 1,
			"when": 117,
			"eat": 2,
			"gone": 5,
			"deed": 1,
			"lifes": 7,
			"onward": 4,
			"turns": 2,
			"eternal": 5,
			"terror": 3,
			"plain": 2,
			"religious": 1,
			"until": 2,
			"merry": 1,
			"waters": 3,
			"mans": 1,
			"burst": 1,
			"length": 1,
			"sigh": 5,
			"dreams": 2,
			"felt": 5,
			"task": 1,
			"knows": 5,
			"raise": 1,
			"be": 35,
			"bed": 1,
			"van": 1,
			"roses": 4,
			"feet": 8,
			"wondrous": 3,
			"wings": 5,
			"t": 7,
			"glory": 11,
			"having": 6,
			"line": 1,
			"out": 14,
			"awful": 4,
			"dumb": 3,
			"earthly": 1,
			"rhyme": 2,
			"watched": 4,
			"brave": 11,
			"rage": 4,
			"distant": 4,
			"tried": 4,
			"naught": 5,
			"sweetly": 4,
			"heart": 12,
			"say": 19,
			"sorrow": 14,
			"anguish": 2,
			"head": 4,
			"paradise": 1,
			"close": 4,
			"nobler": 1,
			"and": 273,
			"order": 3,
			"bliss": 4,
			"thunder": 1,
			"grace": 8,
			"sun": 9,
			"march": 2,
			"truth": 12,
			"bloom": 4,
			"do": 17,
			"fever": 1,
			"dark": 15,
			"prize": 2,
			"quick": 4,
			"doom": 1,
			"last": 7,
			"lone": 6,
			"west": 10,
			"sunshine": 5,
			"lovely": 5,
			"myself": 1,
			"move": 5,
			"cries": 4,
			"dream": 2,
			"fate": 4,
			"ask": 5,
			"year": 1,
			"wounded": 1,
			"blaze": 1,
			"days": 8,
			"hid": 4,
			"fly": 4,
			"i": 172,
			"knew": 3,
			"unknown": 2,
			"snow": 2,
			"worthy": 2,
			"thou": 41,
			"woman": 3,
			"marching": 1,
			"guns": 2,
			"tale": 1,
			"greet": 2,
			"down": 22,
			"told": 1,
			"bids": 2,
			"sunny": 2,
			"less": 3,
			"robin": 1,
			"bad": 1,
			"home": 9,
			"pay": 1,
			"swell": 1,
			"broke": 3,
			"tower": 2,
			"here": 12,
			"south": 2,
			"too": 2,
			"raised": 3,
			"steel": 2,
			"fought": 2,
			"mirth": 5,
			"mortal": 2,
			"one": 35,
			"might": 3,
			"storm": 1,
			"breathes": 2,
			"such": 11,
			"judge": 3,
			"rocks": 3,
			"draw": 2,
			"softly": 6,
			"rush": 1,
			"against": 4,
			"perfect": 6,
			"rome": 2,
			"secret": 2,
			"shadows": 5,
			"hate": 7,
			"tall": 3,
			"arts": 1,
			"state": 5,
			"work": 2,
			"pearl": 2,
			"blossom": 3,
			"forest": 3,
			"rather": 1,
			"looks": 7,
			"fields": 7,
			"saint": 1,
			"broad": 3,
			"each": 19,
			"anothers": 1,
			"henry": 2,
			"brow": 5,
			"how": 28,
			"hearts": 16,
			"higher": 1,
			"help": 3,
			"other": 5,
			"from": 73,
			"join": 1,
			"sleeping": 1,
			"gifts": 1,
			"marble": 3,
			"sought": 5,
			"drink": 7,
			"strange": 9,
			"across": 2,
			"would": 7,
			"stronger": 1,
			"living": 1,
			"lilies": 3,
			"feeling": 1,
			"mind": 12,
			"ill": 14,
			"endless": 3,
			"sublime": 2,
			"want": 2,
			"blade": 4,
			"reason": 3,
			"beat": 4,
			"beneath": 3,
			"maid": 3,
			"rare": 4,
			"ancient": 4,
			"hidden": 1,
			"these": 15,
			"shield": 3,
			"duty": 2,
			"while": 14,
			"foul": 2,
			"strand": 1,
			"breast": 2,
			"honor": 6,
			"present": 3,
			"no": 42,
			"mystic": 1,
			"bound": 6,
			"early": 4,
			"bid": 9,
			"took": 10,
			"worst": 2,
			"calm": 9,
			"roll": 2,
			"rouse": 2,
			"called": 3,
			"voice": 4,
			"maidens": 2,
			"dread": 2,
			"sand": 3,
			"solitude": 2,
			"decay": 3,
			"goodly": 2,
			"mighty": 4,
			"ears": 1,
			"with": 189,
			"around": 3,
			"singing": 2,
			"sad": 11,
			"virtue": 4,
			"everlasting": 3,
			"soft": 5,
			"wave": 4,
			"drew": 5,
			"now": 75,
			"set": 10,
			"give": 17,
			"gaze": 2,
			"foreign": 1,
			"flying": 4,
			"some": 22,
			"shone": 2,
			"till": 14,
			"hair": 4,
			"tempest": 1,
			"meet": 5,
			"heads": 2,
			"will": 27,
			"follow": 5,
			"flash": 1,
			"strong": 28,
			"himself": 5,
			"wore": 2,
			"twenty": 1,
			"locks": 2,
			"prayers": 5,
			"lying": 1,
			"all": 198,
			"chief": 2,
			"grief": 7,
			"desolate": 2,
			"gay": 8,
			"drum": 5,
			"gods": 3,
			"wild": 13,
			"loving": 7,
			"familiar": 2,
			"then": 86,
			"room": 1,
			"harvest": 1,
			"slain": 1,
			"feed": 5,
			"lose": 4,
			"flesh": 4,
			"poured": 2,
			"large": 1,
			"blest": 1,
			"thought": 10,
			"could": 4,
			"through": 46,
			"pleasant": 4,
			"thomas": 1,
			"ten": 4,
			"foe": 4,
			"has": 4,
			"street": 2,
			"songs": 6,
			"thats": 5,
			"laugh": 3,
			"toil": 3,
			"angels": 9,
			"well": 16,
			"spoke": 1,
			"doth": 6,
			"thread": 3,
			"clear": 21,
			"king": 6,
			"shine": 3,
			"couch": 1,
			"lake": 1,
			"master": 4,
			"ways": 3,
			"guess": 1,
			"nights": 4,
			"peaceful": 5,
			"dost": 1,
			"spring": 5,
			"much": 7,
			"minds": 2,
			"wake": 1,
			"upward": 4,
			"fiery": 6,
			"turned": 8,
			"begun": 1,
			"behind": 4,
			"wealth": 3,
			"nearer": 8,
			"our": 42,
			"throne": 1,
			"smoke": 4,
			"storms": 3,
			"wrong": 6,
			"day": 16,
			"sense": 5,
			"hall": 3,
			"walked": 3,
			"sleeps": 1,
			"feel": 7,
			"passing": 3,
			"works": 3,
			"gathered": 3,
			"open": 4,
			"page": 1,
			"frame": 2,
			"neer": 6,
			"future": 2,
			"fear": 18,
			"night": 17,
			"patience": 6,
			"equal": 1,
			"ends": 1,
			"fallen": 1,
			"mercy": 2,
			"loved": 5,
			"pity": 2,
			"stay": 4,
			"shall": 25,
			"before": 6,
			"echo": 1,
			"only": 12,
			"golden": 10,
			"wind": 4,
			"still": 69,
			"your": 36,
			"shade": 2,
			"natures": 2,
			"mingled": 3,
			"yet": 91,
			"best": 6,
			"way": 4,
			"mark": 2,
			"to": 193,
			"loud": 9,
			"poetry": 8,
			"hill": 3,
			"clouds": 6,
			"youth": 4,
			"human": 2,
			"poets": 1,
			"cities": 3,
			"springs": 4,
			"into": 16,
			"cut": 4,
			"round": 27,
			"wood": 2,
			"flame": 5,
			"keen": 1,
			"turn": 9,
			"thinking": 3,
			"mid": 3,
			"slowly": 4,
			"lie": 3,
			"little": 7,
			"answer": 3,
			"written": 1,
			"rich": 5,
			"live": 13,
			"strain": 1,
			"religion": 1,
			"use": 2,
			"homes": 2,
			"backward": 2,
			"gently": 5,
			"heavenly": 3,
			"glorious": 2,
			"turning": 3,
			"freedoms": 2,
			"growing": 1,
			"hence": 3,
			"view": 1,
			"spear": 4,
			"get": 2,
			"know": 8,
			"mould": 1,
			"prove": 5,
			"soar": 1,
			"sore": 3,
			"art": 1,
			"ah": 3,
			"harp": 2,
			"bold": 7,
			"flow": 2,
			"vast": 3,
			"may": 14,
			"th": 2,
			"strife": 9,
			"eve": 1,
			"sweep": 3,
			"whisper": 1,
			"withered": 3,
			"apart": 1,
			"enter": 1,
			"yon": 2,
			"sign": 1,
			"skies": 5,
			"smiled": 5,
			"we": 63,
			"gloom": 4,
			"glad": 2,
			"simple": 5,
			"loss": 2,
			"infant": 2,
			"spread": 7,
			"store": 3,
			"whose": 6,
			"falling": 6,
			"as": 99,
			"throng": 3,
			"fair": 29,
			"charles": 1,
			"heavens": 5,
			"stand": 2,
			"english": 1,
			"happy": 6,
			"done": 2,
			"said": 11,
			"life": 30,
			"noon": 2,
			"end": 6,
			"he": 99,
			"arms": 3,
			"me": 32,
			"sat": 3,
			"strength": 3,
			"son": 7,
			"flag": 1,
			"gleam": 2,
			"at": 61,
			"fancy": 4,
			"below": 3,
			"straight": 3,
			"slumber": 2,
			"frown": 1,
			"seat": 1,
			"point": 1,
			"lies": 5,
			"iii": 1,
			"led": 2,
			"o": 28,
			"east": 1,
			"coming": 3,
			"greek": 1,
			"grow": 4,
			"yonder": 1,
			"left": 17,
			"rings": 2,
			"streams": 7,
			"blessed": 3,
			"arise": 1,
			"common": 2,
			"the": 1297,
			"ghost": 2,
			"tis": 5,
			"waste": 3,
			"though": 22,
			"fight": 3,
			"treasure": 2,
			"sure": 2,
			"world": 2,
			"bent": 5,
			"stood": 5,
			"scarce": 3,
			"seems": 3,
			"labor": 5,
			"her": 71,
			"passed": 6,
			"share": 3,
			"change": 10,
			"radiant": 1,
			"safe": 3,
			"weak": 10,
			"grand": 4,
			"young": 5,
			"dead": 12,
			"tread": 3,
			"thirst": 2,
			"fire": 6,
			"trees": 5,
			"scene": 2,
			"fail": 2,
			"near": 10,
			"first": 2,
			"seas": 1,
			"oft": 15,
			"jesus": 4,
			"there": 72,
			"grim": 10,
			"lowly": 2,
			"restless": 1,
			"in": 231,
			"flowers": 18,
			"choice": 1,
			"forgive": 2,
			"harmony": 2,
			"purpose": 2,
			"dim": 9,
			"shed": 2,
			"air": 8,
			"north": 1,
			"ruin": 2,
			"seem": 4,
			"thoughts": 5,
			"shalt": 2,
			"sky": 7,
			"oak": 1,
			"grows": 4
		},
		"eer": {
			"caught": 1,
			"touched": 1,
			"over": 1,
			"began": 1,
			"return": 1,
			"you": 1,
			"for": 1,
			"my": 1,
			"can": 1,
			"was": 3,
			"have": 1,
			"gave": 2,
			"met": 1,
			"felt": 1,
			"i": 1,
			"thou": 1,
			"would": 1,
			"with": 1,
			"wore": 2,
			"our": 1,
			"loved": 1,
			"shall": 2,
			"your": 1,
			"to": 1,
			"left": 1,
			"the": 6,
			"in": 1
		},
		"whateer": {
			"his": 1,
			"of": 1,
			"she": 1,
			"it": 2,
			"is": 1,
			"away": 1,
			"they": 1,
			"without": 1,
			"its": 2,
			"my": 1,
			"if": 1,
			"until": 1,
			"i": 1,
			"thou": 1,
			"we": 3,
			"the": 3
		},
		"order": {
			"england": 1,
			"pain": 1,
			"sins": 1,
			"is": 1,
			"heard": 1,
			"came": 1,
			"name": 1,
			"that": 2,
			"a": 1,
			"and": 2,
			"march": 1,
			"i": 1,
			"from": 1,
			"all": 1,
			"then": 1,
			"could": 1,
			"to": 1,
			"lies": 1,
			"the": 2,
			"stood": 1,
			"grim": 1,
			"in": 1
		},
		"bliss": {
			"sweet": 1,
			"ages": 1,
			"fears": 1,
			"made": 1,
			"of": 2,
			"high": 1,
			"she": 1,
			"beyond": 1,
			"it": 1,
			"by": 1,
			"is": 1,
			"than": 1,
			"where": 1,
			"for": 3,
			"heaven": 1,
			"william": 1,
			"was": 1,
			"that": 3,
			"if": 2,
			"cares": 1,
			"full": 1,
			"must": 1,
			"what": 1,
			"have": 2,
			"so": 1,
			"on": 1,
			"above": 1,
			"but": 2,
			"lives": 1,
			"when": 1,
			"eternal": 1,
			"t": 1,
			"and": 10,
			"i": 2,
			"unknown": 1,
			"from": 1,
			"ill": 1,
			"through": 1,
			"shall": 1,
			"to": 3,
			"he": 1,
			"below": 1,
			"lies": 1,
			"o": 1,
			"the": 3,
			"in": 4
		},
		"thunder": {
			"breaking": 1,
			"within": 1,
			"of": 7,
			"this": 1,
			"put": 1,
			"by": 1,
			"is": 1,
			"swept": 1,
			"past": 1,
			"heaven": 1,
			"god": 1,
			"that": 1,
			"nothing": 1,
			"on": 3,
			"maryland": 1,
			"be": 1,
			"and": 2,
			"from": 1,
			"across": 1,
			"then": 2,
			"through": 1,
			"well": 1,
			"to": 1,
			"as": 1,
			"o": 1,
			"the": 5,
			"in": 1,
			"flowers": 1
		},
		"bones": {
			"are": 4,
			"beside": 1,
			"of": 1,
			"once": 1,
			"over": 6,
			"where": 1,
			"for": 1,
			"sleep": 1,
			"were": 1,
			"and": 2,
			"how": 1,
			"from": 1,
			"ill": 1,
			"no": 1,
			"your": 1,
			"the": 1,
			"in": 2
		},
		"mothers": {
			"sweet": 1,
			"sound": 1,
			"look": 1,
			"are": 1,
			"sons": 1,
			"wheel": 1,
			"mouth": 1,
			"eyes": 1,
			"smile": 1,
			"hand": 1,
			"breath": 1,
			"my": 1,
			"bore": 1,
			"twilight": 1,
			"tender": 1,
			"moan": 1,
			"door": 1,
			"bud": 1,
			"arm": 1,
			"or": 1,
			"bitter": 1,
			"love": 3,
			"on": 1,
			"death": 1,
			"gone": 1,
			"sigh": 1,
			"heart": 1,
			"and": 1,
			"grave": 1,
			"from": 2,
			"mind": 1,
			"breast": 8,
			"voice": 1,
			"with": 1,
			"soft": 1,
			"now": 1,
			"knee": 1,
			"view": 1,
			"stand": 1,
			"arms": 1
		},
		"grace": {
			"sweet": 1,
			"us": 1,
			"within": 1,
			"his": 1,
			"which": 2,
			"of": 7,
			"this": 1,
			"she": 3,
			"nor": 1,
			"rose": 1,
			"divine": 2,
			"it": 3,
			"by": 1,
			"is": 1,
			"like": 1,
			"they": 1,
			"you": 3,
			"than": 1,
			"where": 2,
			"my": 1,
			"great": 1,
			"again": 1,
			"enough": 1,
			"thy": 1,
			"whom": 1,
			"can": 1,
			"was": 1,
			"that": 4,
			"if": 1,
			"had": 1,
			"what": 2,
			"a": 2,
			"so": 1,
			"upon": 1,
			"celestial": 1,
			"but": 3,
			"ye": 1,
			"out": 1,
			"and": 20,
			"i": 3,
			"thou": 1,
			"here": 1,
			"how": 1,
			"from": 1,
			"ill": 1,
			"beneath": 1,
			"while": 1,
			"no": 1,
			"with": 1,
			"ways": 1,
			"minds": 1,
			"behind": 1,
			"our": 1,
			"shall": 3,
			"still": 1,
			"to": 8,
			"as": 1,
			"he": 1,
			"sat": 1,
			"at": 1,
			"o": 1,
			"the": 7,
			"though": 1,
			"there": 1,
			"in": 2
		},
		"sun": {
			"come": 2,
			"summer": 1,
			"within": 2,
			"earth": 1,
			"appear": 1,
			"seemed": 1,
			"are": 1,
			"back": 1,
			"made": 1,
			"which": 2,
			"of": 11,
			"amid": 1,
			"once": 1,
			"she": 1,
			"nor": 1,
			"three": 1,
			"does": 1,
			"forth": 1,
			"goes": 3,
			"rose": 3,
			"every": 1,
			"it": 3,
			"over": 1,
			"by": 1,
			"father": 3,
			"is": 11,
			"rise": 3,
			"looked": 1,
			"like": 2,
			"forever": 1,
			"you": 1,
			"glowing": 1,
			"afar": 1,
			"slow": 1,
			"where": 1,
			"for": 3,
			"hand": 1,
			"should": 1,
			"whats": 1,
			"came": 1,
			"again": 2,
			"shines": 4,
			"burning": 1,
			"thy": 1,
			"comes": 1,
			"can": 1,
			"was": 3,
			"that": 4,
			"if": 1,
			"had": 3,
			"what": 1,
			"or": 6,
			"a": 4,
			"so": 4,
			"them": 1,
			"sink": 1,
			"upon": 1,
			"whole": 1,
			"hath": 2,
			"whence": 1,
			"on": 4,
			"break": 1,
			"but": 4,
			"time": 1,
			"when": 2,
			"paradise": 1,
			"and": 29,
			"do": 1,
			"i": 2,
			"thou": 2,
			"how": 2,
			"from": 7,
			"would": 3,
			"while": 2,
			"with": 6,
			"set": 2,
			"shone": 2,
			"will": 1,
			"himself": 3,
			"fires": 1,
			"could": 1,
			"through": 1,
			"thomas": 1,
			"has": 2,
			"doth": 1,
			"shine": 1,
			"behind": 1,
			"shall": 5,
			"still": 1,
			"yet": 1,
			"to": 8,
			"into": 1,
			"lie": 1,
			"we": 2,
			"whose": 1,
			"as": 2,
			"charles": 1,
			"said": 1,
			"he": 2,
			"at": 1,
			"o": 2,
			"browning": 1,
			"the": 14,
			"scarce": 1,
			"her": 1,
			"there": 1,
			"restless": 1,
			"in": 8,
			"grows": 1
		},
		"march": {
			"blew": 1,
			"his": 1,
			"play": 1,
			"made": 1,
			"of": 5,
			"two": 1,
			"lightly": 1,
			"again": 1,
			"forward": 1,
			"was": 1,
			"that": 1,
			"their": 1,
			"a": 3,
			"on": 3,
			"be": 1,
			"and": 6,
			"march": 2,
			"i": 1,
			"south": 1,
			"with": 1,
			"till": 1,
			"through": 1,
			"has": 1,
			"nearer": 1,
			"to": 4,
			"we": 1,
			"as": 1,
			"he": 1,
			"the": 1,
			"in": 3
		},
		"truth": {
			"itself": 1,
			"since": 1,
			"ii": 1,
			"are": 2,
			"which": 1,
			"of": 4,
			"once": 1,
			"beyond": 1,
			"does": 1,
			"age": 1,
			"it": 2,
			"far": 1,
			"by": 4,
			"alone": 1,
			"shut": 1,
			"is": 12,
			"lo": 1,
			"forever": 1,
			"they": 1,
			"where": 1,
			"for": 3,
			"take": 1,
			"my": 2,
			"shines": 3,
			"enough": 1,
			"freedom": 1,
			"thy": 2,
			"makes": 1,
			"can": 2,
			"that": 2,
			"go": 1,
			"what": 1,
			"an": 1,
			"or": 1,
			"their": 1,
			"a": 2,
			"so": 1,
			"them": 1,
			"hath": 1,
			"on": 1,
			"eternal": 1,
			"be": 1,
			"t": 1,
			"out": 1,
			"and": 29,
			"whateer": 1,
			"truth": 1,
			"i": 1,
			"one": 1,
			"whereer": 1,
			"how": 1,
			"from": 5,
			"would": 1,
			"these": 1,
			"with": 2,
			"now": 1,
			"all": 1,
			"thomas": 1,
			"has": 2,
			"well": 1,
			"doth": 1,
			"our": 1,
			"fear": 1,
			"needs": 1,
			"shall": 5,
			"your": 1,
			"to": 11,
			"may": 3,
			"as": 1,
			"he": 1,
			"o": 2,
			"grow": 1,
			"the": 7,
			"tis": 1,
			"her": 2,
			"there": 3,
			"in": 4
		},
		"bloom": {
			"his": 1,
			"beside": 1,
			"next": 1,
			"of": 7,
			"it": 1,
			"they": 1,
			"laughing": 1,
			"again": 1,
			"that": 1,
			"an": 1,
			"or": 2,
			"sae": 1,
			"their": 2,
			"upon": 1,
			"on": 2,
			"and": 5,
			"sunny": 1,
			"while": 1,
			"around": 1,
			"through": 1,
			"to": 1,
			"glad": 1,
			"fair": 1,
			"her": 1,
			"in": 6
		},
		"do": {
			"sweet": 1,
			"come": 1,
			"more": 7,
			"christ": 1,
			"chase": 1,
			"forget": 1,
			"his": 1,
			"appear": 2,
			"him": 4,
			"see": 1,
			"fit": 1,
			"dance": 1,
			"which": 1,
			"call": 2,
			"this": 3,
			"yield": 1,
			"keep": 1,
			"nor": 1,
			"scorn": 1,
			"aught": 1,
			"not": 44,
			"fade": 1,
			"serve": 1,
			"today": 1,
			"praise": 1,
			"it": 7,
			"try": 1,
			"is": 1,
			"like": 1,
			"good": 2,
			"they": 8,
			"believe": 1,
			"you": 16,
			"strike": 1,
			"than": 1,
			"smile": 1,
			"those": 2,
			"where": 1,
			"for": 4,
			"cry": 2,
			"take": 3,
			"rest": 1,
			"my": 1,
			"blow": 1,
			"touch": 1,
			"thy": 6,
			"pray": 1,
			"sleep": 2,
			"moan": 1,
			"remember": 1,
			"sir": 1,
			"can": 1,
			"oer": 1,
			"that": 3,
			"show": 1,
			"bear": 1,
			"make": 1,
			"often": 1,
			"reign": 1,
			"had": 1,
			"must": 1,
			"what": 2,
			"nothing": 2,
			"or": 4,
			"fill": 1,
			"their": 8,
			"so": 5,
			"them": 2,
			"adieu": 1,
			"things": 1,
			"love": 1,
			"on": 1,
			"sees": 1,
			"but": 13,
			"thee": 1,
			"ye": 6,
			"be": 1,
			"t": 2,
			"and": 11,
			"ask": 1,
			"i": 16,
			"thou": 3,
			"less": 1,
			"such": 1,
			"from": 1,
			"ill": 1,
			"these": 1,
			"present": 1,
			"no": 2,
			"with": 8,
			"now": 2,
			"give": 1,
			"gaze": 1,
			"meet": 1,
			"all": 6,
			"laugh": 1,
			"george": 1,
			"well": 3,
			"shine": 1,
			"much": 1,
			"minds": 1,
			"wake": 1,
			"our": 5,
			"wrong": 2,
			"fear": 1,
			"still": 1,
			"your": 1,
			"yet": 1,
			"to": 2,
			"lie": 3,
			"little": 1,
			"live": 2,
			"know": 2,
			"bold": 1,
			"we": 14,
			"as": 3,
			"stand": 1,
			"he": 1,
			"me": 2,
			"at": 1,
			"o": 2,
			"grow": 4,
			"the": 24,
			"her": 2,
			"change": 2,
			"there": 1,
			"in": 2
		},
		"fever": {
			"of": 2,
			"keep": 1,
			"she": 1,
			"they": 1,
			"burns": 2,
			"wear": 1,
			"that": 4,
			"on": 1,
			"and": 2,
			"i": 2,
			"called": 2,
			"he": 1,
			"in": 1
		},
		"dark": {
			"summer": 1,
			"earth": 2,
			"mountains": 1,
			"appear": 1,
			"stream": 2,
			"woe": 1,
			"are": 2,
			"fell": 1,
			"hide": 1,
			"of": 5,
			"amid": 1,
			"tide": 1,
			"she": 1,
			"hours": 1,
			"shake": 1,
			"began": 1,
			"by": 1,
			"like": 1,
			"mother": 1,
			"seven": 1,
			"without": 1,
			"sea": 1,
			"where": 2,
			"despair": 2,
			"church": 1,
			"for": 1,
			"melancholy": 1,
			"my": 1,
			"words": 1,
			"hour": 3,
			"remain": 1,
			"forgot": 1,
			"shore": 1,
			"soul": 1,
			"cease": 1,
			"held": 1,
			"streets": 1,
			"power": 1,
			"oer": 1,
			"was": 3,
			"that": 2,
			"rolling": 1,
			"had": 1,
			"must": 1,
			"what": 4,
			"an": 1,
			"nothing": 1,
			"or": 3,
			"eye": 1,
			"tree": 1,
			"a": 3,
			"deep": 1,
			"but": 3,
			"brown": 2,
			"ye": 2,
			"knows": 1,
			"and": 34,
			"dark": 2,
			"black": 1,
			"grave": 1,
			"thou": 1,
			"tower": 2,
			"one": 1,
			"against": 1,
			"shadows": 2,
			"how": 2,
			"breast": 1,
			"no": 2,
			"with": 3,
			"wave": 4,
			"room": 1,
			"day": 1,
			"future": 1,
			"night": 1,
			"shade": 1,
			"to": 6,
			"hill": 1,
			"clouds": 1,
			"we": 2,
			"gloom": 1,
			"as": 4,
			"he": 1,
			"below": 1,
			"o": 1,
			"the": 9,
			"world": 1,
			"drawn": 1,
			"her": 1,
			"oft": 1,
			"in": 3,
			"sky": 1
		},
		"prize": {
			"itself": 3,
			"of": 1,
			"not": 1,
			"it": 1,
			"is": 2,
			"away": 1,
			"for": 1,
			"thy": 1,
			"if": 1,
			"let": 1,
			"go": 1,
			"a": 1,
			"falls": 1,
			"them": 1,
			"above": 1,
			"but": 1,
			"infinite": 1,
			"be": 1,
			"and": 1,
			"might": 1,
			"virtue": 1,
			"o": 1,
			"the": 3
		},
		"quick": {
			"of": 1,
			"high": 1,
			"wheel": 1,
			"depart": 1,
			"its": 1,
			"for": 1,
			"my": 1,
			"name": 1,
			"forward": 1,
			"an": 1,
			"bright": 1,
			"spirit": 1,
			"and": 3,
			"down": 1,
			"with": 1,
			"to": 2,
			"round": 1,
			"as": 4,
			"he": 1,
			"the": 2,
			"in": 1,
			"step": 1
		},
		"doom": {
			"us": 1,
			"doubt": 1,
			"woe": 1,
			"which": 1,
			"of": 5,
			"is": 1,
			"without": 1,
			"were": 1,
			"was": 1,
			"must": 1,
			"or": 1,
			"upon": 1,
			"hath": 1,
			"and": 2,
			"from": 2,
			"till": 1,
			"all": 1,
			"then": 1,
			"our": 1,
			"shall": 1,
			"whose": 1,
			"he": 1,
			"iii": 1,
			"arise": 1,
			"there": 1,
			"in": 2
		},
		"last": {
			"flower": 1,
			"blue": 1,
			"look": 2,
			"im": 1,
			"forget": 1,
			"his": 2,
			"fond": 1,
			"voices": 1,
			"hast": 1,
			"right": 1,
			"word": 2,
			"who": 1,
			"which": 2,
			"beam": 3,
			"steps": 1,
			"of": 22,
			"this": 3,
			"off": 1,
			"tide": 1,
			"she": 1,
			"anonymous": 1,
			"nor": 1,
			"act": 1,
			"dreadful": 1,
			"two": 1,
			"rapture": 1,
			"hours": 1,
			"burn": 1,
			"it": 2,
			"twas": 2,
			"far": 1,
			"by": 2,
			"long": 1,
			"kissed": 1,
			"pride": 1,
			"is": 2,
			"few": 1,
			"like": 2,
			"lo": 1,
			"farewell": 2,
			"they": 1,
			"you": 2,
			"new": 1,
			"than": 2,
			"those": 1,
			"where": 1,
			"gray": 1,
			"for": 3,
			"lost": 2,
			"take": 1,
			"my": 2,
			"words": 7,
			"hour": 1,
			"came": 1,
			"thy": 1,
			"sleep": 2,
			"battle": 3,
			"ray": 1,
			"dearest": 1,
			"sadly": 1,
			"because": 1,
			"whether": 1,
			"did": 2,
			"was": 1,
			"that": 5,
			"man": 1,
			"taste": 1,
			"embrace": 4,
			"leaf": 4,
			"ripe": 1,
			"half": 1,
			"must": 1,
			"pure": 1,
			"what": 1,
			"oh": 2,
			"nothing": 2,
			"ride": 1,
			"bitter": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"them": 1,
			"joys": 1,
			"upon": 1,
			"hath": 2,
			"walk": 1,
			"but": 5,
			"time": 1,
			"when": 3,
			"sigh": 1,
			"bed": 1,
			"t": 1,
			"awful": 1,
			"heart": 1,
			"sorrow": 1,
			"and": 17,
			"thunder": 1,
			"last": 1,
			"year": 1,
			"poem": 1,
			"i": 4,
			"woman": 1,
			"down": 2,
			"one": 1,
			"breathes": 1,
			"each": 1,
			"from": 5,
			"sleeping": 1,
			"these": 2,
			"no": 2,
			"with": 2,
			"sad": 1,
			"now": 1,
			"some": 1,
			"flash": 1,
			"then": 2,
			"thought": 1,
			"foe": 1,
			"has": 2,
			"george": 1,
			"beauteous": 1,
			"our": 3,
			"day": 1,
			"gathered": 1,
			"night": 8,
			"mercy": 1,
			"shall": 2,
			"still": 3,
			"your": 1,
			"yet": 1,
			"best": 1,
			"to": 7,
			"little": 1,
			"may": 2,
			"eve": 1,
			"we": 3,
			"whose": 1,
			"as": 3,
			"charles": 2,
			"noon": 1,
			"he": 8,
			"arms": 1,
			"at": 5,
			"o": 2,
			"the": 12,
			"tis": 1,
			"fight": 1,
			"stood": 1,
			"dead": 1,
			"in": 5,
			"dim": 1,
			"thoughts": 2
		},
		"lone": {
			"river": 1,
			"his": 1,
			"stream": 1,
			"valley": 1,
			"who": 1,
			"of": 1,
			"rivers": 1,
			"is": 1,
			"mother": 1,
			"song": 1,
			"where": 1,
			"bosom": 1,
			"soul": 1,
			"did": 1,
			"or": 1,
			"isle": 1,
			"on": 1,
			"when": 1,
			"and": 6,
			"i": 1,
			"one": 1,
			"sought": 1,
			"would": 1,
			"breast": 1,
			"singing": 1,
			"our": 1,
			"way": 1,
			"whose": 1,
			"o": 1,
			"the": 1,
			"her": 1,
			"tread": 1,
			"in": 1
		},
		"west": {
			"his": 2,
			"are": 1,
			"ive": 1,
			"who": 1,
			"this": 1,
			"not": 2,
			"by": 1,
			"is": 2,
			"they": 3,
			"afar": 1,
			"its": 1,
			"than": 1,
			"sea": 1,
			"where": 1,
			"richard": 1,
			"for": 1,
			"blown": 1,
			"my": 2,
			"blow": 1,
			"bore": 1,
			"along": 1,
			"that": 1,
			"had": 1,
			"a": 1,
			"so": 2,
			"many": 1,
			"april": 1,
			"and": 7,
			"draw": 1,
			"how": 2,
			"would": 1,
			"with": 1,
			"singing": 1,
			"through": 1,
			"wake": 1,
			"to": 2,
			"homes": 1,
			"we": 1,
			"the": 7,
			"north": 1
		},
		"sunshine": {
			"went": 1,
			"free": 1,
			"light": 1,
			"his": 1,
			"crossed": 1,
			"purple": 1,
			"are": 1,
			"fell": 1,
			"of": 6,
			"keep": 1,
			"after": 1,
			"grew": 1,
			"wheel": 2,
			"played": 1,
			"race": 1,
			"by": 2,
			"is": 1,
			"away": 1,
			"makes": 1,
			"glow": 1,
			"can": 1,
			"bud": 1,
			"did": 1,
			"broken": 1,
			"a": 1,
			"falls": 1,
			"upon": 2,
			"on": 3,
			"and": 9,
			"calm": 1,
			"still": 2,
			"way": 1,
			"we": 1,
			"o": 1,
			"the": 2,
			"her": 1,
			"there": 1
		},
		"rays": {
			"thine": 1,
			"light": 1,
			"are": 1,
			"call": 1,
			"of": 3,
			"she": 1,
			"divine": 1,
			"like": 1,
			"have": 1,
			"a": 1,
			"and": 1,
			"one": 1,
			"these": 1,
			"through": 1,
			"shine": 1,
			"shall": 1,
			"the": 4,
			"in": 1
		},
		"christian": {
			"england": 1,
			"worn": 1,
			"charity": 2,
			"of": 1,
			"it": 1,
			"child": 1,
			"is": 1,
			"away": 1,
			"than": 1,
			"bells": 1,
			"faith": 1,
			"that": 1,
			"let": 1,
			"grace": 1,
			"do": 1,
			"rome": 1,
			"work": 1,
			"how": 1,
			"bound": 1,
			"now": 1,
			"to": 2,
			"art": 1,
			"as": 1,
			"the": 2
		},
		"lovely": {
			"of": 2,
			"city": 1,
			"dear": 1,
			"lines": 1,
			"eyes": 2,
			"land": 1,
			"is": 1,
			"rise": 1,
			"boy": 1,
			"laughing": 1,
			"summers": 1,
			"melancholy": 1,
			"ray": 1,
			"along": 2,
			"face": 2,
			"was": 1,
			"that": 2,
			"stars": 1,
			"so": 1,
			"things": 2,
			"never": 2,
			"love": 2,
			"dreams": 1,
			"and": 3,
			"woman": 1,
			"greet": 1,
			"one": 1,
			"brow": 1,
			"from": 1,
			"mind": 1,
			"maid": 1,
			"with": 1,
			"wore": 1,
			"lying": 1,
			"being": 1,
			"yet": 1,
			"to": 2,
			"eve": 1,
			"as": 2,
			"o": 1,
			"the": 1,
			"though": 1,
			"scene": 1,
			"in": 2,
			"flowers": 1
		},
		"myself": {
			"alas": 1,
			"of": 1,
			"unto": 1,
			"why": 1,
			"for": 2,
			"my": 3,
			"indeed": 1,
			"let": 1,
			"must": 1,
			"have": 1,
			"am": 2,
			"a": 2,
			"so": 1,
			"but": 2,
			"be": 1,
			"do": 1,
			"i": 1,
			"how": 1,
			"with": 3,
			"now": 1,
			"to": 2,
			"he": 1,
			"at": 1,
			"o": 1,
			"the": 2,
			"there": 1,
			"in": 10
		},
		"move": {
			"us": 1,
			"doubt": 1,
			"his": 1,
			"ive": 1,
			"who": 1,
			"men": 1,
			"not": 1,
			"twas": 1,
			"lights": 1,
			"by": 1,
			"like": 1,
			"about": 1,
			"pale": 1,
			"without": 1,
			"slow": 1,
			"hand": 1,
			"my": 1,
			"again": 1,
			"thy": 2,
			"along": 1,
			"that": 1,
			"trust": 1,
			"so": 1,
			"upon": 1,
			"but": 3,
			"thee": 1,
			"ye": 1,
			"and": 6,
			"between": 1,
			"such": 2,
			"from": 4,
			"no": 2,
			"now": 1,
			"prayers": 1,
			"yet": 1,
			"to": 1,
			"round": 1,
			"apart": 1,
			"as": 1,
			"me": 1,
			"the": 3,
			"there": 1,
			"in": 2
		},
		"cries": {
			"who": 1,
			"of": 3,
			"mine": 1,
			"they": 1,
			"een": 1,
			"my": 1,
			"were": 1,
			"that": 2,
			"oh": 1,
			"a": 1,
			"out": 4,
			"and": 6,
			"no": 1,
			"all": 1,
			"could": 1,
			"shall": 1,
			"he": 1,
			"o": 1,
			"the": 1,
			"aloud": 1
		},
		"black": {
			"river": 1,
			"his": 2,
			"white": 1,
			"mist": 1,
			"of": 2,
			"nor": 1,
			"not": 1,
			"over": 1,
			"eyes": 1,
			"land": 1,
			"douglas": 1,
			"gray": 1,
			"for": 1,
			"charge": 1,
			"winds": 1,
			"john": 1,
			"freedom": 1,
			"waves": 1,
			"shadow": 1,
			"was": 2,
			"that": 1,
			"an": 3,
			"eye": 4,
			"horse": 2,
			"their": 1,
			"on": 1,
			"shroud": 1,
			"but": 1,
			"terror": 1,
			"and": 9,
			"do": 1,
			"black": 1,
			"fly": 1,
			"down": 1,
			"rocks": 1,
			"with": 4,
			"now": 2,
			"give": 1,
			"all": 1,
			"george": 1,
			"smoke": 1,
			"night": 1,
			"to": 1,
			"clouds": 1,
			"may": 1,
			"as": 6,
			"at": 1,
			"the": 2,
			"in": 2,
			"sky": 1
		},
		"dream": {
			"sweet": 1,
			"fled": 1,
			"dies": 1,
			"of": 17,
			"talk": 1,
			"nor": 1,
			"act": 1,
			"not": 3,
			"it": 2,
			"by": 1,
			"alone": 1,
			"is": 2,
			"why": 1,
			"its": 1,
			"pleasure": 1,
			"brief": 1,
			"for": 2,
			"heaven": 1,
			"my": 1,
			"again": 1,
			"because": 1,
			"friend": 1,
			"can": 2,
			"was": 3,
			"that": 3,
			"had": 1,
			"or": 1,
			"am": 1,
			"a": 3,
			"but": 2,
			"dreams": 1,
			"and": 9,
			"do": 1,
			"fly": 1,
			"i": 1,
			"thou": 1,
			"while": 1,
			"no": 1,
			"all": 3,
			"has": 2,
			"doth": 1,
			"wealth": 1,
			"our": 5,
			"yet": 1,
			"to": 1,
			"we": 2,
			"as": 3,
			"he": 1,
			"at": 1,
			"o": 2,
			"the": 11,
			"tis": 1,
			"there": 2,
			"in": 1
		},
		"fate": {
			"itself": 1,
			"free": 1,
			"him": 1,
			"seemed": 1,
			"who": 2,
			"men": 1,
			"which": 1,
			"holds": 1,
			"of": 7,
			"far": 1,
			"is": 5,
			"for": 3,
			"fixed": 1,
			"john": 1,
			"thy": 2,
			"yes": 1,
			"francis": 1,
			"because": 1,
			"friendship": 1,
			"along": 1,
			"oer": 1,
			"that": 3,
			"let": 1,
			"both": 1,
			"says": 1,
			"nothing": 1,
			"or": 3,
			"wilt": 1,
			"their": 1,
			"upon": 1,
			"but": 1,
			"death": 1,
			"when": 1,
			"be": 2,
			"and": 11,
			"do": 1,
			"i": 2,
			"here": 1,
			"too": 1,
			"from": 1,
			"these": 1,
			"no": 1,
			"with": 5,
			"some": 1,
			"till": 1,
			"all": 1,
			"could": 4,
			"has": 1,
			"shall": 4,
			"still": 1,
			"to": 3,
			"written": 1,
			"may": 1,
			"we": 3,
			"said": 1,
			"me": 2,
			"at": 1,
			"o": 1,
			"left": 1,
			"the": 4,
			"in": 2
		},
		"ask": {
			"jean": 1,
			"us": 1,
			"his": 1,
			"him": 2,
			"who": 3,
			"of": 6,
			"not": 9,
			"it": 1,
			"is": 1,
			"forever": 1,
			"for": 4,
			"my": 1,
			"sin": 1,
			"that": 4,
			"if": 2,
			"what": 8,
			"an": 1,
			"a": 2,
			"but": 1,
			"thee": 1,
			"less": 1,
			"no": 2,
			"with": 2,
			"your": 2,
			"to": 2,
			"me": 2,
			"o": 2,
			"the": 3,
			"her": 3,
			"in": 1
		},
		"year": {
			"loves": 1,
			"ago": 3,
			"of": 3,
			"after": 2,
			"she": 2,
			"beloved": 1,
			"by": 3,
			"bring": 1,
			"is": 5,
			"where": 1,
			"brief": 1,
			"church": 1,
			"again": 1,
			"most": 1,
			"were": 1,
			"that": 1,
			"or": 1,
			"bitter": 1,
			"a": 4,
			"on": 1,
			"but": 1,
			"when": 3,
			"eternal": 1,
			"and": 12,
			"i": 2,
			"one": 1,
			"might": 1,
			"each": 1,
			"how": 1,
			"from": 1,
			"these": 1,
			"voice": 1,
			"alfred": 1,
			"with": 1,
			"give": 1,
			"all": 1,
			"shall": 1,
			"yet": 1,
			"to": 2,
			"round": 1,
			"we": 2,
			"he": 1,
			"blessed": 1,
			"the": 3,
			"tis": 1,
			"stood": 1,
			"her": 1,
			"in": 1,
			"grows": 3
		},
		"wounded": {
			"blood": 1,
			"back": 1,
			"bird": 1,
			"wheel": 1,
			"mourn": 1,
			"side": 2,
			"by": 1,
			"pride": 1,
			"they": 1,
			"nay": 1,
			"its": 1,
			"ere": 1,
			"name": 1,
			"man": 1,
			"even": 1,
			"so": 1,
			"love": 1,
			"on": 1,
			"and": 1,
			"hearts": 1,
			"from": 1,
			"all": 1,
			"comrades": 1,
			"through": 1,
			"to": 1,
			"the": 1,
			"in": 1
		},
		"blaze": {
			"his": 1,
			"of": 3,
			"forth": 1,
			"long": 1,
			"is": 1,
			"where": 1,
			"thy": 1,
			"comes": 1,
			"oh": 1,
			"a": 1,
			"so": 1,
			"on": 3,
			"and": 4,
			"no": 1,
			"with": 1,
			"whose": 1,
			"the": 4,
			"first": 1,
			"there": 1,
			"in": 1
		},
		"days": {
			"more": 1,
			"light": 2,
			"begin": 1,
			"are": 13,
			"men": 1,
			"which": 1,
			"of": 27,
			"among": 2,
			"dear": 1,
			"crimson": 1,
			"by": 1,
			"long": 1,
			"bring": 1,
			"is": 1,
			"like": 1,
			"ever": 1,
			"together": 1,
			"they": 2,
			"prayer": 1,
			"past": 1,
			"lost": 1,
			"take": 1,
			"my": 1,
			"spent": 1,
			"came": 1,
			"was": 1,
			"that": 16,
			"if": 3,
			"go": 24,
			"must": 1,
			"have": 2,
			"a": 1,
			"so": 2,
			"on": 2,
			"but": 2,
			"when": 10,
			"gone": 2,
			"be": 2,
			"out": 1,
			"and": 19,
			"march": 1,
			"last": 2,
			"i": 4,
			"thou": 1,
			"work": 1,
			"from": 1,
			"while": 1,
			"calm": 1,
			"with": 1,
			"till": 1,
			"will": 1,
			"then": 1,
			"before": 2,
			"to": 4,
			"whose": 1,
			"life": 1,
			"he": 2,
			"at": 2,
			"o": 3,
			"the": 7,
			"though": 2,
			"first": 1,
			"there": 1,
			"in": 4
		},
		"grave": {
			"sweet": 1,
			"since": 1,
			"within": 2,
			"save": 3,
			"alas": 1,
			"silent": 1,
			"men": 2,
			"of": 12,
			"this": 1,
			"keep": 1,
			"after": 1,
			"once": 2,
			"she": 1,
			"nor": 2,
			"grew": 1,
			"not": 1,
			"it": 2,
			"alone": 1,
			"something": 1,
			"is": 4,
			"unto": 1,
			"like": 2,
			"hard": 1,
			"away": 1,
			"they": 2,
			"you": 1,
			"mother": 1,
			"without": 1,
			"earths": 1,
			"where": 5,
			"for": 3,
			"my": 2,
			"great": 1,
			"john": 1,
			"burning": 1,
			"thy": 2,
			"sir": 2,
			"times": 1,
			"along": 1,
			"william": 2,
			"were": 1,
			"was": 1,
			"that": 2,
			"go": 1,
			"gives": 1,
			"must": 1,
			"even": 1,
			"have": 1,
			"sae": 1,
			"a": 6,
			"so": 1,
			"upon": 1,
			"hath": 2,
			"above": 1,
			"old": 1,
			"but": 3,
			"death": 2,
			"ye": 1,
			"when": 2,
			"be": 1,
			"and": 10,
			"i": 7,
			"thou": 2,
			"how": 1,
			"from": 1,
			"while": 1,
			"mighty": 1,
			"with": 4,
			"wave": 1,
			"some": 2,
			"grief": 1,
			"night": 1,
			"shall": 2,
			"still": 1,
			"mark": 1,
			"to": 5,
			"we": 1,
			"as": 3,
			"he": 3,
			"flag": 1,
			"at": 1,
			"below": 1,
			"the": 8,
			"there": 1,
			"in": 4,
			"grows": 1
		},
		"poem": {
			"of": 2,
			"three": 1,
			"by": 1,
			"is": 3,
			"farewell": 1,
			"you": 1,
			"for": 2,
			"should": 1,
			"was": 4,
			"make": 1,
			"de": 1,
			"study": 1,
			"so": 1,
			"given": 1,
			"but": 1,
			"and": 2,
			"i": 1,
			"one": 1,
			"how": 1,
			"will": 1,
			"as": 1,
			"life": 1,
			"the": 1,
			"there": 1
		},
		"hid": {
			"his": 1,
			"him": 2,
			"under": 1,
			"it": 2,
			"far": 1,
			"nevermore": 1,
			"its": 1,
			"my": 1,
			"that": 1,
			"climb": 1,
			"what": 1,
			"have": 1,
			"but": 2,
			"when": 1,
			"and": 2,
			"do": 1,
			"from": 2,
			"beneath": 1,
			"with": 2,
			"little": 1,
			"her": 1,
			"in": 7
		},
		"fly": {
			"his": 2,
			"alas": 1,
			"of": 2,
			"after": 1,
			"up": 1,
			"off": 1,
			"she": 1,
			"cling": 1,
			"eager": 1,
			"by": 1,
			"is": 1,
			"like": 2,
			"why": 1,
			"where": 2,
			"for": 2,
			"thy": 1,
			"forward": 1,
			"oer": 2,
			"that": 2,
			"if": 1,
			"make": 1,
			"or": 3,
			"lest": 1,
			"a": 1,
			"so": 1,
			"never": 1,
			"leave": 1,
			"but": 1,
			"infinite": 1,
			"thee": 1,
			"when": 1,
			"and": 7,
			"fly": 1,
			"i": 1,
			"down": 1,
			"home": 1,
			"from": 2,
			"while": 1,
			"all": 1,
			"our": 1,
			"to": 7,
			"we": 1,
			"as": 1,
			"at": 1,
			"o": 1,
			"the": 8,
			"in": 2
		},
		"i": {
			"sweet": 2,
			"perchance": 2,
			"come": 17,
			"bow": 2,
			"caught": 1,
			"dare": 9,
			"fled": 1,
			"look": 9,
			"more": 2,
			"hear": 53,
			"taught": 2,
			"murmur": 1,
			"won": 1,
			"since": 1,
			"died": 1,
			"england": 1,
			"curse": 1,
			"loves": 1,
			"went": 4,
			"wish": 16,
			"chase": 1,
			"forget": 4,
			"doubt": 3,
			"touched": 1,
			"pine": 1,
			"die": 12,
			"his": 3,
			"mad": 1,
			"endure": 3,
			"hell": 1,
			"him": 7,
			"crossed": 1,
			"see": 103,
			"leap": 4,
			"begin": 1,
			"play": 1,
			"lady": 1,
			"bare": 1,
			"kiss": 1,
			"women": 1,
			"thing": 1,
			"surely": 1,
			"tell": 8,
			"wonder": 4,
			"seemed": 1,
			"are": 1,
			"right": 1,
			"made": 5,
			"fell": 7,
			"who": 8,
			"seen": 1,
			"suffer": 2,
			"which": 1,
			"call": 6,
			"of": 5,
			"this": 6,
			"blind": 3,
			"cast": 3,
			"keep": 3,
			"hung": 1,
			"talk": 2,
			"kept": 1,
			"hills": 1,
			"wander": 2,
			"once": 3,
			"up": 4,
			"off": 1,
			"triumph": 1,
			"nor": 3,
			"find": 11,
			"age": 1,
			"cling": 2,
			"scorn": 1,
			"beheld": 4,
			"dear": 2,
			"mourn": 2,
			"lift": 2,
			"part": 2,
			"pass": 1,
			"chant": 2,
			"rose": 1,
			"mine": 1,
			"behold": 6,
			"not": 23,
			"dwell": 2,
			"burn": 1,
			"serve": 1,
			"put": 3,
			"today": 1,
			"proud": 1,
			"hes": 3,
			"every": 1,
			"praise": 4,
			"pressed": 1,
			"it": 14,
			"host": 1,
			"began": 3,
			"perish": 1,
			"neither": 1,
			"mean": 3,
			"brought": 4,
			"bless": 4,
			"weep": 5,
			"send": 2,
			"by": 5,
			"try": 2,
			"nevermore": 1,
			"alone": 1,
			"shut": 1,
			"long": 15,
			"bring": 6,
			"kissed": 3,
			"trace": 3,
			"is": 2,
			"cross": 1,
			"rise": 3,
			"looked": 11,
			"like": 8,
			"lo": 1,
			"away": 2,
			"found": 5,
			"why": 1,
			"sung": 1,
			"please": 1,
			"good": 1,
			"lead": 2,
			"ever": 6,
			"care": 6,
			"together": 2,
			"about": 1,
			"believe": 1,
			"gazed": 5,
			"wide": 1,
			"you": 3,
			"shot": 1,
			"thus": 3,
			"nay": 1,
			"heard": 20,
			"without": 1,
			"laid": 4,
			"than": 1,
			"smile": 4,
			"sc": 6,
			"lightly": 1,
			"crown": 1,
			"where": 1,
			"used": 9,
			"despair": 1,
			"run": 1,
			"rolled": 1,
			"press": 1,
			"for": 15,
			"read": 7,
			"become": 2,
			"charge": 4,
			"lost": 1,
			"cry": 4,
			"should": 47,
			"sang": 1,
			"take": 10,
			"cannot": 31,
			"speak": 4,
			"rest": 4,
			"my": 33,
			"spent": 4,
			"blow": 1,
			"bore": 3,
			"count": 2,
			"came": 8,
			"great": 1,
			"again": 1,
			"forgot": 2,
			"touch": 2,
			"thy": 8,
			"sing": 11,
			"watch": 5,
			"pray": 14,
			"sleep": 7,
			"battle": 2,
			"teach": 2,
			"peace": 1,
			"wept": 3,
			"ere": 1,
			"better": 2,
			"hope": 8,
			"wear": 2,
			"seek": 6,
			"gather": 10,
			"remember": 12,
			"cease": 2,
			"any": 1,
			"held": 3,
			"win": 1,
			"reach": 1,
			"stretched": 1,
			"name": 1,
			"trembling": 1,
			"faith": 1,
			"can": 44,
			"power": 1,
			"were": 35,
			"bud": 1,
			"flee": 2,
			"need": 7,
			"did": 20,
			"was": 68,
			"that": 14,
			"if": 1,
			"let": 5,
			"man": 1,
			"bear": 6,
			"daily": 1,
			"both": 3,
			"fain": 3,
			"another": 1,
			"always": 1,
			"jerusalem": 1,
			"make": 4,
			"fall": 4,
			"go": 19,
			"cried": 6,
			"trust": 10,
			"hang": 2,
			"rode": 3,
			"had": 40,
			"must": 32,
			"climb": 3,
			"what": 3,
			"sit": 10,
			"oh": 3,
			"an": 4,
			"wait": 10,
			"understand": 2,
			"hold": 17,
			"nothing": 1,
			"or": 5,
			"think": 30,
			"ran": 1,
			"hands": 1,
			"have": 141,
			"am": 159,
			"tears": 1,
			"gave": 8,
			"sae": 1,
			"ride": 2,
			"fill": 2,
			"their": 1,
			"fold": 1,
			"a": 19,
			"so": 5,
			"them": 2,
			"sometimes": 3,
			"sink": 1,
			"upon": 1,
			"lay": 9,
			"never": 23,
			"ceased": 2,
			"many": 1,
			"almost": 2,
			"leave": 8,
			"met": 3,
			"walk": 4,
			"love": 60,
			"on": 9,
			"saw": 57,
			"bend": 1,
			"break": 4,
			"charm": 1,
			"maryland": 1,
			"own": 5,
			"fast": 1,
			"but": 17,
			"death": 1,
			"thee": 18,
			"ye": 3,
			"choose": 3,
			"when": 7,
			"lifes": 1,
			"thank": 6,
			"sigh": 3,
			"felt": 8,
			"raise": 3,
			"be": 17,
			"t": 2,
			"veil": 1,
			"out": 1,
			"watched": 2,
			"tried": 1,
			"say": 14,
			"sorrow": 2,
			"and": 26,
			"do": 33,
			"dark": 1,
			"prize": 2,
			"myself": 6,
			"move": 2,
			"dream": 2,
			"ask": 13,
			"fly": 6,
			"i": 10,
			"knew": 17,
			"thou": 3,
			"down": 3,
			"told": 6,
			"pay": 1,
			"here": 3,
			"too": 4,
			"raised": 2,
			"one": 3,
			"might": 17,
			"between": 1,
			"such": 1,
			"judge": 1,
			"hate": 3,
			"rather": 1,
			"whereer": 1,
			"how": 2,
			"from": 5,
			"join": 3,
			"sought": 6,
			"drink": 2,
			"would": 58,
			"mind": 1,
			"want": 5,
			"these": 1,
			"while": 1,
			"no": 5,
			"bid": 3,
			"took": 6,
			"called": 2,
			"dread": 4,
			"with": 15,
			"drew": 1,
			"now": 10,
			"set": 3,
			"give": 7,
			"gaze": 2,
			"some": 1,
			"learned": 4,
			"till": 3,
			"meet": 5,
			"will": 68,
			"follow": 2,
			"strong": 1,
			"wore": 2,
			"all": 2,
			"loving": 1,
			"then": 5,
			"lose": 1,
			"blest": 1,
			"thought": 19,
			"could": 41,
			"ten": 1,
			"laugh": 1,
			"well": 3,
			"spoke": 1,
			"thread": 1,
			"mount": 2,
			"guess": 16,
			"much": 3,
			"wake": 6,
			"turned": 7,
			"begun": 1,
			"wrong": 1,
			"day": 4,
			"hall": 1,
			"walked": 3,
			"feel": 24,
			"aside": 1,
			"neer": 2,
			"fear": 13,
			"fallen": 1,
			"loved": 25,
			"pity": 1,
			"stay": 2,
			"shall": 79,
			"before": 4,
			"only": 12,
			"still": 9,
			"chance": 1,
			"your": 3,
			"yet": 10,
			"best": 1,
			"to": 35,
			"youth": 1,
			"wandered": 5,
			"into": 2,
			"cut": 1,
			"round": 1,
			"turn": 7,
			"lie": 13,
			"little": 1,
			"answer": 3,
			"live": 24,
			"use": 1,
			"backward": 1,
			"hence": 1,
			"view": 4,
			"get": 6,
			"know": 93,
			"vows": 1,
			"lived": 2,
			"ah": 1,
			"may": 39,
			"th": 2,
			"hail": 4,
			"whisper": 3,
			"enter": 2,
			"we": 1,
			"whose": 2,
			"as": 11,
			"fair": 1,
			"stand": 9,
			"done": 2,
			"said": 15,
			"life": 1,
			"he": 3,
			"me": 1,
			"sat": 7,
			"at": 3,
			"below": 1,
			"o": 5,
			"gain": 1,
			"grow": 1,
			"left": 7,
			"the": 71,
			"waste": 1,
			"fight": 1,
			"bent": 1,
			"stood": 12,
			"scarce": 2,
			"house": 1,
			"labor": 1,
			"her": 1,
			"passed": 1,
			"safe": 1,
			"been": 6,
			"dead": 1,
			"tread": 2,
			"first": 1,
			"oft": 4,
			"jesus": 1,
			"there": 3,
			"in": 22,
			"shed": 3,
			"ruin": 1,
			"seem": 4
		},
		"knew": {
			"come": 1,
			"him": 1,
			"who": 1,
			"of": 2,
			"she": 2,
			"not": 7,
			"it": 2,
			"its": 1,
			"where": 1,
			"for": 2,
			"my": 1,
			"whats": 1,
			"better": 1,
			"that": 8,
			"full": 1,
			"what": 3,
			"oh": 1,
			"their": 1,
			"a": 2,
			"them": 1,
			"above": 1,
			"but": 4,
			"death": 1,
			"thee": 2,
			"and": 3,
			"i": 3,
			"such": 2,
			"how": 1,
			"some": 1,
			"himself": 1,
			"could": 1,
			"well": 1,
			"our": 1,
			"to": 1,
			"as": 1,
			"o": 1,
			"the": 9,
			"her": 4,
			"there": 1,
			"in": 1
		},
		"unknown": {
			"sweet": 1,
			"us": 1,
			"stream": 1,
			"who": 1,
			"this": 1,
			"by": 2,
			"is": 2,
			"unto": 1,
			"good": 1,
			"where": 1,
			"whom": 1,
			"along": 1,
			"god": 1,
			"main": 1,
			"whole": 1,
			"and": 3,
			"hid": 1,
			"here": 1,
			"these": 1,
			"no": 1,
			"shall": 2,
			"yet": 1,
			"to": 2,
			"may": 1,
			"we": 1,
			"as": 1,
			"fair": 1,
			"he": 1,
			"me": 1,
			"fancy": 1,
			"o": 2,
			"arise": 1,
			"the": 3,
			"sure": 1,
			"in": 1
		},
		"snow": {
			"come": 1,
			"his": 1,
			"james": 2,
			"thousand": 1,
			"which": 1,
			"of": 2,
			"once": 1,
			"it": 1,
			"by": 2,
			"like": 1,
			"farewell": 1,
			"they": 1,
			"where": 1,
			"for": 2,
			"should": 1,
			"my": 1,
			"winds": 1,
			"ere": 1,
			"oer": 1,
			"that": 1,
			"had": 1,
			"what": 5,
			"a": 2,
			"so": 1,
			"lay": 1,
			"on": 1,
			"but": 2,
			"thee": 1,
			"when": 1,
			"and": 15,
			"do": 1,
			"i": 1,
			"snow": 1,
			"how": 3,
			"from": 2,
			"would": 1,
			"while": 1,
			"roll": 1,
			"with": 3,
			"around": 1,
			"soft": 1,
			"all": 1,
			"mercy": 1,
			"shall": 1,
			"we": 1,
			"as": 1,
			"o": 1,
			"the": 9,
			"in": 4
		},
		"worthy": {
			"books": 1,
			"deeds": 1,
			"of": 6,
			"fame": 1,
			"sons": 1,
			"found": 1,
			"can": 1,
			"cause": 1,
			"let": 1,
			"man": 1,
			"full": 1,
			"am": 1,
			"thee": 1,
			"and": 1,
			"do": 1,
			"thou": 1,
			"such": 1,
			"guest": 1,
			"till": 1,
			"master": 1,
			"to": 4,
			"done": 2,
			"the": 1
		},
		"thou": {
			"come": 3,
			"dare": 1,
			"saviour": 1,
			"us": 5,
			"more": 4,
			"hear": 1,
			"since": 1,
			"within": 1,
			"wish": 1,
			"forget": 1,
			"doubt": 1,
			"pine": 1,
			"die": 1,
			"his": 2,
			"save": 1,
			"st": 1,
			"him": 3,
			"see": 3,
			"leap": 1,
			"wi": 1,
			"breathing": 1,
			"thing": 1,
			"learn": 2,
			"none": 1,
			"hast": 75,
			"surely": 1,
			"tell": 2,
			"war": 1,
			"weary": 2,
			"alas": 1,
			"made": 1,
			"under": 1,
			"who": 15,
			"seen": 1,
			"silent": 5,
			"lover": 1,
			"suffer": 1,
			"of": 16,
			"this": 3,
			"blind": 1,
			"cast": 1,
			"bonnie": 2,
			"star": 2,
			"yield": 1,
			"keep": 2,
			"kept": 1,
			"angel": 1,
			"she": 2,
			"among": 2,
			"nor": 1,
			"sacred": 1,
			"city": 2,
			"thyself": 4,
			"flood": 1,
			"age": 1,
			"forth": 1,
			"bird": 1,
			"beheld": 1,
			"mine": 1,
			"behold": 1,
			"sings": 1,
			"not": 23,
			"dwell": 1,
			"constant": 1,
			"praise": 1,
			"it": 6,
			"over": 1,
			"fool": 1,
			"far": 2,
			"child": 2,
			"brought": 1,
			"by": 7,
			"father": 1,
			"nevermore": 1,
			"alone": 3,
			"bring": 2,
			"pride": 1,
			"wise": 1,
			"is": 1,
			"rise": 2,
			"like": 2,
			"why": 1,
			"lead": 1,
			"ever": 3,
			"easy": 1,
			"thus": 1,
			"strike": 1,
			"without": 2,
			"slave": 2,
			"smile": 1,
			"slow": 1,
			"where": 1,
			"gentle": 1,
			"run": 1,
			"for": 9,
			"theres": 1,
			"take": 3,
			"speak": 1,
			"didst": 20,
			"rest": 2,
			"my": 19,
			"spent": 1,
			"great": 4,
			"tender": 1,
			"sighing": 1,
			"desire": 1,
			"thy": 25,
			"sing": 1,
			"vain": 2,
			"teach": 1,
			"whom": 4,
			"least": 1,
			"therefore": 1,
			"soul": 1,
			"wear": 1,
			"born": 3,
			"gather": 1,
			"francis": 1,
			"most": 2,
			"win": 2,
			"face": 1,
			"false": 3,
			"trembling": 1,
			"noble": 1,
			"comfort": 1,
			"need": 1,
			"did": 1,
			"was": 1,
			"that": 13,
			"rolling": 1,
			"if": 3,
			"drop": 2,
			"man": 1,
			"bear": 2,
			"fain": 1,
			"always": 2,
			"fall": 1,
			"broken": 2,
			"go": 4,
			"cried": 2,
			"trust": 1,
			"must": 13,
			"what": 7,
			"repose": 1,
			"moon": 2,
			"hold": 1,
			"even": 1,
			"or": 1,
			"think": 1,
			"eye": 1,
			"wilt": 18,
			"pause": 1,
			"have": 3,
			"ride": 1,
			"fill": 1,
			"bitter": 1,
			"winter": 2,
			"a": 16,
			"so": 1,
			"given": 1,
			"them": 1,
			"courage": 1,
			"true": 2,
			"upon": 3,
			"lord": 4,
			"never": 3,
			"many": 1,
			"spirit": 2,
			"leave": 1,
			"love": 4,
			"on": 5,
			"break": 1,
			"wing": 1,
			"above": 1,
			"deep": 1,
			"old": 1,
			"but": 6,
			"iron": 1,
			"grass": 1,
			"death": 1,
			"poor": 1,
			"perhaps": 2,
			"thee": 1,
			"canst": 31,
			"when": 5,
			"eternal": 1,
			"be": 7,
			"wondrous": 1,
			"glory": 1,
			"out": 1,
			"sorrow": 1,
			"and": 20,
			"grace": 1,
			"dark": 1,
			"last": 1,
			"lovely": 2,
			"ask": 2,
			"hid": 1,
			"fly": 1,
			"i": 5,
			"unknown": 1,
			"thou": 8,
			"down": 2,
			"less": 2,
			"here": 4,
			"too": 5,
			"one": 2,
			"might": 1,
			"such": 2,
			"draw": 1,
			"rather": 1,
			"each": 1,
			"how": 1,
			"other": 1,
			"from": 7,
			"hidden": 1,
			"these": 1,
			"no": 7,
			"rouse": 1,
			"voice": 2,
			"dread": 1,
			"mighty": 1,
			"with": 20,
			"now": 3,
			"set": 1,
			"some": 2,
			"meet": 1,
			"strong": 1,
			"all": 2,
			"familiar": 2,
			"then": 1,
			"feed": 1,
			"ten": 1,
			"has": 1,
			"well": 2,
			"dost": 21,
			"minds": 1,
			"wake": 1,
			"being": 1,
			"beauteous": 1,
			"our": 4,
			"feel": 2,
			"neer": 1,
			"shall": 1,
			"before": 4,
			"only": 4,
			"still": 5,
			"natures": 1,
			"yet": 2,
			"best": 3,
			"to": 20,
			"youth": 1,
			"human": 1,
			"wandered": 1,
			"keen": 1,
			"lie": 1,
			"little": 2,
			"rich": 1,
			"live": 3,
			"glorious": 1,
			"know": 3,
			"prove": 3,
			"sore": 1,
			"art": 120,
			"vast": 1,
			"may": 1,
			"sweep": 1,
			"withered": 1,
			"yon": 1,
			"we": 1,
			"whose": 7,
			"as": 2,
			"fair": 1,
			"heavens": 1,
			"stand": 1,
			"happy": 1,
			"said": 2,
			"life": 1,
			"he": 2,
			"me": 12,
			"strength": 1,
			"at": 3,
			"lies": 1,
			"o": 8,
			"left": 1,
			"the": 47,
			"tis": 1,
			"world": 1,
			"scarce": 1,
			"radiant": 1,
			"weak": 1,
			"young": 1,
			"been": 3,
			"dead": 1,
			"tread": 1,
			"fire": 1,
			"first": 4,
			"oft": 1,
			"there": 3,
			"in": 13,
			"dim": 1,
			"shed": 1,
			"shalt": 38
		},
		"haste": {
			"she": 1,
			"joy": 1,
			"away": 1,
			"for": 2,
			"my": 1,
			"enough": 1,
			"have": 1,
			"thee": 1,
			"ye": 1,
			"and": 1,
			"i": 1,
			"haste": 2,
			"with": 1,
			"then": 1,
			"to": 4,
			"we": 1,
			"as": 2,
			"the": 2,
			"her": 1
		},
		"woman": {
			"within": 1,
			"loves": 1,
			"s": 1,
			"who": 1,
			"men": 1,
			"of": 1,
			"this": 3,
			"she": 3,
			"dear": 1,
			"not": 1,
			"dry": 1,
			"by": 1,
			"is": 3,
			"like": 1,
			"why": 1,
			"sung": 1,
			"together": 1,
			"nature": 1,
			"take": 1,
			"therefore": 1,
			"born": 1,
			"was": 1,
			"let": 3,
			"what": 2,
			"even": 1,
			"or": 2,
			"moved": 1,
			"a": 1,
			"lay": 1,
			"ye": 1,
			"be": 1,
			"heart": 1,
			"and": 4,
			"lovely": 1,
			"i": 2,
			"from": 1,
			"would": 1,
			"no": 1,
			"with": 1,
			"will": 1,
			"has": 1,
			"thats": 1,
			"yet": 1,
			"to": 3,
			"may": 3,
			"smiled": 1,
			"sat": 2,
			"o": 1,
			"the": 2,
			"though": 2,
			"there": 1,
			"in": 4,
			"shalt": 1
		},
		"marching": {
			"came": 1,
			"oh": 2,
			"on": 12,
			"feet": 1,
			"and": 1,
			"home": 1,
			"with": 1,
			"to": 1,
			"round": 1,
			"in": 1
		},
		"depths": {
			"of": 7,
			"serene": 1,
			"where": 1,
			"for": 1,
			"can": 1,
			"let": 1,
			"or": 1,
			"and": 2,
			"thou": 1,
			"beneath": 1,
			"with": 1,
			"doth": 1,
			"we": 1,
			"below": 1
		},
		"guns": {
			"are": 1,
			"which": 1,
			"of": 1,
			"once": 1,
			"proud": 1,
			"by": 1,
			"they": 3,
			"shot": 1,
			"john": 1,
			"oh": 2,
			"a": 1,
			"love": 1,
			"on": 1,
			"but": 1,
			"and": 3,
			"he": 1,
			"at": 1,
			"the": 2,
			"stood": 1,
			"in": 2
		},
		"tale": {
			"of": 6,
			"keep": 1,
			"is": 2,
			"they": 1,
			"seven": 1,
			"vain": 1,
			"most": 1,
			"that": 2,
			"if": 1,
			"let": 1,
			"half": 1,
			"or": 1,
			"have": 1,
			"hath": 1,
			"and": 5,
			"told": 1,
			"thats": 1,
			"king": 1,
			"shall": 1,
			"yet": 1,
			"best": 2,
			"to": 3,
			"whose": 1,
			"me": 1,
			"o": 1,
			"the": 3,
			"there": 1,
			"in": 2
		},
		"greet": {
			"us": 1,
			"my": 2,
			"thy": 2,
			"had": 1,
			"so": 1,
			"and": 2,
			"from": 1,
			"while": 1,
			"with": 1,
			"our": 1,
			"yon": 1,
			"as": 2,
			"me": 1,
			"the": 9,
			"her": 2
		},
		"down": {
			"chase": 1,
			"light": 1,
			"his": 4,
			"wi": 1,
			"lady": 1,
			"ii": 1,
			"glen": 1,
			"beside": 1,
			"amidst": 1,
			"under": 3,
			"who": 2,
			"which": 1,
			"toward": 1,
			"of": 3,
			"this": 2,
			"wine": 1,
			"after": 1,
			"she": 1,
			"serene": 1,
			"aught": 1,
			"not": 2,
			"proud": 1,
			"it": 2,
			"over": 1,
			"by": 9,
			"long": 1,
			"unto": 1,
			"like": 5,
			"return": 1,
			"hard": 1,
			"forever": 1,
			"they": 4,
			"swept": 2,
			"without": 1,
			"its": 1,
			"kindly": 1,
			"those": 1,
			"where": 3,
			"for": 3,
			"my": 5,
			"john": 1,
			"thy": 2,
			"along": 1,
			"can": 1,
			"were": 1,
			"oer": 1,
			"did": 1,
			"that": 1,
			"bear": 1,
			"says": 1,
			"go": 1,
			"cried": 1,
			"hang": 1,
			"sail": 1,
			"what": 1,
			"de": 2,
			"hands": 1,
			"horse": 2,
			"their": 3,
			"a": 4,
			"upon": 5,
			"many": 2,
			"on": 13,
			"break": 1,
			"above": 1,
			"deep": 5,
			"but": 2,
			"death": 1,
			"ye": 1,
			"when": 1,
			"until": 1,
			"and": 18,
			"dark": 1,
			"i": 1,
			"thou": 1,
			"down": 4,
			"here": 2,
			"between": 1,
			"how": 1,
			"from": 14,
			"beneath": 1,
			"no": 1,
			"with": 12,
			"sad": 3,
			"some": 1,
			"till": 2,
			"will": 3,
			"all": 6,
			"then": 3,
			"poured": 1,
			"through": 4,
			"shine": 1,
			"behind": 1,
			"nearer": 1,
			"our": 2,
			"before": 1,
			"still": 1,
			"your": 2,
			"to": 36,
			"into": 3,
			"get": 1,
			"yon": 1,
			"we": 2,
			"as": 4,
			"he": 2,
			"at": 5,
			"below": 1,
			"seat": 1,
			"o": 2,
			"yonder": 1,
			"the": 65,
			"tis": 1,
			"fire": 1,
			"in": 19
		},
		"told": {
			"us": 1,
			"within": 1,
			"england": 1,
			"his": 1,
			"him": 2,
			"of": 7,
			"not": 1,
			"it": 1,
			"by": 1,
			"is": 1,
			"about": 1,
			"they": 1,
			"you": 5,
			"run": 1,
			"lovers": 1,
			"for": 1,
			"thy": 1,
			"shame": 1,
			"were": 1,
			"was": 1,
			"that": 1,
			"what": 1,
			"their": 1,
			"a": 1,
			"them": 3,
			"many": 1,
			"but": 2,
			"thee": 3,
			"when": 1,
			"home": 1,
			"how": 3,
			"while": 1,
			"till": 1,
			"then": 1,
			"our": 1,
			"yet": 1,
			"to": 2,
			"ah": 1,
			"we": 1,
			"as": 1,
			"me": 8,
			"o": 1,
			"the": 4,
			"her": 2,
			"in": 5
		},
		"bids": {
			"us": 3,
			"nor": 1,
			"every": 2,
			"it": 2,
			"rise": 1,
			"good": 1,
			"care": 1,
			"them": 1,
			"self": 1,
			"thee": 1,
			"and": 1,
			"each": 2,
			"all": 1,
			"he": 1,
			"me": 2,
			"the": 2
		},
		"sunny": {
			"light": 1,
			"gold": 1,
			"age": 1,
			"spot": 1,
			"ease": 1,
			"sea": 1,
			"where": 1,
			"for": 1,
			"rest": 1,
			"hour": 1,
			"morn": 2,
			"face": 1,
			"years": 1,
			"be": 1,
			"and": 3,
			"rays": 1,
			"with": 1,
			"hair": 1,
			"day": 1,
			"shall": 1,
			"as": 1,
			"o": 1,
			"the": 1,
			"in": 1,
			"sky": 2
		},
		"less": {
			"sweet": 1,
			"fond": 1,
			"seemed": 1,
			"nor": 1,
			"lands": 1,
			"not": 1,
			"you": 1,
			"its": 1,
			"than": 12,
			"for": 2,
			"my": 2,
			"better": 1,
			"sin": 1,
			"noble": 1,
			"arm": 1,
			"pure": 1,
			"what": 1,
			"have": 1,
			"bitter": 1,
			"true": 1,
			"on": 2,
			"and": 1,
			"i": 1,
			"would": 1,
			"ancient": 1,
			"blest": 1,
			"our": 1,
			"shall": 1,
			"to": 3,
			"hail": 1,
			"happy": 2,
			"he": 1,
			"at": 1,
			"the": 10,
			"weak": 1,
			"in": 1
		},
		"western": {
			"blue": 1,
			"men": 1,
			"star": 1,
			"land": 1,
			"sea": 2,
			"blast": 1,
			"heaven": 1,
			"smiles": 1,
			"ray": 1,
			"own": 1,
			"rushed": 1,
			"plain": 1,
			"glory": 1,
			"now": 1,
			"fallen": 1,
			"wind": 1,
			"skies": 3,
			"at": 1,
			"the": 1,
			"sky": 4
		},
		"robin": {
			"come": 1,
			"lady": 1,
			"long": 1,
			"is": 2,
			"gray": 4,
			"welcome": 2,
			"whats": 1,
			"was": 1,
			"what": 3,
			"a": 1,
			"never": 1,
			"on": 1,
			"but": 2,
			"when": 1,
			"and": 1,
			"i": 1,
			"still": 1,
			"yet": 1
		},
		"bad": {
			"him": 1,
			"men": 1,
			"of": 1,
			"this": 1,
			"it": 1,
			"good": 1,
			"my": 1,
			"hopes": 1,
			"a": 1,
			"but": 1,
			"mans": 1,
			"and": 3,
			"still": 1,
			"we": 1,
			"at": 1,
			"the": 3,
			"in": 1
		},
		"home": {
			"sweet": 3,
			"im": 1,
			"his": 1,
			"happiness": 1,
			"seemed": 1,
			"under": 1,
			"who": 1,
			"of": 14,
			"once": 1,
			"she": 3,
			"beyond": 1,
			"anonymous": 1,
			"nor": 1,
			"rose": 1,
			"sings": 1,
			"today": 1,
			"far": 3,
			"by": 1,
			"jim": 1,
			"long": 2,
			"is": 6,
			"unto": 1,
			"lo": 1,
			"hurrah": 1,
			"farewell": 1,
			"good": 3,
			"lead": 1,
			"they": 3,
			"abroad": 1,
			"without": 1,
			"song": 1,
			"where": 2,
			"yea": 1,
			"for": 8,
			"heaven": 1,
			"my": 3,
			"twilight": 1,
			"again": 4,
			"thy": 1,
			"yes": 1,
			"seek": 1,
			"was": 2,
			"that": 2,
			"let": 1,
			"man": 1,
			"jerusalem": 1,
			"had": 1,
			"sit": 1,
			"even": 1,
			"or": 3,
			"their": 1,
			"a": 7,
			"so": 1,
			"upon": 2,
			"many": 1,
			"leave": 1,
			"above": 1,
			"deep": 1,
			"but": 2,
			"t": 1,
			"and": 18,
			"march": 1,
			"wounded": 1,
			"i": 4,
			"thou": 1,
			"swell": 1,
			"here": 1,
			"one": 1,
			"such": 1,
			"work": 1,
			"each": 1,
			"how": 1,
			"from": 2,
			"no": 3,
			"with": 5,
			"all": 3,
			"through": 3,
			"throne": 1,
			"stay": 1,
			"only": 1,
			"way": 1,
			"to": 16,
			"art": 1,
			"he": 3,
			"at": 2,
			"the": 15,
			"tis": 1,
			"young": 1,
			"tread": 1,
			"there": 2,
			"in": 6
		},
		"pay": {
			"his": 1,
			"off": 1,
			"why": 1,
			"for": 4,
			"my": 1,
			"de": 1,
			"their": 1,
			"a": 2,
			"but": 1,
			"be": 1,
			"and": 1,
			"how": 1,
			"while": 1,
			"no": 1,
			"with": 1,
			"before": 1,
			"to": 2,
			"we": 1,
			"glad": 1,
			"he": 1,
			"me": 1,
			"the": 3
		},
		"swell": {
			"his": 1,
			"under": 1,
			"guard": 1,
			"of": 1,
			"high": 2,
			"up": 1,
			"by": 1,
			"like": 1,
			"my": 1,
			"came": 1,
			"trembling": 1,
			"a": 1,
			"and": 4,
			"i": 1,
			"with": 1,
			"soft": 1,
			"may": 1,
			"we": 1,
			"as": 1,
			"the": 6
		},
		"broke": {
			"his": 1,
			"him": 1,
			"under": 1,
			"nor": 1,
			"over": 1,
			"by": 1,
			"its": 1,
			"so": 1,
			"on": 1,
			"but": 1,
			"out": 2,
			"and": 6,
			"how": 1,
			"from": 1,
			"no": 1,
			"with": 1,
			"all": 1,
			"through": 2,
			"as": 1,
			"at": 1,
			"o": 1,
			"the": 6,
			"in": 5
		},
		"tower": {
			"look": 1,
			"more": 1,
			"thine": 1,
			"of": 2,
			"longfellow": 1,
			"by": 1,
			"is": 3,
			"why": 1,
			"for": 1,
			"came": 2,
			"were": 1,
			"must": 1,
			"a": 1,
			"but": 2,
			"and": 4,
			"give": 1,
			"through": 1,
			"behind": 1,
			"hill": 1,
			"we": 1,
			"he": 1,
			"the": 3,
			"there": 1
		},
		"dull": {
			"light": 1,
			"ear": 2,
			"men": 1,
			"mist": 1,
			"of": 1,
			"souls": 1,
			"pain": 2,
			"hours": 1,
			"matter": 1,
			"cold": 2,
			"care": 2,
			"gray": 1,
			"for": 1,
			"drops": 1,
			"clime": 1,
			"town": 1,
			"fools": 1,
			"eye": 1,
			"red": 1,
			"brain": 1,
			"years": 1,
			"when": 1,
			"be": 1,
			"and": 3,
			"thunder": 1,
			"days": 1,
			"i": 1,
			"work": 1,
			"how": 1,
			"ill": 1,
			"street": 1,
			"to": 2,
			"round": 1,
			"life": 1,
			"seems": 1,
			"in": 1
		},
		"wretched": {
			"weary": 1,
			"are": 1,
			"men": 2,
			"find": 1,
			"it": 1,
			"is": 1,
			"ere": 1,
			"soul": 1,
			"were": 1,
			"man": 1,
			"love": 1,
			"but": 1,
			"sigh": 1,
			"heart": 1,
			"and": 2,
			"fate": 1,
			"days": 1,
			"state": 2,
			"from": 1,
			"all": 1,
			"we": 1,
			"he": 1,
			"the": 1,
			"in": 1
		},
		"here": {
			"sweet": 2,
			"sighs": 1,
			"more": 1,
			"die": 1,
			"his": 2,
			"tell": 1,
			"are": 8,
			"amidst": 1,
			"under": 2,
			"which": 2,
			"dies": 2,
			"tired": 1,
			"once": 1,
			"among": 1,
			"goes": 1,
			"dear": 1,
			"serene": 1,
			"not": 1,
			"today": 1,
			"it": 2,
			"far": 1,
			"wisdom": 1,
			"by": 2,
			"alone": 2,
			"bring": 1,
			"kissed": 1,
			"matter": 1,
			"is": 8,
			"together": 1,
			"about": 1,
			"they": 3,
			"prayer": 1,
			"mother": 1,
			"without": 1,
			"robert": 1,
			"its": 1,
			"where": 8,
			"for": 4,
			"worse": 1,
			"theres": 1,
			"cannot": 1,
			"my": 5,
			"whats": 1,
			"again": 1,
			"thy": 4,
			"sadly": 1,
			"along": 1,
			"william": 1,
			"closed": 1,
			"shame": 1,
			"were": 2,
			"immortal": 1,
			"was": 2,
			"that": 4,
			"let": 6,
			"another": 1,
			"gives": 1,
			"or": 2,
			"think": 1,
			"have": 4,
			"am": 1,
			"their": 4,
			"a": 3,
			"given": 1,
			"upon": 3,
			"lay": 1,
			"many": 1,
			"on": 2,
			"saw": 1,
			"memory": 1,
			"old": 2,
			"but": 6,
			"death": 1,
			"ye": 1,
			"be": 2,
			"sorrow": 1,
			"and": 23,
			"truth": 1,
			"wounded": 1,
			"i": 6,
			"thou": 5,
			"woman": 1,
			"down": 1,
			"such": 1,
			"work": 1,
			"how": 1,
			"from": 1,
			"gifts": 1,
			"would": 1,
			"ill": 1,
			"beneath": 1,
			"while": 1,
			"no": 6,
			"with": 8,
			"now": 2,
			"give": 1,
			"will": 2,
			"all": 3,
			"loving": 1,
			"could": 1,
			"angels": 1,
			"our": 1,
			"shall": 2,
			"still": 1,
			"your": 1,
			"to": 14,
			"into": 1,
			"ah": 2,
			"bold": 1,
			"may": 2,
			"we": 7,
			"as": 3,
			"life": 1,
			"he": 5,
			"me": 1,
			"at": 3,
			"below": 4,
			"lies": 4,
			"o": 3,
			"grow": 1,
			"the": 18,
			"tis": 2,
			"there": 2,
			"in": 16,
			"shalt": 1,
			"grows": 1
		},
		"south": {
			"yield": 1,
			"winds": 1,
			"were": 1,
			"oer": 1,
			"that": 1,
			"let": 1,
			"says": 1,
			"full": 1,
			"had": 1,
			"or": 2,
			"on": 1,
			"but": 1,
			"having": 1,
			"and": 6,
			"from": 1,
			"then": 1,
			"as": 1,
			"at": 1,
			"the": 2,
			"in": 1
		},
		"island": {
			"us": 1,
			"since": 1,
			"story": 1,
			"far": 1,
			"unto": 1,
			"should": 1,
			"says": 1,
			"a": 1,
			"but": 2,
			"poor": 1,
			"and": 1,
			"home": 1,
			"south": 1,
			"one": 1,
			"these": 1,
			"with": 1,
			"give": 1,
			"some": 1,
			"all": 1,
			"chief": 1,
			"then": 1,
			"thomas": 1,
			"thats": 1,
			"to": 1,
			"he": 1,
			"at": 1,
			"o": 4,
			"the": 5,
			"fight": 1,
			"devil": 1,
			"in": 2
		},
		"mournful": {
			"midnight": 1,
			"voices": 1,
			"story": 1,
			"but": 1,
			"verse": 1,
			"and": 2,
			"truth": 1,
			"days": 1,
			"tale": 1,
			"secret": 1,
			"wave": 1,
			"through": 1,
			"page": 1,
			"strain": 1,
			"eve": 1,
			"fair": 1,
			"life": 2,
			"the": 1,
			"in": 1
		},
		"too": {
			"sweet": 2,
			"perchance": 1,
			"low": 2,
			"bow": 1,
			"cool": 1,
			"won": 1,
			"thine": 1,
			"ready": 1,
			"his": 2,
			"save": 1,
			"fond": 1,
			"surely": 1,
			"weary": 1,
			"are": 1,
			"right": 1,
			"warm": 1,
			"of": 3,
			"high": 2,
			"rude": 1,
			"heavy": 1,
			"sight": 1,
			"dear": 5,
			"proud": 2,
			"dry": 1,
			"far": 2,
			"mean": 1,
			"long": 7,
			"twixt": 1,
			"cold": 1,
			"is": 1,
			"soon": 10,
			"few": 1,
			"easy": 2,
			"faint": 1,
			"mother": 1,
			"new": 2,
			"slow": 1,
			"swift": 1,
			"kindly": 1,
			"brief": 1,
			"small": 3,
			"for": 10,
			"melancholy": 1,
			"fixed": 1,
			"my": 1,
			"great": 3,
			"short": 2,
			"again": 1,
			"thy": 2,
			"yes": 2,
			"watch": 1,
			"william": 1,
			"noble": 2,
			"were": 1,
			"that": 2,
			"if": 1,
			"let": 1,
			"fain": 1,
			"full": 4,
			"make": 1,
			"often": 1,
			"sail": 1,
			"had": 1,
			"an": 1,
			"have": 6,
			"late": 14,
			"a": 3,
			"many": 1,
			"fast": 2,
			"deep": 5,
			"old": 1,
			"canst": 1,
			"when": 1,
			"be": 2,
			"ay": 1,
			"out": 1,
			"kind": 1,
			"close": 1,
			"and": 9,
			"dark": 2,
			"black": 1,
			"i": 2,
			"here": 1,
			"too": 1,
			"perfect": 1,
			"from": 1,
			"would": 2,
			"ill": 1,
			"nigh": 2,
			"early": 1,
			"virtue": 1,
			"will": 1,
			"strong": 3,
			"all": 1,
			"gods": 1,
			"flesh": 1,
			"large": 2,
			"blest": 1,
			"through": 2,
			"thomas": 1,
			"well": 12,
			"mount": 1,
			"much": 22,
			"shall": 2,
			"to": 6,
			"slowly": 1,
			"little": 2,
			"glorious": 1,
			"hence": 1,
			"art": 1,
			"ah": 1,
			"bold": 1,
			"whose": 1,
			"fair": 2,
			"happy": 1,
			"he": 1,
			"o": 1,
			"the": 5,
			"though": 2,
			"her": 1,
			"weak": 2,
			"grand": 1,
			"near": 3,
			"oft": 2,
			"in": 4
		},
		"raised": {
			"his": 3,
			"high": 1,
			"up": 1,
			"not": 2,
			"every": 1,
			"it": 4,
			"by": 4,
			"its": 1,
			"my": 1,
			"nothing": 1,
			"their": 1,
			"a": 4,
			"and": 4,
			"from": 2,
			"to": 1,
			"me": 3,
			"the": 2,
			"in": 1
		},
		"steel": {
			"light": 1,
			"made": 1,
			"who": 1,
			"of": 1,
			"rock": 1,
			"nor": 2,
			"forth": 1,
			"hurrah": 1,
			"hark": 2,
			"where": 1,
			"blast": 1,
			"heaven": 1,
			"a": 1,
			"so": 1,
			"falls": 1,
			"on": 1,
			"maryland": 1,
			"until": 1,
			"be": 2,
			"and": 5,
			"ask": 1,
			"down": 1,
			"one": 1,
			"blade": 2,
			"beneath": 1,
			"all": 1,
			"couch": 2,
			"patience": 1,
			"shall": 1,
			"your": 1,
			"turn": 1,
			"mould": 1,
			"art": 1,
			"as": 1,
			"life": 1,
			"he": 1,
			"the": 6,
			"tis": 1,
			"trees": 1,
			"in": 1
		},
		"fought": {
			"his": 4,
			"far": 1,
			"by": 2,
			"without": 1,
			"for": 3,
			"thy": 2,
			"was": 1,
			"that": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"upon": 2,
			"on": 2,
			"but": 1,
			"until": 1,
			"and": 9,
			"each": 2,
			"with": 1,
			"all": 2,
			"through": 2,
			"to": 3,
			"the": 2,
			"in": 4
		},
		"mirth": {
			"us": 1,
			"made": 1,
			"of": 1,
			"goes": 1,
			"by": 1,
			"can": 1,
			"that": 1,
			"what": 1,
			"upon": 1,
			"never": 1,
			"but": 3,
			"and": 10,
			"i": 1,
			"shall": 1,
			"as": 1,
			"fair": 1,
			"o": 1,
			"the": 1,
			"in": 1
		},
		"presence": {
			"ours": 1,
			"within": 1,
			"earth": 1,
			"which": 1,
			"of": 7,
			"not": 1,
			"every": 1,
			"they": 1,
			"without": 1,
			"sea": 1,
			"that": 2,
			"bright": 1,
			"a": 2,
			"so": 1,
			"dawn": 1,
			"rushed": 1,
			"and": 1,
			"i": 1,
			"with": 1,
			"wealth": 1,
			"our": 1,
			"live": 1,
			"as": 1,
			"heavens": 2,
			"the": 1,
			"there": 3,
			"in": 3
		},
		"mortal": {
			"hell": 1,
			"voices": 1,
			"woe": 1,
			"seen": 1,
			"of": 3,
			"once": 1,
			"food": 1,
			"part": 1,
			"it": 1,
			"eyes": 6,
			"care": 1,
			"they": 1,
			"you": 1,
			"nature": 1,
			"summers": 1,
			"for": 1,
			"hand": 2,
			"clime": 1,
			"breath": 1,
			"words": 1,
			"hour": 1,
			"birth": 2,
			"most": 1,
			"sir": 1,
			"times": 1,
			"clay": 1,
			"can": 1,
			"wit": 1,
			"were": 1,
			"that": 1,
			"man": 2,
			"taste": 1,
			"had": 1,
			"must": 1,
			"or": 1,
			"soil": 1,
			"awake": 1,
			"so": 1,
			"love": 1,
			"on": 1,
			"foes": 1,
			"when": 1,
			"be": 2,
			"feet": 1,
			"heart": 2,
			"move": 1,
			"voice": 2,
			"ears": 1,
			"with": 1,
			"gaze": 1,
			"grief": 1,
			"flesh": 1,
			"doth": 1,
			"being": 1,
			"frame": 1,
			"fear": 1,
			"shall": 1,
			"to": 4,
			"view": 1,
			"whose": 1,
			"as": 2
		},
		"one": {
			"sweet": 4,
			"come": 2,
			"caught": 1,
			"dying": 2,
			"look": 5,
			"more": 11,
			"went": 2,
			"christ": 1,
			"free": 2,
			"forehead": 1,
			"his": 4,
			"him": 3,
			"law": 1,
			"means": 1,
			"thing": 6,
			"fit": 1,
			"science": 1,
			"none": 1,
			"woe": 2,
			"are": 1,
			"alas": 1,
			"made": 2,
			"word": 7,
			"fell": 1,
			"who": 36,
			"lover": 1,
			"which": 6,
			"steps": 1,
			"of": 52,
			"star": 1,
			"alike": 1,
			"after": 1,
			"feels": 1,
			"tide": 1,
			"among": 1,
			"nor": 1,
			"morning": 1,
			"grew": 1,
			"sight": 1,
			"forth": 2,
			"race": 2,
			"goes": 1,
			"spot": 1,
			"pain": 1,
			"place": 1,
			"pass": 1,
			"rose": 1,
			"beloved": 1,
			"not": 1,
			"divine": 1,
			"side": 2,
			"burden": 1,
			"starry": 1,
			"depart": 1,
			"praise": 1,
			"it": 1,
			"over": 1,
			"smooth": 1,
			"image": 1,
			"far": 2,
			"by": 17,
			"alone": 7,
			"long": 3,
			"is": 9,
			"unto": 1,
			"boy": 1,
			"away": 1,
			"gift": 1,
			"good": 2,
			"they": 2,
			"prayer": 1,
			"laughing": 1,
			"faint": 1,
			"you": 3,
			"stern": 1,
			"thus": 1,
			"new": 1,
			"rosy": 1,
			"laid": 1,
			"than": 1,
			"song": 2,
			"brief": 1,
			"small": 3,
			"lovers": 1,
			"holy": 1,
			"blast": 2,
			"for": 12,
			"past": 1,
			"read": 1,
			"hand": 4,
			"cup": 2,
			"lost": 4,
			"cry": 1,
			"bloody": 2,
			"should": 1,
			"darling": 1,
			"take": 1,
			"cannot": 3,
			"fixed": 2,
			"my": 2,
			"hour": 6,
			"came": 1,
			"great": 3,
			"short": 5,
			"desire": 3,
			"touch": 4,
			"thy": 1,
			"sing": 1,
			"yes": 1,
			"greater": 1,
			"morn": 1,
			"whom": 4,
			"ray": 3,
			"shore": 1,
			"soul": 1,
			"passion": 1,
			"hope": 1,
			"born": 1,
			"friendship": 1,
			"name": 1,
			"sits": 1,
			"whether": 1,
			"god": 3,
			"can": 8,
			"foot": 2,
			"moment": 3,
			"power": 1,
			"sabbath": 2,
			"indeed": 3,
			"did": 1,
			"was": 6,
			"that": 15,
			"if": 1,
			"same": 1,
			"drop": 1,
			"cares": 1,
			"arm": 1,
			"man": 4,
			"bear": 1,
			"another": 2,
			"always": 1,
			"half": 2,
			"tear": 2,
			"had": 4,
			"gives": 1,
			"must": 1,
			"general": 1,
			"what": 1,
			"moon": 1,
			"music": 1,
			"or": 6,
			"hands": 1,
			"bright": 1,
			"have": 1,
			"bitter": 1,
			"their": 1,
			"a": 10,
			"so": 9,
			"them": 1,
			"true": 3,
			"upon": 1,
			"whole": 1,
			"spirit": 2,
			"leave": 1,
			"delight": 2,
			"love": 3,
			"groan": 1,
			"on": 7,
			"sees": 2,
			"red": 2,
			"naked": 1,
			"but": 6,
			"glance": 3,
			"time": 1,
			"when": 1,
			"deed": 1,
			"eternal": 1,
			"mans": 4,
			"be": 4,
			"wondrous": 1,
			"t": 1,
			"line": 2,
			"out": 4,
			"sweetly": 1,
			"heart": 2,
			"say": 1,
			"verse": 1,
			"and": 21,
			"truth": 1,
			"do": 2,
			"last": 1,
			"dream": 1,
			"fate": 1,
			"year": 3,
			"blaze": 1,
			"grave": 1,
			"i": 9,
			"worthy": 1,
			"thou": 2,
			"woman": 1,
			"down": 1,
			"less": 1,
			"here": 2,
			"one": 2,
			"chamber": 1,
			"such": 2,
			"rocks": 1,
			"stands": 2,
			"looks": 1,
			"anothers": 3,
			"hearts": 1,
			"higher": 1,
			"from": 6,
			"drink": 1,
			"would": 1,
			"living": 2,
			"no": 2,
			"took": 1,
			"called": 1,
			"decay": 1,
			"mighty": 3,
			"with": 8,
			"sad": 1,
			"everlasting": 1,
			"soft": 1,
			"single": 2,
			"till": 1,
			"will": 4,
			"all": 3,
			"grief": 1,
			"wild": 1,
			"then": 1,
			"slain": 1,
			"thought": 3,
			"could": 2,
			"has": 2,
			"doth": 2,
			"clear": 2,
			"master": 1,
			"nearer": 2,
			"our": 4,
			"day": 20,
			"neer": 1,
			"night": 5,
			"loved": 2,
			"shall": 2,
			"before": 1,
			"only": 2,
			"still": 1,
			"yet": 1,
			"way": 4,
			"mark": 1,
			"to": 23,
			"flame": 1,
			"turn": 1,
			"little": 8,
			"answer": 1,
			"rich": 2,
			"heavenly": 1,
			"glorious": 1,
			"art": 1,
			"vast": 2,
			"may": 4,
			"whisper": 1,
			"we": 3,
			"whose": 4,
			"as": 5,
			"said": 2,
			"life": 2,
			"he": 4,
			"at": 4,
			"point": 1,
			"o": 2,
			"chain": 1,
			"left": 2,
			"chorus": 1,
			"common": 2,
			"the": 22,
			"though": 3,
			"world": 1,
			"stood": 1,
			"radiant": 1,
			"dead": 2,
			"fire": 1,
			"there": 3,
			"in": 14,
			"flowers": 1,
			"step": 2,
			"purpose": 3,
			"aloud": 1,
			"seem": 1,
			"grows": 1
		},
		"might": {
			"perchance": 2,
			"hear": 1,
			"light": 1,
			"doubt": 1,
			"his": 2,
			"him": 1,
			"see": 5,
			"play": 1,
			"faithful": 1,
			"tell": 1,
			"are": 1,
			"right": 1,
			"who": 2,
			"of": 9,
			"this": 1,
			"find": 2,
			"place": 1,
			"not": 8,
			"dwell": 1,
			"serve": 1,
			"it": 1,
			"by": 1,
			"alone": 1,
			"unto": 1,
			"like": 1,
			"lead": 2,
			"ever": 1,
			"they": 3,
			"stir": 1,
			"despair": 1,
			"for": 2,
			"rest": 1,
			"my": 1,
			"great": 1,
			"cease": 1,
			"win": 1,
			"that": 3,
			"show": 1,
			"lips": 1,
			"another": 2,
			"make": 1,
			"fall": 2,
			"reign": 1,
			"half": 1,
			"an": 1,
			"hold": 1,
			"start": 1,
			"have": 22,
			"their": 1,
			"a": 2,
			"never": 2,
			"leave": 1,
			"on": 1,
			"break": 1,
			"own": 1,
			"brain": 1,
			"but": 1,
			"canst": 1,
			"burst": 1,
			"be": 25,
			"say": 1,
			"and": 6,
			"thunder": 1,
			"do": 1,
			"i": 5,
			"swell": 1,
			"rome": 1,
			"drink": 3,
			"these": 1,
			"with": 2,
			"then": 1,
			"guess": 1,
			"feel": 2,
			"still": 1,
			"to": 2,
			"turn": 2,
			"live": 3,
			"soar": 1,
			"we": 2,
			"as": 2,
			"he": 2,
			"me": 1,
			"fancy": 1,
			"o": 1,
			"grow": 1,
			"the": 3,
			"in": 3,
			"seem": 2
		},
		"storm": {
			"come": 1,
			"low": 1,
			"more": 1,
			"blew": 1,
			"of": 11,
			"after": 1,
			"by": 1,
			"is": 3,
			"hark": 1,
			"they": 2,
			"where": 1,
			"for": 1,
			"short": 1,
			"was": 2,
			"that": 1,
			"if": 1,
			"stars": 1,
			"or": 2,
			"a": 2,
			"so": 2,
			"lay": 1,
			"deep": 1,
			"but": 1,
			"when": 1,
			"and": 9,
			"dark": 1,
			"i": 1,
			"how": 1,
			"from": 1,
			"while": 1,
			"with": 1,
			"some": 1,
			"before": 1,
			"yet": 1,
			"to": 1,
			"rich": 1,
			"we": 1,
			"as": 1,
			"at": 1,
			"below": 1,
			"the": 6,
			"passed": 1,
			"in": 1
		},
		"between": {
			"us": 4,
			"his": 1,
			"him": 1,
			"this": 1,
			"up": 1,
			"two": 5,
			"is": 2,
			"unto": 1,
			"mary": 1,
			"rough": 1,
			"were": 1,
			"let": 1,
			"or": 1,
			"their": 2,
			"them": 2,
			"sometimes": 1,
			"but": 2,
			"thee": 1,
			"sweetly": 1,
			"and": 1,
			"dark": 1,
			"down": 1,
			"how": 1,
			"hearts": 2,
			"no": 1,
			"with": 1,
			"all": 2,
			"shall": 1,
			"o": 1,
			"the": 19,
			"her": 1,
			"in": 1
		},
		"breathes": {
			"his": 1,
			"she": 1,
			"rest": 1,
			"nothing": 1,
			"even": 1,
			"a": 3,
			"upon": 1,
			"out": 1,
			"wounded": 1,
			"from": 1,
			"around": 2,
			"through": 2,
			"spring": 1,
			"springs": 1,
			"the": 5,
			"there": 2,
			"in": 1
		},
		"chamber": {
			"floor": 1,
			"im": 1,
			"of": 5,
			"up": 1,
			"roar": 1,
			"far": 1,
			"soon": 1,
			"where": 1,
			"for": 1,
			"take": 1,
			"walls": 1,
			"man": 1,
			"or": 1,
			"death": 1,
			"to": 1,
			"we": 2,
			"whose": 1,
			"near": 1,
			"there": 1,
			"in": 1
		},
		"such": {
			"sweet": 2,
			"sound": 1,
			"dying": 1,
			"itself": 1,
			"more": 1,
			"virtues": 1,
			"his": 5,
			"save": 1,
			"play": 1,
			"thing": 1,
			"woe": 1,
			"wail": 1,
			"are": 7,
			"word": 1,
			"men": 3,
			"which": 1,
			"of": 3,
			"high": 1,
			"souls": 1,
			"liberty": 4,
			"nor": 1,
			"joy": 1,
			"scorn": 2,
			"pain": 1,
			"part": 1,
			"fine": 1,
			"not": 1,
			"divine": 1,
			"flight": 1,
			"ease": 1,
			"bind": 1,
			"matter": 1,
			"cold": 1,
			"is": 12,
			"why": 1,
			"forever": 1,
			"force": 1,
			"care": 1,
			"they": 1,
			"pleasure": 2,
			"gentle": 1,
			"holy": 1,
			"for": 1,
			"should": 1,
			"base": 1,
			"my": 1,
			"words": 2,
			"beauty": 1,
			"thy": 2,
			"hopes": 1,
			"hope": 1,
			"win": 1,
			"noble": 1,
			"were": 2,
			"comfort": 1,
			"was": 5,
			"that": 3,
			"if": 1,
			"man": 1,
			"poems": 2,
			"another": 2,
			"often": 1,
			"must": 1,
			"what": 1,
			"an": 4,
			"music": 3,
			"wilt": 1,
			"fill": 1,
			"a": 63,
			"so": 1,
			"pains": 1,
			"faces": 1,
			"courage": 1,
			"green": 1,
			"things": 6,
			"delight": 2,
			"on": 1,
			"break": 1,
			"chains": 1,
			"deep": 2,
			"old": 1,
			"filled": 1,
			"poor": 1,
			"length": 1,
			"wondrous": 1,
			"awful": 1,
			"say": 1,
			"sorrow": 1,
			"verse": 1,
			"and": 3,
			"bliss": 1,
			"grace": 1,
			"lovely": 2,
			"black": 1,
			"i": 1,
			"depths": 1,
			"perfect": 1,
			"looks": 1,
			"saint": 1,
			"would": 1,
			"sublime": 1,
			"duty": 1,
			"dread": 1,
			"mighty": 1,
			"with": 1,
			"around": 1,
			"sweetness": 1,
			"now": 1,
			"wild": 1,
			"then": 1,
			"large": 1,
			"doth": 1,
			"minds": 1,
			"before": 2,
			"golden": 1,
			"yet": 1,
			"way": 1,
			"to": 2,
			"poetry": 1,
			"springs": 1,
			"rich": 1,
			"know": 1,
			"we": 1,
			"store": 1,
			"as": 50,
			"he": 1,
			"the": 6,
			"though": 1,
			"fire": 1,
			"scene": 1,
			"there": 1,
			"in": 1,
			"harmony": 1,
			"thoughts": 1
		},
		"judge": {
			"us": 1,
			"none": 1,
			"of": 5,
			"not": 4,
			"is": 2,
			"looked": 1,
			"for": 1,
			"thy": 2,
			"that": 2,
			"if": 1,
			"rode": 2,
			"a": 1,
			"so": 1,
			"between": 1,
			"shall": 1,
			"we": 1,
			"as": 1,
			"the": 3,
			"in": 1
		},
		"shining": {
			"sweet": 1,
			"low": 1,
			"gates": 1,
			"light": 1,
			"gate": 1,
			"of": 2,
			"long": 1,
			"ranks": 1,
			"sea": 1,
			"where": 1,
			"rolled": 1,
			"thy": 1,
			"ray": 1,
			"ground": 1,
			"that": 1,
			"an": 1,
			"hands": 1,
			"towers": 1,
			"on": 3,
			"but": 1,
			"out": 1,
			"head": 1,
			"and": 2,
			"snow": 1,
			"from": 2,
			"sand": 2,
			"with": 1,
			"hair": 1,
			"all": 1,
			"road": 1,
			"nights": 1,
			"day": 1,
			"frame": 1,
			"loved": 1,
			"yet": 1,
			"mark": 1,
			"to": 1,
			"loud": 1,
			"lie": 1,
			"throng": 1,
			"the": 1,
			"her": 1,
			"scene": 1,
			"there": 1,
			"in": 2,
			"shed": 1
		},
		"rocks": {
			"him": 1,
			"wi": 1,
			"are": 2,
			"which": 1,
			"proud": 1,
			"forever": 1,
			"lead": 1,
			"its": 1,
			"ere": 1,
			"did": 1,
			"fall": 1,
			"pure": 1,
			"their": 1,
			"ye": 1,
			"waters": 1,
			"and": 8,
			"shall": 1,
			"to": 1,
			"vast": 1,
			"may": 1,
			"th": 1,
			"coming": 1,
			"the": 4,
			"in": 1
		},
		"draw": {
			"his": 5,
			"him": 1,
			"back": 2,
			"men": 1,
			"this": 2,
			"they": 1,
			"its": 1,
			"breath": 1,
			"thy": 1,
			"face": 1,
			"an": 1,
			"their": 3,
			"true": 1,
			"things": 1,
			"when": 1,
			"and": 2,
			"i": 1,
			"draw": 1,
			"from": 2,
			"nigh": 1,
			"with": 1,
			"your": 2,
			"to": 2,
			"round": 1,
			"stand": 1,
			"me": 1,
			"the": 6,
			"her": 1,
			"near": 4,
			"in": 1
		},
		"softly": {
			"blew": 1,
			"beam": 1,
			"call": 1,
			"up": 1,
			"forth": 1,
			"over": 1,
			"is": 1,
			"away": 2,
			"than": 1,
			"sing": 1,
			"garden": 1,
			"oer": 1,
			"a": 1,
			"on": 3,
			"and": 2,
			"down": 1,
			"with": 1,
			"to": 1,
			"slowly": 1,
			"lie": 1,
			"me": 1,
			"the": 1,
			"her": 1,
			"tread": 1,
			"in": 1
		},
		"fatherland": {
			"tell": 1,
			"is": 1,
			"where": 2,
			"william": 1,
			"that": 2,
			"what": 7,
			"or": 1,
			"strand": 1,
			"no": 2,
			"now": 3,
			"our": 1,
			"lies": 1,
			"o": 1
		},
		"rush": {
			"back": 2,
			"of": 4,
			"cold": 1,
			"upon": 1,
			"on": 3,
			"but": 1,
			"against": 1,
			"from": 1,
			"with": 1,
			"through": 1,
			"to": 3,
			"into": 1,
			"round": 1,
			"in": 2
		},
		"against": {
			"us": 1,
			"curse": 1,
			"his": 6,
			"him": 1,
			"call": 1,
			"this": 1,
			"mine": 1,
			"rise": 1,
			"than": 1,
			"my": 2,
			"thy": 5,
			"sir": 1,
			"what": 1,
			"their": 1,
			"a": 5,
			"them": 2,
			"but": 1,
			"be": 1,
			"and": 2,
			"fate": 1,
			"would": 1,
			"twenty": 1,
			"our": 3,
			"your": 2,
			"to": 1,
			"heavens": 1,
			"the": 30,
			"there": 1
		},
		"perfect": {
			"blue": 1,
			"justice": 1,
			"ear": 1,
			"white": 1,
			"deeds": 1,
			"of": 1,
			"joy": 1,
			"fruit": 1,
			"mouth": 1,
			"not": 1,
			"image": 2,
			"far": 1,
			"wise": 1,
			"is": 1,
			"gift": 1,
			"rest": 1,
			"my": 1,
			"beauty": 1,
			"soul": 1,
			"that": 2,
			"man": 1,
			"oh": 1,
			"have": 1,
			"love": 1,
			"and": 2,
			"days": 1,
			"i": 1,
			"here": 1,
			"too": 1,
			"calm": 1,
			"meet": 1,
			"ways": 1,
			"day": 2,
			"the": 1,
			"though": 1,
			"dead": 1,
			"in": 3
		},
		"rome": {
			"wrought": 1,
			"his": 1,
			"this": 1,
			"keep": 1,
			"where": 1,
			"my": 1,
			"that": 1,
			"ye": 1,
			"when": 1,
			"and": 5,
			"with": 2,
			"now": 1,
			"your": 1,
			"fair": 1,
			"end": 1,
			"o": 1,
			"the": 1,
			"been": 1
		},
		"secret": {
			"fled": 1,
			"touched": 1,
			"aid": 1,
			"which": 1,
			"of": 14,
			"nor": 1,
			"joy": 1,
			"two": 1,
			"pain": 2,
			"place": 1,
			"mine": 1,
			"try": 1,
			"pleasure": 1,
			"blow": 1,
			"sleep": 1,
			"soul": 3,
			"god": 1,
			"was": 1,
			"that": 1,
			"let": 1,
			"go": 1,
			"tear": 1,
			"awake": 1,
			"true": 1,
			"hath": 1,
			"whence": 1,
			"deep": 1,
			"veil": 1,
			"and": 1,
			"i": 1,
			"help": 1,
			"voice": 1,
			"dread": 1,
			"virtue": 1,
			"now": 2,
			"before": 1,
			"only": 1,
			"yet": 1,
			"course": 1,
			"to": 1,
			"charles": 1,
			"below": 2,
			"the": 2,
			"her": 1,
			"in": 3
		},
		"shadows": {
			"come": 1,
			"cloud": 1,
			"seemed": 1,
			"are": 3,
			"fell": 2,
			"of": 7,
			"grew": 1,
			"not": 1,
			"over": 1,
			"rise": 1,
			"pale": 1,
			"my": 1,
			"tonight": 1,
			"flung": 1,
			"gather": 1,
			"can": 1,
			"flee": 2,
			"oer": 3,
			"fall": 1,
			"go": 1,
			"lay": 1,
			"on": 2,
			"when": 1,
			"veil": 1,
			"and": 2,
			"fly": 1,
			"i": 2,
			"from": 1,
			"dread": 1,
			"with": 1,
			"through": 1,
			"before": 1,
			"to": 2,
			"clouds": 1,
			"lie": 1,
			"as": 1,
			"at": 1,
			"the": 1
		},
		"hate": {
			"more": 1,
			"him": 1,
			"made": 1,
			"who": 1,
			"of": 4,
			"gold": 1,
			"found": 1,
			"you": 1,
			"for": 2,
			"john": 1,
			"again": 1,
			"thy": 1,
			"that": 1,
			"what": 1,
			"hands": 1,
			"have": 1,
			"a": 1,
			"hath": 1,
			"on": 2,
			"but": 2,
			"thee": 1,
			"ye": 1,
			"be": 1,
			"and": 5,
			"hate": 1,
			"how": 1,
			"from": 2,
			"stronger": 1,
			"shall": 2,
			"to": 1,
			"the": 3,
			"in": 1
		},
		"tall": {
			"his": 1,
			"crest": 1,
			"white": 1,
			"she": 1,
			"by": 1,
			"pride": 1,
			"stretched": 1,
			"had": 1,
			"old": 1,
			"but": 1,
			"and": 6,
			"shadows": 1,
			"from": 1,
			"wild": 1,
			"angels": 1,
			"to": 2,
			"the": 4,
			"trees": 1,
			"in": 1
		},
		"arts": {
			"sweet": 1,
			"are": 1,
			"of": 4,
			"for": 1,
			"should": 1,
			"that": 2,
			"study": 1,
			"and": 4,
			"mighty": 1,
			"with": 2,
			"to": 1,
			"the": 1,
			"in": 2
		},
		"state": {
			"low": 1,
			"christ": 1,
			"laws": 1,
			"his": 1,
			"wi": 1,
			"weary": 1,
			"are": 1,
			"of": 4,
			"nor": 1,
			"not": 1,
			"it": 1,
			"is": 3,
			"you": 1,
			"een": 1,
			"read": 1,
			"that": 2,
			"sail": 1,
			"oh": 1,
			"an": 1,
			"upon": 1,
			"on": 1,
			"but": 1,
			"buried": 1,
			"glory": 1,
			"and": 5,
			"i": 1,
			"might": 1,
			"how": 1,
			"while": 3,
			"no": 1,
			"with": 1,
			"all": 1,
			"then": 1,
			"shall": 1,
			"to": 2,
			"happy": 1,
			"he": 1,
			"o": 1,
			"the": 6,
			"in": 1
		},
		"work": {
			"us": 2,
			"his": 1,
			"aye": 1,
			"which": 2,
			"of": 14,
			"nor": 2,
			"it": 3,
			"is": 13,
			"nay": 1,
			"for": 4,
			"enough": 1,
			"any": 1,
			"can": 1,
			"indeed": 1,
			"was": 5,
			"that": 1,
			"must": 1,
			"what": 1,
			"or": 2,
			"their": 1,
			"a": 1,
			"when": 1,
			"be": 2,
			"out": 2,
			"and": 12,
			"i": 1,
			"too": 1,
			"work": 2,
			"while": 2,
			"with": 2,
			"some": 1,
			"till": 1,
			"all": 2,
			"begun": 1,
			"before": 1,
			"your": 1,
			"yet": 1,
			"to": 3,
			"we": 1,
			"as": 3,
			"done": 2,
			"he": 1,
			"the": 5,
			"in": 5,
			"grows": 1
		},
		"pearl": {
			"thine": 1,
			"of": 3,
			"amid": 1,
			"is": 2,
			"away": 1,
			"ever": 1,
			"my": 2,
			"their": 1,
			"when": 1,
			"and": 3,
			"i": 1,
			"from": 2,
			"with": 1,
			"may": 1,
			"o": 1,
			"the": 3,
			"though": 1
		},
		"blossom": {
			"of": 3,
			"among": 1,
			"about": 1,
			"its": 1,
			"rising": 1,
			"that": 1,
			"falls": 1,
			"on": 3,
			"when": 1,
			"and": 1,
			"now": 1,
			"passing": 1,
			"to": 1,
			"as": 1,
			"o": 1,
			"the": 2,
			"there": 1,
			"in": 2
		},
		"forest": {
			"free": 1,
			"shades": 1,
			"of": 1,
			"this": 1,
			"up": 1,
			"among": 1,
			"side": 1,
			"proud": 1,
			"alone": 1,
			"long": 1,
			"like": 1,
			"away": 1,
			"they": 2,
			"path": 1,
			"leaves": 2,
			"where": 1,
			"gray": 1,
			"for": 1,
			"thy": 1,
			"leaf": 1,
			"brothers": 1,
			"or": 2,
			"their": 1,
			"a": 1,
			"so": 1,
			"ceased": 1,
			"leave": 1,
			"red": 1,
			"deep": 1,
			"when": 2,
			"and": 4,
			"i": 1,
			"with": 1,
			"through": 1,
			"before": 1,
			"hill": 2,
			"round": 1,
			"borne": 1,
			"deer": 1,
			"the": 4,
			"trees": 1,
			"dim": 1
		},
		"stands": {
			"thine": 1,
			"ready": 2,
			"his": 1,
			"up": 2,
			"nor": 1,
			"by": 2,
			"father": 1,
			"alone": 1,
			"pale": 1,
			"where": 1,
			"for": 2,
			"was": 1,
			"perfume": 1,
			"pure": 1,
			"waiting": 1,
			"a": 3,
			"so": 1,
			"upon": 1,
			"on": 5,
			"above": 1,
			"when": 1,
			"weeping": 1,
			"and": 2,
			"raised": 1,
			"with": 1,
			"aside": 1,
			"open": 1,
			"to": 1,
			"as": 1,
			"the": 7,
			"near": 1,
			"there": 1,
			"in": 7
		},
		"rather": {
			"more": 1,
			"hear": 1,
			"die": 1,
			"up": 1,
			"find": 1,
			"lo": 1,
			"than": 9,
			"crown": 1,
			"tomorrow": 1,
			"held": 1,
			"let": 1,
			"bear": 1,
			"what": 1,
			"heat": 1,
			"on": 1,
			"be": 2,
			"say": 2,
			"i": 1,
			"with": 2,
			"dost": 1,
			"your": 1,
			"to": 2,
			"share": 1,
			"in": 1
		},
		"looks": {
			"come": 1,
			"within": 1,
			"endure": 1,
			"are": 1,
			"back": 1,
			"toward": 1,
			"of": 1,
			"once": 1,
			"up": 2,
			"among": 1,
			"fresh": 1,
			"not": 1,
			"divine": 1,
			"tongue": 1,
			"like": 1,
			"for": 2,
			"thy": 1,
			"yellow": 1,
			"oer": 1,
			"that": 2,
			"tears": 1,
			"so": 1,
			"upon": 2,
			"on": 6,
			"out": 2,
			"and": 9,
			"lovely": 1,
			"i": 1,
			"down": 1,
			"calm": 1,
			"with": 1,
			"around": 3,
			"all": 2,
			"wild": 1,
			"through": 2,
			"dost": 1,
			"to": 1,
			"round": 1,
			"as": 1,
			"he": 1,
			"at": 3,
			"o": 1,
			"the": 2,
			"in": 3
		},
		"fields": {
			"thine": 1,
			"went": 1,
			"are": 4,
			"sweetest": 1,
			"of": 21,
			"beyond": 1,
			"over": 1,
			"without": 2,
			"where": 2,
			"were": 1,
			"that": 1,
			"must": 1,
			"sae": 1,
			"a": 2,
			"but": 1,
			"and": 9,
			"i": 1,
			"each": 1,
			"while": 1,
			"no": 1,
			"with": 4,
			"around": 1,
			"some": 1,
			"all": 2,
			"wild": 1,
			"passing": 1,
			"needs": 1,
			"we": 1,
			"as": 1,
			"at": 1,
			"the": 1,
			"in": 1
		},
		"saint": {
			"his": 1,
			"charity": 1,
			"who": 1,
			"it": 1,
			"by": 1,
			"long": 1,
			"run": 1,
			"bore": 1,
			"sing": 1,
			"can": 1,
			"oer": 1,
			"was": 1,
			"that": 2,
			"cried": 1,
			"upon": 1,
			"deep": 1,
			"but": 1,
			"when": 1,
			"plain": 1,
			"paradise": 1,
			"and": 2,
			"saint": 1,
			"from": 1,
			"has": 1,
			"asleep": 1,
			"george": 2,
			"well": 2,
			"doth": 1,
			"turned": 1,
			"our": 1,
			"day": 1,
			"to": 3,
			"eve": 1,
			"we": 1,
			"he": 2,
			"me": 1,
			"below": 1,
			"the": 8,
			"in": 4
		},
		"broad": {
			"since": 1,
			"light": 1,
			"earth": 1,
			"of": 1,
			"sword": 1,
			"it": 1,
			"breaks": 1,
			"land": 1,
			"is": 1,
			"ocean": 2,
			"earths": 1,
			"tender": 1,
			"was": 1,
			"that": 2,
			"field": 1,
			"fill": 1,
			"awake": 1,
			"on": 1,
			"and": 11,
			"grave": 1,
			"down": 1,
			"beneath": 1,
			"shield": 1,
			"breast": 1,
			"flame": 1,
			"lies": 1,
			"the": 2,
			"in": 1
		},
		"each": {
			"sweet": 1,
			"flower": 1,
			"sound": 2,
			"dying": 1,
			"look": 1,
			"suffering": 1,
			"loves": 1,
			"river": 1,
			"light": 1,
			"his": 3,
			"stream": 1,
			"fond": 2,
			"valley": 2,
			"cheek": 1,
			"thing": 2,
			"glen": 1,
			"weary": 1,
			"are": 1,
			"humble": 1,
			"made": 1,
			"word": 1,
			"who": 2,
			"beam": 1,
			"of": 7,
			"this": 1,
			"star": 2,
			"yield": 1,
			"souls": 1,
			"sacred": 1,
			"morning": 1,
			"heavy": 1,
			"height": 1,
			"part": 1,
			"side": 3,
			"eager": 1,
			"send": 1,
			"by": 1,
			"is": 1,
			"people": 1,
			"good": 2,
			"they": 1,
			"nature": 1,
			"glowing": 1,
			"mild": 1,
			"new": 1,
			"rosy": 1,
			"heard": 2,
			"without": 1,
			"smile": 1,
			"where": 1,
			"others": 4,
			"hand": 2,
			"bosom": 1,
			"cup": 1,
			"lost": 1,
			"clime": 1,
			"lonely": 1,
			"tomorrow": 1,
			"hour": 1,
			"earl": 2,
			"thy": 1,
			"pray": 1,
			"warrior": 1,
			"whom": 1,
			"shadow": 1,
			"shore": 1,
			"soul": 1,
			"passion": 1,
			"various": 2,
			"wandering": 2,
			"face": 2,
			"moment": 4,
			"power": 1,
			"bud": 1,
			"sudden": 1,
			"cause": 1,
			"was": 4,
			"that": 4,
			"man": 8,
			"tear": 1,
			"must": 2,
			"an": 1,
			"or": 2,
			"eye": 3,
			"pause": 1,
			"bright": 2,
			"soldiers": 2,
			"their": 1,
			"a": 9,
			"so": 1,
			"green": 1,
			"gallant": 1,
			"things": 1,
			"spirit": 1,
			"hath": 1,
			"on": 5,
			"saw": 1,
			"charm": 1,
			"when": 1,
			"deed": 2,
			"mans": 1,
			"bed": 1,
			"brave": 2,
			"heart": 2,
			"and": 11,
			"grace": 1,
			"year": 1,
			"days": 1,
			"grave": 2,
			"poem": 2,
			"i": 1,
			"here": 1,
			"one": 8,
			"such": 1,
			"secret": 1,
			"state": 1,
			"pearl": 2,
			"looks": 1,
			"each": 2,
			"brow": 1,
			"other": 15,
			"from": 1,
			"blade": 1,
			"early": 1,
			"dread": 1,
			"breeze": 1,
			"ears": 1,
			"with": 5,
			"sad": 1,
			"drew": 1,
			"foreign": 1,
			"learned": 1,
			"till": 1,
			"hair": 1,
			"will": 1,
			"all": 1,
			"grief": 1,
			"could": 1,
			"through": 2,
			"toil": 1,
			"thread": 1,
			"being": 1,
			"day": 9,
			"future": 1,
			"fear": 1,
			"night": 1,
			"loved": 1,
			"shall": 2,
			"only": 1,
			"golden": 2,
			"wind": 1,
			"mark": 1,
			"to": 5,
			"hill": 1,
			"human": 1,
			"little": 1,
			"heavenly": 1,
			"ah": 1,
			"bold": 1,
			"we": 1,
			"as": 1,
			"life": 1,
			"french": 1,
			"wound": 1,
			"the": 7,
			"ghost": 1,
			"house": 2,
			"radiant": 1,
			"grand": 1,
			"scene": 2,
			"there": 2,
			"in": 3,
			"step": 2,
			"oak": 1
		},
		"anothers": {
			"virtues": 1,
			"his": 1,
			"woe": 2,
			"deeds": 1,
			"joy": 1,
			"load": 1,
			"weakness": 1,
			"take": 1,
			"burning": 1,
			"ground": 1,
			"name": 1,
			"need": 1,
			"or": 1,
			"hands": 1,
			"so": 1,
			"anguish": 1,
			"to": 1,
			"arms": 2,
			"gain": 1
		},
		"whereer": {
			"his": 1,
			"ive": 1,
			"she": 1,
			"they": 3,
			"its": 1,
			"my": 2,
			"thy": 1,
			"ye": 1,
			"i": 4,
			"thou": 2,
			"these": 1,
			"shall": 1,
			"we": 3,
			"he": 2,
			"the": 5
		},
		"henry": {
			"his": 1,
			"blood": 1,
			"white": 1,
			"of": 6,
			"longfellow": 13,
			"act": 2,
			"twas": 1,
			"came": 1,
			"francis": 2,
			"was": 1,
			"a": 1,
			"delight": 1,
			"and": 1,
			"from": 2,
			"grief": 1,
			"then": 1,
			"king": 1,
			"our": 3,
			"patience": 1,
			"to": 3,
			"written": 1,
			"we": 1,
			"the": 10,
			"in": 1
		},
		"brow": {
			"more": 1,
			"worn": 1,
			"his": 1,
			"hast": 1,
			"tell": 1,
			"who": 2,
			"which": 1,
			"of": 4,
			"high": 1,
			"she": 3,
			"serene": 1,
			"it": 1,
			"is": 4,
			"away": 1,
			"they": 1,
			"nature": 1,
			"pale": 1,
			"nay": 2,
			"where": 2,
			"yea": 1,
			"for": 1,
			"ere": 1,
			"shame": 1,
			"oer": 1,
			"that": 2,
			"victory": 1,
			"what": 1,
			"oh": 1,
			"bright": 2,
			"their": 1,
			"a": 4,
			"never": 1,
			"but": 1,
			"and": 10,
			"i": 5,
			"thou": 1,
			"brow": 1,
			"how": 1,
			"while": 1,
			"with": 3,
			"will": 2,
			"all": 1,
			"then": 2,
			"shall": 1,
			"to": 4,
			"into": 1,
			"glorious": 1,
			"as": 1,
			"he": 2,
			"the": 9,
			"there": 2,
			"in": 2,
			"shed": 1
		},
		"how": {
			"sweet": 14,
			"come": 1,
			"sound": 1,
			"else": 1,
			"blessings": 1,
			"parting": 1,
			"fierce": 1,
			"light": 3,
			"earth": 1,
			"his": 2,
			"dreary": 1,
			"weary": 1,
			"are": 2,
			"dies": 1,
			"of": 1,
			"this": 1,
			"once": 2,
			"she": 1,
			"nor": 1,
			"does": 7,
			"goes": 1,
			"dear": 3,
			"fresh": 1,
			"thick": 1,
			"pass": 1,
			"fine": 2,
			"divine": 1,
			"proud": 2,
			"it": 4,
			"far": 5,
			"by": 1,
			"long": 8,
			"breaks": 1,
			"cold": 1,
			"is": 11,
			"soon": 2,
			"few": 3,
			"like": 1,
			"hard": 2,
			"good": 3,
			"they": 16,
			"easy": 1,
			"wide": 1,
			"you": 2,
			"glowing": 1,
			"heard": 1,
			"its": 2,
			"than": 1,
			"slow": 2,
			"swift": 1,
			"kindly": 1,
			"small": 1,
			"just": 1,
			"lost": 1,
			"should": 7,
			"bowed": 1,
			"autumn": 1,
			"my": 6,
			"came": 2,
			"great": 2,
			"sing": 1,
			"vain": 4,
			"sleep": 2,
			"comes": 1,
			"sadly": 2,
			"various": 1,
			"friend": 1,
			"false": 1,
			"faith": 1,
			"god": 2,
			"can": 9,
			"did": 3,
			"that": 1,
			"full": 3,
			"often": 4,
			"pure": 1,
			"what": 2,
			"beautiful": 3,
			"or": 2,
			"hands": 1,
			"bright": 3,
			"their": 3,
			"a": 2,
			"so": 1,
			"true": 1,
			"lord": 1,
			"many": 16,
			"love": 2,
			"on": 2,
			"red": 1,
			"fast": 4,
			"deep": 2,
			"but": 2,
			"death": 1,
			"poor": 3,
			"ye": 1,
			"canst": 1,
			"when": 1,
			"t": 1,
			"awful": 1,
			"sweetly": 5,
			"say": 1,
			"and": 3,
			"do": 2,
			"dark": 2,
			"lone": 1,
			"lovely": 3,
			"fate": 2,
			"i": 6,
			"thou": 2,
			"told": 1,
			"wretched": 2,
			"here": 1,
			"mournful": 1,
			"mirth": 1,
			"might": 1,
			"stands": 1,
			"each": 4,
			"how": 5,
			"from": 1,
			"strange": 2,
			"would": 1,
			"sublime": 1,
			"reason": 1,
			"while": 1,
			"calm": 3,
			"mighty": 1,
			"with": 1,
			"around": 1,
			"sad": 2,
			"now": 1,
			"some": 1,
			"will": 2,
			"all": 2,
			"gay": 1,
			"could": 6,
			"pleasant": 3,
			"has": 2,
			"well": 3,
			"clear": 1,
			"dost": 2,
			"much": 10,
			"our": 3,
			"sleeps": 1,
			"passing": 2,
			"night": 1,
			"loved": 2,
			"shall": 13,
			"still": 3,
			"to": 18,
			"keen": 1,
			"slowly": 1,
			"little": 5,
			"rich": 2,
			"use": 1,
			"glorious": 1,
			"know": 1,
			"may": 1,
			"yon": 1,
			"we": 14,
			"fair": 2,
			"heavens": 1,
			"happy": 2,
			"he": 5,
			"the": 55,
			"tis": 1,
			"her": 1,
			"weak": 1,
			"near": 2,
			"oft": 6,
			"in": 7,
			"seem": 1,
			"grows": 2
		},
		"hearts": {
			"within": 2,
			"went": 2,
			"his": 1,
			"endure": 1,
			"blood": 3,
			"are": 13,
			"of": 14,
			"gold": 1,
			"cling": 1,
			"dear": 1,
			"not": 1,
			"dwell": 1,
			"today": 2,
			"it": 1,
			"ease": 1,
			"long": 1,
			"like": 3,
			"ever": 1,
			"they": 1,
			"you": 2,
			"without": 1,
			"run": 1,
			"rolled": 1,
			"just": 1,
			"for": 1,
			"theres": 1,
			"desire": 3,
			"forgot": 1,
			"watch": 1,
			"hope": 1,
			"faith": 1,
			"can": 1,
			"were": 7,
			"that": 20,
			"make": 1,
			"go": 1,
			"what": 3,
			"hold": 1,
			"even": 1,
			"have": 3,
			"their": 2,
			"a": 2,
			"so": 2,
			"whence": 1,
			"on": 1,
			"deep": 1,
			"but": 1,
			"be": 1,
			"kind": 1,
			"close": 1,
			"and": 21,
			"grace": 1,
			"i": 3,
			"here": 1,
			"too": 2,
			"might": 1,
			"between": 1,
			"secret": 1,
			"would": 1,
			"beat": 1,
			"bid": 1,
			"with": 5,
			"around": 1,
			"sad": 1,
			"will": 1,
			"all": 1,
			"well": 1,
			"our": 3,
			"shall": 2,
			"only": 1,
			"to": 6,
			"may": 1,
			"we": 2,
			"as": 3,
			"o": 3,
			"grow": 2,
			"the": 5,
			"though": 2,
			"first": 1,
			"there": 1,
			"in": 12,
			"forgive": 1
		},
		"higher": {
			"more": 1,
			"blessings": 1,
			"next": 1,
			"nor": 1,
			"praise": 1,
			"wisdom": 1,
			"by": 1,
			"is": 1,
			"rise": 3,
			"good": 1,
			"than": 3,
			"where": 1,
			"for": 1,
			"things": 1,
			"but": 1,
			"and": 2,
			"bliss": 1,
			"between": 1,
			"arts": 1,
			"higher": 2,
			"will": 1,
			"to": 2,
			"powers": 1,
			"as": 1,
			"life": 3,
			"the": 2
		},
		"help": {
			"us": 4,
			"toward": 1,
			"of": 2,
			"thyself": 1,
			"is": 1,
			"rise": 1,
			"force": 1,
			"those": 1,
			"should": 2,
			"thy": 3,
			"were": 1,
			"that": 2,
			"if": 1,
			"lord": 1,
			"but": 1,
			"thee": 1,
			"and": 2,
			"each": 1,
			"from": 1,
			"no": 1,
			"will": 1,
			"angels": 1,
			"our": 1,
			"to": 3,
			"as": 1,
			"me": 7,
			"the": 4,
			"in": 6
		},
		"other": {
			"books": 1,
			"come": 1,
			"loves": 1,
			"doubt": 1,
			"mountains": 1,
			"blood": 1,
			"passions": 1,
			"are": 1,
			"aid": 1,
			"alas": 1,
			"word": 1,
			"men": 6,
			"of": 4,
			"this": 1,
			"cast": 1,
			"souls": 2,
			"forth": 1,
			"dear": 1,
			"place": 1,
			"lands": 1,
			"not": 1,
			"side": 7,
			"every": 1,
			"host": 1,
			"far": 1,
			"eyes": 2,
			"land": 1,
			"like": 1,
			"why": 1,
			"care": 1,
			"guide": 1,
			"than": 4,
			"for": 4,
			"sang": 1,
			"smiles": 1,
			"shore": 1,
			"times": 1,
			"clay": 1,
			"god": 1,
			"foot": 1,
			"oer": 1,
			"that": 3,
			"if": 1,
			"lips": 1,
			"cares": 1,
			"arm": 1,
			"man": 1,
			"make": 1,
			"half": 1,
			"had": 1,
			"stars": 1,
			"hands": 2,
			"fill": 1,
			"a": 2,
			"upon": 1,
			"things": 4,
			"love": 1,
			"groan": 1,
			"quite": 2,
			"but": 4,
			"turns": 1,
			"be": 1,
			"and": 3,
			"do": 1,
			"dark": 1,
			"days": 2,
			"woman": 2,
			"how": 1,
			"reason": 2,
			"no": 1,
			"sphere": 2,
			"with": 1,
			"will": 1,
			"then": 1,
			"thought": 1,
			"songs": 1,
			"ways": 1,
			"day": 2,
			"way": 4,
			"to": 6,
			"clouds": 1,
			"youth": 1,
			"springs": 1,
			"may": 1,
			"we": 2,
			"fair": 1,
			"life": 2,
			"he": 2,
			"strength": 1,
			"son": 1,
			"at": 1,
			"o": 1,
			"grow": 1,
			"streams": 1,
			"the": 6,
			"world": 2,
			"leads": 1,
			"fail": 1,
			"in": 7,
			"air": 1
		},
		"from": {
			"flower": 1,
			"foolish": 1,
			"floor": 1,
			"itself": 2,
			"us": 6,
			"more": 2,
			"sent": 1,
			"thine": 1,
			"ours": 2,
			"within": 3,
			"unseen": 1,
			"blessings": 1,
			"dust": 1,
			"curse": 1,
			"light": 2,
			"earth": 11,
			"doubt": 1,
			"cloud": 1,
			"mountains": 2,
			"his": 85,
			"stream": 1,
			"st": 1,
			"hell": 6,
			"him": 7,
			"book": 1,
			"charity": 1,
			"law": 1,
			"women": 1,
			"horn": 1,
			"voices": 1,
			"ii": 1,
			"ages": 1,
			"white": 1,
			"woe": 1,
			"tell": 1,
			"war": 1,
			"weary": 1,
			"fears": 2,
			"amidst": 1,
			"under": 1,
			"men": 3,
			"which": 7,
			"beam": 1,
			"of": 14,
			"this": 14,
			"star": 2,
			"high": 3,
			"graves": 1,
			"wine": 1,
			"after": 3,
			"hills": 1,
			"up": 1,
			"off": 4,
			"rock": 2,
			"among": 1,
			"sons": 1,
			"gold": 2,
			"morning": 1,
			"act": 8,
			"sight": 5,
			"age": 3,
			"darkness": 2,
			"forth": 1,
			"wheel": 1,
			"scorn": 1,
			"height": 2,
			"brother": 1,
			"dear": 1,
			"pain": 1,
			"thick": 1,
			"place": 1,
			"part": 1,
			"mine": 3,
			"behold": 1,
			"divine": 1,
			"side": 3,
			"every": 16,
			"evil": 1,
			"sins": 2,
			"far": 6,
			"health": 1,
			"by": 1,
			"fathers": 1,
			"woods": 2,
			"sorrows": 2,
			"bring": 1,
			"cold": 1,
			"land": 2,
			"wars": 1,
			"is": 2,
			"rise": 1,
			"eternity": 1,
			"away": 1,
			"native": 1,
			"good": 1,
			"either": 3,
			"care": 2,
			"they": 2,
			"you": 3,
			"new": 1,
			"afar": 4,
			"without": 2,
			"slave": 1,
			"its": 24,
			"those": 4,
			"sea": 2,
			"crown": 1,
			"friends": 1,
			"others": 1,
			"small": 1,
			"lovers": 1,
			"for": 3,
			"heaven": 26,
			"base": 1,
			"autumn": 1,
			"didst": 1,
			"my": 30,
			"blow": 1,
			"fingers": 1,
			"hour": 4,
			"heroes": 1,
			"beauty": 1,
			"deaths": 1,
			"burning": 1,
			"thy": 25,
			"morn": 4,
			"vain": 2,
			"sleep": 3,
			"battle": 1,
			"waves": 1,
			"birth": 1,
			"whom": 3,
			"better": 1,
			"ray": 1,
			"mary": 1,
			"shore": 1,
			"soul": 1,
			"any": 1,
			"wandering": 1,
			"town": 3,
			"friend": 1,
			"fools": 1,
			"william": 2,
			"sin": 4,
			"battles": 1,
			"god": 3,
			"shame": 1,
			"that": 23,
			"rolling": 1,
			"if": 1,
			"lips": 3,
			"man": 6,
			"bear": 1,
			"poems": 1,
			"another": 1,
			"full": 1,
			"fall": 2,
			"brothers": 1,
			"general": 1,
			"pure": 2,
			"what": 2,
			"oh": 1,
			"an": 11,
			"stars": 1,
			"or": 2,
			"de": 2,
			"finds": 1,
			"eye": 1,
			"soil": 1,
			"hands": 1,
			"have": 2,
			"tears": 3,
			"isle": 1,
			"towers": 1,
			"danger": 1,
			"bitter": 1,
			"their": 41,
			"a": 48,
			"so": 2,
			"heat": 1,
			"them": 4,
			"things": 1,
			"many": 6,
			"dawn": 1,
			"whence": 9,
			"love": 2,
			"tomb": 1,
			"on": 7,
			"break": 1,
			"wing": 1,
			"evermore": 1,
			"mountain": 2,
			"above": 9,
			"chains": 1,
			"deep": 4,
			"old": 1,
			"but": 1,
			"iron": 2,
			"death": 7,
			"foes": 2,
			"time": 3,
			"thee": 17,
			"when": 4,
			"lifes": 2,
			"honest": 1,
			"plain": 1,
			"highest": 1,
			"out": 24,
			"earthly": 1,
			"rage": 1,
			"distant": 1,
			"heart": 3,
			"sorrow": 3,
			"anguish": 1,
			"head": 3,
			"paradise": 5,
			"and": 33,
			"truth": 1,
			"dark": 1,
			"christian": 2,
			"black": 1,
			"days": 1,
			"grave": 1,
			"i": 3,
			"snow": 1,
			"depths": 2,
			"down": 1,
			"home": 2,
			"tower": 1,
			"here": 2,
			"island": 1,
			"mournful": 1,
			"steel": 1,
			"mirth": 1,
			"mortal": 2,
			"one": 3,
			"storm": 1,
			"such": 5,
			"secret": 1,
			"state": 1,
			"forest": 1,
			"fields": 2,
			"saint": 1,
			"each": 6,
			"anothers": 1,
			"hearts": 3,
			"other": 2,
			"from": 7,
			"would": 1,
			"ill": 1,
			"want": 2,
			"reason": 2,
			"beneath": 1,
			"these": 4,
			"foul": 3,
			"strand": 2,
			"present": 1,
			"bound": 1,
			"roll": 1,
			"dread": 1,
			"alfred": 1,
			"with": 2,
			"everlasting": 1,
			"now": 2,
			"foreign": 1,
			"some": 3,
			"will": 1,
			"himself": 2,
			"twenty": 1,
			"all": 32,
			"grief": 3,
			"gay": 1,
			"gods": 4,
			"wild": 1,
			"then": 1,
			"room": 1,
			"thought": 1,
			"pleasant": 1,
			"songs": 1,
			"toil": 2,
			"angels": 1,
			"well": 1,
			"king": 3,
			"couch": 2,
			"mount": 1,
			"nights": 1,
			"spring": 2,
			"being": 1,
			"behind": 1,
			"our": 19,
			"throne": 1,
			"wrong": 2,
			"day": 4,
			"hall": 2,
			"passing": 1,
			"works": 1,
			"fear": 4,
			"night": 4,
			"shall": 1,
			"before": 2,
			"wind": 3,
			"your": 7,
			"natures": 1,
			"to": 29,
			"hill": 2,
			"youth": 2,
			"human": 4,
			"springs": 1,
			"round": 1,
			"little": 2,
			"heavenly": 1,
			"growing": 1,
			"hence": 1,
			"view": 2,
			"art": 1,
			"strife": 2,
			"yon": 3,
			"skies": 1,
			"whose": 5,
			"as": 3,
			"heavens": 2,
			"stand": 1,
			"life": 2,
			"noon": 1,
			"end": 4,
			"me": 18,
			"strength": 1,
			"son": 1,
			"at": 1,
			"below": 1,
			"slumber": 1,
			"point": 1,
			"iii": 2,
			"o": 3,
			"east": 5,
			"yonder": 3,
			"translation": 1,
			"common": 2,
			"the": 536,
			"labor": 1,
			"her": 50,
			"safe": 1,
			"trees": 1,
			"scene": 1,
			"there": 2,
			"grim": 1,
			"lowly": 1,
			"in": 8,
			"harmony": 1,
			"north": 2,
			"sky": 1
		},
		"join": {
			"my": 1,
			"again": 1,
			"thy": 2,
			"that": 1,
			"their": 2,
			"a": 1,
			"thee": 1,
			"and": 1,
			"each": 1,
			"with": 1,
			"blest": 1,
			"our": 2,
			"your": 1,
			"to": 1,
			"we": 1,
			"the": 7,
			"in": 4
		},
		"sleeping": {
			"else": 1,
			"dust": 1,
			"under": 1,
			"among": 1,
			"beyond": 1,
			"not": 1,
			"side": 1,
			"robert": 1,
			"theres": 1,
			"what": 1,
			"or": 1,
			"lord": 1,
			"on": 1,
			"but": 1,
			"when": 1,
			"be": 1,
			"wings": 1,
			"say": 1,
			"and": 1,
			"while": 1,
			"to": 2,
			"world": 1,
			"there": 1
		},
		"stranger": {
			"seemed": 2,
			"made": 1,
			"steps": 1,
			"she": 1,
			"lands": 1,
			"land": 1,
			"is": 1,
			"than": 1,
			"blown": 1,
			"god": 1,
			"that": 1,
			"a": 2,
			"and": 1,
			"from": 1,
			"would": 1,
			"guest": 1,
			"give": 1,
			"to": 1,
			"art": 1,
			"may": 1,
			"as": 1,
			"grow": 1,
			"the": 2,
			"in": 1
		},
		"gifts": {
			"him": 1,
			"are": 1,
			"who": 1,
			"of": 7,
			"for": 1,
			"should": 1,
			"most": 1,
			"that": 2,
			"and": 3,
			"i": 1,
			"from": 1,
			"would": 1,
			"shall": 1,
			"to": 3,
			"we": 1,
			"whose": 1,
			"he": 2,
			"me": 1,
			"o": 1,
			"the": 1,
			"though": 1,
			"in": 2
		},
		"marble": {
			"wrought": 1,
			"his": 1,
			"are": 2,
			"cold": 1,
			"away": 1,
			"where": 2,
			"beauty": 1,
			"face": 1,
			"stone": 2,
			"bright": 1,
			"tomb": 1,
			"on": 1,
			"felt": 1,
			"and": 1,
			"from": 1,
			"with": 1,
			"gods": 1,
			"to": 2,
			"cities": 2,
			"he": 1,
			"the": 3,
			"seems": 1
		},
		"sought": {
			"him": 4,
			"beyond": 1,
			"by": 1,
			"is": 1,
			"they": 1,
			"its": 1,
			"than": 1,
			"where": 1,
			"for": 4,
			"that": 1,
			"a": 4,
			"them": 1,
			"but": 1,
			"thee": 1,
			"and": 2,
			"i": 1,
			"one": 1,
			"our": 1,
			"to": 5,
			"yon": 1,
			"me": 2,
			"the": 6,
			"scarce": 1,
			"her": 1,
			"in": 2
		},
		"drink": {
			"since": 1,
			"weary": 1,
			"of": 3,
			"this": 1,
			"up": 1,
			"mine": 1,
			"alone": 1,
			"is": 1,
			"they": 1,
			"my": 3,
			"again": 1,
			"was": 1,
			"that": 1,
			"or": 1,
			"a": 1,
			"deep": 1,
			"naked": 1,
			"ye": 1,
			"t": 1,
			"and": 6,
			"i": 1,
			"no": 1,
			"all": 1,
			"minds": 1,
			"to": 5,
			"as": 1,
			"he": 2,
			"the": 4,
			"there": 1
		},
		"strange": {
			"sweet": 1,
			"low": 1,
			"voices": 1,
			"thing": 1,
			"white": 1,
			"none": 1,
			"are": 1,
			"of": 1,
			"command": 1,
			"it": 4,
			"new": 1,
			"peace": 2,
			"therefore": 1,
			"name": 1,
			"door": 1,
			"face": 1,
			"faith": 1,
			"that": 6,
			"another": 1,
			"or": 1,
			"glory": 1,
			"and": 7,
			"order": 1,
			"grave": 1,
			"i": 1,
			"tale": 1,
			"how": 1,
			"from": 1,
			"stranger": 1,
			"with": 2,
			"all": 1,
			"wild": 1,
			"day": 1,
			"to": 4,
			"ah": 2,
			"we": 1,
			"as": 2,
			"he": 1,
			"the": 5,
			"in": 2,
			"dim": 1,
			"thoughts": 2
		},
		"across": {
			"the": 33,
			"and": 1,
			"saint": 1,
			"his": 2,
			"a": 2,
			"those": 1,
			"it": 1,
			"scorn": 1,
			"her": 1
		},
		"would": {
			"come": 5,
			"look": 3,
			"us": 1,
			"wish": 3,
			"die": 2,
			"cloud": 1,
			"his": 2,
			"endure": 2,
			"him": 1,
			"see": 2,
			"none": 1,
			"tell": 2,
			"men": 1,
			"hide": 2,
			"call": 1,
			"this": 1,
			"yield": 1,
			"keep": 1,
			"pour": 1,
			"up": 1,
			"off": 1,
			"triumph": 2,
			"she": 1,
			"find": 2,
			"cling": 1,
			"pass": 1,
			"not": 57,
			"serve": 1,
			"put": 1,
			"today": 1,
			"it": 8,
			"smooth": 1,
			"shake": 1,
			"ease": 1,
			"try": 1,
			"bring": 2,
			"wars": 1,
			"rise": 2,
			"return": 1,
			"form": 1,
			"ever": 2,
			"they": 3,
			"you": 3,
			"strike": 1,
			"lightly": 2,
			"those": 1,
			"despair": 1,
			"run": 1,
			"read": 1,
			"speak": 1,
			"rest": 1,
			"my": 4,
			"touch": 1,
			"thy": 2,
			"sing": 1,
			"teach": 1,
			"wear": 1,
			"seek": 2,
			"any": 1,
			"win": 2,
			"sin": 1,
			"god": 1,
			"were": 1,
			"flee": 2,
			"that": 10,
			"let": 1,
			"bear": 2,
			"fain": 6,
			"another": 1,
			"make": 5,
			"go": 1,
			"hang": 1,
			"what": 1,
			"repose": 1,
			"hold": 1,
			"or": 1,
			"think": 1,
			"start": 1,
			"have": 16,
			"their": 1,
			"a": 1,
			"them": 2,
			"never": 2,
			"leave": 2,
			"love": 1,
			"on": 1,
			"break": 3,
			"own": 1,
			"but": 2,
			"thee": 2,
			"choose": 1,
			"mans": 1,
			"be": 40,
			"t": 1,
			"kind": 1,
			"say": 4,
			"sorrow": 1,
			"and": 6,
			"bloom": 2,
			"do": 3,
			"move": 2,
			"fly": 1,
			"i": 25,
			"greet": 1,
			"here": 1,
			"too": 1,
			"hate": 1,
			"work": 2,
			"help": 1,
			"from": 1,
			"join": 1,
			"no": 3,
			"now": 3,
			"set": 2,
			"give": 3,
			"some": 1,
			"till": 1,
			"all": 4,
			"lose": 1,
			"well": 1,
			"guess": 1,
			"spring": 1,
			"frame": 1,
			"neer": 1,
			"fear": 2,
			"only": 2,
			"still": 1,
			"your": 1,
			"mark": 1,
			"to": 6,
			"into": 1,
			"turn": 2,
			"lie": 2,
			"little": 1,
			"live": 3,
			"use": 1,
			"know": 2,
			"soar": 1,
			"whisper": 1,
			"we": 2,
			"he": 5,
			"me": 2,
			"gain": 1,
			"the": 14,
			"fight": 1,
			"tread": 1,
			"there": 1,
			"in": 2,
			"seem": 3
		},
		"stronger": {
			"under": 1,
			"who": 1,
			"side": 1,
			"far": 1,
			"by": 1,
			"they": 1,
			"than": 3,
			"my": 1,
			"makes": 1,
			"faith": 3,
			"man": 1,
			"and": 1,
			"hate": 1,
			"stronger": 1,
			"with": 1,
			"will": 1,
			"as": 1,
			"life": 1,
			"o": 1
		},
		"living": {
			"bread": 1,
			"light": 1,
			"stream": 1,
			"hell": 1,
			"temple": 1,
			"thing": 3,
			"none": 1,
			"tell": 1,
			"are": 1,
			"word": 1,
			"who": 3,
			"greece": 1,
			"of": 2,
			"souls": 1,
			"sight": 1,
			"by": 1,
			"long": 1,
			"is": 1,
			"few": 1,
			"beams": 1,
			"used": 1,
			"for": 1,
			"breath": 1,
			"wall": 2,
			"wheels": 1,
			"waves": 1,
			"glow": 1,
			"faith": 1,
			"god": 2,
			"that": 1,
			"rolling": 1,
			"man": 1,
			"or": 1,
			"tree": 1,
			"a": 1,
			"so": 2,
			"green": 2,
			"things": 2,
			"hath": 1,
			"on": 1,
			"but": 1,
			"waters": 4,
			"out": 1,
			"head": 1,
			"and": 11,
			"grace": 1,
			"truth": 2,
			"i": 1,
			"snow": 1,
			"here": 1,
			"pearl": 1,
			"from": 1,
			"while": 1,
			"present": 1,
			"gaze": 1,
			"strong": 1,
			"then": 1,
			"throne": 1,
			"page": 1,
			"shall": 1,
			"still": 2,
			"to": 1,
			"mould": 1,
			"we": 1,
			"as": 3,
			"strength": 1,
			"the": 1,
			"dead": 1,
			"fire": 1,
			"there": 1,
			"in": 2,
			"flowers": 2,
			"air": 1
		},
		"lilies": {
			"christ": 1,
			"are": 1,
			"of": 2,
			"blow": 1,
			"face": 1,
			"were": 1,
			"pure": 1,
			"but": 1,
			"say": 1,
			"and": 1,
			"with": 2,
			"all": 1,
			"spring": 1,
			"to": 1,
			"spread": 1,
			"stand": 1,
			"the": 2,
			"in": 2
		},
		"feeling": {
			"sweet": 1,
			"us": 1,
			"which": 2,
			"is": 1,
			"like": 1,
			"for": 3,
			"past": 1,
			"born": 1,
			"most": 1,
			"that": 2,
			"or": 1,
			"them": 1,
			"hath": 1,
			"love": 1,
			"but": 2,
			"infinite": 1,
			"thee": 1,
			"be": 1,
			"heart": 1,
			"and": 1,
			"has": 1,
			"to": 1,
			"we": 1,
			"the": 1,
			"tis": 1,
			"in": 1
		},
		"mind": {
			"come": 1,
			"thine": 1,
			"within": 1,
			"light": 1,
			"him": 2,
			"tell": 1,
			"are": 1,
			"men": 1,
			"which": 1,
			"of": 8,
			"alike": 1,
			"nor": 1,
			"it": 1,
			"by": 1,
			"alone": 2,
			"long": 1,
			"is": 3,
			"farewell": 1,
			"they": 1,
			"you": 2,
			"its": 1,
			"where": 1,
			"just": 2,
			"for": 2,
			"cannot": 1,
			"my": 3,
			"john": 1,
			"makes": 1,
			"most": 1,
			"can": 3,
			"was": 2,
			"that": 5,
			"had": 1,
			"what": 3,
			"an": 1,
			"wilt": 1,
			"their": 1,
			"a": 2,
			"so": 2,
			"on": 1,
			"quite": 1,
			"sees": 1,
			"but": 3,
			"ye": 3,
			"when": 1,
			"and": 22,
			"mothers": 1,
			"i": 2,
			"thou": 1,
			"one": 1,
			"such": 2,
			"looks": 1,
			"from": 3,
			"while": 2,
			"no": 1,
			"mighty": 1,
			"with": 6,
			"some": 1,
			"till": 1,
			"all": 1,
			"could": 2,
			"your": 1,
			"to": 11,
			"written": 1,
			"soar": 1,
			"we": 1,
			"as": 4,
			"the": 14,
			"though": 3,
			"there": 1,
			"in": 2
		},
		"ill": {
			"come": 1,
			"look": 1,
			"him": 1,
			"kiss": 1,
			"tell": 2,
			"are": 1,
			"who": 1,
			"deeds": 2,
			"hide": 1,
			"call": 1,
			"whatever": 2,
			"lift": 3,
			"not": 7,
			"it": 2,
			"by": 2,
			"shut": 1,
			"bring": 1,
			"bind": 1,
			"away": 1,
			"good": 1,
			"together": 1,
			"they": 1,
			"believe": 1,
			"you": 1,
			"pleasure": 1,
			"welcome": 1,
			"for": 2,
			"become": 1,
			"catch": 1,
			"take": 3,
			"spent": 1,
			"thy": 1,
			"sing": 1,
			"pray": 1,
			"sleep": 1,
			"teach": 1,
			"blows": 1,
			"ere": 1,
			"seek": 1,
			"gather": 1,
			"can": 3,
			"indeed": 1,
			"did": 1,
			"that": 3,
			"let": 2,
			"bear": 1,
			"make": 2,
			"go": 1,
			"trust": 1,
			"perfume": 1,
			"sit": 2,
			"think": 1,
			"lest": 1,
			"have": 1,
			"sae": 1,
			"a": 1,
			"them": 2,
			"lay": 1,
			"lord": 1,
			"never": 2,
			"spirit": 2,
			"leave": 2,
			"love": 1,
			"on": 1,
			"thee": 5,
			"thank": 1,
			"be": 5,
			"and": 11,
			"whateer": 1,
			"do": 1,
			"woman": 1,
			"too": 1,
			"ill": 2,
			"with": 1,
			"follow": 1,
			"all": 1,
			"couch": 1,
			"neer": 2,
			"patience": 1,
			"wind": 1,
			"your": 1,
			"to": 5,
			"we": 1,
			"as": 2,
			"stand": 1,
			"me": 2,
			"frown": 1,
			"the": 2,
			"fight": 1,
			"in": 2
		},
		"endless": {
			"blue": 1,
			"summer": 1,
			"woe": 1,
			"are": 1,
			"of": 1,
			"fame": 1,
			"age": 1,
			"dwell": 1,
			"prayer": 1,
			"crown": 1,
			"for": 1,
			"cry": 1,
			"rest": 2,
			"burning": 1,
			"were": 1,
			"let": 1,
			"groan": 1,
			"feast": 1,
			"but": 1,
			"grass": 1,
			"years": 1,
			"thou": 1,
			"blossom": 1,
			"day": 3,
			"night": 3,
			"before": 1,
			"the": 1,
			"treasure": 1,
			"in": 1
		},
		"sublime": {
			"who": 1,
			"which": 1,
			"of": 4,
			"they": 1,
			"oer": 1,
			"that": 1,
			"their": 2,
			"a": 1,
			"upon": 1,
			"filled": 1,
			"but": 1,
			"and": 3,
			"i": 1,
			"thou": 1,
			"while": 1,
			"with": 1,
			"now": 1,
			"has": 2,
			"still": 1,
			"to": 2,
			"art": 1,
			"may": 1,
			"as": 2,
			"o": 1,
			"the": 1
		},
		"want": {
			"come": 1,
			"play": 1,
			"of": 12,
			"sight": 1,
			"it": 1,
			"is": 1,
			"mother": 1,
			"where": 1,
			"for": 1,
			"that": 1,
			"what": 1,
			"an": 1,
			"or": 1,
			"their": 1,
			"a": 3,
			"them": 1,
			"and": 10,
			"how": 1,
			"with": 1,
			"sense": 1,
			"to": 3,
			"me": 1,
			"strength": 1,
			"the": 1
		},
		"blade": {
			"ring": 1,
			"earth": 1,
			"of": 4,
			"anonymous": 1,
			"they": 1,
			"for": 1,
			"oer": 1,
			"was": 1,
			"what": 1,
			"when": 1,
			"and": 7,
			"too": 1,
			"stands": 1,
			"to": 1,
			"whose": 1,
			"as": 1,
			"o": 5,
			"the": 3,
			"in": 1
		},
		"reason": {
			"liberty": 1,
			"like": 1,
			"why": 8,
			"for": 3,
			"speak": 1,
			"shines": 1,
			"thy": 1,
			"runs": 1,
			"that": 3,
			"an": 1,
			"or": 2,
			"a": 1,
			"sometimes": 1,
			"upon": 1,
			"love": 1,
			"on": 2,
			"and": 3,
			"i": 2,
			"might": 1,
			"would": 3,
			"no": 1,
			"with": 2,
			"drew": 1,
			"give": 1,
			"clear": 1,
			"sleeps": 1,
			"still": 1,
			"to": 5,
			"flow": 1,
			"as": 1,
			"he": 1,
			"the": 2,
			"tis": 1,
			"her": 1
		},
		"beat": {
			"sweet": 1,
			"within": 1,
			"his": 1,
			"under": 1,
			"of": 2,
			"this": 1,
			"high": 1,
			"once": 1,
			"beheld": 1,
			"every": 1,
			"praise": 1,
			"it": 1,
			"long": 1,
			"like": 1,
			"forever": 1,
			"where": 1,
			"for": 1,
			"if": 1,
			"fast": 1,
			"but": 2,
			"out": 1,
			"and": 4,
			"dark": 1,
			"down": 1,
			"with": 1,
			"through": 1,
			"yet": 1,
			"to": 4,
			"as": 1,
			"at": 2,
			"the": 8,
			"there": 1,
			"in": 1
		},
		"beneath": {
			"his": 3,
			"him": 1,
			"this": 1,
			"up": 1,
			"sands": 1,
			"mine": 1,
			"it": 4,
			"far": 1,
			"its": 3,
			"those": 2,
			"my": 2,
			"touch": 1,
			"thy": 3,
			"oer": 1,
			"that": 3,
			"if": 1,
			"an": 2,
			"their": 5,
			"a": 5,
			"so": 1,
			"them": 3,
			"thee": 2,
			"lifes": 2,
			"knew": 1,
			"each": 1,
			"from": 1,
			"our": 8,
			"your": 2,
			"to": 1,
			"into": 1,
			"yon": 1,
			"whose": 2,
			"fair": 1,
			"me": 1,
			"the": 62,
			"her": 8
		},
		"maid": {
			"alas": 1,
			"who": 3,
			"of": 7,
			"goes": 1,
			"it": 1,
			"long": 1,
			"is": 1,
			"mother": 1,
			"my": 2,
			"was": 1,
			"what": 1,
			"sit": 1,
			"late": 1,
			"gave": 1,
			"fill": 1,
			"a": 1,
			"on": 3,
			"but": 1,
			"thee": 1,
			"when": 4,
			"and": 7,
			"with": 1,
			"shall": 1,
			"to": 1,
			"the": 1,
			"though": 1,
			"in": 1
		},
		"rare": {
			"save": 1,
			"happiness": 1,
			"are": 2,
			"which": 1,
			"where": 1,
			"were": 1,
			"did": 1,
			"that": 1,
			"what": 1,
			"courage": 1,
			"old": 1,
			"but": 2,
			"and": 1,
			"from": 2,
			"gifts": 1,
			"could": 1,
			"lie": 1,
			"as": 2,
			"her": 1
		},
		"ancient": {
			"us": 1,
			"hear": 1,
			"are": 1,
			"story": 1,
			"right": 1,
			"which": 1,
			"of": 2,
			"wisdom": 1,
			"forms": 1,
			"kings": 1,
			"good": 1,
			"force": 1,
			"bowed": 1,
			"wall": 1,
			"name": 1,
			"queen": 1,
			"wit": 1,
			"were": 1,
			"reign": 2,
			"seed": 1,
			"an": 1,
			"on": 2,
			"time": 1,
			"dreams": 1,
			"and": 3,
			"days": 2,
			"i": 1,
			"down": 1,
			"home": 1,
			"rome": 1,
			"from": 1,
			"voice": 1,
			"foe": 1,
			"shall": 2,
			"yet": 1,
			"whose": 1,
			"as": 2,
			"heavens": 1,
			"the": 2,
			"there": 1,
			"in": 1
		},
		"hidden": {
			"of": 1,
			"alike": 1,
			"angel": 1,
			"rock": 1,
			"bird": 1,
			"evil": 1,
			"by": 1,
			"sorrows": 1,
			"vain": 1,
			"door": 1,
			"shame": 1,
			"were": 1,
			"a": 1,
			"love": 1,
			"deep": 1,
			"heart": 1,
			"and": 2,
			"how": 1,
			"from": 2,
			"now": 1,
			"whose": 1,
			"fire": 2,
			"in": 3
		},
		"these": {
			"books": 1,
			"woes": 1,
			"sighs": 2,
			"ready": 1,
			"die": 1,
			"fond": 1,
			"sharp": 1,
			"white": 1,
			"weary": 2,
			"are": 20,
			"fell": 1,
			"who": 2,
			"men": 1,
			"which": 2,
			"deeds": 1,
			"tired": 1,
			"of": 10,
			"up": 1,
			"among": 1,
			"sacred": 1,
			"grew": 1,
			"two": 5,
			"rose": 1,
			"lines": 2,
			"limbs": 2,
			"not": 2,
			"hours": 1,
			"crimson": 1,
			"today": 1,
			"proud": 2,
			"every": 1,
			"it": 2,
			"lights": 1,
			"eyes": 6,
			"alone": 1,
			"long": 1,
			"sorrows": 1,
			"bring": 1,
			"is": 1,
			"hoary": 1,
			"forms": 3,
			"kings": 1,
			"good": 1,
			"you": 1,
			"moves": 1,
			"pale": 1,
			"leaves": 1,
			"than": 1,
			"small": 1,
			"holy": 1,
			"stones": 1,
			"should": 1,
			"cannot": 1,
			"my": 6,
			"blow": 1,
			"words": 8,
			"winds": 1,
			"desire": 1,
			"watch": 1,
			"pray": 1,
			"pretty": 1,
			"wear": 1,
			"times": 1,
			"wandering": 1,
			"can": 1,
			"were": 1,
			"indeed": 1,
			"did": 1,
			"that": 4,
			"let": 1,
			"same": 1,
			"lips": 2,
			"make": 1,
			"go": 1,
			"must": 1,
			"what": 1,
			"an": 1,
			"wait": 1,
			"creatures": 1,
			"charms": 1,
			"hands": 1,
			"have": 5,
			"tears": 3,
			"their": 1,
			"a": 2,
			"pines": 1,
			"upon": 1,
			"things": 4,
			"many": 1,
			"ashes": 1,
			"on": 1,
			"saw": 1,
			"smiling": 1,
			"old": 1,
			"but": 1,
			"waters": 1,
			"dreams": 1,
			"be": 2,
			"wings": 1,
			"earthly": 3,
			"vere": 1,
			"and": 12,
			"bones": 1,
			"do": 1,
			"dark": 1,
			"lovely": 2,
			"days": 1,
			"i": 1,
			"thou": 1,
			"dull": 1,
			"too": 1,
			"mortal": 1,
			"rocks": 1,
			"arts": 1,
			"hearts": 1,
			"from": 1,
			"would": 1,
			"these": 1,
			"while": 1,
			"no": 2,
			"mystic": 1,
			"called": 1,
			"with": 2,
			"sad": 1,
			"give": 1,
			"will": 1,
			"gay": 1,
			"wild": 1,
			"songs": 1,
			"peaceful": 1,
			"our": 2,
			"works": 3,
			"open": 1,
			"shall": 2,
			"golden": 2,
			"still": 1,
			"to": 4,
			"clouds": 1,
			"cut": 1,
			"art": 1,
			"skies": 1,
			"we": 1,
			"glad": 1,
			"as": 3,
			"happy": 1,
			"done": 2,
			"he": 2,
			"arms": 1,
			"the": 9,
			"fight": 1,
			"young": 1,
			"trees": 1,
			"restless": 1,
			"in": 2,
			"flowers": 2,
			"dim": 1
		},
		"nigh": {
			"she": 1,
			"nor": 1,
			"land": 1,
			"is": 1,
			"for": 1,
			"my": 1,
			"that": 1,
			"ran": 1,
			"when": 1,
			"and": 4,
			"i": 1,
			"thou": 1,
			"with": 1,
			"will": 1,
			"then": 1,
			"shall": 1,
			"to": 3,
			"whose": 1,
			"as": 1,
			"me": 1,
			"the": 3
		},
		"shield": {
			"of": 1,
			"is": 4,
			"can": 1,
			"were": 1,
			"was": 1,
			"or": 1,
			"upon": 1,
			"be": 1,
			"and": 4,
			"fly": 1,
			"against": 1,
			"broad": 1,
			"then": 1,
			"yet": 1,
			"as": 1,
			"borne": 1,
			"me": 1,
			"the": 5
		},
		"duty": {
			"low": 1,
			"are": 1,
			"lights": 1,
			"brought": 1,
			"forever": 1,
			"stern": 1,
			"leaves": 1,
			"its": 1,
			"was": 2,
			"if": 1,
			"have": 1,
			"so": 1,
			"love": 1,
			"but": 1,
			"and": 4,
			"whateer": 1,
			"i": 1,
			"clear": 1,
			"as": 1,
			"the": 1
		},
		"while": {
			"sound": 1,
			"dying": 1,
			"earth": 1,
			"birds": 1,
			"his": 7,
			"fond": 1,
			"ages": 2,
			"science": 1,
			"are": 1,
			"made": 1,
			"ive": 1,
			"call": 1,
			"sounds": 1,
			"this": 1,
			"fame": 1,
			"learning": 1,
			"she": 7,
			"grew": 1,
			"rose": 1,
			"hes": 1,
			"every": 1,
			"it": 8,
			"fool": 1,
			"far": 1,
			"hangs": 1,
			"by": 1,
			"sorrows": 1,
			"cold": 1,
			"like": 1,
			"kings": 1,
			"good": 1,
			"pleased": 1,
			"force": 1,
			"they": 8,
			"you": 6,
			"shot": 1,
			"its": 1,
			"those": 1,
			"others": 2,
			"run": 1,
			"rolled": 1,
			"theres": 1,
			"autumn": 1,
			"my": 11,
			"shines": 1,
			"sleep": 1,
			"peace": 1,
			"waves": 1,
			"times": 1,
			"wandering": 1,
			"longer": 1,
			"god": 1,
			"oer": 2,
			"that": 1,
			"man": 1,
			"both": 1,
			"full": 1,
			"gives": 1,
			"stars": 1,
			"even": 1,
			"conscience": 1,
			"have": 1,
			"horse": 1,
			"winter": 1,
			"their": 2,
			"a": 6,
			"so": 1,
			"courage": 1,
			"many": 1,
			"on": 5,
			"fast": 1,
			"memory": 2,
			"feast": 1,
			"glance": 1,
			"death": 1,
			"time": 2,
			"thee": 1,
			"ye": 1,
			"sweetly": 1,
			"and": 4,
			"eer": 1,
			"last": 1,
			"days": 1,
			"i": 21,
			"thou": 6,
			"marching": 1,
			"western": 1,
			"broke": 1,
			"one": 4,
			"each": 2,
			"from": 5,
			"reason": 1,
			"beneath": 1,
			"while": 1,
			"took": 1,
			"calm": 1,
			"with": 5,
			"around": 1,
			"soft": 1,
			"till": 1,
			"strong": 1,
			"all": 7,
			"then": 1,
			"gale": 1,
			"thought": 1,
			"could": 1,
			"through": 1,
			"angels": 2,
			"well": 1,
			"doth": 1,
			"our": 5,
			"mercy": 1,
			"only": 2,
			"your": 1,
			"natures": 1,
			"yet": 10,
			"to": 2,
			"poetry": 1,
			"poets": 1,
			"round": 2,
			"freedoms": 1,
			"sore": 1,
			"we": 9,
			"whose": 1,
			"as": 3,
			"happy": 1,
			"life": 1,
			"he": 4,
			"fancy": 1,
			"straight": 1,
			"led": 1,
			"o": 2,
			"grow": 1,
			"the": 79,
			"theyre": 1,
			"scarce": 1,
			"her": 1,
			"safe": 1,
			"near": 2,
			"in": 7
		},
		"foul": {
			"ring": 1,
			"him": 1,
			"are": 1,
			"deeds": 1,
			"twixt": 1,
			"tyrants": 1,
			"that": 1,
			"or": 1,
			"so": 1,
			"but": 1,
			"and": 5,
			"from": 1,
			"foul": 1,
			"no": 2,
			"our": 1,
			"to": 2,
			"spread": 1,
			"the": 1,
			"there": 1,
			"thoughts": 1
		},
		"strand": {
			"hear": 1,
			"who": 1,
			"by": 1,
			"like": 1,
			"where": 2,
			"thy": 1,
			"if": 1,
			"a": 1,
			"so": 1,
			"and": 2,
			"i": 1,
			"with": 2,
			"our": 1,
			"still": 1,
			"to": 3,
			"in": 1
		},
		"breast": {
			"im": 1,
			"his": 2,
			"passions": 1,
			"which": 2,
			"of": 7,
			"keep": 1,
			"not": 2,
			"every": 1,
			"by": 1,
			"is": 3,
			"like": 3,
			"prayer": 1,
			"robert": 1,
			"than": 1,
			"those": 1,
			"where": 3,
			"for": 4,
			"theres": 2,
			"my": 1,
			"francis": 1,
			"forward": 2,
			"god": 1,
			"were": 1,
			"was": 1,
			"runs": 1,
			"that": 5,
			"if": 1,
			"man": 2,
			"full": 2,
			"what": 2,
			"or": 1,
			"have": 1,
			"blush": 1,
			"a": 5,
			"lay": 1,
			"on": 2,
			"old": 1,
			"death": 1,
			"when": 4,
			"and": 18,
			"eer": 1,
			"whateer": 1,
			"i": 1,
			"thou": 1,
			"bids": 1,
			"softly": 1,
			"against": 1,
			"from": 1,
			"these": 1,
			"no": 2,
			"calm": 1,
			"with": 5,
			"gods": 1,
			"then": 1,
			"george": 1,
			"dost": 1,
			"only": 2,
			"still": 1,
			"your": 1,
			"to": 3,
			"ah": 1,
			"may": 1,
			"we": 1,
			"whose": 1,
			"as": 1,
			"he": 1,
			"at": 1,
			"o": 4,
			"the": 15,
			"her": 3,
			"there": 1,
			"in": 1
		},
		"honor": {
			"under": 1,
			"worth": 1,
			"call": 1,
			"of": 4,
			"this": 1,
			"high": 1,
			"feels": 1,
			"it": 1,
			"by": 1,
			"is": 3,
			"cross": 1,
			"found": 1,
			"you": 1,
			"than": 1,
			"pleasure": 1,
			"where": 1,
			"thy": 1,
			"comes": 1,
			"were": 1,
			"crowned": 1,
			"that": 2,
			"or": 2,
			"a": 2,
			"hath": 1,
			"love": 1,
			"quite": 1,
			"when": 1,
			"be": 1,
			"and": 6,
			"i": 1,
			"draw": 1,
			"from": 2,
			"endless": 1,
			"bound": 1,
			"virtue": 1,
			"thomas": 1,
			"doth": 1,
			"clear": 1,
			"to": 4,
			"we": 1,
			"he": 1,
			"me": 1,
			"strength": 1,
			"grow": 1,
			"the": 5,
			"first": 1
		},
		"present": {
			"woes": 1,
			"light": 1,
			"fears": 1,
			"word": 1,
			"triumph": 1,
			"joy": 2,
			"race": 1,
			"hours": 1,
			"form": 1,
			"good": 1,
			"you": 1,
			"for": 1,
			"my": 1,
			"hour": 3,
			"shame": 1,
			"what": 1,
			"or": 1,
			"joys": 1,
			"old": 1,
			"when": 1,
			"heart": 1,
			"and": 3,
			"grace": 1,
			"i": 2,
			"thou": 1,
			"too": 1,
			"state": 1,
			"from": 1,
			"rare": 1,
			"worst": 1,
			"day": 2,
			"future": 1,
			"still": 3,
			"to": 3,
			"life": 1,
			"the": 1,
			"scene": 1
		},
		"no": {
			"tune": 1,
			"flower": 2,
			"blue": 1,
			"come": 1,
			"sound": 11,
			"low": 1,
			"cool": 1,
			"bread": 1,
			"look": 1,
			"summer": 1,
			"more": 209,
			"murmur": 1,
			"since": 1,
			"blessd": 1,
			"lot": 1,
			"wife": 1,
			"loves": 1,
			"im": 2,
			"river": 1,
			"light": 8,
			"earth": 1,
			"doubt": 8,
			"cloud": 2,
			"his": 2,
			"appear": 1,
			"save": 2,
			"fond": 2,
			"ear": 1,
			"law": 2,
			"see": 1,
			"means": 2,
			"precious": 1,
			"play": 1,
			"horn": 1,
			"voices": 1,
			"thing": 1,
			"deeper": 2,
			"creed": 1,
			"passions": 1,
			"science": 1,
			"wail": 1,
			"wonder": 1,
			"fears": 1,
			"aid": 1,
			"beside": 1,
			"made": 1,
			"word": 1,
			"who": 1,
			"seen": 1,
			"hollow": 1,
			"mist": 1,
			"deeds": 1,
			"dies": 1,
			"worth": 1,
			"shout": 1,
			"of": 25,
			"this": 1,
			"season": 1,
			"high": 2,
			"worlds": 1,
			"fame": 1,
			"learning": 1,
			"up": 1,
			"food": 1,
			"angel": 1,
			"she": 3,
			"nor": 9,
			"hymn": 1,
			"gold": 1,
			"act": 1,
			"darkness": 2,
			"joy": 3,
			"fruit": 2,
			"bird": 1,
			"brother": 1,
			"spot": 4,
			"dear": 2,
			"pain": 4,
			"place": 1,
			"slaves": 1,
			"solemn": 1,
			"not": 2,
			"praise": 1,
			"it": 3,
			"evil": 2,
			"flight": 2,
			"fool": 1,
			"wisdom": 1,
			"tongue": 4,
			"by": 3,
			"eyes": 2,
			"fathers": 1,
			"nevermore": 2,
			"long": 1,
			"sorrows": 1,
			"bring": 1,
			"trace": 2,
			"matter": 7,
			"cold": 4,
			"pride": 1,
			"land": 2,
			"is": 5,
			"cross": 2,
			"vision": 1,
			"glittering": 2,
			"author": 1,
			"unto": 1,
			"like": 1,
			"takes": 1,
			"return": 2,
			"farewell": 1,
			"glass": 1,
			"sway": 1,
			"gift": 1,
			"children": 1,
			"douglas": 1,
			"good": 1,
			"force": 1,
			"ever": 1,
			"care": 1,
			"about": 1,
			"they": 1,
			"funeral": 1,
			"grant": 1,
			"new": 1,
			"strike": 1,
			"without": 1,
			"than": 5,
			"smile": 1,
			"pleasure": 2,
			"sea": 1,
			"crown": 2,
			"friends": 1,
			"where": 1,
			"small": 2,
			"rolled": 1,
			"church": 1,
			"blast": 1,
			"for": 13,
			"noise": 2,
			"hand": 5,
			"heaven": 2,
			"charge": 1,
			"cry": 1,
			"worse": 2,
			"breath": 2,
			"rest": 1,
			"my": 5,
			"count": 1,
			"words": 2,
			"note": 1,
			"great": 4,
			"beauty": 1,
			"touch": 1,
			"freedom": 1,
			"greater": 1,
			"pray": 1,
			"sleep": 2,
			"battle": 1,
			"teach": 1,
			"warrior": 1,
			"peace": 2,
			"rang": 1,
			"better": 3,
			"ray": 3,
			"shadow": 1,
			"shore": 1,
			"soul": 1,
			"passion": 1,
			"hope": 3,
			"seek": 1,
			"sir": 1,
			"evening": 1,
			"friend": 5,
			"name": 3,
			"longer": 38,
			"face": 1,
			"sin": 2,
			"dew": 1,
			"god": 3,
			"can": 3,
			"foot": 1,
			"shame": 1,
			"power": 8,
			"bud": 1,
			"comfort": 1,
			"sabbath": 1,
			"need": 5,
			"trumpet": 1,
			"indeed": 1,
			"cause": 3,
			"that": 6,
			"if": 2,
			"let": 6,
			"show": 1,
			"cares": 1,
			"arm": 1,
			"man": 27,
			"broken": 1,
			"go": 1,
			"seed": 1,
			"trust": 3,
			"tear": 1,
			"brothers": 1,
			"gives": 1,
			"what": 1,
			"repose": 1,
			"moon": 2,
			"stone": 1,
			"music": 1,
			"pleasures": 1,
			"or": 4,
			"conscience": 2,
			"eye": 3,
			"pause": 3,
			"tears": 1,
			"sae": 1,
			"horse": 1,
			"danger": 3,
			"winter": 1,
			"their": 1,
			"a": 4,
			"so": 5,
			"pains": 1,
			"joys": 1,
			"true": 4,
			"upon": 1,
			"never": 1,
			"spirit": 2,
			"delight": 2,
			"love": 2,
			"tomb": 2,
			"on": 3,
			"charm": 3,
			"chains": 1,
			"deep": 2,
			"but": 8,
			"glance": 1,
			"death": 9,
			"knowledge": 1,
			"time": 11,
			"poor": 2,
			"ye": 1,
			"when": 1,
			"mans": 3,
			"sigh": 3,
			"raise": 1,
			"be": 2,
			"wings": 1,
			"t": 2,
			"veil": 1,
			"out": 1,
			"earthly": 1,
			"watched": 1,
			"rage": 1,
			"heart": 4,
			"sorrow": 5,
			"german": 6,
			"nobler": 1,
			"verse": 1,
			"and": 9,
			"mothers": 2,
			"sun": 1,
			"bloom": 1,
			"dark": 1,
			"last": 2,
			"dream": 2,
			"fate": 1,
			"wounded": 1,
			"grave": 1,
			"i": 4,
			"knew": 1,
			"worthy": 2,
			"thou": 1,
			"less": 4,
			"swell": 1,
			"here": 5,
			"too": 1,
			"mirth": 1,
			"mortal": 9,
			"one": 14,
			"storm": 1,
			"chamber": 1,
			"such": 9,
			"rocks": 1,
			"against": 1,
			"work": 1,
			"pearl": 1,
			"forest": 1,
			"rather": 1,
			"each": 1,
			"higher": 1,
			"help": 2,
			"other": 11,
			"from": 9,
			"stranger": 2,
			"marble": 2,
			"living": 3,
			"mind": 1,
			"ill": 2,
			"endless": 1,
			"want": 1,
			"beneath": 1,
			"duty": 2,
			"while": 1,
			"foul": 1,
			"no": 23,
			"calm": 1,
			"voice": 10,
			"solitude": 1,
			"breeze": 1,
			"with": 2,
			"now": 2,
			"set": 1,
			"single": 1,
			"hair": 2,
			"will": 2,
			"prayers": 1,
			"all": 2,
			"grief": 2,
			"then": 2,
			"thought": 5,
			"could": 3,
			"foe": 5,
			"has": 1,
			"toil": 1,
			"angels": 2,
			"well": 1,
			"road": 2,
			"master": 1,
			"dost": 1,
			"wake": 1,
			"being": 2,
			"behind": 1,
			"nearer": 1,
			"our": 1,
			"storms": 1,
			"wrong": 1,
			"day": 2,
			"sense": 1,
			"feel": 1,
			"works": 1,
			"neer": 1,
			"future": 2,
			"fear": 8,
			"night": 5,
			"needs": 1,
			"mercy": 1,
			"pity": 2,
			"stay": 1,
			"shall": 1,
			"wind": 2,
			"still": 1,
			"chance": 2,
			"shade": 2,
			"to": 8,
			"loud": 1,
			"human": 1,
			"springs": 1,
			"round": 1,
			"little": 2,
			"answer": 2,
			"use": 3,
			"backward": 1,
			"know": 1,
			"art": 1,
			"ah": 1,
			"may": 1,
			"strife": 2,
			"sign": 3,
			"we": 4,
			"gloom": 1,
			"as": 1,
			"happy": 1,
			"life": 1,
			"end": 4,
			"me": 1,
			"strength": 3,
			"son": 1,
			"at": 4,
			"wound": 1,
			"greek": 1,
			"weight": 2,
			"left": 1,
			"common": 1,
			"the": 13,
			"tis": 1,
			"treasure": 1,
			"house": 1,
			"labor": 1,
			"share": 1,
			"change": 3,
			"dead": 1,
			"tread": 1,
			"thirst": 2,
			"fire": 2,
			"there": 3,
			"in": 14,
			"step": 1,
			"air": 1,
			"ruin": 1,
			"thoughts": 1,
			"grows": 1
		},
		"mystic": {
			"thine": 1,
			"river": 1,
			"light": 1,
			"gate": 1,
			"of": 1,
			"fame": 1,
			"rapture": 1,
			"twixt": 1,
			"church": 1,
			"thy": 1,
			"what": 1,
			"or": 1,
			"ye": 1,
			"veil": 1,
			"awful": 1,
			"and": 1,
			"dream": 1,
			"with": 1,
			"thought": 1,
			"fear": 1,
			"shade": 1,
			"answer": 1,
			"written": 1,
			"he": 1
		},
		"bound": {
			"us": 1,
			"him": 3,
			"of": 1,
			"up": 1,
			"nor": 1,
			"not": 1,
			"it": 2,
			"by": 1,
			"unto": 1,
			"like": 1,
			"away": 1,
			"for": 3,
			"my": 1,
			"if": 1,
			"or": 1,
			"a": 1,
			"them": 1,
			"on": 1,
			"but": 1,
			"thee": 1,
			"and": 6,
			"i": 1,
			"down": 1,
			"from": 1,
			"while": 1,
			"with": 4,
			"has": 1,
			"to": 5,
			"as": 3,
			"he": 1,
			"me": 1,
			"at": 1,
			"the": 6,
			"her": 1,
			"in": 6
		},
		"early": {
			"blessings": 1,
			"worn": 1,
			"light": 3,
			"call": 3,
			"morning": 3,
			"mother": 4,
			"friends": 1,
			"morn": 2,
			"hopes": 1,
			"that": 1,
			"fall": 1,
			"or": 2,
			"bright": 1,
			"love": 2,
			"tomb": 1,
			"on": 1,
			"and": 4,
			"bloom": 1,
			"doom": 1,
			"days": 2,
			"i": 1,
			"lilies": 1,
			"early": 1,
			"now": 1,
			"till": 1,
			"harvest": 1,
			"to": 1,
			"youth": 2,
			"vows": 2,
			"skies": 1,
			"life": 1,
			"the": 2,
			"her": 1,
			"dead": 1,
			"in": 1,
			"air": 1
		},
		"bid": {
			"sound": 1,
			"us": 4,
			"him": 3,
			"it": 1,
			"you": 3,
			"new": 1,
			"its": 1,
			"thy": 2,
			"lords": 1,
			"them": 3,
			"time": 2,
			"thee": 2,
			"ye": 1,
			"fly": 1,
			"all": 1,
			"then": 1,
			"your": 1,
			"fair": 1,
			"me": 4,
			"the": 4
		},
		"took": {
			"his": 3,
			"him": 2,
			"up": 4,
			"off": 1,
			"it": 3,
			"like": 1,
			"away": 1,
			"my": 1,
			"again": 1,
			"that": 2,
			"an": 1,
			"hold": 2,
			"their": 1,
			"but": 1,
			"thee": 1,
			"out": 1,
			"heart": 1,
			"and": 4,
			"no": 1,
			"our": 1,
			"he": 1,
			"me": 1,
			"the": 22,
			"her": 3,
			"in": 1
		},
		"pitiful": {
			"thine": 1,
			"sight": 1,
			"who": 1,
			"o": 13,
			"dear": 1,
			"we": 1,
			"he": 2,
			"near": 1
		},
		"worst": {
			"are": 1,
			"men": 1,
			"of": 8,
			"up": 1,
			"she": 1,
			"nor": 1,
			"is": 3,
			"they": 2,
			"for": 1,
			"speak": 1,
			"god": 1,
			"did": 1,
			"a": 1,
			"but": 1,
			"turns": 1,
			"and": 2,
			"dream": 1,
			"will": 1,
			"has": 1,
			"to": 1,
			"he": 1,
			"world": 1,
			"there": 1,
			"in": 1
		},
		"calm": {
			"come": 1,
			"river": 1,
			"his": 1,
			"stream": 1,
			"save": 1,
			"science": 1,
			"of": 2,
			"alike": 1,
			"grew": 1,
			"place": 1,
			"eyes": 1,
			"is": 1,
			"they": 2,
			"despair": 1,
			"for": 1,
			"face": 1,
			"oer": 1,
			"that": 1,
			"trust": 1,
			"sit": 1,
			"repose": 2,
			"or": 1,
			"a": 3,
			"so": 3,
			"upon": 1,
			"delight": 2,
			"on": 2,
			"above": 1,
			"deep": 1,
			"content": 2,
			"close": 1,
			"and": 30,
			"sunshine": 1,
			"home": 1,
			"here": 1,
			"brow": 2,
			"would": 1,
			"voice": 1,
			"around": 2,
			"himself": 1,
			"well": 1,
			"our": 1,
			"yet": 1,
			"glorious": 1,
			"may": 1,
			"as": 2,
			"he": 1,
			"at": 1,
			"below": 3,
			"o": 1,
			"the": 4,
			"though": 1,
			"in": 2,
			"air": 1,
			"thoughts": 1
		},
		"roll": {
			"back": 2,
			"call": 1,
			"of": 6,
			"up": 1,
			"grown": 1,
			"darkness": 1,
			"far": 2,
			"by": 1,
			"something": 1,
			"they": 1,
			"better": 1,
			"wilt": 1,
			"their": 1,
			"upon": 1,
			"on": 2,
			"and": 4,
			"i": 1,
			"down": 1,
			"no": 1,
			"around": 1,
			"has": 1,
			"our": 1,
			"mingled": 1,
			"he": 1,
			"o": 1,
			"grow": 1,
			"the": 7,
			"in": 5
		},
		"rouse": {
			"us": 1,
			"up": 1,
			"for": 1,
			"what": 1,
			"a": 2,
			"them": 4,
			"ye": 2,
			"no": 1,
			"with": 1,
			"king": 1,
			"the": 2,
			"there": 1,
			"in": 3
		},
		"called": {
			"us": 1,
			"him": 3,
			"who": 1,
			"which": 1,
			"fathers": 1,
			"is": 1,
			"unto": 1,
			"farewell": 1,
			"you": 3,
			"for": 1,
			"again": 1,
			"nothing": 1,
			"a": 2,
			"them": 1,
			"content": 1,
			"thee": 1,
			"work": 1,
			"living": 2,
			"with": 2,
			"to": 1,
			"he": 1,
			"me": 2,
			"o": 1,
			"arise": 1,
			"the": 7,
			"tis": 1,
			"her": 6,
			"in": 2
		},
		"voice": {
			"sweet": 1,
			"come": 1,
			"itself": 1,
			"within": 1,
			"his": 2,
			"beside": 1,
			"who": 2,
			"which": 1,
			"sounds": 1,
			"of": 44,
			"this": 1,
			"calls": 1,
			"she": 2,
			"grew": 1,
			"grown": 1,
			"behold": 1,
			"not": 2,
			"divine": 1,
			"it": 1,
			"by": 1,
			"alone": 1,
			"is": 10,
			"unto": 1,
			"like": 1,
			"forever": 1,
			"you": 1,
			"heard": 2,
			"than": 1,
			"for": 1,
			"take": 1,
			"my": 2,
			"came": 1,
			"comes": 1,
			"god": 1,
			"can": 1,
			"was": 6,
			"that": 11,
			"if": 1,
			"says": 1,
			"cried": 1,
			"or": 3,
			"a": 2,
			"so": 2,
			"but": 3,
			"death": 3,
			"ye": 1,
			"eternal": 1,
			"be": 1,
			"and": 11,
			"i": 5,
			"bids": 1,
			"too": 1,
			"between": 1,
			"how": 1,
			"from": 3,
			"would": 1,
			"beneath": 1,
			"while": 1,
			"no": 2,
			"called": 1,
			"with": 1,
			"will": 1,
			"has": 2,
			"doth": 1,
			"shall": 3,
			"before": 1,
			"to": 9,
			"cut": 1,
			"turning": 1,
			"get": 1,
			"yon": 1,
			"whose": 1,
			"as": 3,
			"he": 4,
			"me": 2,
			"o": 1,
			"rings": 1,
			"the": 8,
			"in": 6,
			"aloud": 1
		},
		"guest": {
			"come": 1,
			"his": 1,
			"st": 1,
			"who": 1,
			"blind": 1,
			"divine": 1,
			"by": 2,
			"you": 1,
			"heard": 1,
			"pleasure": 1,
			"those": 1,
			"that": 2,
			"or": 1,
			"a": 1,
			"but": 1,
			"and": 2,
			"such": 1,
			"sublime": 1,
			"while": 1,
			"english": 1,
			"the": 1
		},
		"maidens": {
			"sweet": 1,
			"taught": 1,
			"cheek": 1,
			"court": 1,
			"of": 3,
			"eyes": 1,
			"bring": 1,
			"like": 1,
			"hand": 1,
			"sit": 1,
			"hands": 1,
			"their": 1,
			"grace": 1,
			"thou": 1,
			"locks": 1,
			"all": 1,
			"gay": 1,
			"shall": 1,
			"knee": 1,
			"said": 1,
			"the": 1,
			"in": 1
		},
		"dread": {
			"us": 1,
			"his": 2,
			"are": 1,
			"of": 5,
			"silence": 1,
			"sons": 1,
			"morning": 1,
			"city": 1,
			"not": 2,
			"it": 1,
			"farewell": 1,
			"ocean": 1,
			"they": 1,
			"its": 1,
			"for": 1,
			"judgment": 2,
			"my": 1,
			"hour": 1,
			"name": 1,
			"waking": 1,
			"man": 1,
			"or": 2,
			"have": 1,
			"death": 1,
			"and": 6,
			"i": 2,
			"unknown": 1,
			"secret": 1,
			"work": 1,
			"each": 1,
			"from": 2,
			"bid": 1,
			"voice": 1,
			"give": 1,
			"king": 1,
			"day": 1,
			"shall": 1,
			"to": 3,
			"the": 4,
			"there": 1,
			"in": 1
		},
		"sand": {
			"come": 1,
			"are": 1,
			"of": 1,
			"is": 1,
			"for": 2,
			"great": 1,
			"along": 1,
			"were": 1,
			"oer": 1,
			"their": 1,
			"deep": 1,
			"but": 1,
			"when": 1,
			"and": 3,
			"thou": 1,
			"from": 1,
			"into": 1,
			"we": 1,
			"o": 1,
			"the": 2
		},
		"solitude": {
			"of": 1,
			"she": 1,
			"is": 1,
			"where": 2,
			"should": 1,
			"what": 1,
			"think": 1,
			"so": 1,
			"sometimes": 1,
			"but": 3,
			"and": 3,
			"i": 1,
			"one": 1,
			"ill": 1,
			"all": 1,
			"behind": 1,
			"your": 1,
			"to": 1,
			"the": 1,
			"her": 1
		},
		"alfred": {
			"act": 1,
			"lord": 18,
			"thy": 1,
			"the": 4,
			"swift": 1,
			"bore": 1,
			"tennyson": 1,
			"if": 1
		},
		"sphere": {
			"his": 1,
			"which": 1,
			"of": 4,
			"they": 1,
			"than": 1,
			"for": 1,
			"that": 1,
			"even": 1,
			"or": 1,
			"a": 1,
			"evermore": 1,
			"but": 1,
			"and": 2,
			"these": 1,
			"will": 1,
			"all": 1,
			"could": 1,
			"to": 2,
			"we": 1,
			"o": 1,
			"the": 2,
			"though": 1
		},
		"kingdom": {
			"of": 4,
			"by": 5,
			"is": 1,
			"for": 2,
			"comes": 1,
			"seek": 1,
			"that": 1,
			"and": 1,
			"through": 1,
			"to": 1,
			"spread": 1,
			"fail": 1,
			"in": 1
		},
		"decay": {
			"of": 1,
			"once": 1,
			"it": 1,
			"why": 1,
			"yes": 1,
			"what": 2,
			"eye": 1,
			"but": 1,
			"death": 1,
			"and": 6,
			"i": 2,
			"such": 1,
			"rocks": 1,
			"still": 1,
			"to": 1,
			"o": 1,
			"the": 2,
			"in": 1
		},
		"goodly": {
			"walks": 1,
			"made": 1,
			"of": 3,
			"rivers": 1,
			"land": 2,
			"were": 1,
			"that": 1,
			"man": 1,
			"things": 1,
			"hath": 2,
			"state": 1,
			"king": 1,
			"shade": 1,
			"to": 1,
			"ship": 1,
			"borne": 1,
			"at": 2
		},
		"guilty": {
			"means": 1,
			"thing": 2,
			"of": 2,
			"she": 1,
			"far": 1,
			"child": 1,
			"land": 1,
			"smile": 1,
			"for": 1,
			"my": 1,
			"soul": 1,
			"man": 1,
			"front": 1,
			"creatures": 1,
			"or": 1,
			"but": 1,
			"and": 2,
			"truth": 1,
			"mind": 1,
			"dead": 1,
			"purpose": 1,
			"thoughts": 1
		},
		"mighty": {
			"flower": 1,
			"wife": 1,
			"river": 1,
			"means": 1,
			"deeds": 1,
			"of": 5,
			"angel": 1,
			"flood": 1,
			"race": 1,
			"pain": 1,
			"rivers": 1,
			"it": 1,
			"host": 1,
			"woods": 1,
			"land": 3,
			"wars": 1,
			"is": 4,
			"vision": 1,
			"rise": 1,
			"like": 1,
			"mother": 2,
			"where": 1,
			"hand": 3,
			"breath": 1,
			"words": 1,
			"cheer": 1,
			"name": 1,
			"god": 1,
			"can": 1,
			"stroke": 1,
			"oer": 1,
			"was": 2,
			"that": 2,
			"what": 1,
			"have": 1,
			"lord": 2,
			"love": 1,
			"deep": 2,
			"but": 2,
			"when": 1,
			"deed": 1,
			"waters": 1,
			"van": 1,
			"wings": 1,
			"heart": 1,
			"say": 1,
			"and": 5,
			"i": 2,
			"down": 1,
			"one": 1,
			"how": 1,
			"from": 2,
			"roll": 1,
			"voice": 2,
			"mighty": 1,
			"with": 1,
			"blest": 1,
			"thought": 2,
			"angels": 1,
			"master": 1,
			"minds": 1,
			"wind": 1,
			"to": 2,
			"human": 1,
			"sweep": 1,
			"ship": 1,
			"we": 1,
			"he": 1,
			"gleam": 1,
			"at": 3,
			"chain": 1,
			"chorus": 1,
			"the": 4,
			"her": 1,
			"dead": 2,
			"in": 1
		},
		"breeze": {
			"fell": 1,
			"sounds": 1,
			"of": 5,
			"kept": 1,
			"is": 3,
			"came": 1,
			"comes": 1,
			"makes": 1,
			"oer": 1,
			"that": 1,
			"so": 1,
			"sometimes": 1,
			"upon": 1,
			"memory": 1,
			"but": 2,
			"and": 5,
			"thou": 1,
			"down": 1,
			"here": 1,
			"might": 1,
			"to": 1,
			"at": 1,
			"lies": 1,
			"o": 1,
			"the": 2,
			"in": 3
		},
		"ears": {
			"play": 1,
			"are": 1,
			"of": 2,
			"fame": 1,
			"abroad": 1,
			"those": 1,
			"should": 1,
			"did": 1,
			"that": 1,
			"if": 1,
			"have": 2,
			"their": 1,
			"on": 1,
			"when": 1,
			"and": 6,
			"took": 1,
			"with": 1,
			"then": 1,
			"well": 1,
			"only": 1,
			"as": 3,
			"fair": 1,
			"straight": 1,
			"the": 3,
			"in": 1
		},
		"with": {
			"sweet": 9,
			"books": 2,
			"blue": 1,
			"sound": 1,
			"low": 1,
			"bow": 1,
			"dying": 2,
			"bread": 1,
			"look": 1,
			"summer": 3,
			"us": 25,
			"suffering": 1,
			"more": 8,
			"hear": 1,
			"thine": 4,
			"ring": 2,
			"ours": 2,
			"within": 1,
			"ready": 3,
			"england": 1,
			"dust": 2,
			"justice": 1,
			"loves": 1,
			"parting": 2,
			"christ": 1,
			"worn": 1,
			"fierce": 2,
			"laws": 2,
			"light": 11,
			"earth": 4,
			"forehead": 2,
			"doubt": 1,
			"his": 92,
			"james": 1,
			"happiness": 1,
			"dreary": 1,
			"him": 23,
			"crest": 1,
			"ear": 2,
			"book": 1,
			"midnight": 1,
			"sharp": 1,
			"law": 1,
			"blood": 11,
			"narrow": 2,
			"cheek": 1,
			"lady": 2,
			"bare": 3,
			"kiss": 1,
			"faithful": 1,
			"thousand": 2,
			"voices": 1,
			"deeper": 1,
			"passions": 1,
			"white": 2,
			"none": 4,
			"woe": 2,
			"silver": 3,
			"purple": 2,
			"tell": 1,
			"weary": 3,
			"wonder": 3,
			"are": 3,
			"saints": 1,
			"fears": 2,
			"humble": 1,
			"alas": 1,
			"right": 2,
			"back": 1,
			"warm": 1,
			"ive": 1,
			"word": 1,
			"who": 3,
			"hollow": 2,
			"sweetest": 1,
			"silent": 4,
			"men": 4,
			"which": 11,
			"holds": 1,
			"shout": 1,
			"country": 1,
			"steps": 6,
			"body": 1,
			"sounds": 4,
			"of": 48,
			"this": 10,
			"cast": 1,
			"high": 1,
			"souls": 2,
			"alike": 1,
			"talk": 1,
			"wine": 10,
			"hills": 1,
			"longfellow": 1,
			"once": 2,
			"triumph": 1,
			"angel": 2,
			"she": 2,
			"liberty": 2,
			"silence": 3,
			"sons": 1,
			"sacred": 1,
			"blossoms": 2,
			"gold": 13,
			"three": 2,
			"morning": 4,
			"heavy": 3,
			"thyself": 2,
			"flood": 1,
			"sight": 2,
			"age": 2,
			"joy": 19,
			"foam": 3,
			"scorn": 6,
			"beheld": 1,
			"dreadful": 3,
			"dear": 1,
			"two": 1,
			"fresh": 2,
			"pain": 2,
			"thick": 2,
			"fine": 1,
			"mine": 4,
			"solemn": 6,
			"not": 1,
			"awe": 2,
			"rapture": 4,
			"constant": 1,
			"crimson": 1,
			"side": 1,
			"starry": 1,
			"proud": 2,
			"every": 10,
			"praise": 1,
			"pressed": 1,
			"sword": 2,
			"it": 7,
			"over": 2,
			"magic": 2,
			"flight": 4,
			"eager": 4,
			"far": 1,
			"wisdom": 1,
			"lights": 2,
			"tongue": 3,
			"water": 2,
			"ease": 5,
			"feeble": 1,
			"by": 4,
			"eyes": 23,
			"alone": 1,
			"shut": 1,
			"long": 4,
			"sorrows": 2,
			"corn": 4,
			"mute": 1,
			"something": 3,
			"cold": 3,
			"pride": 1,
			"land": 1,
			"wars": 1,
			"is": 2,
			"joyous": 1,
			"like": 1,
			"fairest": 2,
			"away": 2,
			"hoary": 2,
			"idle": 2,
			"forms": 1,
			"why": 1,
			"immortality": 1,
			"hallowed": 1,
			"kings": 1,
			"forever": 1,
			"good": 8,
			"ever": 1,
			"either": 1,
			"care": 19,
			"they": 1,
			"speech": 1,
			"prayer": 2,
			"faint": 3,
			"gazed": 1,
			"you": 18,
			"nature": 1,
			"shot": 3,
			"thus": 1,
			"pale": 3,
			"swept": 1,
			"new": 3,
			"weakness": 1,
			"rosy": 3,
			"heard": 1,
			"leaves": 5,
			"earths": 2,
			"its": 30,
			"than": 1,
			"smile": 6,
			"slow": 4,
			"swift": 1,
			"kindly": 1,
			"pleasure": 3,
			"beams": 1,
			"song": 5,
			"those": 10,
			"where": 3,
			"gentle": 6,
			"despair": 3,
			"run": 1,
			"lovers": 1,
			"holy": 2,
			"blast": 1,
			"gray": 2,
			"just": 1,
			"welcome": 1,
			"for": 7,
			"noise": 1,
			"drops": 1,
			"hand": 7,
			"heaven": 4,
			"stones": 2,
			"charge": 3,
			"cup": 1,
			"bloody": 5,
			"surprise": 3,
			"bowed": 1,
			"breath": 7,
			"spite": 1,
			"my": 32,
			"blow": 1,
			"fingers": 5,
			"band": 1,
			"words": 11,
			"came": 3,
			"heroes": 1,
			"winds": 1,
			"great": 4,
			"tender": 4,
			"sighing": 1,
			"beauty": 2,
			"deaths": 1,
			"desire": 1,
			"earl": 3,
			"burning": 1,
			"touch": 1,
			"freedom": 1,
			"thy": 37,
			"smiles": 5,
			"greater": 2,
			"morn": 1,
			"vain": 2,
			"sleep": 2,
			"pretty": 2,
			"moan": 2,
			"peace": 1,
			"waves": 1,
			"whom": 5,
			"ray": 3,
			"mary": 1,
			"soul": 4,
			"passion": 1,
			"hope": 8,
			"remember": 1,
			"strive": 1,
			"various": 1,
			"makes": 1,
			"any": 1,
			"most": 1,
			"sir": 1,
			"times": 2,
			"wandering": 1,
			"torn": 1,
			"rising": 1,
			"lords": 1,
			"fools": 1,
			"clay": 4,
			"glow": 2,
			"sits": 1,
			"face": 1,
			"false": 2,
			"forward": 1,
			"sin": 1,
			"trembling": 4,
			"dew": 3,
			"rain": 2,
			"faith": 3,
			"god": 13,
			"can": 1,
			"foot": 1,
			"shame": 2,
			"noble": 1,
			"power": 2,
			"comfort": 1,
			"oer": 1,
			"crowned": 1,
			"sudden": 3,
			"immortal": 1,
			"that": 32,
			"swords": 3,
			"let": 1,
			"thorn": 2,
			"lips": 2,
			"cares": 5,
			"arm": 1,
			"man": 3,
			"bear": 1,
			"daily": 2,
			"both": 5,
			"fall": 1,
			"busy": 2,
			"broken": 1,
			"go": 1,
			"gladness": 3,
			"half": 3,
			"hang": 1,
			"perfume": 1,
			"brothers": 1,
			"had": 1,
			"general": 1,
			"pure": 3,
			"what": 9,
			"oh": 1,
			"beautiful": 1,
			"an": 22,
			"repose": 1,
			"nothing": 5,
			"stars": 3,
			"music": 4,
			"pleasures": 3,
			"charms": 1,
			"or": 8,
			"eye": 8,
			"lest": 1,
			"sweeter": 2,
			"hands": 3,
			"pause": 1,
			"bright": 2,
			"have": 3,
			"tears": 26,
			"fill": 1,
			"bitter": 2,
			"their": 43,
			"a": 224,
			"so": 9,
			"pains": 2,
			"them": 20,
			"adieu": 2,
			"true": 1,
			"green": 5,
			"never": 3,
			"many": 19,
			"dawn": 3,
			"spirit": 1,
			"ashes": 2,
			"almost": 1,
			"cruel": 1,
			"delight": 6,
			"love": 23,
			"groan": 1,
			"on": 8,
			"wing": 2,
			"charm": 1,
			"red": 4,
			"fast": 1,
			"chains": 2,
			"deep": 4,
			"celestial": 2,
			"old": 1,
			"but": 9,
			"iron": 2,
			"glance": 3,
			"grass": 4,
			"wet": 1,
			"death": 5,
			"knowledge": 2,
			"self": 2,
			"time": 3,
			"poor": 1,
			"empty": 1,
			"thee": 52,
			"ye": 1,
			"banners": 1,
			"moving": 1,
			"when": 2,
			"lifes": 1,
			"april": 1,
			"turns": 1,
			"terror": 3,
			"honest": 2,
			"merry": 2,
			"sigh": 1,
			"dreams": 3,
			"be": 2,
			"firm": 2,
			"roses": 4,
			"weeping": 1,
			"feet": 4,
			"wondrous": 2,
			"wings": 5,
			"t": 1,
			"glory": 7,
			"kind": 1,
			"awful": 1,
			"dumb": 1,
			"earthly": 1,
			"rage": 4,
			"distant": 2,
			"naught": 1,
			"heart": 9,
			"sorrow": 7,
			"german": 1,
			"anguish": 1,
			"head": 5,
			"nobler": 1,
			"and": 113,
			"bliss": 1,
			"thunder": 1,
			"mothers": 1,
			"grace": 6,
			"march": 1,
			"truth": 3,
			"bloom": 1,
			"do": 1,
			"fever": 1,
			"dark": 2,
			"sunshine": 1,
			"rays": 1,
			"myself": 1,
			"black": 2,
			"fate": 1,
			"blaze": 1,
			"days": 1,
			"grave": 1,
			"i": 6,
			"snow": 6,
			"thou": 1,
			"haste": 1,
			"guns": 1,
			"down": 1,
			"told": 1,
			"less": 1,
			"robin": 1,
			"bad": 2,
			"home": 1,
			"swell": 1,
			"dull": 1,
			"here": 4,
			"too": 1,
			"steel": 5,
			"mirth": 4,
			"mortal": 2,
			"one": 16,
			"might": 4,
			"such": 21,
			"shining": 1,
			"softly": 1,
			"secret": 2,
			"arts": 1,
			"pearl": 4,
			"looks": 4,
			"saint": 2,
			"each": 2,
			"anothers": 2,
			"brow": 6,
			"how": 2,
			"hearts": 5,
			"other": 2,
			"from": 4,
			"gifts": 2,
			"marble": 1,
			"strange": 5,
			"stronger": 2,
			"living": 3,
			"lilies": 1,
			"feeling": 2,
			"mind": 2,
			"ill": 1,
			"endless": 2,
			"reason": 2,
			"beat": 1,
			"beneath": 1,
			"ancient": 1,
			"these": 5,
			"shield": 1,
			"while": 2,
			"breast": 1,
			"honor": 1,
			"no": 14,
			"mystic": 2,
			"early": 2,
			"calm": 2,
			"voice": 8,
			"dread": 1,
			"decay": 1,
			"guilty": 1,
			"mighty": 1,
			"ears": 2,
			"with": 10,
			"singing": 1,
			"sad": 1,
			"sweetness": 1,
			"soft": 3,
			"wave": 2,
			"drew": 2,
			"now": 1,
			"set": 1,
			"gaze": 2,
			"flying": 1,
			"some": 9,
			"learned": 1,
			"meet": 1,
			"heads": 2,
			"will": 1,
			"strong": 4,
			"himself": 2,
			"twenty": 3,
			"locks": 1,
			"prayers": 2,
			"all": 67,
			"patient": 1,
			"grief": 3,
			"wild": 5,
			"loving": 1,
			"then": 2,
			"room": 1,
			"ho": 1,
			"slain": 1,
			"thought": 2,
			"through": 3,
			"pleasant": 1,
			"notes": 1,
			"ten": 1,
			"laugh": 1,
			"toil": 4,
			"service": 1,
			"angels": 2,
			"doth": 1,
			"clear": 2,
			"shine": 1,
			"peaceful": 1,
			"spring": 3,
			"much": 1,
			"fiery": 1,
			"beauteous": 1,
			"wealth": 2,
			"our": 15,
			"smoke": 1,
			"sense": 1,
			"sleeps": 1,
			"fortune": 1,
			"open": 2,
			"frame": 1,
			"fear": 8,
			"night": 2,
			"patience": 6,
			"equal": 6,
			"ends": 1,
			"mercy": 4,
			"pity": 3,
			"shall": 3,
			"before": 2,
			"hundred": 1,
			"only": 6,
			"golden": 6,
			"wind": 1,
			"still": 1,
			"your": 16,
			"shade": 2,
			"natures": 3,
			"yet": 3,
			"to": 12,
			"loud": 2,
			"poetry": 1,
			"human": 2,
			"speed": 7,
			"knee": 1,
			"into": 1,
			"round": 2,
			"flame": 1,
			"keen": 3,
			"turn": 2,
			"thinking": 1,
			"little": 4,
			"rich": 2,
			"backward": 1,
			"gently": 1,
			"heavenly": 3,
			"freedoms": 2,
			"wounds": 1,
			"growing": 2,
			"hence": 1,
			"view": 1,
			"spear": 1,
			"prove": 1,
			"ah": 1,
			"harp": 1,
			"vast": 1,
			"may": 1,
			"strife": 2,
			"sweep": 2,
			"powers": 1,
			"we": 1,
			"gloom": 1,
			"glad": 1,
			"simple": 1,
			"loss": 1,
			"store": 1,
			"whose": 4,
			"falling": 1,
			"as": 5,
			"fair": 2,
			"heavens": 1,
			"english": 2,
			"life": 9,
			"arms": 8,
			"me": 42,
			"strength": 1,
			"at": 4,
			"lies": 1,
			"o": 2,
			"chain": 2,
			"rings": 1,
			"the": 347,
			"tis": 1,
			"though": 1,
			"bent": 1,
			"stood": 1,
			"scarce": 2,
			"labor": 5,
			"her": 50,
			"change": 1,
			"radiant": 1,
			"young": 2,
			"dead": 3,
			"tread": 2,
			"fire": 8,
			"trees": 2,
			"seas": 1,
			"devil": 1,
			"restless": 3,
			"in": 17,
			"flowers": 9,
			"step": 1,
			"dim": 2,
			"air": 1,
			"ruin": 1,
			"thoughts": 5
		},
		"around": {
			"us": 10,
			"earth": 1,
			"his": 1,
			"him": 12,
			"of": 1,
			"this": 1,
			"she": 2,
			"nor": 1,
			"not": 1,
			"every": 1,
			"it": 5,
			"by": 1,
			"long": 1,
			"is": 1,
			"soon": 1,
			"like": 2,
			"its": 4,
			"een": 1,
			"where": 2,
			"suns": 1,
			"my": 1,
			"thy": 1,
			"that": 1,
			"their": 2,
			"a": 2,
			"them": 4,
			"on": 2,
			"above": 1,
			"but": 1,
			"wet": 1,
			"thee": 4,
			"when": 1,
			"until": 1,
			"and": 8,
			"i": 6,
			"bids": 1,
			"these": 1,
			"with": 1,
			"through": 1,
			"laugh": 1,
			"our": 5,
			"to": 4,
			"me": 12,
			"o": 1,
			"the": 16,
			"her": 8,
			"in": 2
		},
		"singing": {
			"ready": 1,
			"birds": 1,
			"of": 1,
			"season": 1,
			"she": 2,
			"joy": 1,
			"bird": 1,
			"chant": 1,
			"laughing": 1,
			"breath": 1,
			"thy": 1,
			"ere": 1,
			"a": 1,
			"on": 1,
			"old": 1,
			"glory": 1,
			"sweetly": 1,
			"and": 1,
			"softly": 1,
			"from": 2,
			"while": 1,
			"around": 1,
			"all": 2,
			"only": 1,
			"to": 3,
			"as": 2,
			"english": 1,
			"at": 1,
			"wound": 1,
			"grow": 1,
			"the": 1,
			"her": 1,
			"in": 6
		},
		"sad": {
			"breaking": 1,
			"more": 1,
			"tell": 1,
			"are": 4,
			"story": 1,
			"steps": 1,
			"of": 6,
			"city": 1,
			"dear": 1,
			"sands": 1,
			"it": 2,
			"host": 1,
			"eyes": 3,
			"is": 4,
			"like": 1,
			"slow": 1,
			"run": 1,
			"for": 1,
			"surprise": 1,
			"my": 1,
			"words": 2,
			"soul": 4,
			"queen": 1,
			"that": 4,
			"if": 1,
			"cares": 1,
			"stone": 1,
			"music": 1,
			"or": 1,
			"eye": 1,
			"tears": 1,
			"their": 1,
			"a": 1,
			"so": 2,
			"but": 2,
			"moving": 1,
			"when": 1,
			"lifes": 1,
			"dreams": 1,
			"heart": 5,
			"anguish": 1,
			"and": 19,
			"last": 1,
			"year": 1,
			"days": 1,
			"i": 1,
			"home": 1,
			"one": 2,
			"beneath": 1,
			"bid": 1,
			"roll": 1,
			"voice": 1,
			"with": 1,
			"sad": 2,
			"now": 1,
			"till": 1,
			"himself": 1,
			"thought": 1,
			"day": 2,
			"still": 1,
			"to": 5,
			"ah": 1,
			"may": 1,
			"we": 1,
			"as": 4,
			"array": 1,
			"fair": 1,
			"life": 1,
			"the": 3,
			"been": 1,
			"in": 4,
			"thoughts": 2,
			"sky": 1
		},
		"sweetness": {
			"of": 5,
			"up": 1,
			"mine": 2,
			"is": 1,
			"rise": 1,
			"majesty": 1,
			"did": 1,
			"that": 1,
			"their": 1,
			"a": 1,
			"on": 1,
			"filled": 1,
			"yet": 1,
			"to": 1,
			"drawn": 1,
			"near": 1,
			"there": 1,
			"in": 2
		},
		"virtue": {
			"his": 1,
			"woe": 1,
			"who": 1,
			"of": 2,
			"she": 1,
			"nor": 1,
			"gold": 1,
			"not": 3,
			"wisdom": 1,
			"by": 1,
			"alone": 2,
			"is": 1,
			"where": 1,
			"lost": 1,
			"freedom": 1,
			"thy": 1,
			"peace": 2,
			"whom": 1,
			"immortal": 1,
			"was": 1,
			"that": 1,
			"if": 1,
			"upon": 1,
			"hath": 1,
			"but": 1,
			"be": 1,
			"merit": 1,
			"and": 6,
			"truth": 2,
			"gifts": 1,
			"follow": 1,
			"shall": 1,
			"only": 1,
			"still": 1,
			"to": 1,
			"rich": 1,
			"bold": 1,
			"lies": 1,
			"o": 1,
			"the": 1,
			"first": 1,
			"there": 1,
			"in": 1
		},
		"everlasting": {
			"light": 1,
			"are": 1,
			"of": 1,
			"fame": 1,
			"farewell": 1,
			"song": 1,
			"watch": 1,
			"sleep": 1,
			"shame": 1,
			"had": 1,
			"music": 1,
			"fill": 1,
			"lord": 1,
			"love": 2,
			"head": 1,
			"and": 2,
			"thou": 1,
			"rome": 1,
			"spring": 1,
			"day": 1,
			"to": 2,
			"clouds": 1,
			"son": 1,
			"o": 1,
			"the": 1
		},
		"soft": {
			"blue": 2,
			"summer": 1,
			"sighs": 1,
			"his": 1,
			"stream": 1,
			"cheek": 1,
			"breathing": 1,
			"white": 2,
			"warm": 1,
			"who": 1,
			"of": 4,
			"this": 1,
			"hung": 1,
			"silence": 1,
			"beloved": 1,
			"rapture": 1,
			"hangs": 1,
			"lights": 1,
			"by": 1,
			"eyes": 1,
			"is": 2,
			"like": 1,
			"moves": 1,
			"than": 1,
			"song": 2,
			"those": 1,
			"gentle": 1,
			"gray": 1,
			"hand": 2,
			"surprise": 1,
			"note": 1,
			"winds": 1,
			"smiles": 1,
			"sleep": 1,
			"shadow": 1,
			"glow": 1,
			"repose": 1,
			"moon": 1,
			"or": 1,
			"ran": 1,
			"a": 1,
			"so": 1,
			"falls": 2,
			"green": 1,
			"lay": 1,
			"on": 3,
			"but": 1,
			"bell": 1,
			"brown": 1,
			"sigh": 1,
			"feet": 1,
			"kind": 1,
			"and": 20,
			"eer": 1,
			"black": 1,
			"i": 3,
			"tale": 1,
			"strange": 1,
			"breast": 1,
			"voice": 1,
			"with": 1,
			"patient": 1,
			"pity": 2,
			"yet": 1,
			"to": 2,
			"flow": 1,
			"as": 6,
			"sat": 1,
			"slumber": 1,
			"the": 3,
			"in": 4,
			"air": 2
		},
		"wave": {
			"save": 1,
			"dies": 1,
			"of": 7,
			"after": 1,
			"nor": 1,
			"whatever": 1,
			"it": 2,
			"long": 1,
			"unto": 1,
			"its": 1,
			"where": 2,
			"for": 1,
			"thy": 1,
			"peace": 1,
			"along": 1,
			"oer": 5,
			"that": 3,
			"let": 1,
			"must": 1,
			"oh": 1,
			"or": 1,
			"have": 1,
			"their": 2,
			"a": 3,
			"so": 1,
			"love": 1,
			"on": 5,
			"old": 1,
			"but": 3,
			"ye": 1,
			"and": 12,
			"dream": 1,
			"here": 1,
			"one": 1,
			"from": 1,
			"beat": 1,
			"with": 1,
			"till": 1,
			"all": 1,
			"poured": 1,
			"thomas": 1,
			"to": 1,
			"whose": 1,
			"he": 1,
			"o": 1,
			"the": 8,
			"her": 2,
			"in": 3
		},
		"drew": {
			"us": 1,
			"his": 4,
			"him": 1,
			"after": 1,
			"for": 1,
			"forward": 1,
			"an": 1,
			"their": 1,
			"a": 4,
			"on": 2,
			"until": 1,
			"and": 4,
			"from": 1,
			"nigh": 1,
			"with": 2,
			"nights": 1,
			"me": 3,
			"o": 1,
			"the": 5,
			"her": 2,
			"near": 2
		},
		"soggarth": {
			"aroon": 21,
			"since": 1
		},
		"now": {
			"sweet": 1,
			"come": 2,
			"low": 1,
			"look": 3,
			"more": 1,
			"since": 1,
			"thine": 2,
			"within": 2,
			"unseen": 1,
			"curse": 1,
			"went": 1,
			"touched": 1,
			"his": 5,
			"sharp": 1,
			"see": 2,
			"leap": 1,
			"kiss": 1,
			"deeper": 1,
			"s": 1,
			"hast": 1,
			"tell": 4,
			"are": 5,
			"alas": 1,
			"back": 1,
			"under": 1,
			"who": 3,
			"which": 3,
			"worth": 2,
			"call": 2,
			"of": 5,
			"this": 2,
			"high": 1,
			"keep": 1,
			"up": 1,
			"she": 3,
			"rock": 1,
			"nor": 1,
			"does": 2,
			"sez": 1,
			"grown": 1,
			"joy": 1,
			"cling": 1,
			"forth": 1,
			"scorn": 1,
			"dear": 1,
			"two": 1,
			"rose": 2,
			"mine": 1,
			"not": 1,
			"burn": 1,
			"serve": 1,
			"proud": 1,
			"hes": 2,
			"every": 2,
			"it": 9,
			"hangs": 1,
			"weep": 1,
			"by": 5,
			"father": 1,
			"alone": 1,
			"bring": 1,
			"twixt": 1,
			"quiet": 1,
			"is": 15,
			"like": 2,
			"farewell": 1,
			"away": 1,
			"why": 3,
			"forever": 3,
			"good": 1,
			"lead": 2,
			"ever": 1,
			"they": 8,
			"you": 2,
			"nature": 1,
			"its": 3,
			"than": 2,
			"slow": 1,
			"stir": 1,
			"those": 1,
			"where": 5,
			"despair": 1,
			"for": 12,
			"hand": 1,
			"become": 1,
			"darling": 1,
			"take": 1,
			"rest": 1,
			"my": 13,
			"came": 1,
			"tender": 1,
			"again": 1,
			"shines": 1,
			"thy": 4,
			"morn": 1,
			"peace": 1,
			"comes": 1,
			"mary": 2,
			"therefore": 1,
			"hope": 1,
			"born": 1,
			"remember": 1,
			"because": 1,
			"name": 3,
			"sits": 2,
			"god": 2,
			"can": 2,
			"were": 1,
			"oer": 1,
			"did": 1,
			"was": 7,
			"that": 8,
			"if": 2,
			"let": 6,
			"bear": 1,
			"says": 1,
			"fall": 1,
			"go": 1,
			"brothers": 1,
			"had": 1,
			"must": 3,
			"what": 1,
			"oh": 1,
			"nothing": 1,
			"or": 2,
			"conscience": 1,
			"think": 1,
			"de": 4,
			"have": 1,
			"am": 1,
			"their": 3,
			"a": 9,
			"so": 2,
			"green": 1,
			"upon": 5,
			"lord": 1,
			"hath": 1,
			"on": 7,
			"smiling": 1,
			"deep": 1,
			"but": 5,
			"perhaps": 1,
			"thee": 1,
			"ye": 1,
			"when": 4,
			"lifes": 1,
			"be": 4,
			"glory": 1,
			"naught": 1,
			"and": 36,
			"do": 1,
			"black": 1,
			"i": 36,
			"thou": 6,
			"bad": 1,
			"here": 1,
			"too": 1,
			"one": 2,
			"might": 2,
			"shining": 1,
			"each": 1,
			"from": 7,
			"would": 2,
			"want": 1,
			"beneath": 2,
			"these": 1,
			"while": 6,
			"no": 6,
			"early": 1,
			"with": 7,
			"around": 1,
			"now": 5,
			"set": 1,
			"give": 3,
			"some": 1,
			"till": 1,
			"will": 1,
			"lying": 1,
			"all": 9,
			"comrades": 1,
			"then": 1,
			"thought": 1,
			"could": 2,
			"through": 2,
			"has": 3,
			"well": 1,
			"doth": 1,
			"king": 6,
			"turned": 1,
			"our": 3,
			"feel": 1,
			"open": 1,
			"pity": 1,
			"shall": 4,
			"before": 1,
			"your": 2,
			"to": 21,
			"enter": 1,
			"we": 2,
			"as": 7,
			"stand": 1,
			"he": 6,
			"at": 4,
			"o": 3,
			"left": 1,
			"the": 49,
			"tis": 1,
			"though": 3,
			"stood": 1,
			"her": 1,
			"share": 1,
			"there": 5,
			"in": 21,
			"dim": 1
		},
		"set": {
			"us": 2,
			"thine": 1,
			"loves": 1,
			"free": 5,
			"his": 3,
			"him": 2,
			"who": 1,
			"which": 1,
			"of": 4,
			"up": 1,
			"off": 2,
			"forth": 1,
			"two": 1,
			"not": 1,
			"today": 1,
			"every": 1,
			"it": 2,
			"by": 1,
			"twixt": 1,
			"about": 1,
			"you": 1,
			"where": 1,
			"my": 6,
			"ourselves": 1,
			"a": 1,
			"so": 1,
			"them": 1,
			"upon": 2,
			"on": 4,
			"but": 2,
			"death": 1,
			"thee": 2,
			"out": 1,
			"and": 4,
			"i": 1,
			"down": 1,
			"less": 1,
			"between": 2,
			"how": 1,
			"ancient": 1,
			"with": 3,
			"will": 1,
			"all": 1,
			"then": 1,
			"our": 1,
			"your": 1,
			"yet": 1,
			"to": 4,
			"round": 1,
			"mankind": 1,
			"me": 1,
			"at": 1,
			"o": 1,
			"the": 12,
			"her": 3,
			"in": 5
		},
		"give": {
			"us": 7,
			"more": 1,
			"christ": 1,
			"him": 6,
			"ear": 1,
			"law": 1,
			"none": 1,
			"up": 6,
			"joy": 1,
			"dreadful": 1,
			"place": 2,
			"aught": 2,
			"not": 2,
			"every": 2,
			"it": 11,
			"neither": 1,
			"unto": 1,
			"like": 1,
			"away": 3,
			"they": 1,
			"you": 5,
			"where": 1,
			"welcome": 1,
			"for": 1,
			"again": 1,
			"themselves": 1,
			"thy": 2,
			"peace": 1,
			"ourselves": 1,
			"cheer": 1,
			"oer": 1,
			"let": 1,
			"another": 1,
			"half": 1,
			"what": 1,
			"even": 1,
			"or": 1,
			"their": 2,
			"a": 14,
			"them": 4,
			"but": 4,
			"thee": 7,
			"when": 1,
			"sorrow": 1,
			"and": 6,
			"whateer": 1,
			"thou": 3,
			"too": 1,
			"drink": 1,
			"no": 4,
			"with": 1,
			"room": 1,
			"well": 1,
			"your": 1,
			"yet": 1,
			"way": 1,
			"to": 19,
			"little": 1,
			"we": 1,
			"as": 1,
			"life": 2,
			"me": 36,
			"o": 3,
			"the": 19,
			"her": 5,
			"near": 1,
			"in": 3,
			"thoughts": 1
		},
		"gaze": {
			"of": 2,
			"beyond": 1,
			"not": 1,
			"far": 1,
			"like": 1,
			"they": 1,
			"for": 1,
			"my": 1,
			"or": 1,
			"upon": 5,
			"on": 4,
			"and": 6,
			"i": 1,
			"one": 1,
			"across": 1,
			"while": 1,
			"to": 1,
			"he": 1,
			"below": 1,
			"the": 2,
			"oft": 1,
			"in": 1
		},
		"single": {
			"more": 1,
			"lady": 1,
			"once": 1,
			"nor": 1,
			"bird": 1,
			"sheep": 1,
			"sands": 1,
			"hours": 1,
			"poet": 1,
			"take": 1,
			"heroes": 1,
			"half": 1,
			"tear": 2,
			"or": 1,
			"field": 2,
			"on": 2,
			"but": 1,
			"self": 3,
			"and": 1,
			"truth": 1,
			"i": 1,
			"from": 1,
			"mind": 1,
			"hair": 1,
			"thought": 1,
			"well": 1,
			"to": 2,
			"strain": 1,
			"life": 1,
			"he": 1,
			"the": 2,
			"soldier": 1,
			"step": 1
		},
		"foreign": {
			"aid": 1,
			"land": 5,
			"force": 1,
			"where": 1,
			"theres": 1,
			"shore": 2,
			"stroke": 1,
			"crowd": 1,
			"an": 1,
			"nothing": 1,
			"soil": 1,
			"foes": 1,
			"strand": 1,
			"foe": 1,
			"wrong": 1,
			"wood": 1,
			"skies": 1,
			"arms": 1
		},
		"flying": {
			"come": 2,
			"cloud": 2,
			"star": 1,
			"over": 1,
			"either": 1,
			"wide": 1,
			"where": 1,
			"for": 1,
			"better": 1,
			"were": 1,
			"what": 1,
			"when": 1,
			"feet": 1,
			"and": 2,
			"against": 1,
			"all": 1,
			"thread": 1,
			"before": 1,
			"to": 1,
			"clouds": 1,
			"o": 1,
			"coming": 1,
			"streams": 1,
			"the": 1,
			"near": 1
		},
		"some": {
			"sweet": 5,
			"books": 1,
			"perchance": 1,
			"blue": 1,
			"low": 1,
			"cool": 1,
			"murmur": 1,
			"blessd": 1,
			"blew": 1,
			"fierce": 1,
			"birds": 2,
			"cloud": 1,
			"fond": 3,
			"valley": 1,
			"play": 1,
			"women": 1,
			"thing": 1,
			"deeper": 1,
			"wail": 1,
			"are": 3,
			"story": 1,
			"word": 2,
			"fell": 1,
			"who": 2,
			"silent": 1,
			"men": 1,
			"tired": 1,
			"call": 1,
			"country": 1,
			"of": 25,
			"star": 1,
			"up": 1,
			"she": 1,
			"sacred": 1,
			"morning": 2,
			"grown": 1,
			"joy": 2,
			"spot": 4,
			"dear": 1,
			"place": 1,
			"part": 1,
			"news": 2,
			"divine": 2,
			"praise": 2,
			"sword": 1,
			"it": 1,
			"jove": 1,
			"long": 1,
			"mute": 1,
			"is": 1,
			"vision": 1,
			"like": 1,
			"lo": 1,
			"boy": 1,
			"form": 2,
			"idle": 1,
			"people": 1,
			"good": 1,
			"they": 2,
			"faint": 2,
			"funeral": 1,
			"you": 1,
			"stern": 1,
			"new": 2,
			"earths": 1,
			"kindly": 2,
			"lightly": 1,
			"beams": 1,
			"gentle": 2,
			"small": 3,
			"just": 1,
			"for": 2,
			"drops": 1,
			"clime": 1,
			"should": 1,
			"great": 4,
			"sing": 1,
			"pretty": 1,
			"warrior": 1,
			"shore": 1,
			"soul": 1,
			"hope": 1,
			"times": 1,
			"friend": 1,
			"fools": 1,
			"door": 1,
			"sits": 1,
			"rain": 1,
			"god": 1,
			"noble": 1,
			"power": 1,
			"were": 3,
			"cause": 1,
			"did": 1,
			"that": 2,
			"lips": 1,
			"arm": 1,
			"poems": 1,
			"thin": 1,
			"go": 1,
			"seed": 1,
			"tear": 1,
			"desert": 1,
			"had": 1,
			"pure": 1,
			"sit": 1,
			"an": 1,
			"stone": 1,
			"music": 1,
			"or": 5,
			"field": 1,
			"have": 1,
			"tears": 2,
			"isle": 2,
			"horse": 1,
			"their": 1,
			"so": 1,
			"green": 1,
			"things": 2,
			"dawn": 1,
			"spirit": 2,
			"charm": 1,
			"sees": 2,
			"above": 1,
			"deep": 2,
			"memory": 1,
			"celestial": 1,
			"old": 2,
			"but": 3,
			"death": 1,
			"time": 4,
			"poor": 2,
			"eat": 1,
			"honest": 1,
			"sigh": 1,
			"dreams": 2,
			"ay": 1,
			"line": 1,
			"kind": 2,
			"brave": 1,
			"distant": 1,
			"heart": 5,
			"say": 5,
			"and": 7,
			"mothers": 1,
			"truth": 2,
			"do": 1,
			"dark": 1,
			"prize": 1,
			"lone": 3,
			"black": 2,
			"days": 1,
			"grave": 2,
			"i": 3,
			"worthy": 1,
			"woman": 1,
			"tale": 1,
			"sunny": 1,
			"dull": 1,
			"island": 2,
			"mournful": 1,
			"one": 10,
			"might": 1,
			"such": 1,
			"rocks": 1,
			"secret": 1,
			"work": 1,
			"saint": 1,
			"brow": 2,
			"how": 1,
			"hearts": 1,
			"higher": 1,
			"other": 5,
			"from": 1,
			"strange": 4,
			"would": 1,
			"hidden": 4,
			"present": 1,
			"mystic": 1,
			"dread": 1,
			"sphere": 1,
			"goodly": 1,
			"mighty": 1,
			"with": 4,
			"sad": 1,
			"will": 1,
			"flash": 1,
			"strong": 1,
			"twenty": 1,
			"gay": 1,
			"thought": 2,
			"through": 2,
			"has": 1,
			"doth": 1,
			"clear": 1,
			"minds": 1,
			"fiery": 1,
			"wrong": 1,
			"day": 4,
			"future": 1,
			"fear": 2,
			"loved": 1,
			"pity": 1,
			"shall": 1,
			"before": 1,
			"hundred": 1,
			"still": 3,
			"shade": 1,
			"to": 5,
			"youth": 1,
			"flame": 1,
			"turn": 1,
			"lie": 2,
			"little": 2,
			"answer": 1,
			"strain": 1,
			"mould": 1,
			"vast": 2,
			"may": 1,
			"simple": 1,
			"whose": 1,
			"as": 1,
			"fair": 2,
			"happy": 3,
			"done": 1,
			"end": 1,
			"me": 1,
			"o": 1,
			"coming": 1,
			"greek": 1,
			"left": 2,
			"the": 4,
			"sure": 1,
			"world": 1,
			"safe": 1,
			"dead": 1,
			"in": 10,
			"purpose": 1
		},
		"shone": {
			"of": 1,
			"forth": 2,
			"over": 2,
			"by": 1,
			"like": 2,
			"ever": 1,
			"beauty": 1,
			"oer": 1,
			"bright": 1,
			"so": 2,
			"upon": 3,
			"on": 2,
			"when": 1,
			"and": 3,
			"one": 1,
			"with": 1,
			"drum": 1,
			"through": 2,
			"shall": 1,
			"round": 1,
			"we": 1,
			"as": 1,
			"at": 2,
			"the": 2,
			"in": 1
		},
		"learned": {
			"beside": 1,
			"of": 1,
			"aught": 1,
			"by": 2,
			"its": 1,
			"for": 2,
			"name": 1,
			"man": 1,
			"what": 1,
			"so": 2,
			"and": 1,
			"one": 1,
			"from": 2,
			"to": 7,
			"art": 1,
			"at": 1,
			"the": 1,
			"in": 3
		},
		"till": {
			"itself": 1,
			"hear": 1,
			"taught": 1,
			"loves": 1,
			"went": 1,
			"christ": 1,
			"earth": 1,
			"his": 2,
			"midnight": 1,
			"wi": 1,
			"under": 1,
			"men": 1,
			"of": 1,
			"she": 2,
			"morning": 2,
			"pain": 1,
			"every": 1,
			"it": 15,
			"over": 2,
			"by": 4,
			"eyes": 1,
			"soon": 1,
			"like": 5,
			"they": 6,
			"you": 5,
			"thus": 1,
			"pale": 1,
			"earths": 1,
			"for": 1,
			"heaven": 1,
			"lost": 1,
			"tomorrow": 2,
			"my": 7,
			"came": 1,
			"thy": 1,
			"morn": 1,
			"peace": 1,
			"waves": 1,
			"hope": 1,
			"was": 1,
			"that": 4,
			"make": 1,
			"an": 1,
			"even": 1,
			"bright": 1,
			"danger": 1,
			"a": 8,
			"dawn": 1,
			"on": 4,
			"quite": 1,
			"fast": 1,
			"memory": 1,
			"filled": 1,
			"death": 6,
			"self": 2,
			"time": 3,
			"when": 1,
			"lifes": 1,
			"heart": 2,
			"sorrow": 1,
			"and": 5,
			"black": 1,
			"fate": 2,
			"days": 1,
			"i": 8,
			"thou": 3,
			"one": 5,
			"each": 2,
			"from": 2,
			"with": 1,
			"now": 1,
			"some": 2,
			"locks": 1,
			"all": 8,
			"gods": 1,
			"then": 4,
			"flesh": 1,
			"through": 1,
			"our": 2,
			"day": 1,
			"night": 1,
			"shall": 1,
			"clouds": 1,
			"human": 1,
			"into": 1,
			"wood": 1,
			"we": 4,
			"life": 1,
			"he": 9,
			"at": 3,
			"the": 62,
			"her": 2,
			"there": 1,
			"in": 4
		},
		"hair": {
			"white": 1,
			"amidst": 1,
			"under": 1,
			"which": 1,
			"of": 2,
			"fame": 1,
			"she": 1,
			"does": 1,
			"grew": 1,
			"it": 1,
			"is": 2,
			"looked": 1,
			"like": 1,
			"those": 1,
			"for": 3,
			"should": 1,
			"was": 4,
			"that": 3,
			"if": 1,
			"or": 1,
			"a": 6,
			"met": 1,
			"on": 1,
			"when": 1,
			"and": 18,
			"i": 1,
			"too": 1,
			"from": 1,
			"across": 1,
			"would": 1,
			"with": 1,
			"all": 1,
			"could": 1,
			"shall": 1,
			"still": 1,
			"to": 1,
			"may": 1,
			"as": 2,
			"fair": 1,
			"lies": 1,
			"the": 2,
			"tis": 1,
			"in": 2
		},
		"tempest": {
			"blew": 1,
			"cloud": 1,
			"hide": 1,
			"of": 4,
			"every": 1,
			"like": 1,
			"they": 1,
			"came": 1,
			"that": 1,
			"let": 1,
			"on": 2,
			"but": 1,
			"and": 1,
			"from": 1,
			"passing": 1,
			"loud": 2,
			"clouds": 1,
			"in": 1
		},
		"realm": {
			"amidst": 1,
			"of": 10,
			"this": 1,
			"beyond": 1,
			"for": 2,
			"so": 1,
			"and": 2,
			"shall": 1,
			"before": 1,
			"hundred": 1,
			"lies": 1,
			"her": 1,
			"in": 2
		},
		"meet": {
			"sighs": 1,
			"thine": 1,
			"unseen": 1,
			"loves": 1,
			"him": 1,
			"under": 1,
			"she": 1,
			"nor": 1,
			"two": 1,
			"rose": 1,
			"not": 1,
			"today": 1,
			"far": 1,
			"by": 1,
			"like": 1,
			"fairest": 1,
			"together": 1,
			"you": 1,
			"those": 2,
			"where": 1,
			"for": 5,
			"again": 13,
			"thy": 2,
			"because": 1,
			"sir": 1,
			"along": 1,
			"that": 1,
			"both": 1,
			"nothing": 1,
			"or": 2,
			"their": 2,
			"a": 3,
			"so": 1,
			"them": 1,
			"but": 2,
			"thee": 5,
			"and": 10,
			"i": 4,
			"here": 1,
			"how": 1,
			"other": 1,
			"from": 1,
			"these": 1,
			"no": 2,
			"with": 5,
			"some": 1,
			"all": 1,
			"ten": 1,
			"our": 1,
			"your": 1,
			"to": 4,
			"he": 1,
			"me": 5,
			"at": 1,
			"the": 12,
			"her": 3,
			"change": 1,
			"in": 4
		},
		"heads": {
			"are": 1,
			"of": 3,
			"nor": 1,
			"not": 1,
			"away": 1,
			"become": 1,
			"main": 1,
			"that": 1,
			"must": 1,
			"never": 1,
			"ye": 1,
			"and": 2,
			"dream": 1,
			"i": 1,
			"how": 1,
			"with": 2,
			"all": 1,
			"could": 1,
			"to": 1,
			"may": 1,
			"he": 1,
			"the": 2,
			"bent": 1
		},
		"will": {
			"come": 17,
			"sound": 1,
			"dare": 1,
			"us": 2,
			"more": 1,
			"hear": 1,
			"thine": 2,
			"within": 2,
			"chase": 1,
			"free": 1,
			"die": 2,
			"appear": 2,
			"dreary": 1,
			"him": 2,
			"see": 3,
			"kiss": 1,
			"none": 1,
			"surely": 1,
			"tell": 5,
			"aid": 2,
			"beside": 1,
			"back": 2,
			"who": 1,
			"guard": 1,
			"ones": 1,
			"call": 2,
			"of": 5,
			"this": 1,
			"yield": 2,
			"keep": 3,
			"kept": 1,
			"after": 1,
			"she": 3,
			"nor": 2,
			"find": 6,
			"two": 1,
			"part": 2,
			"pass": 1,
			"not": 66,
			"dwell": 1,
			"serve": 2,
			"side": 1,
			"praise": 1,
			"it": 6,
			"perish": 2,
			"bless": 4,
			"weep": 3,
			"send": 1,
			"by": 2,
			"eyes": 1,
			"long": 1,
			"bring": 3,
			"is": 3,
			"soon": 5,
			"rise": 4,
			"like": 1,
			"return": 1,
			"why": 2,
			"lead": 1,
			"ever": 1,
			"they": 5,
			"believe": 2,
			"you": 4,
			"than": 1,
			"smile": 1,
			"song": 1,
			"run": 3,
			"welcome": 1,
			"for": 2,
			"drops": 1,
			"read": 1,
			"become": 2,
			"cry": 2,
			"take": 3,
			"speak": 2,
			"boys": 1,
			"tomorrow": 1,
			"my": 4,
			"remain": 2,
			"touch": 1,
			"thy": 1,
			"sing": 4,
			"pray": 1,
			"sleep": 1,
			"teach": 1,
			"therefore": 1,
			"wear": 1,
			"remember": 3,
			"strive": 3,
			"cease": 1,
			"times": 1,
			"torn": 1,
			"william": 2,
			"god": 2,
			"oer": 1,
			"need": 2,
			"that": 3,
			"if": 2,
			"let": 4,
			"show": 4,
			"always": 1,
			"make": 9,
			"fall": 2,
			"go": 2,
			"trust": 1,
			"hang": 1,
			"sail": 1,
			"had": 1,
			"what": 1,
			"sit": 1,
			"wait": 1,
			"hold": 3,
			"or": 3,
			"think": 4,
			"pause": 1,
			"have": 8,
			"ride": 1,
			"their": 1,
			"so": 1,
			"sometimes": 1,
			"lay": 1,
			"lord": 1,
			"never": 7,
			"walk": 1,
			"love": 3,
			"break": 1,
			"own": 1,
			"fast": 1,
			"deep": 1,
			"old": 1,
			"but": 8,
			"thee": 6,
			"ye": 7,
			"when": 3,
			"until": 1,
			"burst": 1,
			"be": 61,
			"roses": 1,
			"t": 1,
			"out": 1,
			"say": 4,
			"paradise": 1,
			"close": 1,
			"and": 22,
			"march": 1,
			"do": 7,
			"last": 3,
			"fly": 1,
			"i": 23,
			"thou": 1,
			"down": 1,
			"too": 1,
			"one": 2,
			"storm": 1,
			"such": 1,
			"draw": 2,
			"softly": 1,
			"rather": 1,
			"henry": 1,
			"help": 3,
			"from": 2,
			"join": 1,
			"would": 1,
			"no": 2,
			"decay": 1,
			"with": 5,
			"set": 1,
			"give": 12,
			"gaze": 1,
			"some": 1,
			"follow": 1,
			"flash": 1,
			"all": 3,
			"wild": 1,
			"familiar": 1,
			"feed": 3,
			"lose": 2,
			"through": 1,
			"laugh": 3,
			"shine": 1,
			"wake": 2,
			"our": 2,
			"fortune": 1,
			"open": 2,
			"neer": 3,
			"fear": 1,
			"echo": 1,
			"still": 2,
			"yet": 1,
			"to": 12,
			"round": 1,
			"turn": 2,
			"answer": 1,
			"live": 2,
			"freedoms": 1,
			"get": 1,
			"know": 6,
			"enter": 1,
			"we": 4,
			"as": 4,
			"stand": 2,
			"end": 1,
			"he": 5,
			"me": 5,
			"at": 1,
			"o": 2,
			"grow": 1,
			"arise": 2,
			"the": 28,
			"tis": 1,
			"though": 2,
			"fight": 1,
			"scarce": 1,
			"her": 1,
			"share": 1,
			"change": 2,
			"thirst": 1,
			"there": 3,
			"in": 7,
			"shed": 1,
			"seem": 3
		},
		"follow": {
			"woes": 1,
			"his": 1,
			"him": 4,
			"this": 1,
			"every": 1,
			"it": 3,
			"evil": 1,
			"is": 1,
			"soon": 1,
			"you": 2,
			"thy": 1,
			"rain": 1,
			"oer": 1,
			"that": 1,
			"if": 1,
			"what": 2,
			"them": 1,
			"thee": 1,
			"and": 3,
			"lovely": 1,
			"i": 1,
			"each": 1,
			"from": 1,
			"with": 2,
			"ways": 1,
			"your": 2,
			"to": 2,
			"may": 1,
			"as": 2,
			"me": 4,
			"the": 3,
			"in": 2
		},
		"flash": {
			"free": 1,
			"are": 1,
			"of": 6,
			"nor": 1,
			"forth": 3,
			"by": 1,
			"is": 1,
			"their": 1,
			"a": 1,
			"on": 3,
			"deep": 1,
			"and": 3,
			"i": 1,
			"down": 1,
			"from": 4,
			"no": 1,
			"before": 1,
			"your": 1,
			"the": 2,
			"in": 1
		},
		"strong": {
			"cool": 1,
			"right": 2,
			"who": 2,
			"men": 1,
			"ones": 1,
			"of": 2,
			"amid": 1,
			"kept": 1,
			"sons": 1,
			"lands": 1,
			"it": 2,
			"by": 1,
			"twixt": 1,
			"is": 1,
			"like": 1,
			"than": 1,
			"swift": 1,
			"where": 2,
			"for": 3,
			"hand": 2,
			"again": 1,
			"pray": 1,
			"soul": 1,
			"foot": 1,
			"oer": 1,
			"man": 2,
			"thin": 1,
			"hands": 1,
			"a": 2,
			"upon": 1,
			"never": 1,
			"wing": 1,
			"maryland": 1,
			"but": 3,
			"ye": 2,
			"when": 1,
			"mans": 1,
			"heart": 1,
			"and": 19,
			"quick": 1,
			"i": 3,
			"steel": 1,
			"one": 1,
			"while": 1,
			"with": 5,
			"around": 1,
			"now": 1,
			"till": 1,
			"will": 1,
			"gods": 1,
			"has": 1,
			"minds": 1,
			"wind": 1,
			"to": 11,
			"may": 1,
			"as": 8,
			"he": 2,
			"son": 2,
			"at": 1,
			"o": 1,
			"the": 8,
			"her": 1,
			"in": 6
		},
		"himself": {
			"his": 4,
			"who": 1,
			"she": 1,
			"among": 1,
			"does": 1,
			"beloved": 1,
			"it": 1,
			"by": 3,
			"is": 2,
			"author": 1,
			"like": 1,
			"takes": 1,
			"away": 1,
			"its": 1,
			"for": 1,
			"should": 1,
			"again": 1,
			"thy": 1,
			"can": 2,
			"were": 2,
			"that": 2,
			"if": 1,
			"another": 1,
			"had": 1,
			"gives": 1,
			"must": 1,
			"what": 1,
			"an": 1,
			"or": 1,
			"a": 3,
			"so": 2,
			"them": 1,
			"sometimes": 1,
			"hath": 1,
			"on": 2,
			"content": 1,
			"but": 1,
			"poor": 1,
			"when": 1,
			"t": 1,
			"and": 10,
			"i": 1,
			"one": 1,
			"might": 1,
			"how": 1,
			"from": 1,
			"no": 1,
			"with": 3,
			"virtue": 1,
			"now": 2,
			"all": 1,
			"doth": 1,
			"king": 1,
			"shall": 1,
			"before": 1,
			"to": 7,
			"may": 1,
			"he": 4,
			"o": 1,
			"grow": 1,
			"the": 6,
			"stood": 1,
			"in": 2
		},
		"wore": {
			"earth": 1,
			"his": 1,
			"it": 2,
			"my": 2,
			"what": 1,
			"a": 2,
			"and": 2,
			"too": 1,
			"no": 1,
			"the": 6,
			"in": 2
		},
		"twenty": {
			"thousand": 6,
			"worlds": 1,
			"away": 2,
			"people": 1,
			"a": 1,
			"gallant": 1,
			"years": 2,
			"days": 2,
			"mortal": 1,
			"hundred": 2,
			"at": 1,
			"seas": 1
		},
		"locks": {
			"of": 2,
			"once": 1,
			"grew": 1,
			"news": 1,
			"long": 1,
			"should": 1,
			"my": 1,
			"can": 1,
			"were": 1,
			"or": 1,
			"a": 1,
			"so": 2,
			"and": 3,
			"before": 1,
			"to": 1,
			"he": 1,
			"at": 1,
			"in": 1
		},
		"prayers": {
			"sweet": 1,
			"sound": 1,
			"since": 1,
			"which": 3,
			"of": 1,
			"up": 1,
			"gold": 1,
			"not": 1,
			"father": 1,
			"ever": 1,
			"they": 1,
			"heard": 1,
			"most": 1,
			"were": 1,
			"that": 2,
			"never": 1,
			"but": 1,
			"and": 1,
			"i": 1,
			"one": 1,
			"would": 1,
			"no": 1,
			"with": 2,
			"will": 1,
			"our": 1,
			"yet": 1,
			"to": 3,
			"we": 2,
			"he": 1,
			"o": 1
		},
		"lying": {
			"low": 2,
			"up": 1,
			"it": 1,
			"far": 1,
			"glass": 1,
			"where": 1,
			"along": 1,
			"or": 1,
			"bright": 1,
			"on": 3,
			"brown": 1,
			"and": 1,
			"hid": 1,
			"down": 1,
			"between": 1,
			"broad": 1,
			"hidden": 1,
			"calm": 1,
			"with": 1,
			"some": 1,
			"poets": 1,
			"the": 2,
			"dead": 3,
			"in": 1
		},
		"all": {
			"sweet": 1,
			"books": 1,
			"come": 2,
			"low": 1,
			"else": 10,
			"fled": 1,
			"dying": 1,
			"look": 1,
			"woes": 2,
			"us": 1,
			"hear": 1,
			"taught": 2,
			"thine": 4,
			"died": 1,
			"within": 4,
			"unseen": 1,
			"blessings": 1,
			"dust": 1,
			"loves": 1,
			"went": 4,
			"im": 1,
			"free": 1,
			"light": 1,
			"earth": 2,
			"space": 3,
			"his": 45,
			"james": 1,
			"save": 3,
			"fond": 2,
			"book": 1,
			"see": 1,
			"means": 1,
			"bare": 1,
			"women": 1,
			"thing": 1,
			"ii": 1,
			"ages": 4,
			"white": 1,
			"rule": 1,
			"purple": 1,
			"are": 23,
			"beside": 1,
			"back": 1,
			"made": 2,
			"ive": 1,
			"fell": 1,
			"very": 1,
			"under": 3,
			"who": 13,
			"silent": 2,
			"men": 18,
			"which": 2,
			"deeds": 1,
			"dies": 1,
			"sounds": 1,
			"of": 40,
			"this": 21,
			"high": 2,
			"worlds": 1,
			"alike": 1,
			"kept": 1,
			"learning": 1,
			"hills": 1,
			"once": 3,
			"up": 3,
			"off": 1,
			"she": 6,
			"anonymous": 1,
			"nor": 3,
			"gold": 2,
			"three": 1,
			"does": 1,
			"darkness": 1,
			"forth": 2,
			"pain": 3,
			"slaves": 1,
			"mine": 1,
			"behold": 1,
			"not": 2,
			"rapture": 7,
			"praise": 2,
			"it": 6,
			"evil": 3,
			"over": 4,
			"began": 1,
			"by": 8,
			"alone": 6,
			"nations": 3,
			"mute": 1,
			"quiet": 4,
			"pride": 1,
			"is": 39,
			"vision": 1,
			"joyous": 1,
			"soon": 1,
			"looked": 2,
			"eternity": 1,
			"away": 1,
			"form": 1,
			"forms": 2,
			"why": 1,
			"please": 1,
			"hallowed": 1,
			"forever": 1,
			"good": 7,
			"ever": 1,
			"care": 1,
			"together": 1,
			"about": 7,
			"they": 8,
			"abroad": 1,
			"wide": 2,
			"you": 2,
			"nature": 6,
			"guide": 1,
			"thus": 1,
			"pale": 1,
			"weakness": 2,
			"without": 3,
			"robert": 1,
			"ranks": 1,
			"laid": 1,
			"its": 28,
			"those": 8,
			"friends": 2,
			"where": 2,
			"yea": 1,
			"others": 3,
			"small": 1,
			"lovers": 2,
			"for": 23,
			"past": 1,
			"heaven": 8,
			"lost": 1,
			"should": 4,
			"darling": 1,
			"take": 1,
			"my": 52,
			"words": 2,
			"great": 2,
			"tender": 1,
			"beauty": 3,
			"again": 2,
			"deaths": 1,
			"themselves": 1,
			"thy": 35,
			"comes": 4,
			"tonight": 1,
			"whom": 1,
			"shadow": 1,
			"hope": 4,
			"francis": 1,
			"cease": 2,
			"most": 1,
			"times": 2,
			"along": 2,
			"false": 1,
			"sin": 1,
			"dew": 1,
			"faith": 1,
			"god": 3,
			"can": 2,
			"power": 1,
			"were": 31,
			"oer": 3,
			"was": 12,
			"that": 76,
			"if": 2,
			"let": 2,
			"cares": 1,
			"man": 1,
			"busy": 1,
			"trust": 1,
			"perfume": 1,
			"had": 1,
			"must": 6,
			"what": 2,
			"oh": 1,
			"an": 5,
			"hold": 1,
			"creatures": 3,
			"or": 3,
			"think": 1,
			"de": 2,
			"hands": 1,
			"bright": 2,
			"have": 3,
			"tears": 2,
			"winter": 1,
			"their": 35,
			"a": 22,
			"so": 3,
			"pains": 3,
			"joys": 1,
			"courage": 1,
			"true": 3,
			"sink": 1,
			"green": 1,
			"upon": 1,
			"lay": 2,
			"things": 54,
			"ashes": 1,
			"love": 4,
			"on": 5,
			"red": 1,
			"above": 1,
			"old": 1,
			"but": 11,
			"death": 2,
			"time": 4,
			"ye": 7,
			"when": 4,
			"gone": 3,
			"lifes": 3,
			"eternal": 1,
			"merry": 1,
			"waters": 1,
			"dreams": 1,
			"knows": 1,
			"be": 8,
			"firm": 1,
			"glory": 1,
			"line": 1,
			"out": 3,
			"kind": 1,
			"earthly": 3,
			"brave": 1,
			"say": 3,
			"sorrow": 1,
			"paradise": 1,
			"and": 56,
			"order": 1,
			"grace": 1,
			"bloom": 2,
			"do": 1,
			"move": 1,
			"black": 1,
			"fate": 1,
			"days": 1,
			"i": 24,
			"unknown": 1,
			"thou": 10,
			"marching": 1,
			"depths": 1,
			"down": 1,
			"home": 3,
			"too": 8,
			"one": 2,
			"might": 2,
			"between": 1,
			"breathes": 2,
			"such": 1,
			"judge": 1,
			"perfect": 1,
			"arts": 1,
			"looks": 2,
			"each": 1,
			"how": 1,
			"hearts": 4,
			"other": 8,
			"from": 3,
			"join": 2,
			"sleeping": 1,
			"would": 1,
			"feeling": 1,
			"want": 1,
			"ancient": 1,
			"these": 14,
			"no": 1,
			"took": 1,
			"mighty": 1,
			"with": 17,
			"around": 10,
			"sad": 1,
			"virtue": 2,
			"now": 2,
			"give": 1,
			"some": 1,
			"till": 1,
			"will": 4,
			"follow": 1,
			"all": 19,
			"gay": 1,
			"gods": 3,
			"then": 2,
			"flesh": 1,
			"blest": 1,
			"thought": 4,
			"could": 3,
			"through": 3,
			"songs": 2,
			"thats": 5,
			"service": 1,
			"angels": 1,
			"doth": 1,
			"ways": 1,
			"peaceful": 1,
			"being": 1,
			"beauteous": 1,
			"wealth": 1,
			"our": 33,
			"wrong": 1,
			"day": 15,
			"sense": 2,
			"fear": 3,
			"night": 15,
			"equal": 1,
			"shall": 10,
			"before": 3,
			"chance": 1,
			"your": 11,
			"natures": 2,
			"yet": 2,
			"to": 30,
			"poetry": 1,
			"human": 4,
			"poets": 1,
			"into": 3,
			"round": 12,
			"thinking": 1,
			"mankind": 6,
			"live": 1,
			"use": 2,
			"heavenly": 1,
			"ah": 1,
			"may": 6,
			"hail": 3,
			"strife": 3,
			"yon": 1,
			"we": 11,
			"loss": 1,
			"whose": 1,
			"as": 4,
			"fair": 3,
			"heavens": 1,
			"stand": 1,
			"happy": 1,
			"done": 1,
			"life": 4,
			"end": 1,
			"he": 10,
			"me": 3,
			"at": 6,
			"fancy": 1,
			"below": 1,
			"iii": 1,
			"o": 7,
			"rings": 1,
			"common": 2,
			"the": 362,
			"seems": 1,
			"her": 25,
			"radiant": 2,
			"safe": 1,
			"young": 2,
			"thirst": 1,
			"there": 6,
			"grim": 1,
			"in": 42,
			"harmony": 1,
			"air": 1,
			"thoughts": 2
		},
		"chief": {
			"his": 3,
			"beside": 1,
			"who": 2,
			"of": 2,
			"nor": 1,
			"is": 1,
			"good": 1,
			"that": 2,
			"think": 1,
			"joys": 1,
			"lay": 1,
			"and": 3,
			"with": 1,
			"page": 1,
			"at": 1,
			"lies": 1,
			"the": 2,
			"in": 1
		},
		"patient": {
			"come": 1,
			"free": 1,
			"humble": 1,
			"six": 1,
			"of": 1,
			"sons": 1,
			"pain": 1,
			"put": 1,
			"by": 1,
			"eyes": 1,
			"takes": 1,
			"smile": 1,
			"soul": 1,
			"god": 1,
			"go": 1,
			"must": 1,
			"but": 1,
			"merit": 1,
			"heart": 1,
			"and": 2,
			"i": 1,
			"these": 1,
			"with": 1,
			"toil": 2,
			"yon": 1,
			"o": 4,
			"the": 1,
			"though": 1,
			"in": 1
		},
		"grief": {
			"are": 1,
			"which": 2,
			"of": 2,
			"she": 2,
			"nor": 1,
			"goes": 1,
			"every": 1,
			"it": 1,
			"is": 6,
			"looked": 1,
			"away": 1,
			"together": 1,
			"they": 1,
			"its": 1,
			"than": 2,
			"for": 3,
			"my": 1,
			"thy": 2,
			"reach": 1,
			"can": 3,
			"did": 1,
			"was": 1,
			"runs": 1,
			"that": 10,
			"if": 1,
			"go": 1,
			"had": 4,
			"or": 1,
			"have": 1,
			"their": 1,
			"a": 2,
			"hath": 2,
			"but": 3,
			"when": 1,
			"be": 1,
			"and": 9,
			"i": 4,
			"too": 1,
			"such": 1,
			"help": 1,
			"from": 2,
			"while": 1,
			"no": 1,
			"with": 3,
			"then": 1,
			"doth": 1,
			"still": 1,
			"to": 2,
			"may": 3,
			"we": 1,
			"as": 2,
			"he": 1,
			"at": 1,
			"lies": 2,
			"the": 1,
			"in": 2
		},
		"desolate": {
			"blue": 1,
			"women": 1,
			"are": 1,
			"of": 2,
			"this": 1,
			"yield": 1,
			"far": 1,
			"pale": 1,
			"shore": 1,
			"go": 1,
			"even": 1,
			"but": 2,
			"plain": 1,
			"and": 1,
			"mothers": 1,
			"home": 1,
			"wild": 1,
			"day": 1,
			"mark": 1,
			"end": 1,
			"the": 1,
			"young": 1,
			"in": 2,
			"ruin": 1
		},
		"gay": {
			"bow": 1,
			"of": 1,
			"city": 1,
			"land": 1,
			"like": 2,
			"why": 2,
			"for": 2,
			"wear": 1,
			"cheer": 1,
			"stretched": 1,
			"was": 1,
			"creatures": 1,
			"or": 1,
			"green": 1,
			"when": 1,
			"bed": 1,
			"head": 1,
			"and": 8,
			"fly": 1,
			"i": 2,
			"mirth": 1,
			"one": 2,
			"with": 6,
			"soggarth": 1,
			"will": 2,
			"hall": 1,
			"wind": 2,
			"cities": 1,
			"as": 3,
			"he": 1,
			"the": 9,
			"though": 1,
			"there": 1,
			"in": 1,
			"flowers": 1
		},
		"drum": {
			"save": 1,
			"this": 1,
			"up": 1,
			"you": 1,
			"did": 1,
			"was": 1,
			"maryland": 1,
			"onward": 1,
			"and": 3,
			"told": 1,
			"from": 1,
			"beat": 1,
			"now": 1,
			"still": 1,
			"at": 1,
			"the": 3,
			"there": 1
		},
		"gods": {
			"sweet": 1,
			"since": 1,
			"pine": 1,
			"his": 2,
			"see": 2,
			"temple": 1,
			"are": 6,
			"saints": 2,
			"beside": 1,
			"right": 1,
			"who": 1,
			"gate": 1,
			"of": 3,
			"angel": 1,
			"dear": 1,
			"serene": 1,
			"beloved": 1,
			"behold": 1,
			"not": 1,
			"divine": 1,
			"praise": 1,
			"host": 1,
			"by": 1,
			"alone": 1,
			"is": 1,
			"like": 1,
			"found": 1,
			"children": 1,
			"good": 1,
			"they": 2,
			"nature": 2,
			"stern": 1,
			"new": 1,
			"where": 2,
			"for": 1,
			"hand": 1,
			"breath": 1,
			"great": 1,
			"yes": 1,
			"peace": 1,
			"ere": 1,
			"remember": 1,
			"makes": 1,
			"most": 7,
			"name": 1,
			"face": 1,
			"can": 1,
			"that": 1,
			"if": 2,
			"let": 1,
			"bear": 1,
			"both": 1,
			"full": 1,
			"go": 1,
			"pure": 2,
			"eye": 1,
			"trod": 2,
			"a": 1,
			"so": 1,
			"love": 2,
			"on": 2,
			"own": 9,
			"but": 1,
			"death": 1,
			"when": 1,
			"eternal": 2,
			"be": 1,
			"kind": 2,
			"and": 10,
			"grace": 1,
			"do": 1,
			"i": 1,
			"might": 1,
			"draw": 1,
			"hate": 1,
			"tall": 1,
			"these": 1,
			"voice": 1,
			"now": 1,
			"give": 2,
			"will": 1,
			"angels": 1,
			"clear": 1,
			"being": 1,
			"throne": 1,
			"open": 1,
			"fear": 1,
			"mercy": 3,
			"yet": 1,
			"to": 3,
			"may": 1,
			"we": 1,
			"as": 2,
			"he": 1,
			"me": 1,
			"the": 4,
			"tis": 1,
			"sure": 1,
			"house": 2,
			"soldier": 1,
			"in": 2
		},
		"wild": {
			"sweet": 1,
			"look": 2,
			"loves": 1,
			"free": 1,
			"his": 1,
			"midnight": 1,
			"white": 1,
			"dance": 1,
			"are": 3,
			"made": 1,
			"fell": 1,
			"who": 1,
			"of": 6,
			"hills": 1,
			"three": 1,
			"wheel": 1,
			"brought": 1,
			"by": 3,
			"eyes": 2,
			"woods": 2,
			"is": 2,
			"like": 1,
			"douglas": 1,
			"steed": 1,
			"prayer": 1,
			"you": 1,
			"new": 1,
			"heard": 1,
			"where": 2,
			"charge": 1,
			"note": 1,
			"winds": 1,
			"shines": 1,
			"blows": 1,
			"waves": 2,
			"cheer": 1,
			"bells": 2,
			"glow": 1,
			"battles": 1,
			"oer": 1,
			"that": 2,
			"another": 1,
			"crowd": 1,
			"what": 1,
			"a": 2,
			"so": 1,
			"hath": 1,
			"above": 1,
			"roaring": 2,
			"but": 2,
			"grass": 1,
			"dreams": 1,
			"feet": 1,
			"heart": 1,
			"and": 24,
			"i": 2,
			"thou": 1,
			"how": 1,
			"hearts": 1,
			"from": 2,
			"join": 1,
			"these": 1,
			"while": 2,
			"voice": 1,
			"with": 1,
			"wave": 2,
			"meet": 2,
			"wild": 1,
			"ends": 1,
			"wind": 1,
			"round": 1,
			"yon": 1,
			"glad": 2,
			"as": 4,
			"deer": 3,
			"the": 4,
			"stood": 1,
			"in": 5,
			"flowers": 3,
			"sky": 1,
			"grows": 1
		},
		"comrades": {
			"chase": 1,
			"call": 1,
			"of": 1,
			"three": 1,
			"mine": 1,
			"they": 2,
			"hand": 1,
			"that": 1,
			"bear": 1,
			"spake": 1,
			"hands": 1,
			"leave": 1,
			"saw": 1,
			"old": 1,
			"tried": 1,
			"and": 1,
			"fly": 1,
			"with": 1,
			"now": 1,
			"round": 1,
			"lie": 1,
			"view": 1,
			"as": 1,
			"the": 1,
			"there": 1,
			"in": 1
		},
		"loving": {
			"not": 1,
			"child": 2,
			"eyes": 1,
			"father": 1,
			"twixt": 1,
			"children": 1,
			"douglas": 1,
			"ocean": 1,
			"care": 1,
			"friends": 1,
			"words": 1,
			"freedom": 1,
			"oer": 1,
			"lips": 1,
			"eye": 1,
			"folly": 2,
			"when": 1,
			"heart": 2,
			"and": 2,
			"i": 1,
			"thou": 1,
			"mind": 1,
			"breast": 1,
			"gods": 1,
			"thought": 2,
			"to": 1,
			"we": 1,
			"arms": 1,
			"her": 1
		},
		"familiar": {
			"grown": 1,
			"forms": 1,
			"words": 1,
			"face": 2,
			"were": 1,
			"faces": 8,
			"but": 2,
			"roll": 1,
			"voice": 1,
			"with": 2,
			"patient": 1,
			"way": 1,
			"to": 3,
			"as": 3
		},
		"fires": {
			"his": 1,
			"are": 1,
			"which": 1,
			"of": 3,
			"not": 1,
			"burn": 1,
			"forever": 1,
			"for": 1,
			"that": 1,
			"have": 1,
			"thee": 1,
			"and": 3,
			"here": 1,
			"flash": 1,
			"through": 1,
			"smoke": 1,
			"shall": 1,
			"to": 1,
			"as": 1,
			"the": 6,
			"in": 1
		},
		"then": {
			"sweet": 1,
			"come": 3,
			"sound": 1,
			"jean": 1,
			"look": 1,
			"since": 1,
			"ring": 1,
			"curse": 1,
			"went": 2,
			"light": 1,
			"his": 5,
			"women": 1,
			"seemed": 1,
			"are": 1,
			"fell": 1,
			"next": 1,
			"silent": 2,
			"which": 1,
			"of": 5,
			"this": 3,
			"amid": 1,
			"wander": 1,
			"once": 3,
			"up": 2,
			"off": 2,
			"she": 7,
			"nor": 2,
			"sons": 1,
			"find": 1,
			"thyself": 1,
			"whatever": 1,
			"darkness": 1,
			"mourn": 1,
			"rose": 2,
			"not": 2,
			"put": 1,
			"dry": 1,
			"pressed": 1,
			"it": 11,
			"shake": 1,
			"wisdom": 1,
			"bless": 2,
			"by": 2,
			"kissed": 1,
			"is": 3,
			"unto": 2,
			"like": 4,
			"away": 2,
			"why": 7,
			"please": 1,
			"douglas": 1,
			"they": 8,
			"shook": 1,
			"you": 1,
			"nature": 1,
			"stern": 1,
			"thus": 1,
			"strike": 1,
			"laid": 1,
			"those": 1,
			"where": 1,
			"run": 1,
			"just": 2,
			"welcome": 2,
			"for": 5,
			"hand": 1,
			"heaven": 1,
			"charge": 1,
			"lost": 2,
			"bowed": 1,
			"sang": 1,
			"didst": 1,
			"my": 11,
			"blow": 1,
			"came": 4,
			"sighing": 1,
			"beauty": 1,
			"again": 3,
			"earl": 1,
			"thy": 7,
			"sing": 1,
			"watch": 1,
			"pray": 1,
			"sleep": 1,
			"teach": 1,
			"comes": 2,
			"ere": 1,
			"soul": 2,
			"hope": 1,
			"cheer": 1,
			"cease": 2,
			"most": 2,
			"rising": 1,
			"forward": 3,
			"closed": 1,
			"were": 4,
			"did": 1,
			"was": 5,
			"that": 7,
			"if": 4,
			"let": 10,
			"show": 1,
			"both": 1,
			"embrace": 1,
			"cried": 1,
			"had": 3,
			"must": 3,
			"what": 4,
			"even": 1,
			"think": 1,
			"ran": 1,
			"pause": 1,
			"have": 1,
			"am": 2,
			"their": 1,
			"a": 18,
			"so": 1,
			"given": 1,
			"flies": 1,
			"upon": 1,
			"lay": 1,
			"lord": 1,
			"hath": 1,
			"leave": 2,
			"on": 7,
			"saw": 1,
			"sees": 1,
			"smiling": 1,
			"but": 3,
			"rushed": 1,
			"thee": 1,
			"ye": 1,
			"lives": 1,
			"moving": 1,
			"when": 6,
			"onward": 1,
			"be": 4,
			"glory": 5,
			"having": 1,
			"brave": 1,
			"naught": 1,
			"say": 1,
			"and": 13,
			"grace": 1,
			"do": 1,
			"dark": 1,
			"quick": 1,
			"move": 1,
			"cries": 1,
			"fly": 1,
			"i": 19,
			"knew": 1,
			"thou": 3,
			"down": 4,
			"raised": 2,
			"one": 4,
			"might": 1,
			"breathes": 1,
			"draw": 1,
			"rather": 1,
			"each": 2,
			"how": 3,
			"higher": 1,
			"from": 9,
			"join": 1,
			"ill": 4,
			"duty": 1,
			"while": 2,
			"breast": 1,
			"no": 6,
			"bid": 1,
			"with": 10,
			"drew": 1,
			"till": 1,
			"will": 5,
			"wore": 1,
			"twenty": 4,
			"all": 5,
			"then": 3,
			"ho": 1,
			"poured": 1,
			"thought": 1,
			"through": 2,
			"laugh": 1,
			"well": 1,
			"spoke": 1,
			"doth": 1,
			"mount": 1,
			"nearer": 1,
			"our": 3,
			"pity": 1,
			"shall": 11,
			"before": 2,
			"echo": 1,
			"wind": 1,
			"your": 1,
			"mark": 2,
			"to": 19,
			"into": 3,
			"religion": 1,
			"gently": 1,
			"ah": 1,
			"yon": 1,
			"we": 16,
			"as": 16,
			"heavens": 1,
			"said": 3,
			"life": 1,
			"he": 15,
			"me": 4,
			"sat": 1,
			"at": 8,
			"point": 1,
			"o": 1,
			"left": 1,
			"blessed": 1,
			"the": 46,
			"tis": 1,
			"though": 2,
			"bent": 2,
			"her": 3,
			"radiant": 1,
			"fire": 2,
			"near": 1,
			"first": 1,
			"there": 1,
			"in": 8,
			"shalt": 2
		},
		"room": {
			"within": 1,
			"his": 1,
			"high": 1,
			"it": 1,
			"is": 1,
			"where": 1,
			"for": 6,
			"came": 1,
			"enough": 1,
			"shell": 1,
			"thin": 1,
			"making": 1,
			"a": 4,
			"and": 4,
			"such": 1,
			"with": 2,
			"now": 1,
			"best": 1,
			"to": 1,
			"whose": 1,
			"he": 1,
			"the": 3,
			"though": 1,
			"her": 1,
			"in": 2
		},
		"gale": {
			"men": 1,
			"is": 1,
			"swept": 1,
			"for": 1,
			"darling": 1,
			"thy": 2,
			"comes": 1,
			"let": 1,
			"what": 1,
			"on": 1,
			"when": 2,
			"and": 2,
			"i": 2,
			"with": 1,
			"doth": 1,
			"to": 1,
			"round": 1,
			"the": 1,
			"in": 1
		},
		"harvest": {
			"of": 9,
			"morning": 1,
			"bright": 1,
			"ye": 1,
			"when": 1,
			"and": 1,
			"from": 1,
			"honor": 1,
			"day": 1,
			"open": 1,
			"to": 1,
			"strain": 1,
			"grows": 1
		},
		"ho": {
			"ours": 1,
			"of": 4,
			"it": 4,
			"send": 1,
			"for": 2,
			"theres": 1,
			"sir": 1,
			"brothers": 1,
			"gallant": 1,
			"ye": 2,
			"and": 1,
			"down": 1,
			"maidens": 1,
			"comrades": 1,
			"ho": 4,
			"our": 1,
			"as": 1,
			"the": 4,
			"in": 2
		},
		"slain": {
			"his": 1,
			"under": 1,
			"ones": 1,
			"by": 1,
			"they": 2,
			"should": 1,
			"yes": 1,
			"sir": 2,
			"can": 1,
			"that": 1,
			"oh": 1,
			"or": 1,
			"think": 1,
			"have": 1,
			"soldiers": 1,
			"their": 1,
			"never": 1,
			"on": 2,
			"but": 1,
			"kind": 1,
			"and": 5,
			"i": 2,
			"with": 2,
			"some": 1,
			"then": 1,
			"whose": 1,
			"he": 3,
			"o": 1,
			"the": 1,
			"tis": 1,
			"first": 1,
			"in": 3
		},
		"feed": {
			"of": 1,
			"this": 1,
			"yea": 2,
			"my": 1,
			"that": 2,
			"pure": 1,
			"nothing": 1,
			"upon": 1,
			"on": 7,
			"but": 1,
			"and": 1,
			"your": 1,
			"as": 1,
			"at": 1,
			"the": 3
		},
		"lose": {
			"his": 1,
			"are": 1,
			"thyself": 1,
			"not": 1,
			"it": 1,
			"by": 1,
			"away": 1,
			"good": 1,
			"its": 2,
			"friends": 2,
			"should": 2,
			"my": 1,
			"ourselves": 2,
			"that": 1,
			"half": 1,
			"or": 1,
			"a": 3,
			"but": 1,
			"heart": 1,
			"and": 3,
			"with": 1,
			"all": 1,
			"our": 2,
			"the": 5,
			"though": 1,
			"her": 1
		},
		"flesh": {
			"sweet": 1,
			"more": 1,
			"his": 1,
			"are": 1,
			"of": 2,
			"today": 1,
			"it": 1,
			"is": 2,
			"again": 1,
			"soul": 1,
			"can": 2,
			"was": 1,
			"that": 1,
			"must": 1,
			"their": 1,
			"a": 1,
			"upon": 1,
			"hath": 1,
			"and": 8,
			"i": 1,
			"would": 1,
			"with": 1,
			"till": 1,
			"our": 1,
			"shall": 1,
			"yet": 1,
			"to": 2,
			"may": 1,
			"grow": 1,
			"the": 1
		},
		"poured": {
			"high": 1,
			"forth": 1,
			"it": 1,
			"its": 3,
			"where": 1,
			"past": 1,
			"oer": 1,
			"that": 1,
			"rode": 1,
			"their": 1,
			"upon": 1,
			"delight": 1,
			"out": 1,
			"and": 1,
			"from": 1,
			"around": 1,
			"through": 1,
			"to": 1,
			"round": 1,
			"as": 2,
			"the": 2
		},
		"large": {
			"sweet": 1,
			"which": 1,
			"of": 5,
			"it": 1,
			"looking": 1,
			"church": 1,
			"drops": 1,
			"oer": 2,
			"was": 1,
			"that": 1,
			"pure": 1,
			"or": 1,
			"a": 4,
			"many": 1,
			"but": 1,
			"having": 1,
			"and": 9,
			"dark": 1,
			"grief": 1,
			"at": 1,
			"streams": 1,
			"the": 1,
			"though": 1,
			"in": 1,
			"harmony": 1
		},
		"blest": {
			"since": 1,
			"river": 1,
			"him": 1,
			"saints": 1,
			"men": 1,
			"which": 1,
			"of": 3,
			"this": 1,
			"not": 1,
			"spirits": 1,
			"alone": 1,
			"is": 3,
			"where": 3,
			"should": 1,
			"comes": 1,
			"power": 1,
			"that": 1,
			"if": 1,
			"must": 1,
			"am": 1,
			"isle": 1,
			"a": 3,
			"so": 1,
			"courage": 1,
			"spirit": 1,
			"hath": 1,
			"delight": 1,
			"on": 1,
			"but": 2,
			"when": 1,
			"be": 1,
			"and": 3,
			"one": 1,
			"living": 2,
			"beneath": 1,
			"while": 1,
			"no": 1,
			"with": 4,
			"now": 1,
			"well": 1,
			"our": 1,
			"yet": 1,
			"to": 1,
			"mankind": 1,
			"as": 2,
			"son": 1,
			"the": 3,
			"though": 1
		},
		"thought": {
			"perchance": 1,
			"come": 1,
			"more": 1,
			"free": 1,
			"his": 3,
			"him": 1,
			"ii": 1,
			"are": 2,
			"beside": 1,
			"who": 1,
			"which": 4,
			"of": 34,
			"she": 1,
			"silence": 1,
			"two": 1,
			"not": 2,
			"divine": 1,
			"twas": 1,
			"by": 1,
			"bade": 1,
			"alone": 1,
			"is": 11,
			"unto": 1,
			"they": 3,
			"you": 2,
			"without": 1,
			"than": 2,
			"yea": 1,
			"lost": 1,
			"cannot": 1,
			"my": 4,
			"thy": 2,
			"comes": 2,
			"flung": 1,
			"cease": 1,
			"god": 2,
			"can": 3,
			"was": 3,
			"that": 11,
			"must": 1,
			"what": 1,
			"oh": 1,
			"an": 2,
			"or": 3,
			"have": 1,
			"their": 1,
			"a": 3,
			"so": 2,
			"upon": 1,
			"hath": 1,
			"on": 5,
			"but": 3,
			"time": 1,
			"when": 3,
			"april": 1,
			"t": 2,
			"and": 24,
			"i": 7,
			"one": 1,
			"might": 1,
			"would": 2,
			"rare": 1,
			"no": 1,
			"with": 2,
			"now": 1,
			"some": 3,
			"will": 2,
			"all": 1,
			"thought": 1,
			"could": 1,
			"through": 1,
			"our": 2,
			"hall": 1,
			"mercy": 1,
			"shall": 1,
			"before": 1,
			"to": 10,
			"lie": 1,
			"may": 2,
			"we": 2,
			"whose": 1,
			"as": 3,
			"he": 2,
			"me": 1,
			"at": 4,
			"o": 1,
			"the": 15,
			"her": 2,
			"fire": 1,
			"oft": 1,
			"in": 5
		},
		"could": {
			"bow": 1,
			"look": 1,
			"hear": 1,
			"wish": 2,
			"die": 1,
			"save": 1,
			"endure": 1,
			"see": 6,
			"war": 1,
			"this": 2,
			"yield": 1,
			"once": 2,
			"nor": 1,
			"find": 2,
			"not": 52,
			"awe": 1,
			"dry": 1,
			"it": 1,
			"twas": 1,
			"weep": 2,
			"ease": 1,
			"bring": 3,
			"trace": 1,
			"land": 1,
			"rise": 1,
			"please": 1,
			"force": 1,
			"ever": 1,
			"they": 2,
			"you": 3,
			"than": 1,
			"run": 1,
			"train": 1,
			"for": 1,
			"read": 2,
			"speak": 1,
			"rest": 1,
			"my": 1,
			"great": 1,
			"thy": 1,
			"pray": 1,
			"hope": 1,
			"any": 4,
			"rising": 1,
			"reach": 2,
			"was": 1,
			"that": 1,
			"if": 1,
			"let": 2,
			"show": 2,
			"man": 1,
			"bear": 4,
			"make": 4,
			"go": 1,
			"what": 1,
			"an": 1,
			"hold": 2,
			"or": 1,
			"think": 1,
			"have": 7,
			"danger": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"lord": 1,
			"never": 6,
			"delight": 1,
			"love": 1,
			"but": 3,
			"thee": 2,
			"ye": 1,
			"choose": 1,
			"when": 1,
			"plain": 1,
			"raise": 1,
			"be": 10,
			"say": 2,
			"eer": 1,
			"move": 1,
			"fly": 1,
			"i": 17,
			"mortal": 1,
			"no": 2,
			"rouse": 1,
			"give": 2,
			"all": 2,
			"guess": 1,
			"sleeps": 1,
			"feel": 2,
			"night": 1,
			"only": 1,
			"wind": 1,
			"still": 1,
			"yet": 1,
			"best": 1,
			"to": 1,
			"turn": 1,
			"lie": 1,
			"get": 1,
			"know": 1,
			"ah": 1,
			"we": 6,
			"he": 3,
			"o": 1,
			"arise": 1,
			"the": 10,
			"house": 1,
			"her": 2,
			"fail": 1,
			"there": 1,
			"in": 3
		},
		"through": {
			"low": 1,
			"more": 1,
			"thine": 1,
			"ring": 1,
			"dust": 1,
			"cloud": 1,
			"his": 10,
			"him": 4,
			"ages": 2,
			"war": 1,
			"weary": 2,
			"which": 6,
			"mist": 1,
			"toward": 1,
			"of": 3,
			"this": 4,
			"high": 2,
			"worlds": 1,
			"among": 1,
			"sight": 1,
			"darkness": 1,
			"scorn": 1,
			"pain": 1,
			"rose": 1,
			"mine": 1,
			"hours": 2,
			"every": 9,
			"it": 2,
			"evil": 1,
			"woods": 1,
			"long": 2,
			"quiet": 1,
			"eternity": 2,
			"like": 2,
			"good": 1,
			"lead": 1,
			"they": 1,
			"wide": 1,
			"you": 2,
			"nature": 3,
			"seven": 1,
			"without": 1,
			"earths": 2,
			"ranks": 1,
			"its": 5,
			"those": 1,
			"sea": 3,
			"small": 1,
			"for": 1,
			"heaven": 2,
			"take": 1,
			"my": 5,
			"words": 1,
			"winds": 1,
			"earl": 1,
			"thy": 2,
			"peace": 2,
			"ere": 1,
			"whom": 1,
			"soul": 1,
			"sir": 1,
			"times": 1,
			"streets": 1,
			"name": 1,
			"faith": 1,
			"walls": 1,
			"that": 5,
			"rolling": 1,
			"what": 4,
			"or": 1,
			"de": 1,
			"tears": 2,
			"their": 4,
			"a": 12,
			"so": 1,
			"heat": 1,
			"many": 1,
			"old": 2,
			"but": 3,
			"wet": 1,
			"death": 1,
			"time": 1,
			"thee": 3,
			"years": 3,
			"lifes": 2,
			"be": 1,
			"t": 1,
			"heart": 1,
			"and": 31,
			"sun": 2,
			"dark": 1,
			"black": 1,
			"days": 1,
			"i": 2,
			"storm": 1,
			"forest": 1,
			"each": 2,
			"how": 1,
			"endless": 1,
			"these": 3,
			"duty": 1,
			"no": 1,
			"early": 1,
			"took": 1,
			"goodly": 1,
			"with": 3,
			"some": 1,
			"will": 1,
			"all": 35,
			"patient": 1,
			"wild": 1,
			"through": 1,
			"pleasant": 1,
			"street": 1,
			"service": 1,
			"ways": 1,
			"nearer": 1,
			"our": 3,
			"storms": 1,
			"day": 1,
			"night": 1,
			"golden": 1,
			"your": 2,
			"natures": 1,
			"yet": 1,
			"to": 1,
			"clouds": 1,
			"heavenly": 1,
			"hail": 1,
			"yon": 1,
			"we": 1,
			"store": 1,
			"whose": 1,
			"as": 1,
			"life": 4,
			"me": 5,
			"the": 216,
			"tis": 2,
			"though": 1,
			"her": 3,
			"fire": 2,
			"trees": 1,
			"in": 7,
			"flowers": 1,
			"dim": 2
		},
		"pleasant": {
			"sound": 1,
			"river": 1,
			"word": 1,
			"of": 2,
			"morning": 2,
			"sight": 1,
			"land": 3,
			"is": 1,
			"smile": 3,
			"enough": 1,
			"morn": 1,
			"sleep": 1,
			"ground": 1,
			"makes": 1,
			"let": 1,
			"make": 1,
			"even": 1,
			"eye": 1,
			"soil": 1,
			"lay": 1,
			"on": 1,
			"fast": 1,
			"grass": 1,
			"dreams": 2,
			"and": 2,
			"days": 2,
			"island": 1,
			"fields": 1,
			"some": 1,
			"thought": 1,
			"through": 1,
			"road": 1,
			"ways": 2,
			"to": 2,
			"he": 1,
			"seat": 1,
			"the": 1,
			"sure": 1,
			"scene": 1,
			"in": 3,
			"flowers": 1
		},
		"notes": {
			"of": 5,
			"rising": 1,
			"that": 1,
			"what": 1,
			"so": 1,
			"delight": 1,
			"on": 2,
			"thee": 1,
			"and": 1,
			"i": 1,
			"to": 3,
			"as": 1,
			"he": 1,
			"the": 2
		},
		"thomas": {
			"footnote": 1,
			"unseen": 1,
			"parting": 1,
			"of": 1,
			"after": 1,
			"hymn": 1,
			"over": 1,
			"gray": 2,
			"for": 1,
			"read": 3,
			"battle": 1,
			"francis": 1,
			"conscience": 1,
			"de": 1,
			"a": 2,
			"lord": 1,
			"love": 2,
			"on": 1,
			"when": 1,
			"and": 1,
			"i": 1,
			"softly": 1,
			"guilty": 1,
			"sad": 1,
			"now": 1,
			"only": 1,
			"as": 2,
			"said": 1,
			"noon": 1,
			"at": 1,
			"translation": 1,
			"the": 8
		},
		"ten": {
			"more": 1,
			"thousand": 18,
			"s": 1,
			"who": 1,
			"men": 1,
			"of": 3,
			"it": 2,
			"away": 1,
			"thus": 1,
			"for": 1,
			"because": 2,
			"times": 1,
			"years": 1,
			"be": 1,
			"and": 1,
			"will": 1,
			"walked": 1,
			"to": 1,
			"he": 1
		},
		"foe": {
			"sweet": 1,
			"since": 1,
			"his": 2,
			"are": 1,
			"under": 1,
			"who": 2,
			"greece": 1,
			"nor": 1,
			"long": 2,
			"is": 1,
			"like": 1,
			"they": 2,
			"shot": 1,
			"where": 1,
			"for": 2,
			"worse": 1,
			"thy": 2,
			"can": 2,
			"was": 3,
			"that": 1,
			"if": 1,
			"had": 1,
			"gives": 1,
			"or": 1,
			"conscience": 1,
			"so": 1,
			"on": 1,
			"break": 1,
			"but": 2,
			"death": 1,
			"when": 2,
			"and": 15,
			"i": 1,
			"down": 1,
			"how": 1,
			"from": 1,
			"while": 1,
			"no": 1,
			"with": 1,
			"set": 1,
			"himself": 1,
			"could": 1,
			"foe": 1,
			"has": 2,
			"doth": 1,
			"fear": 1,
			"shall": 1,
			"your": 1,
			"yet": 1,
			"to": 6,
			"loud": 1,
			"little": 1,
			"bold": 1,
			"we": 1,
			"whose": 1,
			"as": 2,
			"strength": 1,
			"o": 2,
			"the": 4,
			"in": 3
		},
		"has": {
			"come": 6,
			"summer": 2,
			"us": 1,
			"more": 1,
			"sent": 1,
			"wrought": 1,
			"won": 1,
			"since": 1,
			"died": 1,
			"within": 1,
			"light": 1,
			"earth": 1,
			"touched": 1,
			"his": 4,
			"crossed": 1,
			"made": 7,
			"seen": 2,
			"of": 1,
			"this": 3,
			"cast": 2,
			"graves": 1,
			"she": 1,
			"nor": 1,
			"grown": 3,
			"forth": 1,
			"played": 1,
			"lands": 2,
			"not": 6,
			"put": 2,
			"every": 1,
			"it": 5,
			"flight": 1,
			"brought": 2,
			"alone": 1,
			"long": 3,
			"kissed": 1,
			"looked": 1,
			"like": 1,
			"away": 1,
			"found": 7,
			"good": 1,
			"ever": 1,
			"swept": 2,
			"new": 1,
			"laid": 2,
			"its": 6,
			"crown": 1,
			"run": 3,
			"for": 3,
			"past": 1,
			"read": 1,
			"become": 1,
			"autumn": 1,
			"rest": 1,
			"forgot": 1,
			"thy": 3,
			"wept": 3,
			"birth": 1,
			"flung": 1,
			"torn": 1,
			"closed": 1,
			"god": 1,
			"power": 2,
			"need": 1,
			"did": 1,
			"that": 2,
			"both": 1,
			"always": 1,
			"often": 1,
			"broken": 1,
			"had": 1,
			"an": 1,
			"nothing": 1,
			"or": 2,
			"trod": 1,
			"a": 10,
			"given": 1,
			"them": 2,
			"adieu": 1,
			"never": 1,
			"ceased": 1,
			"almost": 1,
			"leave": 1,
			"love": 1,
			"but": 1,
			"poor": 2,
			"known": 1,
			"gone": 6,
			"lifes": 1,
			"felt": 1,
			"out": 1,
			"tried": 1,
			"and": 6,
			"hid": 1,
			"i": 3,
			"told": 4,
			"home": 1,
			"broke": 1,
			"fought": 2,
			"one": 4,
			"such": 1,
			"from": 1,
			"sought": 1,
			"beat": 1,
			"beneath": 1,
			"no": 10,
			"bound": 1,
			"with": 2,
			"some": 2,
			"learned": 4,
			"till": 1,
			"all": 1,
			"slain": 1,
			"blest": 1,
			"through": 1,
			"has": 1,
			"much": 1,
			"begun": 1,
			"our": 2,
			"hall": 1,
			"neer": 1,
			"fallen": 1,
			"still": 1,
			"yet": 1,
			"to": 4,
			"wandered": 1,
			"written": 2,
			"mankind": 1,
			"lived": 2,
			"we": 1,
			"spread": 1,
			"borne": 2,
			"done": 7,
			"said": 2,
			"he": 8,
			"me": 3,
			"led": 2,
			"left": 9,
			"common": 1,
			"the": 12,
			"bent": 1,
			"stood": 1,
			"her": 1,
			"passed": 5,
			"been": 26,
			"in": 3,
			"shed": 1
		},
		"street": {
			"his": 1,
			"are": 1,
			"fell": 1,
			"of": 1,
			"once": 1,
			"among": 1,
			"not": 1,
			"over": 1,
			"by": 1,
			"song": 1,
			"my": 1,
			"came": 1,
			"therefore": 1,
			"that": 1,
			"a": 1,
			"sometimes": 1,
			"on": 1,
			"but": 1,
			"and": 4,
			"i": 1,
			"one": 1,
			"beneath": 1,
			"with": 1,
			"doth": 1,
			"yet": 1,
			"to": 1,
			"as": 2,
			"he": 2,
			"the": 2,
			"there": 2
		},
		"songs": {
			"died": 1,
			"which": 1,
			"of": 10,
			"does": 1,
			"pass": 1,
			"depart": 1,
			"like": 1,
			"children": 1,
			"together": 1,
			"they": 1,
			"without": 1,
			"that": 4,
			"have": 1,
			"on": 1,
			"but": 1,
			"ye": 1,
			"when": 1,
			"gone": 1,
			"and": 3,
			"march": 1,
			"i": 1,
			"from": 2,
			"with": 1,
			"all": 1,
			"shall": 2,
			"your": 1,
			"to": 1,
			"we": 3,
			"as": 1,
			"the": 2,
			"in": 4
		},
		"thats": {
			"sweet": 2,
			"within": 2,
			"virtues": 1,
			"free": 1,
			"made": 1,
			"worth": 2,
			"divine": 1,
			"hes": 1,
			"by": 1,
			"alone": 1,
			"wise": 1,
			"like": 2,
			"hallowed": 1,
			"new": 1,
			"for": 3,
			"past": 2,
			"read": 1,
			"lost": 1,
			"my": 2,
			"better": 1,
			"noble": 1,
			"broken": 1,
			"pure": 1,
			"what": 1,
			"or": 1,
			"bright": 1,
			"a": 1,
			"on": 1,
			"but": 1,
			"gone": 4,
			"felt": 1,
			"out": 2,
			"sweetly": 1,
			"told": 2,
			"here": 1,
			"too": 1,
			"no": 1,
			"now": 1,
			"all": 2,
			"has": 1,
			"only": 1,
			"way": 2,
			"to": 2,
			"round": 1,
			"as": 1,
			"at": 1,
			"left": 1,
			"the": 4,
			"there": 1,
			"in": 1
		},
		"asleep": {
			"are": 1,
			"men": 1,
			"of": 1,
			"heavy": 1,
			"by": 1,
			"like": 1,
			"for": 1,
			"were": 1,
			"half": 1,
			"awake": 1,
			"a": 1,
			"on": 1,
			"but": 1,
			"when": 1,
			"and": 5,
			"too": 1,
			"then": 1,
			"asleep": 5,
			"to": 1,
			"at": 1,
			"below": 1,
			"slumber": 1,
			"though": 1,
			"in": 3
		},
		"laugh": {
			"else": 1,
			"us": 1,
			"im": 1,
			"than": 1,
			"where": 1,
			"rang": 1,
			"show": 1,
			"full": 1,
			"or": 3,
			"a": 1,
			"them": 1,
			"but": 1,
			"when": 1,
			"and": 5,
			"i": 1,
			"mortal": 1,
			"with": 1,
			"before": 1,
			"yet": 1,
			"we": 1,
			"as": 1,
			"me": 1,
			"at": 4,
			"the": 1
		},
		"toil": {
			"of": 6,
			"nor": 2,
			"serene": 1,
			"by": 1,
			"wars": 1,
			"is": 5,
			"for": 4,
			"my": 1,
			"along": 1,
			"oer": 2,
			"that": 2,
			"an": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"on": 1,
			"and": 16,
			"i": 1,
			"might": 1,
			"each": 1,
			"beneath": 2,
			"your": 1,
			"we": 2,
			"as": 1,
			"the": 3,
			"in": 1,
			"seem": 1
		},
		"service": {
			"free": 1,
			"of": 2,
			"liberty": 1,
			"is": 2,
			"ranks": 1,
			"faith": 1,
			"sabbath": 1,
			"that": 1,
			"must": 1,
			"on": 1,
			"be": 2,
			"and": 3,
			"from": 1,
			"while": 1,
			"to": 3,
			"he": 1,
			"there": 1,
			"in": 1
		},
		"angels": {
			"sweet": 1,
			"come": 2,
			"him": 1,
			"see": 1,
			"silver": 1,
			"are": 1,
			"fell": 1,
			"who": 2,
			"guard": 1,
			"men": 1,
			"hide": 1,
			"call": 1,
			"of": 4,
			"high": 1,
			"keep": 2,
			"command": 1,
			"dear": 1,
			"serene": 1,
			"not": 1,
			"began": 1,
			"flight": 1,
			"weep": 2,
			"alone": 1,
			"unto": 1,
			"sung": 3,
			"song": 1,
			"for": 1,
			"hand": 2,
			"cry": 1,
			"came": 1,
			"short": 2,
			"thy": 1,
			"sing": 6,
			"wept": 1,
			"cheer": 1,
			"held": 1,
			"god": 1,
			"were": 1,
			"did": 1,
			"that": 2,
			"arm": 1,
			"bear": 1,
			"make": 1,
			"half": 1,
			"sit": 1,
			"beautiful": 1,
			"wait": 2,
			"music": 1,
			"have": 1,
			"their": 1,
			"a": 1,
			"love": 1,
			"on": 1,
			"wing": 3,
			"but": 1,
			"glance": 1,
			"ye": 1,
			"when": 2,
			"be": 1,
			"say": 2,
			"and": 1,
			"do": 3,
			"thou": 1,
			"greet": 1,
			"down": 1,
			"raised": 1,
			"how": 1,
			"from": 3,
			"would": 1,
			"while": 1,
			"dread": 1,
			"with": 2,
			"around": 1,
			"singing": 1,
			"all": 26,
			"then": 1,
			"angels": 1,
			"open": 1,
			"fear": 1,
			"shall": 1,
			"only": 2,
			"to": 6,
			"know": 1,
			"may": 2,
			"hail": 1,
			"as": 1,
			"stand": 1,
			"he": 1,
			"me": 1,
			"led": 1,
			"the": 2,
			"tis": 1,
			"her": 1,
			"passed": 1,
			"near": 1,
			"in": 4
		},
		"george": {
			"else": 1,
			"england": 1,
			"of": 1,
			"shakespeare": 1,
			"hymn": 1,
			"hes": 1,
			"water": 1,
			"prayer": 1,
			"song": 1,
			"peace": 1,
			"hope": 1,
			"god": 1,
			"if": 1,
			"nothing": 1,
			"music": 1,
			"when": 1,
			"mans": 1,
			"and": 1,
			"i": 1,
			"henry": 2,
			"from": 1,
			"ill": 1,
			"duty": 1,
			"while": 1,
			"alfred": 1,
			"before": 1,
			"to": 1,
			"written": 1,
			"may": 1,
			"o": 1,
			"the": 3,
			"there": 1,
			"in": 2
		},
		"well": {
			"come": 1,
			"else": 1,
			"die": 2,
			"save": 1,
			"hast": 1,
			"are": 2,
			"alas": 1,
			"made": 1,
			"sweetest": 1,
			"which": 1,
			"shout": 1,
			"of": 3,
			"this": 1,
			"keep": 1,
			"talk": 1,
			"she": 3,
			"nor": 1,
			"act": 1,
			"dear": 1,
			"part": 1,
			"not": 5,
			"side": 1,
			"it": 4,
			"over": 1,
			"began": 1,
			"perish": 1,
			"water": 1,
			"send": 1,
			"by": 3,
			"jim": 6,
			"cross": 1,
			"return": 1,
			"they": 5,
			"you": 2,
			"mother": 1,
			"strike": 1,
			"its": 1,
			"where": 4,
			"holy": 1,
			"for": 11,
			"past": 1,
			"heaven": 1,
			"take": 2,
			"my": 2,
			"came": 1,
			"john": 2,
			"thy": 2,
			"sing": 3,
			"mary": 1,
			"therefore": 1,
			"seek": 1,
			"gather": 1,
			"sir": 1,
			"win": 1,
			"friend": 2,
			"was": 1,
			"that": 12,
			"if": 3,
			"let": 1,
			"bear": 1,
			"both": 1,
			"says": 1,
			"make": 2,
			"go": 1,
			"cried": 1,
			"had": 1,
			"what": 5,
			"sit": 1,
			"oh": 1,
			"an": 2,
			"even": 1,
			"or": 1,
			"de": 1,
			"lest": 1,
			"moved": 1,
			"have": 3,
			"trod": 1,
			"a": 2,
			"them": 1,
			"lay": 1,
			"on": 3,
			"content": 1,
			"but": 4,
			"known": 1,
			"ye": 1,
			"waters": 1,
			"knows": 1,
			"be": 6,
			"say": 1,
			"and": 13,
			"do": 3,
			"fate": 1,
			"i": 6,
			"here": 2,
			"too": 3,
			"fought": 1,
			"one": 1,
			"might": 2,
			"how": 3,
			"from": 1,
			"drink": 1,
			"no": 2,
			"rouse": 1,
			"with": 4,
			"now": 1,
			"set": 1,
			"give": 1,
			"till": 1,
			"meet": 2,
			"all": 1,
			"then": 1,
			"could": 2,
			"through": 2,
			"has": 1,
			"thats": 1,
			"well": 2,
			"doth": 1,
			"clear": 1,
			"begun": 1,
			"our": 4,
			"only": 1,
			"still": 1,
			"yet": 1,
			"to": 6,
			"poets": 1,
			"into": 1,
			"live": 1,
			"may": 5,
			"we": 5,
			"as": 17,
			"done": 1,
			"said": 2,
			"he": 4,
			"at": 2,
			"o": 1,
			"gain": 1,
			"the": 18,
			"her": 1,
			"there": 3,
			"in": 5
		},
		"spoke": {
			"more": 1,
			"which": 1,
			"of": 1,
			"she": 1,
			"nor": 1,
			"not": 1,
			"ere": 1,
			"let": 1,
			"a": 1,
			"but": 2,
			"and": 3,
			"i": 1,
			"from": 1,
			"no": 2,
			"our": 1,
			"to": 1,
			"th": 1,
			"at": 1,
			"the": 6,
			"in": 1
		},
		"rhine": {
			"his": 1,
			"tell": 3,
			"who": 1,
			"dear": 1,
			"it": 1,
			"like": 1,
			"they": 1,
			"where": 1,
			"theres": 1,
			"a": 1,
			"on": 1,
			"be": 1,
			"and": 2,
			"i": 1,
			"from": 1,
			"sweep": 1,
			"the": 5
		},
		"doth": {
			"come": 3,
			"ring": 1,
			"forget": 1,
			"die": 1,
			"him": 1,
			"rule": 1,
			"men": 1,
			"hide": 1,
			"call": 1,
			"of": 1,
			"blind": 1,
			"keep": 1,
			"pour": 1,
			"she": 1,
			"sight": 1,
			"pain": 1,
			"pass": 1,
			"not": 8,
			"dwell": 1,
			"serve": 1,
			"every": 1,
			"it": 4,
			"shake": 1,
			"bind": 2,
			"joyous": 1,
			"rise": 1,
			"like": 1,
			"away": 1,
			"faint": 1,
			"press": 2,
			"heaven": 1,
			"catch": 1,
			"speak": 1,
			"my": 4,
			"blow": 3,
			"beauty": 1,
			"earl": 1,
			"thy": 3,
			"sing": 3,
			"sleep": 2,
			"teach": 1,
			"birth": 1,
			"wear": 1,
			"seek": 1,
			"most": 1,
			"god": 2,
			"need": 1,
			"that": 2,
			"if": 1,
			"show": 1,
			"bear": 2,
			"embrace": 1,
			"make": 3,
			"sit": 2,
			"an": 1,
			"front": 2,
			"or": 1,
			"think": 1,
			"prey": 1,
			"fill": 1,
			"a": 3,
			"so": 1,
			"never": 1,
			"love": 1,
			"on": 2,
			"but": 2,
			"death": 1,
			"time": 1,
			"thee": 2,
			"eat": 1,
			"sigh": 1,
			"raise": 1,
			"rage": 1,
			"and": 3,
			"do": 1,
			"last": 1,
			"move": 1,
			"fly": 1,
			"against": 1,
			"saint": 1,
			"beat": 1,
			"with": 6,
			"wave": 1,
			"now": 3,
			"set": 1,
			"give": 2,
			"all": 3,
			"then": 1,
			"flesh": 1,
			"through": 1,
			"clear": 1,
			"shine": 1,
			"spring": 1,
			"our": 1,
			"fear": 1,
			"your": 2,
			"to": 1,
			"round": 1,
			"lie": 1,
			"live": 2,
			"backward": 1,
			"know": 3,
			"flow": 1,
			"stand": 5,
			"he": 1,
			"arise": 1,
			"the": 17,
			"tread": 1,
			"there": 1,
			"in": 3
		},
		"thread": {
			"of": 3,
			"she": 1,
			"is": 4,
			"was": 1,
			"that": 1,
			"a": 1,
			"on": 1,
			"and": 1,
			"from": 1,
			"with": 1,
			"to": 1,
			"as": 1,
			"the": 3,
			"in": 2
		},
		"road": {
			"of": 2,
			"amid": 1,
			"she": 1,
			"two": 1,
			"it": 2,
			"although": 1,
			"unto": 1,
			"like": 1,
			"strike": 1,
			"where": 1,
			"yea": 1,
			"for": 1,
			"makes": 1,
			"that": 3,
			"must": 1,
			"oh": 1,
			"or": 1,
			"their": 1,
			"on": 1,
			"but": 1,
			"be": 1,
			"and": 4,
			"i": 1,
			"from": 1,
			"no": 1,
			"some": 2,
			"then": 1,
			"wind": 1,
			"to": 1,
			"he": 1,
			"the": 4
		},
		"clear": {
			"sweet": 1,
			"blue": 2,
			"light": 1,
			"forget": 1,
			"beside": 1,
			"word": 1,
			"who": 1,
			"call": 1,
			"of": 3,
			"nor": 2,
			"not": 1,
			"it": 1,
			"over": 1,
			"they": 1,
			"its": 1,
			"where": 1,
			"for": 4,
			"heaven": 1,
			"autumn": 1,
			"shines": 1,
			"thy": 1,
			"name": 1,
			"were": 1,
			"that": 2,
			"eye": 1,
			"upon": 1,
			"spirit": 1,
			"on": 1,
			"above": 3,
			"but": 1,
			"moving": 1,
			"when": 2,
			"and": 18,
			"sunshine": 1,
			"i": 3,
			"depths": 1,
			"steel": 1,
			"one": 1,
			"from": 2,
			"strange": 1,
			"blade": 1,
			"breast": 1,
			"honor": 1,
			"no": 1,
			"calm": 1,
			"around": 1,
			"now": 1,
			"till": 1,
			"through": 1,
			"yet": 1,
			"to": 5,
			"harp": 1,
			"bold": 1,
			"as": 7,
			"english": 1,
			"gleam": 1,
			"at": 1,
			"o": 1,
			"the": 4,
			"her": 1,
			"in": 5
		},
		"king": {
			"look": 1,
			"since": 1,
			"blew": 1,
			"his": 5,
			"james": 4,
			"are": 1,
			"six": 1,
			"alas": 1,
			"fell": 1,
			"next": 1,
			"who": 4,
			"men": 1,
			"which": 1,
			"of": 22,
			"this": 1,
			"high": 1,
			"after": 1,
			"act": 1,
			"not": 1,
			"send": 1,
			"by": 1,
			"alone": 1,
			"long": 1,
			"bring": 1,
			"looked": 1,
			"like": 1,
			"lo": 1,
			"lead": 1,
			"mild": 1,
			"nay": 1,
			"robert": 11,
			"those": 1,
			"where": 1,
			"richard": 2,
			"for": 5,
			"theres": 1,
			"my": 3,
			"again": 1,
			"thy": 1,
			"whom": 1,
			"francis": 1,
			"because": 1,
			"rising": 1,
			"queen": 1,
			"sits": 1,
			"god": 2,
			"indeed": 1,
			"did": 1,
			"that": 4,
			"cried": 2,
			"rode": 3,
			"gave": 1,
			"their": 3,
			"upon": 2,
			"almost": 1,
			"on": 2,
			"but": 2,
			"self": 1,
			"when": 3,
			"be": 1,
			"head": 1,
			"and": 16,
			"wounded": 1,
			"i": 2,
			"henry": 8,
			"from": 3,
			"alfred": 1,
			"with": 2,
			"all": 1,
			"then": 2,
			"has": 3,
			"king": 1,
			"our": 1,
			"to": 4,
			"art": 1,
			"whose": 1,
			"as": 1,
			"charles": 10,
			"he": 2,
			"sat": 3,
			"o": 4,
			"browning": 1,
			"the": 3,
			"in": 6
		},
		"shine": {
			"summer": 1,
			"more": 1,
			"earth": 1,
			"his": 2,
			"amidst": 1,
			"once": 1,
			"it": 1,
			"by": 2,
			"alone": 1,
			"like": 1,
			"forever": 2,
			"you": 1,
			"afar": 1,
			"where": 1,
			"just": 1,
			"thy": 1,
			"most": 2,
			"bright": 2,
			"so": 1,
			"on": 5,
			"but": 2,
			"be": 1,
			"out": 3,
			"sweetly": 1,
			"and": 5,
			"i": 1,
			"thou": 1,
			"robin": 1,
			"from": 1,
			"while": 1,
			"no": 1,
			"with": 2,
			"now": 2,
			"all": 1,
			"wild": 1,
			"through": 5,
			"before": 1,
			"round": 1,
			"flow": 1,
			"as": 3,
			"he": 1,
			"the": 3,
			"there": 1,
			"in": 3
		},
		"couch": {
			"more": 1,
			"his": 2,
			"of": 5,
			"slaves": 1,
			"where": 3,
			"or": 1,
			"their": 1,
			"when": 1,
			"and": 1,
			"these": 1,
			"no": 1,
			"with": 1,
			"still": 1,
			"to": 2,
			"may": 1,
			"he": 1,
			"in": 1
		},
		"lake": {
			"come": 1,
			"ii": 1,
			"which": 1,
			"of": 1,
			"she": 1,
			"two": 1,
			"every": 1,
			"twas": 1,
			"is": 1,
			"ocean": 1,
			"you": 1,
			"comes": 1,
			"or": 1,
			"a": 1,
			"upon": 1,
			"and": 4,
			"now": 1,
			"then": 1,
			"we": 1,
			"iii": 1,
			"the": 2,
			"there": 1
		},
		"mount": {
			"up": 1,
			"is": 1,
			"unto": 1,
			"for": 1,
			"rang": 1,
			"that": 1,
			"or": 1,
			"on": 1,
			"and": 4,
			"whateer": 1,
			"i": 3,
			"looks": 1,
			"from": 2,
			"while": 1,
			"with": 1,
			"mount": 3,
			"to": 2,
			"the": 2
		},
		"master": {
			"taught": 1,
			"went": 2,
			"light": 1,
			"his": 1,
			"save": 1,
			"of": 3,
			"dear": 2,
			"it": 2,
			"found": 1,
			"please": 1,
			"laid": 1,
			"came": 3,
			"touch": 1,
			"passion": 1,
			"were": 1,
			"oer": 1,
			"crowned": 1,
			"did": 1,
			"let": 4,
			"or": 2,
			"so": 2,
			"fast": 1,
			"having": 1,
			"and": 3,
			"i": 1,
			"thou": 1,
			"home": 1,
			"work": 1,
			"other": 1,
			"grief": 1,
			"to": 1,
			"poetry": 1,
			"into": 1,
			"said": 1,
			"sat": 2,
			"the": 3
		},
		"ways": {
			"his": 1,
			"are": 2,
			"of": 10,
			"after": 1,
			"up": 1,
			"nor": 1,
			"two": 1,
			"behold": 1,
			"bless": 1,
			"like": 1,
			"lead": 1,
			"than": 1,
			"that": 1,
			"lord": 1,
			"but": 1,
			"and": 5,
			"i": 4,
			"ill": 1,
			"while": 1,
			"then": 1,
			"beauteous": 1,
			"shall": 1,
			"still": 1,
			"to": 3,
			"into": 1,
			"we": 1,
			"he": 1,
			"o": 1,
			"the": 1,
			"though": 1,
			"there": 1
		},
		"guess": {
			"im": 1,
			"his": 2,
			"of": 1,
			"sez": 1,
			"hes": 1,
			"it": 2,
			"wise": 1,
			"for": 1,
			"theres": 1,
			"john": 1,
			"was": 1,
			"that": 1,
			"if": 1,
			"a": 1,
			"t": 1,
			"i": 1,
			"each": 1,
			"from": 1,
			"gods": 1,
			"we": 1,
			"as": 1,
			"the": 1,
			"though": 1
		},
		"nights": {
			"more": 1,
			"are": 2,
			"of": 2,
			"not": 1,
			"away": 1,
			"forever": 1,
			"you": 1,
			"than": 1,
			"swift": 1,
			"gray": 1,
			"were": 1,
			"embrace": 1,
			"had": 1,
			"repose": 1,
			"and": 1,
			"sun": 1,
			"dream": 1,
			"how": 1,
			"no": 1,
			"with": 1,
			"soft": 1,
			"set": 1,
			"day": 1,
			"shade": 1,
			"gently": 1,
			"he": 1,
			"grow": 1,
			"the": 1,
			"labor": 1,
			"in": 1
		},
		"peaceful": {
			"river": 1,
			"shades": 1,
			"of": 1,
			"graves": 1,
			"keep": 1,
			"hours": 1,
			"tender": 1,
			"soul": 1,
			"evening": 1,
			"was": 1,
			"old": 1,
			"years": 1,
			"wings": 1,
			"and": 1,
			"days": 1,
			"i": 1,
			"haste": 1,
			"home": 1,
			"state": 1,
			"calm": 1,
			"all": 1,
			"day": 1,
			"shall": 2,
			"to": 1,
			"life": 1,
			"tis": 1,
			"scene": 1
		},
		"dost": {
			"look": 1,
			"keep": 1,
			"lift": 1,
			"pass": 1,
			"not": 4,
			"dwell": 1,
			"send": 1,
			"bind": 1,
			"ever": 1,
			"wear": 1,
			"bear": 1,
			"make": 1,
			"understand": 1,
			"think": 2,
			"fill": 1,
			"them": 1,
			"sometimes": 1,
			"never": 1,
			"love": 1,
			"ask": 1,
			"thou": 28,
			"against": 1,
			"bid": 1,
			"with": 2,
			"set": 1,
			"before": 1,
			"mark": 1,
			"into": 1,
			"turn": 1,
			"know": 1,
			"me": 1,
			"the": 2,
			"in": 1,
			"purpose": 1,
			"shed": 1
		},
		"spring": {
			"come": 2,
			"unseen": 1,
			"see": 1,
			"begin": 1,
			"of": 4,
			"brook": 1,
			"up": 2,
			"nor": 1,
			"blossoms": 1,
			"forth": 1,
			"today": 1,
			"it": 1,
			"over": 2,
			"by": 1,
			"is": 3,
			"like": 2,
			"hard": 1,
			"away": 1,
			"they": 1,
			"swept": 1,
			"those": 1,
			"for": 1,
			"came": 1,
			"hope": 1,
			"was": 1,
			"that": 3,
			"let": 1,
			"full": 2,
			"had": 1,
			"or": 2,
			"their": 1,
			"a": 5,
			"so": 3,
			"them": 1,
			"upon": 1,
			"many": 1,
			"on": 2,
			"but": 2,
			"when": 1,
			"eternal": 1,
			"out": 1,
			"brave": 1,
			"and": 14,
			"do": 1,
			"i": 2,
			"from": 3,
			"beneath": 2,
			"no": 1,
			"with": 5,
			"all": 1,
			"spring": 1,
			"our": 1,
			"neer": 1,
			"night": 1,
			"shall": 1,
			"to": 6,
			"into": 1,
			"as": 2,
			"o": 4,
			"the": 6,
			"sure": 1,
			"first": 1,
			"there": 3,
			"in": 1
		},
		"much": {
			"more": 8,
			"since": 1,
			"his": 2,
			"white": 1,
			"aid": 1,
			"who": 1,
			"of": 6,
			"fame": 1,
			"calls": 1,
			"learning": 1,
			"she": 2,
			"put": 1,
			"it": 1,
			"wisdom": 1,
			"by": 1,
			"is": 2,
			"like": 1,
			"care": 1,
			"they": 2,
			"you": 2,
			"stir": 1,
			"for": 4,
			"thy": 2,
			"passion": 1,
			"faith": 1,
			"that": 2,
			"had": 1,
			"moved": 1,
			"am": 1,
			"their": 1,
			"a": 3,
			"them": 1,
			"upon": 1,
			"on": 1,
			"evermore": 1,
			"but": 3,
			"perhaps": 1,
			"gone": 1,
			"be": 1,
			"and": 4,
			"grace": 1,
			"i": 1,
			"less": 1,
			"too": 1,
			"one": 1,
			"such": 1,
			"hate": 1,
			"rather": 1,
			"looks": 1,
			"help": 1,
			"dread": 1,
			"with": 2,
			"all": 1,
			"thats": 1,
			"much": 1,
			"wealth": 1,
			"loved": 1,
			"yet": 1,
			"to": 8,
			"poetry": 1,
			"art": 1,
			"we": 5,
			"as": 8,
			"strength": 1,
			"at": 1,
			"the": 3,
			"there": 1,
			"in": 3
		},
		"minds": {
			"fit": 1,
			"are": 2,
			"made": 1,
			"of": 3,
			"height": 1,
			"were": 1,
			"need": 1,
			"that": 2,
			"an": 1,
			"eye": 1,
			"delight": 1,
			"when": 1,
			"and": 3,
			"unknown": 1,
			"from": 1,
			"some": 1,
			"all": 1,
			"gods": 1,
			"to": 4,
			"may": 1,
			"as": 2,
			"me": 2,
			"the": 3,
			"in": 1
		},
		"wake": {
			"us": 1,
			"him": 2,
			"of": 1,
			"up": 1,
			"it": 1,
			"weep": 1,
			"by": 1,
			"for": 2,
			"thy": 2,
			"along": 1,
			"if": 1,
			"or": 2,
			"a": 1,
			"and": 13,
			"i": 1,
			"thou": 1,
			"no": 1,
			"with": 2,
			"now": 1,
			"then": 1,
			"to": 3,
			"ah": 1,
			"as": 1,
			"the": 5,
			"in": 2
		},
		"upward": {
			"come": 1,
			"of": 1,
			"its": 1,
			"always": 1,
			"go": 1,
			"eye": 1,
			"a": 1,
			"on": 1,
			"t": 1,
			"from": 1,
			"spring": 1,
			"turned": 1,
			"still": 1,
			"way": 2,
			"to": 5,
			"soar": 1,
			"he": 1,
			"the": 1,
			"there": 1,
			"in": 1
		},
		"fiery": {
			"fierce": 1,
			"war": 1,
			"next": 1,
			"call": 1,
			"shout": 1,
			"of": 3,
			"souls": 1,
			"pain": 1,
			"flight": 1,
			"is": 2,
			"cross": 1,
			"force": 1,
			"together": 1,
			"steed": 1,
			"its": 1,
			"rolled": 1,
			"breath": 1,
			"winds": 1,
			"soul": 1,
			"glow": 2,
			"thin": 1,
			"had": 1,
			"making": 1,
			"burst": 1,
			"heart": 1,
			"and": 3,
			"blaze": 2,
			"fought": 1,
			"might": 1,
			"hearts": 1,
			"across": 1,
			"with": 3,
			"foe": 1,
			"yet": 1,
			"to": 1,
			"youth": 1,
			"he": 1,
			"arms": 1,
			"wound": 1,
			"in": 2
		},
		"turned": {
			"his": 7,
			"mad": 1,
			"him": 3,
			"off": 1,
			"nor": 2,
			"it": 2,
			"is": 1,
			"away": 1,
			"my": 2,
			"that": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"them": 1,
			"on": 4,
			"when": 1,
			"out": 1,
			"and": 4,
			"from": 4,
			"with": 1,
			"then": 1,
			"well": 1,
			"aside": 3,
			"to": 18,
			"into": 2,
			"round": 1,
			"as": 2,
			"me": 2,
			"at": 1,
			"the": 5,
			"her": 1,
			"in": 1
		},
		"begun": {
			"his": 1,
			"not": 1,
			"put": 1,
			"by": 1,
			"you": 1,
			"for": 1,
			"battles": 1,
			"or": 1,
			"blush": 1,
			"their": 1,
			"a": 2,
			"true": 1,
			"and": 1,
			"no": 1,
			"till": 1,
			"yet": 1,
			"to": 2,
			"ah": 1,
			"glad": 1,
			"the": 2,
			"in": 2
		},
		"being": {
			"sweet": 1,
			"books": 1,
			"taught": 1,
			"wrought": 1,
			"die": 1,
			"his": 1,
			"are": 1,
			"of": 1,
			"once": 1,
			"rivers": 2,
			"not": 1,
			"is": 1,
			"like": 1,
			"form": 1,
			"they": 1,
			"than": 2,
			"those": 1,
			"for": 2,
			"lost": 1,
			"whom": 1,
			"born": 2,
			"reach": 1,
			"full": 1,
			"broken": 1,
			"or": 1,
			"trod": 1,
			"fill": 1,
			"true": 1,
			"above": 1,
			"fast": 1,
			"old": 1,
			"but": 1,
			"when": 1,
			"turns": 1,
			"knows": 1,
			"raise": 1,
			"and": 5,
			"eer": 1,
			"down": 1,
			"told": 2,
			"too": 1,
			"from": 1,
			"would": 1,
			"mind": 1,
			"ill": 1,
			"with": 4,
			"then": 1,
			"thought": 1,
			"through": 1,
			"doth": 3,
			"beauteous": 1,
			"to": 3,
			"turn": 1,
			"may": 1,
			"as": 1,
			"stand": 1,
			"life": 1,
			"at": 1,
			"the": 2,
			"in": 2,
			"shalt": 1
		},
		"beauteous": {
			"flower": 1,
			"light": 1,
			"who": 1,
			"of": 1,
			"souls": 1,
			"limbs": 1,
			"it": 1,
			"land": 1,
			"god": 1,
			"that": 2,
			"eye": 1,
			"things": 1,
			"whole": 1,
			"order": 1,
			"golden": 1,
			"to": 1,
			"he": 1,
			"change": 2,
			"seem": 1
		},
		"behind": {
			"us": 8,
			"his": 3,
			"him": 1,
			"is": 3,
			"like": 1,
			"they": 1,
			"richard": 1,
			"my": 2,
			"themselves": 1,
			"hope": 1,
			"their": 1,
			"a": 8,
			"them": 4,
			"on": 1,
			"deep": 1,
			"but": 2,
			"thee": 2,
			"and": 2,
			"i": 1,
			"one": 2,
			"from": 1,
			"beneath": 1,
			"no": 1,
			"mighty": 1,
			"with": 2,
			"some": 1,
			"through": 1,
			"king": 1,
			"to": 1,
			"we": 1,
			"as": 1,
			"me": 5,
			"the": 17,
			"her": 1,
			"in": 4
		},
		"wealth": {
			"are": 1,
			"of": 4,
			"high": 1,
			"nor": 1,
			"is": 4,
			"care": 1,
			"shook": 1,
			"for": 1,
			"that": 3,
			"if": 1,
			"must": 1,
			"or": 3,
			"bright": 1,
			"so": 1,
			"upon": 1,
			"on": 1,
			"but": 2,
			"ye": 1,
			"and": 3,
			"eer": 1,
			"myself": 1,
			"i": 2,
			"thou": 1,
			"here": 1,
			"how": 1,
			"with": 1,
			"then": 1,
			"to": 3,
			"may": 1,
			"as": 1,
			"lies": 1,
			"o": 1,
			"the": 5,
			"there": 1
		},
		"nearer": {
			"come": 1,
			"christ": 1,
			"his": 2,
			"him": 1,
			"seen": 1,
			"it": 1,
			"good": 1,
			"than": 1,
			"my": 1,
			"comes": 1,
			"an": 1,
			"never": 1,
			"when": 2,
			"and": 2,
			"home": 4,
			"one": 2,
			"till": 1,
			"still": 1,
			"to": 9,
			"we": 1,
			"as": 1,
			"the": 5,
			"drawn": 1,
			"in": 1
		},
		"our": {
			"sweet": 1,
			"flower": 2,
			"sound": 1,
			"low": 1,
			"breaking": 1,
			"bread": 1,
			"look": 1,
			"saviour": 3,
			"us": 2,
			"suffering": 1,
			"sent": 1,
			"ain": 5,
			"ring": 1,
			"lot": 2,
			"blessings": 2,
			"dust": 1,
			"curse": 1,
			"loves": 2,
			"went": 1,
			"parting": 2,
			"fierce": 2,
			"laws": 1,
			"earth": 3,
			"touched": 1,
			"his": 3,
			"happiness": 2,
			"fond": 2,
			"banner": 3,
			"ear": 2,
			"law": 1,
			"blood": 3,
			"hero": 1,
			"cheek": 2,
			"play": 2,
			"kiss": 1,
			"voices": 1,
			"deeper": 1,
			"ii": 1,
			"passions": 1,
			"ages": 1,
			"glen": 2,
			"none": 1,
			"shades": 1,
			"woe": 3,
			"weary": 3,
			"dance": 1,
			"are": 11,
			"fears": 4,
			"humble": 2,
			"right": 1,
			"back": 2,
			"made": 2,
			"fell": 1,
			"very": 2,
			"who": 1,
			"guard": 1,
			"men": 7,
			"which": 1,
			"sake": 1,
			"deeds": 2,
			"country": 11,
			"steps": 1,
			"of": 8,
			"cast": 1,
			"bonnie": 1,
			"graves": 1,
			"souls": 13,
			"keep": 1,
			"talk": 1,
			"wine": 1,
			"kept": 1,
			"up": 1,
			"food": 1,
			"liberty": 2,
			"among": 1,
			"anonymous": 1,
			"nor": 1,
			"sons": 4,
			"sacred": 1,
			"hymn": 1,
			"morning": 1,
			"heavy": 1,
			"sight": 2,
			"age": 1,
			"darkness": 3,
			"joy": 2,
			"brother": 1,
			"race": 2,
			"dreadful": 1,
			"dear": 4,
			"two": 1,
			"place": 1,
			"lands": 1,
			"sick": 1,
			"beloved": 5,
			"solemn": 5,
			"not": 1,
			"hours": 1,
			"side": 5,
			"proud": 1,
			"dry": 1,
			"praise": 1,
			"sword": 1,
			"evil": 2,
			"army": 1,
			"sins": 1,
			"shows": 1,
			"spirits": 6,
			"tongue": 1,
			"by": 1,
			"eyes": 18,
			"fathers": 19,
			"father": 7,
			"woods": 1,
			"long": 1,
			"sorrows": 2,
			"corn": 1,
			"nations": 2,
			"cold": 1,
			"pride": 3,
			"land": 6,
			"wars": 1,
			"is": 11,
			"vision": 2,
			"ships": 2,
			"away": 2,
			"gift": 1,
			"children": 2,
			"forms": 1,
			"kings": 1,
			"forever": 1,
			"good": 7,
			"ever": 1,
			"speech": 1,
			"prayer": 2,
			"believe": 1,
			"path": 1,
			"faint": 1,
			"nature": 3,
			"guide": 1,
			"stern": 1,
			"mother": 2,
			"mild": 1,
			"without": 2,
			"sister": 2,
			"slow": 1,
			"kindly": 1,
			"pleasure": 1,
			"beams": 1,
			"song": 2,
			"those": 2,
			"crown": 1,
			"friends": 2,
			"where": 3,
			"gentle": 1,
			"brief": 1,
			"despair": 1,
			"church": 1,
			"press": 1,
			"for": 3,
			"past": 1,
			"hand": 1,
			"heaven": 1,
			"lost": 2,
			"cry": 1,
			"clime": 1,
			"should": 2,
			"lonely": 1,
			"boys": 4,
			"autumn": 2,
			"rest": 1,
			"my": 2,
			"band": 3,
			"words": 1,
			"heroes": 1,
			"great": 5,
			"john": 1,
			"tender": 1,
			"deaths": 1,
			"shines": 1,
			"freedom": 2,
			"sleep": 1,
			"battle": 1,
			"warrior": 1,
			"peace": 3,
			"wheels": 1,
			"hopes": 6,
			"birth": 5,
			"better": 2,
			"shadow": 1,
			"shore": 5,
			"dearest": 3,
			"ground": 1,
			"soul": 3,
			"hope": 5,
			"cheer": 1,
			"rough": 1,
			"most": 3,
			"senses": 6,
			"times": 1,
			"wandering": 1,
			"evening": 2,
			"yellow": 2,
			"friend": 1,
			"bells": 1,
			"lords": 3,
			"friendship": 1,
			"door": 2,
			"clay": 1,
			"queen": 1,
			"glow": 1,
			"countrys": 3,
			"sin": 2,
			"battles": 1,
			"faith": 3,
			"god": 12,
			"shame": 2,
			"noble": 3,
			"power": 2,
			"were": 2,
			"waking": 2,
			"need": 2,
			"main": 1,
			"cause": 1,
			"walls": 1,
			"was": 1,
			"that": 5,
			"swords": 2,
			"lips": 4,
			"cares": 4,
			"man": 1,
			"daily": 3,
			"both": 1,
			"victory": 1,
			"fall": 1,
			"broken": 1,
			"cried": 1,
			"trust": 2,
			"brothers": 6,
			"had": 1,
			"general": 1,
			"pure": 1,
			"beautiful": 1,
			"hold": 1,
			"stars": 1,
			"pleasures": 2,
			"or": 2,
			"conscience": 1,
			"field": 1,
			"think": 1,
			"eye": 1,
			"sweeter": 1,
			"hands": 3,
			"bright": 1,
			"have": 2,
			"tree": 1,
			"tears": 3,
			"isle": 1,
			"ride": 2,
			"soldiers": 2,
			"fold": 1,
			"a": 4,
			"faces": 6,
			"babe": 1,
			"joys": 7,
			"upon": 1,
			"gallant": 1,
			"lord": 12,
			"whole": 1,
			"ashes": 2,
			"love": 6,
			"on": 4,
			"bend": 1,
			"sees": 1,
			"own": 26,
			"chains": 1,
			"deep": 1,
			"memory": 1,
			"old": 6,
			"but": 5,
			"bell": 1,
			"death": 2,
			"knowledge": 3,
			"foes": 2,
			"time": 4,
			"poor": 1,
			"ye": 1,
			"banners": 3,
			"lives": 9,
			"years": 2,
			"lifes": 2,
			"eternal": 3,
			"religious": 1,
			"mans": 2,
			"dreams": 2,
			"task": 1,
			"knows": 1,
			"be": 2,
			"bed": 1,
			"van": 1,
			"weeping": 2,
			"merit": 1,
			"feet": 10,
			"line": 5,
			"out": 1,
			"kind": 1,
			"dumb": 1,
			"earthly": 4,
			"brave": 1,
			"heart": 4,
			"say": 1,
			"sorrow": 2,
			"head": 1,
			"close": 1,
			"nobler": 1,
			"and": 31,
			"bliss": 4,
			"bones": 1,
			"mothers": 2,
			"march": 1,
			"do": 2,
			"dark": 2,
			"doom": 1,
			"last": 2,
			"sunshine": 1,
			"dream": 2,
			"fate": 3,
			"wounded": 1,
			"days": 6,
			"hid": 1,
			"i": 2,
			"haste": 1,
			"guns": 1,
			"down": 2,
			"told": 1,
			"western": 1,
			"bad": 1,
			"home": 2,
			"island": 2,
			"mortal": 2,
			"storm": 1,
			"chamber": 1,
			"judge": 1,
			"rocks": 1,
			"fatherland": 1,
			"secret": 1,
			"state": 1,
			"work": 2,
			"fields": 1,
			"saint": 1,
			"each": 1,
			"brow": 1,
			"hearts": 38,
			"help": 4,
			"from": 3,
			"would": 2,
			"want": 1,
			"reason": 1,
			"ancient": 1,
			"shield": 1,
			"while": 1,
			"breast": 1,
			"no": 1,
			"mystic": 1,
			"bound": 1,
			"early": 1,
			"maidens": 2,
			"goodly": 1,
			"mighty": 1,
			"ears": 5,
			"with": 12,
			"sweetness": 1,
			"virtue": 2,
			"everlasting": 1,
			"set": 1,
			"shone": 1,
			"heads": 4,
			"will": 1,
			"flash": 1,
			"strong": 1,
			"prayers": 4,
			"all": 3,
			"chief": 1,
			"gods": 1,
			"wild": 2,
			"fires": 1,
			"then": 3,
			"flesh": 1,
			"thought": 1,
			"pleasant": 4,
			"thomas": 1,
			"has": 1,
			"songs": 1,
			"toil": 2,
			"well": 1,
			"doth": 2,
			"king": 11,
			"master": 3,
			"ways": 2,
			"peaceful": 1,
			"minds": 2,
			"upward": 1,
			"being": 2,
			"wealth": 2,
			"nearer": 1,
			"our": 3,
			"day": 2,
			"sense": 1,
			"future": 1,
			"needs": 1,
			"ends": 1,
			"fallen": 2,
			"loved": 1,
			"shall": 3,
			"golden": 1,
			"still": 3,
			"chance": 1,
			"your": 1,
			"best": 2,
			"way": 4,
			"course": 1,
			"to": 9,
			"youth": 5,
			"human": 3,
			"knee": 2,
			"turn": 1,
			"thinking": 1,
			"little": 3,
			"glorious": 1,
			"turning": 1,
			"freedoms": 1,
			"know": 1,
			"vows": 3,
			"sore": 1,
			"bold": 1,
			"strife": 1,
			"sweep": 1,
			"withered": 1,
			"ship": 4,
			"powers": 4,
			"we": 9,
			"loss": 2,
			"infant": 2,
			"store": 3,
			"whose": 1,
			"as": 3,
			"stand": 2,
			"english": 3,
			"happy": 1,
			"life": 14,
			"noon": 1,
			"end": 1,
			"he": 2,
			"arms": 3,
			"strength": 1,
			"flag": 2,
			"fancy": 1,
			"below": 1,
			"lies": 1,
			"o": 2,
			"grow": 1,
			"left": 1,
			"streams": 1,
			"blessed": 2,
			"common": 2,
			"the": 17,
			"though": 1,
			"house": 4,
			"her": 1,
			"leads": 1,
			"change": 1,
			"weak": 1,
			"dead": 4,
			"trees": 1,
			"first": 5,
			"oft": 1,
			"there": 1,
			"in": 6,
			"dim": 1,
			"air": 1,
			"thoughts": 5,
			"sky": 3
		},
		"throne": {
			"itself": 2,
			"his": 3,
			"white": 1,
			"silent": 1,
			"of": 9,
			"nor": 2,
			"by": 1,
			"is": 2,
			"een": 1,
			"crown": 1,
			"where": 4,
			"for": 3,
			"thy": 1,
			"ere": 1,
			"was": 1,
			"or": 1,
			"a": 1,
			"them": 1,
			"green": 1,
			"on": 3,
			"above": 2,
			"poor": 1,
			"and": 12,
			"i": 1,
			"down": 2,
			"no": 1,
			"with": 1,
			"around": 1,
			"has": 1,
			"nearer": 1,
			"yet": 1,
			"we": 1,
			"as": 1,
			"fair": 1,
			"o": 2,
			"the": 3,
			"her": 1,
			"in": 5
		},
		"smoke": {
			"of": 6,
			"than": 1,
			"that": 1,
			"on": 1,
			"above": 1,
			"out": 1,
			"and": 10,
			"from": 2,
			"while": 1,
			"decay": 1,
			"with": 1,
			"your": 1,
			"way": 1,
			"to": 2,
			"the": 4,
			"there": 1
		},
		"storms": {
			"are": 1,
			"under": 1,
			"of": 4,
			"keep": 1,
			"that": 1,
			"had": 1,
			"their": 2,
			"but": 1,
			"ay": 1,
			"and": 1,
			"fly": 1,
			"from": 1,
			"no": 1,
			"till": 1,
			"neer": 1,
			"to": 1,
			"into": 1,
			"sweep": 1,
			"at": 1,
			"the": 2,
			"her": 1
		},
		"wrong": {
			"within": 1,
			"his": 2,
			"thing": 1,
			"not": 1,
			"alone": 1,
			"pride": 1,
			"is": 2,
			"forever": 1,
			"they": 2,
			"you": 1,
			"than": 1,
			"where": 1,
			"for": 2,
			"john": 1,
			"because": 1,
			"fools": 1,
			"whether": 1,
			"was": 1,
			"that": 4,
			"if": 1,
			"let": 1,
			"or": 2,
			"maryland": 1,
			"but": 1,
			"ye": 1,
			"and": 11,
			"i": 3,
			"thou": 1,
			"would": 2,
			"while": 1,
			"with": 1,
			"flying": 1,
			"will": 1,
			"dost": 1,
			"to": 3,
			"backward": 1,
			"we": 1,
			"whose": 1,
			"he": 2,
			"o": 2,
			"the": 6,
			"though": 1,
			"in": 3
		},
		"day": {
			"sweet": 1,
			"breaking": 2,
			"itself": 1,
			"more": 2,
			"im": 1,
			"worn": 1,
			"light": 1,
			"earth": 1,
			"his": 2,
			"blood": 1,
			"tell": 1,
			"are": 4,
			"made": 1,
			"which": 2,
			"dies": 2,
			"call": 1,
			"of": 29,
			"this": 2,
			"after": 6,
			"she": 5,
			"anonymous": 1,
			"nor": 1,
			"does": 2,
			"grew": 1,
			"bird": 1,
			"goes": 1,
			"dear": 1,
			"pass": 1,
			"rose": 1,
			"lines": 1,
			"behold": 1,
			"not": 1,
			"pressed": 1,
			"it": 2,
			"over": 1,
			"began": 1,
			"shows": 1,
			"twas": 1,
			"lights": 1,
			"by": 13,
			"long": 7,
			"breaks": 1,
			"mute": 1,
			"is": 25,
			"rise": 1,
			"like": 1,
			"hurrah": 1,
			"please": 1,
			"good": 1,
			"they": 4,
			"you": 1,
			"mother": 1,
			"thus": 1,
			"without": 1,
			"earths": 1,
			"where": 4,
			"yea": 1,
			"for": 8,
			"lost": 2,
			"should": 2,
			"darling": 1,
			"take": 1,
			"tomorrow": 1,
			"my": 3,
			"came": 1,
			"burning": 1,
			"thy": 1,
			"yes": 2,
			"comes": 3,
			"better": 1,
			"mary": 1,
			"remember": 2,
			"times": 1,
			"along": 2,
			"william": 1,
			"battles": 1,
			"rain": 1,
			"were": 2,
			"crowned": 1,
			"did": 1,
			"was": 11,
			"that": 14,
			"if": 2,
			"let": 1,
			"full": 1,
			"make": 1,
			"go": 1,
			"had": 2,
			"must": 1,
			"what": 3,
			"oh": 2,
			"an": 4,
			"or": 6,
			"their": 2,
			"a": 12,
			"so": 4,
			"brings": 1,
			"falls": 1,
			"them": 1,
			"upon": 1,
			"hath": 1,
			"on": 6,
			"maryland": 1,
			"old": 1,
			"but": 10,
			"death": 2,
			"ye": 1,
			"when": 16,
			"lifes": 1,
			"dreams": 1,
			"be": 5,
			"and": 59,
			"blaze": 1,
			"grave": 1,
			"i": 10,
			"thou": 4,
			"down": 1,
			"dull": 1,
			"too": 1,
			"fought": 1,
			"might": 1,
			"stands": 1,
			"each": 1,
			"from": 8,
			"beneath": 1,
			"these": 1,
			"while": 2,
			"no": 3,
			"with": 8,
			"soggarth": 1,
			"now": 1,
			"some": 1,
			"till": 5,
			"will": 1,
			"then": 4,
			"blest": 1,
			"through": 3,
			"well": 1,
			"doth": 1,
			"begun": 1,
			"our": 3,
			"day": 2,
			"shall": 2,
			"before": 1,
			"echo": 1,
			"still": 1,
			"your": 1,
			"yet": 3,
			"to": 24,
			"live": 2,
			"hail": 1,
			"we": 10,
			"as": 2,
			"fair": 1,
			"stand": 1,
			"said": 1,
			"he": 3,
			"me": 1,
			"at": 2,
			"fancy": 1,
			"lies": 1,
			"o": 4,
			"the": 37,
			"tis": 1,
			"her": 3,
			"grand": 1,
			"been": 2,
			"there": 1,
			"in": 19
		},
		"sense": {
			"more": 1,
			"weary": 1,
			"alas": 1,
			"who": 1,
			"which": 2,
			"of": 17,
			"is": 3,
			"they": 1,
			"than": 2,
			"others": 1,
			"should": 1,
			"didst": 1,
			"thy": 1,
			"most": 1,
			"god": 1,
			"was": 1,
			"that": 3,
			"let": 1,
			"must": 1,
			"or": 2,
			"think": 1,
			"have": 1,
			"a": 1,
			"but": 3,
			"say": 1,
			"and": 5,
			"i": 1,
			"each": 1,
			"from": 2,
			"sublime": 1,
			"no": 1,
			"with": 1,
			"soft": 1,
			"some": 1,
			"doth": 2,
			"yet": 1,
			"to": 3,
			"into": 1,
			"lie": 2,
			"as": 1,
			"the": 4,
			"there": 1,
			"in": 1
		},
		"hall": {
			"are": 1,
			"six": 1,
			"of": 4,
			"this": 1,
			"its": 1,
			"where": 3,
			"william": 1,
			"that": 1,
			"full": 1,
			"an": 1,
			"or": 1,
			"a": 1,
			"so": 2,
			"but": 2,
			"years": 2,
			"when": 1,
			"and": 8,
			"blaze": 1,
			"how": 1,
			"would": 1,
			"no": 1,
			"with": 3,
			"now": 1,
			"comrades": 1,
			"hall": 2,
			"to": 3,
			"mankind": 1,
			"as": 1,
			"said": 1,
			"he": 3,
			"the": 6,
			"fire": 1,
			"grim": 1,
			"in": 2
		},
		"walked": {
			"she": 1,
			"spirits": 1,
			"those": 1,
			"upon": 1,
			"but": 1,
			"when": 1,
			"and": 2,
			"with": 3,
			"through": 1,
			"to": 1,
			"as": 3,
			"the": 4,
			"in": 2
		},
		"sleeps": {
			"his": 1,
			"under": 1,
			"this": 1,
			"tender": 1,
			"oh": 1,
			"upon": 2,
			"and": 3,
			"here": 1,
			"beneath": 1,
			"now": 1,
			"then": 1,
			"well": 1,
			"yon": 1,
			"below": 1,
			"the": 2,
			"in": 3
		},
		"feel": {
			"more": 1,
			"hear": 1,
			"within": 2,
			"his": 1,
			"right": 1,
			"who": 1,
			"of": 1,
			"yield": 1,
			"after": 1,
			"among": 1,
			"not": 1,
			"proud": 1,
			"it": 5,
			"alone": 1,
			"is": 2,
			"why": 1,
			"they": 1,
			"easy": 1,
			"you": 1,
			"its": 2,
			"those": 1,
			"for": 2,
			"my": 3,
			"themselves": 1,
			"thy": 9,
			"ourselves": 1,
			"ground": 1,
			"soul": 1,
			"william": 1,
			"was": 1,
			"that": 4,
			"what": 2,
			"or": 2,
			"their": 1,
			"a": 2,
			"so": 1,
			"them": 3,
			"upon": 1,
			"but": 1,
			"thee": 2,
			"and": 4,
			"i": 4,
			"less": 1,
			"each": 1,
			"anothers": 1,
			"how": 1,
			"would": 1,
			"no": 4,
			"all": 2,
			"our": 1,
			"before": 1,
			"your": 2,
			"to": 1,
			"th": 1,
			"we": 1,
			"as": 2,
			"at": 1,
			"o": 1,
			"the": 28,
			"her": 1,
			"there": 2,
			"in": 3
		},
		"passing": {
			"sweet": 2,
			"light": 1,
			"ages": 1,
			"word": 1,
			"of": 3,
			"by": 5,
			"away": 11,
			"smile": 1,
			"hour": 1,
			"soul": 1,
			"along": 1,
			"crowd": 1,
			"must": 1,
			"dreams": 2,
			"and": 2,
			"lovely": 1,
			"dream": 1,
			"i": 1,
			"from": 1,
			"stranger": 2,
			"rare": 2,
			"no": 1,
			"strong": 1,
			"through": 2,
			"night": 1,
			"turn": 1,
			"fair": 2,
			"happy": 1,
			"the": 7,
			"there": 1
		},
		"works": {
			"his": 1,
			"of": 5,
			"not": 1,
			"today": 1,
			"every": 1,
			"together": 1,
			"my": 1,
			"were": 1,
			"that": 1,
			"conscience": 1,
			"lest": 1,
			"gave": 1,
			"making": 1,
			"on": 3,
			"and": 1,
			"i": 1,
			"with": 1,
			"to": 1,
			"we": 1,
			"he": 1,
			"the": 1,
			"though": 1,
			"her": 1,
			"in": 2
		},
		"aside": {
			"his": 1,
			"this": 1,
			"is": 1,
			"for": 1,
			"my": 1,
			"if": 1,
			"be": 1,
			"out": 1,
			"and": 11,
			"i": 1,
			"from": 2,
			"these": 1,
			"with": 3,
			"asleep": 1,
			"to": 1,
			"poets": 1,
			"turn": 1,
			"as": 1,
			"the": 4,
			"in": 1
		},
		"fortune": {
			"him": 1,
			"means": 1,
			"made": 1,
			"men": 1,
			"is": 1,
			"faint": 1,
			"cannot": 1,
			"smiles": 1,
			"what": 2,
			"an": 1,
			"or": 1,
			"wilt": 1,
			"never": 1,
			"on": 1,
			"empty": 1,
			"and": 1,
			"i": 1,
			"with": 1,
			"all": 1,
			"doth": 1,
			"fortune": 1,
			"shall": 1,
			"hence": 1,
			"in": 1
		},
		"gathered": {
			"are": 1,
			"of": 1,
			"up": 1,
			"darkness": 1,
			"not": 1,
			"like": 1,
			"again": 1,
			"along": 1,
			"on": 1,
			"be": 1,
			"and": 2,
			"home": 1,
			"all": 3,
			"then": 1,
			"thought": 1,
			"to": 3,
			"round": 3,
			"as": 1,
			"strength": 2,
			"at": 1,
			"world": 1,
			"her": 2,
			"in": 1
		},
		"open": {
			"free": 1,
			"war": 1,
			"gate": 1,
			"of": 1,
			"once": 1,
			"she": 1,
			"by": 1,
			"eyes": 1,
			"is": 1,
			"wide": 6,
			"sea": 1,
			"heaven": 2,
			"my": 1,
			"door": 5,
			"face": 1,
			"was": 1,
			"what": 1,
			"or": 2,
			"field": 1,
			"hands": 1,
			"their": 1,
			"upon": 2,
			"filled": 1,
			"plain": 1,
			"and": 5,
			"truth": 1,
			"i": 1,
			"brow": 1,
			"now": 1,
			"then": 1,
			"doth": 1,
			"day": 1,
			"open": 1,
			"before": 1,
			"still": 1,
			"your": 1,
			"to": 4,
			"loud": 1,
			"as": 1,
			"stand": 1,
			"at": 1,
			"the": 4,
			"tis": 1,
			"house": 1,
			"in": 1,
			"sky": 1
		},
		"page": {
			"his": 1,
			"wi": 1,
			"hide": 1,
			"it": 2,
			"is": 1,
			"like": 1,
			"where": 1,
			"that": 1,
			"half": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"poor": 2,
			"and": 5,
			"now": 1,
			"to": 2,
			"rich": 1,
			"know": 1,
			"the": 1,
			"grows": 1
		},
		"frame": {
			"more": 1,
			"which": 1,
			"of": 1,
			"it": 1,
			"its": 1,
			"for": 1,
			"trembling": 1,
			"if": 1,
			"their": 1,
			"a": 3,
			"but": 1,
			"eternal": 1,
			"and": 2,
			"here": 1,
			"from": 1,
			"beneath": 1,
			"through": 1,
			"your": 1,
			"yet": 1,
			"life": 1,
			"the": 2,
			"in": 2
		},
		"neer": {
			"summer": 1,
			"us": 1,
			"within": 1,
			"forget": 4,
			"his": 1,
			"are": 3,
			"made": 1,
			"who": 1,
			"act": 1,
			"mourn": 1,
			"land": 1,
			"return": 1,
			"sung": 1,
			"you": 1,
			"should": 1,
			"my": 1,
			"again": 1,
			"thy": 2,
			"can": 2,
			"were": 2,
			"was": 2,
			"that": 3,
			"let": 2,
			"make": 1,
			"go": 1,
			"had": 1,
			"sit": 1,
			"think": 2,
			"their": 1,
			"a": 7,
			"so": 5,
			"hath": 1,
			"on": 1,
			"saw": 3,
			"but": 1,
			"canst": 1,
			"be": 5,
			"and": 1,
			"i": 1,
			"broke": 1,
			"might": 1,
			"from": 1,
			"will": 2,
			"could": 1,
			"shall": 5,
			"to": 5,
			"said": 1,
			"he": 1,
			"me": 1,
			"at": 1,
			"left": 1,
			"the": 3,
			"been": 3,
			"shed": 1
		},
		"future": {
			"come": 1,
			"fame": 1,
			"sons": 1,
			"age": 2,
			"two": 2,
			"hours": 1,
			"far": 2,
			"is": 1,
			"vision": 1,
			"like": 1,
			"they": 1,
			"past": 1,
			"hour": 1,
			"times": 1,
			"held": 1,
			"can": 1,
			"was": 1,
			"that": 1,
			"often": 1,
			"hath": 1,
			"saw": 1,
			"time": 2,
			"years": 1,
			"and": 1,
			"dream": 1,
			"days": 2,
			"i": 1,
			"storm": 1,
			"how": 1,
			"all": 1,
			"through": 1,
			"pleasant": 1,
			"king": 1,
			"to": 2,
			"poets": 1,
			"life": 2,
			"in": 1
		},
		"fear": {
			"itself": 1,
			"since": 1,
			"river": 1,
			"chase": 1,
			"die": 1,
			"his": 2,
			"are": 1,
			"under": 1,
			"which": 1,
			"of": 8,
			"this": 2,
			"she": 1,
			"nor": 2,
			"does": 1,
			"not": 10,
			"divine": 1,
			"it": 1,
			"is": 2,
			"farewell": 1,
			"why": 1,
			"they": 1,
			"stern": 1,
			"its": 1,
			"looking": 1,
			"brief": 1,
			"for": 3,
			"take": 1,
			"my": 1,
			"god": 1,
			"were": 1,
			"was": 2,
			"that": 5,
			"if": 2,
			"jerusalem": 1,
			"go": 1,
			"what": 1,
			"oh": 1,
			"hold": 1,
			"or": 1,
			"a": 1,
			"them": 1,
			"things": 1,
			"on": 1,
			"but": 3,
			"death": 1,
			"thee": 1,
			"ye": 1,
			"when": 3,
			"mans": 2,
			"be": 1,
			"out": 1,
			"and": 18,
			"i": 6,
			"unknown": 1,
			"might": 1,
			"each": 2,
			"how": 1,
			"from": 2,
			"would": 1,
			"no": 10,
			"took": 1,
			"give": 2,
			"some": 1,
			"well": 1,
			"feel": 1,
			"aside": 1,
			"neer": 2,
			"shall": 1,
			"to": 13,
			"stand": 1,
			"he": 2,
			"strength": 1,
			"the": 10,
			"though": 1,
			"there": 1,
			"in": 5
		},
		"night": {
			"sweet": 1,
			"ring": 1,
			"within": 1,
			"parting": 1,
			"his": 1,
			"wi": 1,
			"white": 1,
			"are": 5,
			"beside": 1,
			"ive": 1,
			"fell": 1,
			"under": 1,
			"which": 3,
			"call": 1,
			"of": 11,
			"this": 2,
			"hung": 1,
			"after": 1,
			"up": 1,
			"she": 3,
			"among": 1,
			"act": 1,
			"whatever": 1,
			"darkness": 1,
			"sands": 1,
			"rose": 1,
			"not": 1,
			"depart": 1,
			"hes": 1,
			"it": 2,
			"over": 1,
			"twas": 1,
			"weep": 1,
			"by": 3,
			"jim": 1,
			"long": 2,
			"twixt": 1,
			"is": 19,
			"soon": 1,
			"rise": 1,
			"like": 3,
			"away": 1,
			"good": 2,
			"lead": 1,
			"they": 4,
			"you": 1,
			"shot": 1,
			"mother": 1,
			"seven": 1,
			"without": 1,
			"its": 2,
			"song": 1,
			"those": 1,
			"brief": 1,
			"for": 7,
			"bloody": 1,
			"my": 5,
			"blow": 1,
			"bore": 1,
			"words": 1,
			"standing": 1,
			"again": 1,
			"thy": 1,
			"yes": 1,
			"sleep": 1,
			"tone": 1,
			"peace": 1,
			"comes": 2,
			"sadly": 1,
			"along": 1,
			"rain": 3,
			"god": 1,
			"did": 1,
			"was": 5,
			"that": 11,
			"let": 1,
			"had": 1,
			"must": 2,
			"what": 3,
			"an": 2,
			"or": 6,
			"awake": 1,
			"their": 1,
			"a": 12,
			"so": 3,
			"hath": 2,
			"on": 1,
			"but": 7,
			"poor": 1,
			"when": 10,
			"be": 4,
			"van": 1,
			"close": 1,
			"and": 43,
			"ask": 1,
			"i": 9,
			"home": 1,
			"here": 1,
			"shadows": 1,
			"how": 1,
			"from": 3,
			"would": 1,
			"these": 1,
			"nigh": 1,
			"while": 2,
			"no": 3,
			"with": 8,
			"around": 1,
			"soggarth": 1,
			"some": 1,
			"till": 3,
			"himself": 1,
			"fires": 1,
			"through": 1,
			"thomas": 1,
			"clear": 1,
			"wake": 2,
			"our": 1,
			"day": 1,
			"sleeps": 1,
			"passing": 1,
			"shall": 2,
			"before": 3,
			"still": 3,
			"yet": 3,
			"to": 7,
			"loud": 1,
			"round": 1,
			"use": 1,
			"may": 1,
			"we": 1,
			"as": 8,
			"he": 4,
			"me": 1,
			"at": 3,
			"o": 7,
			"chorus": 1,
			"the": 31,
			"tis": 1,
			"though": 2,
			"her": 4,
			"oft": 1,
			"there": 2,
			"in": 6,
			"flowers": 1,
			"thoughts": 1,
			"grows": 1
		},
		"patience": {
			"hear": 1,
			"sent": 1,
			"wrought": 1,
			"which": 1,
			"she": 1,
			"is": 1,
			"unto": 1,
			"my": 1,
			"oer": 1,
			"that": 1,
			"what": 1,
			"a": 1,
			"on": 1,
			"but": 1,
			"and": 3,
			"i": 1,
			"from": 1,
			"learned": 1,
			"all": 1,
			"george": 1,
			"being": 2,
			"still": 1,
			"to": 2,
			"as": 1,
			"stand": 1,
			"the": 2
		},
		"needs": {
			"die": 1,
			"of": 1,
			"not": 1,
			"burn": 1,
			"it": 1,
			"for": 1,
			"go": 1,
			"must": 4,
			"a": 1,
			"but": 2,
			"be": 1,
			"and": 3,
			"from": 1,
			"no": 4,
			"all": 1,
			"our": 1,
			"only": 2,
			"the": 4
		},
		"equal": {
			"murmur": 1,
			"justice": 1,
			"law": 1,
			"are": 2,
			"made": 1,
			"of": 2,
			"once": 1,
			"pain": 1,
			"like": 1,
			"good": 2,
			"times": 1,
			"power": 1,
			"did": 1,
			"eye": 1,
			"thee": 1,
			"be": 1,
			"fate": 1,
			"hate": 1,
			"with": 1,
			"our": 1,
			"to": 3,
			"the": 3,
			"in": 2,
			"sky": 1
		},
		"ends": {
			"none": 1,
			"of": 2,
			"forth": 1,
			"not": 1,
			"wide": 1,
			"that": 3,
			"them": 1,
			"hath": 1,
			"close": 1,
			"and": 1,
			"thou": 1,
			"no": 1,
			"with": 1,
			"all": 1,
			"well": 1,
			"our": 1,
			"yet": 1,
			"the": 3,
			"her": 1,
			"there": 1,
			"in": 1
		},
		"fallen": {
			"are": 1,
			"who": 1,
			"greece": 1,
			"star": 1,
			"she": 1,
			"among": 1,
			"sons": 1,
			"is": 1,
			"few": 1,
			"for": 1,
			"heroes": 1,
			"great": 1,
			"god": 1,
			"cause": 2,
			"was": 1,
			"stars": 1,
			"so": 1,
			"on": 2,
			"but": 1,
			"and": 3,
			"state": 1,
			"from": 3,
			"beneath": 1,
			"comrades": 1,
			"through": 1,
			"before": 1,
			"yet": 1,
			"to": 2,
			"into": 1,
			"at": 1,
			"in": 2
		},
		"mercy": {
			"look": 1,
			"justice": 1,
			"are": 1,
			"who": 1,
			"holds": 1,
			"of": 1,
			"does": 1,
			"not": 1,
			"long": 1,
			"is": 4,
			"unto": 1,
			"ever": 1,
			"for": 2,
			"shines": 1,
			"god": 1,
			"was": 1,
			"show": 1,
			"must": 1,
			"hands": 1,
			"upon": 2,
			"lord": 1,
			"love": 1,
			"on": 4,
			"but": 1,
			"felt": 1,
			"be": 1,
			"and": 6,
			"i": 1,
			"bids": 1,
			"too": 1,
			"mighty": 1,
			"with": 1,
			"sweetness": 1,
			"now": 1,
			"will": 1,
			"all": 1,
			"doth": 1,
			"feel": 1,
			"mercy": 1,
			"still": 1,
			"as": 2,
			"the": 5,
			"bent": 1,
			"there": 1,
			"in": 3
		},
		"loved": {
			"sound": 1,
			"loves": 1,
			"his": 1,
			"him": 3,
			"are": 2,
			"who": 4,
			"ones": 9,
			"of": 1,
			"not": 3,
			"it": 1,
			"by": 2,
			"long": 2,
			"bring": 1,
			"land": 1,
			"is": 1,
			"you": 3,
			"its": 2,
			"for": 2,
			"my": 2,
			"again": 1,
			"thy": 1,
			"friend": 1,
			"that": 2,
			"another": 2,
			"gives": 1,
			"or": 2,
			"have": 2,
			"am": 1,
			"sae": 2,
			"a": 4,
			"so": 9,
			"faces": 1,
			"them": 2,
			"but": 2,
			"thee": 7,
			"and": 12,
			"i": 1,
			"thou": 1,
			"woman": 1,
			"island": 1,
			"too": 1,
			"one": 5,
			"how": 1,
			"voice": 1,
			"with": 2,
			"well": 1,
			"needs": 1,
			"yet": 1,
			"to": 8,
			"homes": 1,
			"we": 1,
			"spread": 1,
			"he": 2,
			"me": 8,
			"at": 2,
			"the": 13,
			"though": 1,
			"stood": 1,
			"her": 4,
			"forgive": 1
		},
		"pity": {
			"us": 1,
			"murmur": 1,
			"him": 1,
			"of": 1,
			"once": 1,
			"not": 1,
			"it": 1,
			"send": 1,
			"by": 2,
			"is": 3,
			"wept": 1,
			"or": 1,
			"tears": 1,
			"so": 2,
			"them": 3,
			"never": 1,
			"hath": 1,
			"filled": 1,
			"thee": 1,
			"and": 4,
			"thou": 1,
			"from": 1,
			"then": 1,
			"could": 1,
			"to": 2,
			"may": 1,
			"as": 2,
			"said": 1,
			"me": 2,
			"at": 1,
			"the": 6,
			"in": 2
		},
		"stay": {
			"his": 1,
			"nor": 1,
			"joy": 1,
			"not": 4,
			"by": 1,
			"is": 1,
			"they": 1,
			"you": 1,
			"where": 1,
			"my": 2,
			"thy": 1,
			"can": 1,
			"that": 1,
			"if": 1,
			"oh": 1,
			"or": 1,
			"when": 2,
			"be": 2,
			"and": 6,
			"i": 2,
			"here": 1,
			"no": 2,
			"with": 1,
			"all": 1,
			"then": 1,
			"ho": 4,
			"well": 1,
			"stay": 2,
			"to": 1,
			"whose": 1,
			"as": 1,
			"at": 2,
			"the": 3,
			"in": 2
		},
		"shall": {
			"come": 10,
			"sound": 1,
			"bow": 1,
			"dare": 1,
			"look": 3,
			"us": 2,
			"hear": 7,
			"thine": 2,
			"ring": 3,
			"england": 1,
			"light": 2,
			"forget": 1,
			"pine": 1,
			"die": 11,
			"his": 3,
			"save": 2,
			"endure": 1,
			"see": 15,
			"leap": 2,
			"play": 1,
			"kiss": 1,
			"learn": 1,
			"rule": 2,
			"surely": 1,
			"tell": 2,
			"dance": 1,
			"aid": 1,
			"warm": 1,
			"guard": 1,
			"men": 2,
			"which": 1,
			"beam": 1,
			"call": 2,
			"of": 1,
			"this": 1,
			"cast": 1,
			"yield": 3,
			"up": 1,
			"triumph": 2,
			"breathe": 3,
			"she": 2,
			"silence": 1,
			"find": 8,
			"mourn": 3,
			"place": 1,
			"lift": 1,
			"part": 1,
			"pass": 2,
			"beloved": 1,
			"mine": 2,
			"behold": 2,
			"not": 30,
			"fade": 4,
			"divine": 1,
			"dwell": 4,
			"burn": 2,
			"serve": 1,
			"dry": 1,
			"it": 10,
			"over": 1,
			"shake": 1,
			"perish": 1,
			"neither": 1,
			"wisdom": 1,
			"bless": 1,
			"weep": 2,
			"send": 2,
			"try": 1,
			"eyes": 1,
			"nevermore": 1,
			"bring": 6,
			"trace": 1,
			"bind": 2,
			"cold": 1,
			"cross": 1,
			"soon": 2,
			"rise": 11,
			"like": 1,
			"return": 2,
			"forever": 2,
			"lead": 6,
			"force": 1,
			"ever": 4,
			"they": 5,
			"you": 1,
			"nature": 1,
			"tyrants": 1,
			"thus": 1,
			"new": 1,
			"strike": 1,
			"its": 1,
			"smile": 1,
			"where": 2,
			"run": 2,
			"press": 2,
			"for": 4,
			"read": 1,
			"become": 1,
			"take": 5,
			"speak": 1,
			"rest": 4,
			"my": 15,
			"blow": 2,
			"remain": 1,
			"again": 1,
			"freedom": 1,
			"thy": 15,
			"sing": 3,
			"watch": 1,
			"sleep": 2,
			"teach": 2,
			"tonight": 1,
			"gather": 2,
			"cease": 5,
			"any": 2,
			"reach": 2,
			"glow": 3,
			"face": 1,
			"sin": 1,
			"comfort": 1,
			"oer": 1,
			"need": 1,
			"walls": 1,
			"that": 3,
			"let": 2,
			"show": 2,
			"drop": 1,
			"man": 2,
			"bear": 5,
			"another": 1,
			"taste": 1,
			"make": 7,
			"fall": 6,
			"go": 7,
			"reign": 3,
			"half": 1,
			"trust": 1,
			"hang": 1,
			"what": 2,
			"sit": 3,
			"oh": 1,
			"understand": 1,
			"hold": 1,
			"or": 2,
			"think": 1,
			"have": 8,
			"fill": 5,
			"awake": 1,
			"their": 2,
			"fold": 1,
			"a": 7,
			"so": 2,
			"them": 2,
			"sink": 1,
			"never": 21,
			"many": 1,
			"spirit": 1,
			"leave": 1,
			"walk": 2,
			"love": 4,
			"on": 4,
			"bend": 1,
			"break": 5,
			"but": 1,
			"death": 2,
			"thee": 3,
			"ye": 1,
			"when": 4,
			"sigh": 1,
			"raise": 3,
			"be": 113,
			"roses": 1,
			"sweetly": 2,
			"say": 6,
			"close": 2,
			"and": 10,
			"thunder": 1,
			"bloom": 1,
			"do": 3,
			"doom": 1,
			"last": 2,
			"myself": 1,
			"move": 2,
			"fly": 3,
			"i": 46,
			"snow": 1,
			"thou": 1,
			"greet": 2,
			"less": 1,
			"pay": 2,
			"tower": 1,
			"too": 1,
			"one": 3,
			"draw": 2,
			"against": 1,
			"perfect": 1,
			"work": 2,
			"from": 5,
			"join": 1,
			"ill": 1,
			"endless": 1,
			"beneath": 1,
			"these": 3,
			"no": 2,
			"bid": 3,
			"rouse": 2,
			"voice": 1,
			"decay": 1,
			"with": 8,
			"virtue": 1,
			"wave": 1,
			"now": 3,
			"set": 1,
			"give": 1,
			"foreign": 1,
			"meet": 6,
			"follow": 2,
			"flash": 1,
			"all": 5,
			"grief": 1,
			"then": 2,
			"ten": 1,
			"laugh": 1,
			"clear": 1,
			"shine": 6,
			"mount": 1,
			"spring": 3,
			"wake": 3,
			"upward": 1,
			"our": 1,
			"feel": 2,
			"gathered": 1,
			"open": 1,
			"neer": 3,
			"stay": 1,
			"shall": 2,
			"before": 1,
			"echo": 1,
			"still": 4,
			"your": 2,
			"yet": 2,
			"to": 8,
			"speed": 1,
			"into": 1,
			"turn": 1,
			"lie": 4,
			"mankind": 1,
			"live": 9,
			"gently": 1,
			"know": 9,
			"soar": 1,
			"flow": 1,
			"hail": 3,
			"sweep": 1,
			"we": 22,
			"glad": 1,
			"spread": 4,
			"as": 1,
			"fair": 1,
			"stand": 5,
			"life": 1,
			"end": 3,
			"he": 4,
			"me": 3,
			"gleam": 1,
			"at": 3,
			"slumber": 1,
			"grow": 2,
			"arise": 1,
			"the": 35,
			"waste": 1,
			"fight": 1,
			"labor": 1,
			"share": 1,
			"change": 2,
			"tread": 3,
			"fail": 3,
			"first": 1,
			"in": 3,
			"dim": 2,
			"shed": 2,
			"seem": 1
		},
		"before": {
			"us": 11,
			"thine": 1,
			"his": 6,
			"him": 13,
			"learn": 1,
			"war": 1,
			"alas": 1,
			"ive": 1,
			"silent": 1,
			"which": 1,
			"of": 1,
			"this": 1,
			"high": 2,
			"anonymous": 1,
			"pain": 1,
			"today": 1,
			"proud": 1,
			"it": 5,
			"is": 1,
			"they": 2,
			"you": 2,
			"its": 2,
			"take": 1,
			"my": 6,
			"fingers": 1,
			"thy": 9,
			"morn": 1,
			"whom": 1,
			"any": 1,
			"was": 1,
			"that": 2,
			"arm": 1,
			"go": 1,
			"had": 1,
			"what": 1,
			"an": 1,
			"their": 3,
			"a": 5,
			"them": 5,
			"green": 2,
			"whole": 1,
			"but": 7,
			"death": 1,
			"thee": 13,
			"ye": 1,
			"when": 1,
			"be": 1,
			"and": 12,
			"i": 9,
			"thou": 1,
			"one": 1,
			"from": 3,
			"no": 1,
			"with": 1,
			"give": 1,
			"some": 1,
			"will": 1,
			"all": 1,
			"gods": 1,
			"then": 2,
			"through": 2,
			"wake": 1,
			"nearer": 1,
			"our": 3,
			"your": 3,
			"to": 2,
			"ah": 2,
			"we": 6,
			"whose": 2,
			"as": 1,
			"life": 1,
			"he": 2,
			"me": 18,
			"at": 1,
			"o": 1,
			"browning": 1,
			"the": 76,
			"theyre": 1,
			"her": 10,
			"in": 4
		},
		"echo": {
			"sweet": 1,
			"his": 1,
			"made": 1,
			"of": 4,
			"forth": 1,
			"is": 1,
			"god": 1,
			"did": 1,
			"that": 1,
			"on": 1,
			"west": 1,
			"from": 2,
			"would": 1,
			"notes": 1,
			"to": 3,
			"left": 1,
			"rings": 1,
			"the": 1,
			"there": 1,
			"in": 1
		},
		"hundred": {
			"more": 2,
			"went": 1,
			"his": 1,
			"lady": 1,
			"thousand": 10,
			"voices": 1,
			"men": 1,
			"ships": 1,
			"they": 1,
			"you": 1,
			"grant": 1,
			"friends": 1,
			"summers": 1,
			"rang": 1,
			"forward": 2,
			"a": 1,
			"so": 1,
			"lives": 1,
			"years": 3,
			"when": 1,
			"raise": 1,
			"and": 1,
			"down": 1,
			"fields": 1,
			"took": 1,
			"alfred": 1,
			"all": 2,
			"slain": 1,
			"only": 1,
			"to": 3,
			"bold": 1,
			"as": 1,
			"arms": 1,
			"streams": 1,
			"scarce": 1,
			"in": 2
		},
		"only": {
			"books": 1,
			"come": 1,
			"look": 1,
			"wish": 1,
			"light": 1,
			"his": 3,
			"law": 1,
			"see": 2,
			"rule": 1,
			"are": 1,
			"back": 1,
			"men": 1,
			"suffer": 1,
			"which": 1,
			"of": 5,
			"this": 3,
			"kept": 1,
			"feels": 1,
			"food": 1,
			"she": 1,
			"rock": 1,
			"silence": 1,
			"three": 1,
			"joy": 1,
			"scorn": 1,
			"two": 1,
			"part": 1,
			"not": 2,
			"constant": 1,
			"praise": 1,
			"it": 1,
			"evil": 1,
			"weep": 1,
			"by": 6,
			"shut": 1,
			"bring": 1,
			"wise": 1,
			"is": 4,
			"like": 1,
			"away": 1,
			"care": 1,
			"they": 4,
			"faint": 1,
			"you": 1,
			"heard": 2,
			"looking": 1,
			"for": 5,
			"should": 1,
			"melancholy": 1,
			"fixed": 1,
			"rest": 1,
			"my": 3,
			"words": 1,
			"note": 1,
			"remain": 1,
			"great": 1,
			"tender": 1,
			"themselves": 1,
			"thy": 1,
			"pray": 2,
			"sleep": 1,
			"battle": 1,
			"pretty": 1,
			"hope": 4,
			"strive": 2,
			"makes": 1,
			"friend": 1,
			"god": 2,
			"noble": 1,
			"were": 1,
			"need": 1,
			"that": 3,
			"if": 1,
			"man": 1,
			"cried": 1,
			"half": 1,
			"had": 1,
			"wait": 1,
			"understand": 1,
			"charms": 2,
			"waiting": 9,
			"have": 2,
			"tears": 1,
			"gave": 1,
			"a": 25,
			"given": 1,
			"lay": 1,
			"lord": 1,
			"met": 1,
			"love": 2,
			"on": 1,
			"saw": 2,
			"death": 2,
			"foes": 1,
			"time": 1,
			"perhaps": 1,
			"known": 1,
			"when": 4,
			"knows": 4,
			"be": 3,
			"bed": 1,
			"say": 1,
			"and": 4,
			"bliss": 1,
			"last": 1,
			"i": 1,
			"thou": 1,
			"raised": 1,
			"one": 4,
			"such": 1,
			"hate": 1,
			"from": 1,
			"across": 1,
			"would": 2,
			"with": 4,
			"around": 1,
			"give": 1,
			"will": 1,
			"then": 1,
			"thought": 1,
			"through": 1,
			"ten": 1,
			"doth": 1,
			"spring": 1,
			"being": 1,
			"wealth": 1,
			"wrong": 1,
			"ends": 1,
			"loved": 2,
			"echo": 1,
			"still": 1,
			"to": 13,
			"poets": 1,
			"know": 4,
			"art": 2,
			"lived": 1,
			"as": 2,
			"stand": 1,
			"said": 1,
			"he": 3,
			"me": 1,
			"son": 4,
			"o": 1,
			"the": 14,
			"ghost": 1,
			"labor": 1,
			"change": 1,
			"dead": 1,
			"there": 1,
			"in": 1,
			"purpose": 1
		},
		"golden": {
			"ring": 1,
			"gates": 3,
			"light": 2,
			"rule": 1,
			"who": 1,
			"gate": 1,
			"beam": 1,
			"of": 4,
			"after": 1,
			"flood": 1,
			"age": 3,
			"sands": 2,
			"hours": 2,
			"every": 1,
			"it": 2,
			"shake": 1,
			"mean": 1,
			"tongue": 2,
			"send": 1,
			"by": 1,
			"corn": 3,
			"rise": 1,
			"care": 1,
			"they": 1,
			"grain": 4,
			"where": 1,
			"for": 1,
			"cup": 2,
			"clime": 1,
			"autumn": 1,
			"my": 1,
			"words": 1,
			"friend": 1,
			"streets": 1,
			"oer": 1,
			"that": 2,
			"lips": 1,
			"stars": 1,
			"eye": 1,
			"them": 1,
			"on": 1,
			"when": 2,
			"dreams": 1,
			"wings": 1,
			"glory": 1,
			"sorrow": 1,
			"and": 5,
			"sun": 2,
			"dream": 1,
			"thou": 1,
			"down": 1,
			"mirth": 1,
			"shadows": 1,
			"fields": 1,
			"from": 1,
			"with": 2,
			"now": 1,
			"hair": 3,
			"locks": 1,
			"then": 1,
			"gale": 1,
			"street": 2,
			"thread": 1,
			"day": 1,
			"to": 3,
			"rich": 1,
			"o": 1,
			"chain": 1,
			"rings": 1,
			"streams": 1,
			"the": 7,
			"tis": 1,
			"treasure": 1,
			"fire": 1,
			"flowers": 1
		},
		"wind": {
			"come": 1,
			"blew": 4,
			"fierce": 1,
			"free": 1,
			"his": 1,
			"him": 1,
			"who": 1,
			"which": 1,
			"of": 7,
			"up": 1,
			"among": 2,
			"divine": 1,
			"began": 1,
			"by": 1,
			"is": 5,
			"like": 2,
			"away": 1,
			"swept": 1,
			"without": 2,
			"those": 1,
			"where": 1,
			"for": 1,
			"blow": 1,
			"came": 3,
			"blows": 2,
			"can": 2,
			"oer": 1,
			"did": 1,
			"was": 1,
			"that": 11,
			"an": 1,
			"or": 5,
			"their": 1,
			"a": 1,
			"upon": 1,
			"ceased": 1,
			"fast": 1,
			"roaring": 1,
			"but": 2,
			"when": 4,
			"turns": 1,
			"be": 1,
			"t": 1,
			"out": 1,
			"and": 14,
			"i": 1,
			"thou": 1,
			"swell": 1,
			"here": 1,
			"draw": 1,
			"stands": 1,
			"from": 4,
			"beat": 1,
			"no": 1,
			"with": 1,
			"soft": 1,
			"till": 1,
			"meet": 1,
			"strong": 1,
			"all": 1,
			"then": 1,
			"through": 1,
			"doth": 3,
			"neer": 1,
			"wind": 1,
			"still": 1,
			"yet": 1,
			"to": 2,
			"slowly": 1,
			"may": 2,
			"whose": 1,
			"at": 1,
			"the": 9,
			"in": 1
		},
		"still": {
			"come": 1,
			"look": 1,
			"more": 4,
			"hear": 1,
			"within": 3,
			"went": 1,
			"im": 1,
			"christ": 1,
			"light": 1,
			"his": 8,
			"stream": 1,
			"save": 1,
			"st": 1,
			"valley": 1,
			"breathing": 1,
			"learn": 1,
			"rule": 1,
			"are": 5,
			"alas": 1,
			"aye": 1,
			"ive": 1,
			"who": 1,
			"of": 8,
			"this": 1,
			"amid": 1,
			"keep": 1,
			"kept": 1,
			"daughter": 1,
			"up": 1,
			"tide": 1,
			"she": 7,
			"nor": 1,
			"morning": 1,
			"cling": 2,
			"mine": 1,
			"divine": 1,
			"it": 3,
			"water": 1,
			"alone": 2,
			"is": 8,
			"looked": 1,
			"like": 3,
			"forms": 2,
			"why": 1,
			"forever": 1,
			"good": 1,
			"either": 1,
			"together": 1,
			"they": 5,
			"prayer": 1,
			"faint": 1,
			"you": 3,
			"guide": 1,
			"thus": 1,
			"without": 1,
			"sister": 1,
			"its": 2,
			"than": 1,
			"slow": 1,
			"those": 1,
			"where": 2,
			"yea": 1,
			"small": 3,
			"press": 2,
			"for": 13,
			"become": 1,
			"should": 1,
			"worse": 1,
			"theres": 1,
			"take": 1,
			"tomorrow": 1,
			"rest": 1,
			"my": 8,
			"whats": 1,
			"came": 1,
			"thy": 6,
			"watch": 1,
			"morn": 1,
			"sadly": 1,
			"born": 1,
			"garden": 1,
			"remember": 1,
			"makes": 1,
			"held": 1,
			"evening": 1,
			"william": 1,
			"god": 1,
			"moment": 1,
			"were": 2,
			"oer": 1,
			"indeed": 1,
			"was": 3,
			"that": 7,
			"if": 2,
			"let": 3,
			"bear": 2,
			"daily": 1,
			"another": 1,
			"leaf": 1,
			"make": 2,
			"had": 1,
			"must": 2,
			"what": 1,
			"oh": 1,
			"an": 1,
			"hold": 1,
			"even": 1,
			"field": 1,
			"late": 1,
			"am": 1,
			"trod": 1,
			"their": 4,
			"fold": 1,
			"a": 8,
			"so": 3,
			"pains": 1,
			"upon": 2,
			"lay": 1,
			"lord": 1,
			"walk": 1,
			"on": 10,
			"break": 1,
			"deep": 2,
			"old": 2,
			"but": 7,
			"thee": 1,
			"canst": 1,
			"lives": 1,
			"years": 1,
			"when": 3,
			"onward": 1,
			"eternal": 1,
			"waters": 1,
			"sigh": 1,
			"raise": 1,
			"be": 9,
			"kind": 1,
			"watched": 1,
			"and": 41,
			"whateer": 1,
			"do": 2,
			"dark": 1,
			"i": 18,
			"thou": 4,
			"down": 1,
			"less": 1,
			"too": 1,
			"might": 1,
			"shining": 1,
			"stands": 1,
			"each": 1,
			"whereer": 1,
			"how": 1,
			"from": 4,
			"beat": 2,
			"nigh": 1,
			"while": 2,
			"present": 1,
			"early": 1,
			"calm": 1,
			"with": 17,
			"sad": 3,
			"soggarth": 1,
			"will": 2,
			"follow": 1,
			"then": 1,
			"room": 1,
			"through": 2,
			"thomas": 1,
			"has": 1,
			"upward": 1,
			"nearer": 1,
			"our": 5,
			"feel": 1,
			"night": 2,
			"shall": 4,
			"before": 1,
			"still": 7,
			"your": 1,
			"yet": 2,
			"to": 21,
			"mid": 1,
			"art": 1,
			"ah": 2,
			"may": 3,
			"we": 7,
			"as": 19,
			"he": 11,
			"at": 5,
			"o": 4,
			"the": 48,
			"tis": 1,
			"though": 7,
			"fight": 1,
			"bent": 1,
			"her": 3,
			"safe": 1,
			"dead": 1,
			"tread": 2,
			"there": 6,
			"in": 19,
			"forgive": 1,
			"air": 2
		},
		"chance": {
			"his": 1,
			"which": 1,
			"of": 1,
			"by": 2,
			"is": 1,
			"its": 1,
			"my": 2,
			"longer": 1,
			"were": 1,
			"that": 1,
			"or": 1,
			"rhyme": 1,
			"and": 3,
			"each": 1,
			"with": 2,
			"will": 3,
			"shall": 1,
			"chance": 1,
			"to": 5,
			"may": 1,
			"as": 1
		},
		"your": {
			"sweet": 2,
			"books": 1,
			"sound": 1,
			"low": 1,
			"jean": 1,
			"footnote": 1,
			"dying": 1,
			"bread": 1,
			"woes": 1,
			"more": 1,
			"walks": 1,
			"won": 1,
			"blessd": 1,
			"going": 1,
			"wish": 1,
			"fierce": 1,
			"free": 2,
			"his": 1,
			"banner": 1,
			"ear": 2,
			"cheek": 3,
			"lady": 1,
			"women": 1,
			"voices": 2,
			"creed": 1,
			"s": 1,
			"shades": 1,
			"silver": 1,
			"war": 1,
			"weary": 1,
			"are": 3,
			"saints": 1,
			"humble": 1,
			"right": 2,
			"back": 1,
			"made": 2,
			"word": 1,
			"silent": 1,
			"gate": 1,
			"men": 4,
			"which": 1,
			"sake": 3,
			"call": 2,
			"country": 2,
			"of": 4,
			"star": 1,
			"season": 1,
			"high": 1,
			"worlds": 1,
			"fame": 3,
			"souls": 1,
			"tide": 1,
			"angel": 1,
			"silence": 1,
			"sight": 1,
			"age": 1,
			"joy": 2,
			"brother": 3,
			"sheep": 1,
			"race": 1,
			"dear": 1,
			"pain": 1,
			"mouth": 1,
			"lands": 1,
			"chant": 1,
			"lines": 3,
			"limbs": 1,
			"behold": 1,
			"starry": 1,
			"today": 2,
			"proud": 4,
			"dry": 1,
			"it": 1,
			"twas": 1,
			"child": 1,
			"lights": 2,
			"tongue": 1,
			"send": 1,
			"eyes": 12,
			"father": 1,
			"woods": 1,
			"bring": 1,
			"corn": 1,
			"cold": 1,
			"pride": 1,
			"land": 1,
			"is": 4,
			"vision": 1,
			"ships": 1,
			"boy": 2,
			"fairest": 1,
			"children": 2,
			"why": 1,
			"native": 2,
			"force": 1,
			"care": 1,
			"they": 1,
			"prayer": 1,
			"faint": 1,
			"wide": 1,
			"you": 3,
			"nature": 2,
			"mother": 3,
			"seven": 1,
			"new": 1,
			"weakness": 1,
			"leaves": 2,
			"sister": 1,
			"slave": 2,
			"earths": 1,
			"ranks": 1,
			"smile": 1,
			"een": 1,
			"song": 2,
			"for": 4,
			"past": 2,
			"judgment": 1,
			"hand": 11,
			"heaven": 1,
			"bosom": 2,
			"worse": 1,
			"bride": 1,
			"breath": 1,
			"rest": 1,
			"my": 2,
			"whats": 1,
			"fingers": 1,
			"words": 3,
			"great": 1,
			"john": 3,
			"tender": 1,
			"again": 2,
			"earl": 1,
			"smiles": 2,
			"watch": 1,
			"teach": 1,
			"hopes": 2,
			"better": 1,
			"shadow": 1,
			"mary": 1,
			"soul": 5,
			"hope": 1,
			"held": 1,
			"friend": 2,
			"bells": 1,
			"streets": 1,
			"name": 4,
			"door": 4,
			"countrys": 3,
			"face": 6,
			"forward": 1,
			"god": 2,
			"can": 1,
			"noble": 1,
			"immortal": 1,
			"need": 2,
			"cause": 1,
			"was": 2,
			"that": 3,
			"let": 1,
			"lips": 2,
			"arm": 1,
			"fall": 1,
			"busy": 2,
			"broken": 1,
			"go": 1,
			"trust": 4,
			"had": 1,
			"pure": 1,
			"beautiful": 1,
			"front": 1,
			"or": 2,
			"eye": 1,
			"lest": 1,
			"hands": 9,
			"have": 1,
			"tears": 3,
			"gave": 1,
			"horse": 1,
			"prey": 2,
			"fill": 1,
			"awake": 1,
			"bitter": 1,
			"their": 1,
			"a": 1,
			"so": 2,
			"pains": 1,
			"faces": 1,
			"joys": 1,
			"courage": 3,
			"true": 1,
			"gallant": 1,
			"folly": 1,
			"lord": 2,
			"spirit": 1,
			"leave": 1,
			"love": 4,
			"tomb": 2,
			"on": 1,
			"own": 15,
			"brain": 1,
			"above": 1,
			"old": 2,
			"but": 2,
			"iron": 1,
			"knowledge": 1,
			"foes": 1,
			"empty": 2,
			"ye": 3,
			"banners": 1,
			"lives": 1,
			"when": 1,
			"deed": 1,
			"waters": 1,
			"task": 1,
			"be": 1,
			"bed": 1,
			"feet": 8,
			"wings": 1,
			"glory": 1,
			"line": 1,
			"brave": 1,
			"rage": 1,
			"heart": 15,
			"sorrow": 2,
			"anguish": 1,
			"head": 3,
			"close": 1,
			"and": 31,
			"bliss": 1,
			"thunder": 1,
			"mothers": 2,
			"grace": 2,
			"march": 1,
			"truth": 1,
			"last": 3,
			"rays": 1,
			"cries": 1,
			"dream": 1,
			"wounded": 1,
			"days": 2,
			"grave": 2,
			"i": 4,
			"guns": 2,
			"tale": 2,
			"down": 2,
			"home": 4,
			"wretched": 1,
			"here": 1,
			"too": 1,
			"steel": 1,
			"presence": 1,
			"mortal": 1,
			"might": 3,
			"draw": 1,
			"hate": 1,
			"state": 1,
			"fields": 1,
			"brow": 3,
			"hearts": 3,
			"help": 1,
			"from": 1,
			"across": 1,
			"mind": 2,
			"shield": 1,
			"breast": 4,
			"no": 1,
			"voice": 1,
			"dread": 1,
			"mighty": 1,
			"with": 4,
			"sad": 2,
			"virtue": 1,
			"soft": 1,
			"now": 1,
			"some": 1,
			"shone": 1,
			"hair": 3,
			"heads": 2,
			"will": 1,
			"strong": 1,
			"prayers": 1,
			"all": 1,
			"grief": 1,
			"comrades": 1,
			"fires": 2,
			"then": 2,
			"room": 1,
			"through": 1,
			"notes": 1,
			"foe": 3,
			"has": 1,
			"george": 1,
			"clear": 2,
			"shine": 2,
			"couch": 1,
			"master": 1,
			"ways": 1,
			"nights": 1,
			"minds": 1,
			"being": 1,
			"our": 1,
			"hall": 1,
			"fear": 2,
			"loved": 1,
			"pity": 1,
			"shall": 3,
			"still": 1,
			"your": 7,
			"way": 1,
			"mark": 1,
			"course": 2,
			"to": 6,
			"speed": 1,
			"knee": 2,
			"keen": 1,
			"little": 1,
			"homes": 2,
			"art": 1,
			"ah": 1,
			"may": 1,
			"powers": 1,
			"store": 2,
			"falling": 1,
			"throng": 2,
			"stand": 1,
			"happy": 1,
			"life": 3,
			"he": 1,
			"arms": 4,
			"strength": 1,
			"flag": 1,
			"at": 3,
			"seat": 2,
			"point": 1,
			"left": 1,
			"the": 10,
			"labor": 1,
			"dead": 1,
			"in": 3,
			"flowers": 1,
			"harmony": 2,
			"thoughts": 1
		},
		"shade": {
			"see": 1,
			"who": 1,
			"which": 3,
			"of": 25,
			"it": 1,
			"by": 1,
			"is": 1,
			"like": 1,
			"where": 7,
			"noise": 1,
			"my": 1,
			"waves": 1,
			"forward": 1,
			"that": 2,
			"an": 1,
			"or": 3,
			"moved": 1,
			"a": 2,
			"on": 1,
			"above": 1,
			"but": 1,
			"onward": 1,
			"be": 1,
			"and": 15,
			"i": 2,
			"thou": 1,
			"tall": 1,
			"no": 2,
			"now": 1,
			"all": 2,
			"our": 1,
			"to": 1,
			"we": 1,
			"whose": 1,
			"at": 1,
			"lies": 1,
			"the": 3,
			"passed": 1,
			"in": 2
		},
		"natures": {
			"sweet": 2,
			"perchance": 1,
			"walks": 1,
			"laws": 1,
			"voices": 1,
			"rule": 1,
			"wise": 1,
			"why": 1,
			"good": 1,
			"they": 1,
			"prayer": 1,
			"funeral": 1,
			"slave": 1,
			"kindly": 1,
			"where": 1,
			"hand": 1,
			"peace": 1,
			"door": 1,
			"god": 1,
			"must": 1,
			"pure": 1,
			"eye": 1,
			"tears": 1,
			"a": 1,
			"own": 1,
			"chains": 1,
			"feast": 1,
			"when": 1,
			"awful": 1,
			"heart": 4,
			"and": 2,
			"grace": 3,
			"while": 1,
			"voice": 1,
			"now": 1,
			"all": 1,
			"chief": 1,
			"poured": 1,
			"to": 2,
			"flame": 1,
			"powers": 1,
			"as": 1,
			"end": 1,
			"he": 1,
			"strength": 1
		},
		"mingled": {
			"none": 1,
			"of": 2,
			"sorrows": 1,
			"good": 1,
			"together": 1,
			"bitter": 1,
			"their": 2,
			"above": 1,
			"and": 2,
			"with": 6,
			"into": 2,
			"life": 1,
			"there": 1,
			"in": 1,
			"seem": 1
		},
		"yet": {
			"come": 3,
			"more": 2,
			"taught": 1,
			"since": 1,
			"within": 1,
			"wife": 1,
			"loves": 1,
			"im": 2,
			"his": 6,
			"stream": 1,
			"him": 1,
			"see": 2,
			"faithful": 1,
			"tell": 1,
			"are": 4,
			"fears": 1,
			"beside": 1,
			"made": 1,
			"aye": 1,
			"amidst": 1,
			"who": 2,
			"seen": 1,
			"men": 1,
			"of": 7,
			"this": 4,
			"once": 4,
			"up": 3,
			"she": 7,
			"find": 1,
			"does": 1,
			"thyself": 1,
			"dear": 1,
			"two": 1,
			"mourn": 1,
			"mine": 1,
			"not": 11,
			"every": 1,
			"it": 6,
			"by": 1,
			"alone": 1,
			"is": 3,
			"few": 1,
			"like": 1,
			"farewell": 1,
			"why": 1,
			"good": 1,
			"pleased": 1,
			"ever": 1,
			"they": 3,
			"believe": 2,
			"wide": 1,
			"glowing": 1,
			"its": 2,
			"than": 2,
			"song": 1,
			"those": 1,
			"where": 3,
			"just": 1,
			"for": 5,
			"heaven": 1,
			"cry": 1,
			"should": 1,
			"theres": 1,
			"take": 1,
			"cannot": 1,
			"my": 13,
			"words": 1,
			"remain": 1,
			"tender": 1,
			"again": 2,
			"earl": 1,
			"enough": 1,
			"freedom": 1,
			"thy": 4,
			"teach": 1,
			"ere": 2,
			"rang": 1,
			"better": 1,
			"gather": 1,
			"held": 1,
			"friend": 1,
			"god": 1,
			"can": 1,
			"did": 1,
			"was": 5,
			"that": 5,
			"if": 2,
			"let": 1,
			"both": 1,
			"half": 1,
			"had": 2,
			"must": 2,
			"what": 5,
			"beautiful": 1,
			"hold": 2,
			"stars": 1,
			"even": 2,
			"think": 1,
			"ran": 1,
			"lest": 4,
			"start": 1,
			"hands": 1,
			"have": 2,
			"am": 1,
			"gave": 1,
			"their": 1,
			"a": 10,
			"so": 4,
			"true": 3,
			"upon": 3,
			"lay": 2,
			"never": 1,
			"many": 1,
			"spirit": 1,
			"ashes": 1,
			"leave": 1,
			"love": 2,
			"on": 6,
			"evermore": 1,
			"but": 7,
			"glance": 1,
			"grass": 1,
			"death": 1,
			"rushed": 1,
			"time": 1,
			"perhaps": 1,
			"ye": 1,
			"canst": 1,
			"lives": 1,
			"when": 6,
			"onward": 1,
			"be": 9,
			"t": 3,
			"brave": 1,
			"and": 6,
			"truth": 1,
			"do": 1,
			"lovely": 1,
			"grave": 1,
			"i": 28,
			"unknown": 1,
			"thou": 5,
			"here": 1,
			"too": 1,
			"one": 5,
			"each": 3,
			"how": 4,
			"higher": 1,
			"from": 2,
			"gifts": 1,
			"would": 1,
			"ill": 1,
			"beneath": 1,
			"these": 4,
			"while": 6,
			"no": 6,
			"with": 12,
			"sad": 1,
			"sweetness": 1,
			"wave": 1,
			"soggarth": 1,
			"now": 3,
			"give": 2,
			"will": 2,
			"all": 8,
			"patient": 1,
			"gods": 2,
			"then": 1,
			"through": 2,
			"thomas": 1,
			"well": 1,
			"spoke": 1,
			"clear": 1,
			"dost": 1,
			"turned": 1,
			"being": 1,
			"nearer": 1,
			"our": 3,
			"feel": 2,
			"fear": 2,
			"shall": 9,
			"before": 1,
			"only": 1,
			"still": 7,
			"yet": 1,
			"to": 18,
			"clouds": 1,
			"into": 1,
			"keen": 1,
			"live": 1,
			"glorious": 1,
			"know": 1,
			"lived": 1,
			"vast": 1,
			"may": 4,
			"we": 8,
			"simple": 1,
			"as": 4,
			"fair": 1,
			"said": 1,
			"he": 5,
			"me": 1,
			"at": 2,
			"lies": 1,
			"o": 6,
			"the": 38,
			"tis": 4,
			"waste": 1,
			"though": 6,
			"scarce": 2,
			"her": 3,
			"safe": 1,
			"young": 1,
			"been": 2,
			"first": 2,
			"oft": 2,
			"in": 24
		},
		"best": {
			"come": 2,
			"his": 2,
			"are": 2,
			"who": 4,
			"country": 1,
			"of": 15,
			"talk": 1,
			"she": 1,
			"beyond": 1,
			"not": 1,
			"it": 1,
			"shows": 2,
			"is": 7,
			"few": 1,
			"gift": 2,
			"good": 1,
			"where": 1,
			"for": 9,
			"should": 1,
			"speak": 1,
			"my": 2,
			"remember": 1,
			"fools": 1,
			"can": 1,
			"that": 8,
			"let": 1,
			"bear": 1,
			"or": 1,
			"a": 2,
			"upon": 1,
			"things": 4,
			"but": 1,
			"poor": 1,
			"when": 1,
			"lifes": 1,
			"t": 1,
			"out": 1,
			"naught": 1,
			"and": 13,
			"grace": 1,
			"i": 2,
			"one": 2,
			"between": 1,
			"chamber": 1,
			"how": 2,
			"from": 3,
			"with": 1,
			"now": 1,
			"will": 1,
			"gods": 1,
			"then": 1,
			"being": 2,
			"our": 1,
			"shall": 2,
			"yet": 1,
			"to": 8,
			"know": 1,
			"art": 1,
			"may": 2,
			"as": 1,
			"he": 2,
			"grow": 1,
			"the": 2,
			"her": 1,
			"there": 1,
			"in": 2
		},
		"way": {
			"sweet": 1,
			"come": 1,
			"within": 2,
			"im": 1,
			"his": 2,
			"save": 1,
			"him": 1,
			"which": 2,
			"of": 5,
			"this": 1,
			"amid": 3,
			"after": 1,
			"up": 1,
			"she": 2,
			"silence": 1,
			"does": 1,
			"not": 1,
			"hes": 1,
			"it": 1,
			"twas": 1,
			"by": 1,
			"long": 1,
			"is": 2,
			"heard": 1,
			"without": 1,
			"than": 1,
			"where": 6,
			"for": 18,
			"charge": 1,
			"should": 1,
			"my": 2,
			"john": 1,
			"shines": 1,
			"yes": 1,
			"was": 2,
			"that": 3,
			"let": 1,
			"both": 1,
			"jerusalem": 1,
			"make": 1,
			"what": 1,
			"an": 1,
			"or": 1,
			"their": 1,
			"a": 2,
			"so": 1,
			"upon": 1,
			"on": 1,
			"above": 1,
			"but": 5,
			"ye": 1,
			"be": 1,
			"out": 2,
			"and": 20,
			"i": 9,
			"down": 1,
			"home": 1,
			"each": 1,
			"henry": 1,
			"how": 1,
			"from": 4,
			"strange": 1,
			"while": 2,
			"no": 1,
			"with": 3,
			"soggarth": 1,
			"till": 4,
			"then": 2,
			"through": 2,
			"behind": 1,
			"wealth": 1,
			"shall": 2,
			"still": 1,
			"yet": 4,
			"to": 21,
			"human": 1,
			"into": 1,
			"ah": 2,
			"flow": 1,
			"yon": 1,
			"we": 4,
			"as": 3,
			"happy": 1,
			"he": 3,
			"at": 1,
			"o": 1,
			"the": 17,
			"scarce": 1,
			"first": 1,
			"there": 2,
			"in": 2
		},
		"mark": {
			"im": 1,
			"his": 2,
			"him": 1,
			"which": 1,
			"nor": 1,
			"by": 1,
			"alone": 1,
			"long": 1,
			"they": 1,
			"where": 3,
			"for": 1,
			"my": 2,
			"again": 1,
			"what": 1,
			"their": 1,
			"a": 3,
			"on": 1,
			"but": 1,
			"thee": 2,
			"ye": 1,
			"out": 1,
			"and": 3,
			"rather": 1,
			"how": 2,
			"no": 1,
			"some": 1,
			"all": 1,
			"through": 1,
			"our": 2,
			"whose": 1,
			"as": 1,
			"he": 2,
			"me": 1,
			"the": 10,
			"her": 1,
			"in": 1
		},
		"course": {
			"which": 1,
			"of": 6,
			"season": 1,
			"souls": 1,
			"nor": 1,
			"it": 1,
			"alone": 1,
			"is": 1,
			"they": 2,
			"without": 1,
			"take": 1,
			"that": 1,
			"have": 1,
			"a": 1,
			"so": 2,
			"and": 3,
			"from": 1,
			"would": 1,
			"with": 2,
			"through": 1,
			"has": 2,
			"day": 1,
			"before": 1,
			"to": 1,
			"may": 1,
			"the": 3,
			"there": 1
		},
		"to": {
			"sweet": 2,
			"tune": 1,
			"flower": 1,
			"blue": 1,
			"come": 32,
			"sound": 4,
			"low": 1,
			"bow": 2,
			"dare": 3,
			"cool": 3,
			"dying": 2,
			"look": 21,
			"itself": 2,
			"us": 45,
			"more": 3,
			"hear": 50,
			"murmur": 1,
			"wrought": 1,
			"thine": 11,
			"ring": 2,
			"england": 2,
			"dust": 15,
			"curse": 2,
			"justice": 1,
			"went": 1,
			"virtues": 1,
			"christ": 1,
			"wish": 2,
			"chase": 5,
			"free": 5,
			"light": 14,
			"earth": 16,
			"forget": 4,
			"doubt": 8,
			"pine": 2,
			"die": 64,
			"cloud": 1,
			"his": 102,
			"appear": 1,
			"stream": 2,
			"save": 27,
			"happiness": 1,
			"endure": 3,
			"hell": 5,
			"him": 86,
			"ear": 1,
			"midnight": 1,
			"law": 1,
			"see": 107,
			"leap": 2,
			"hero": 1,
			"wi": 1,
			"begin": 3,
			"play": 8,
			"kiss": 11,
			"horn": 1,
			"fit": 1,
			"learn": 5,
			"rule": 4,
			"none": 4,
			"hast": 1,
			"woe": 2,
			"silver": 1,
			"purple": 2,
			"tell": 24,
			"war": 1,
			"weary": 1,
			"wonder": 2,
			"dance": 2,
			"fears": 1,
			"aid": 1,
			"six": 2,
			"right": 4,
			"back": 1,
			"next": 1,
			"who": 3,
			"hollow": 1,
			"guard": 7,
			"men": 22,
			"suffer": 6,
			"which": 13,
			"mist": 1,
			"court": 2,
			"beam": 1,
			"greece": 2,
			"deeds": 2,
			"holds": 1,
			"dies": 1,
			"hide": 15,
			"tired": 1,
			"call": 7,
			"shout": 1,
			"country": 1,
			"sounds": 1,
			"of": 20,
			"brook": 1,
			"this": 23,
			"blind": 2,
			"cast": 5,
			"star": 1,
			"fame": 4,
			"yield": 5,
			"souls": 1,
			"keep": 28,
			"calls": 1,
			"pour": 2,
			"talk": 3,
			"wine": 2,
			"after": 1,
			"wander": 4,
			"once": 1,
			"up": 5,
			"triumph": 2,
			"breathe": 10,
			"she": 2,
			"rock": 2,
			"liberty": 1,
			"shakespeare": 1,
			"silence": 3,
			"nor": 3,
			"sacred": 1,
			"find": 37,
			"command": 3,
			"gold": 4,
			"act": 4,
			"sight": 3,
			"whatever": 1,
			"age": 6,
			"darkness": 1,
			"joy": 3,
			"cling": 3,
			"scorn": 8,
			"height": 1,
			"two": 1,
			"fresh": 2,
			"pain": 2,
			"mourn": 4,
			"place": 3,
			"lift": 4,
			"part": 12,
			"pass": 10,
			"fine": 1,
			"slaves": 1,
			"aught": 2,
			"mine": 5,
			"behold": 12,
			"not": 7,
			"awe": 3,
			"fade": 6,
			"divine": 2,
			"dwell": 11,
			"serve": 8,
			"crimson": 2,
			"side": 5,
			"put": 7,
			"today": 1,
			"depart": 4,
			"every": 15,
			"praise": 1,
			"pressed": 1,
			"it": 17,
			"evil": 1,
			"over": 1,
			"smooth": 1,
			"shake": 2,
			"began": 1,
			"perish": 5,
			"fool": 1,
			"neither": 1,
			"far": 2,
			"mean": 1,
			"spirits": 1,
			"wisdom": 1,
			"child": 2,
			"bark": 1,
			"bless": 15,
			"weep": 13,
			"send": 3,
			"ease": 3,
			"by": 10,
			"try": 6,
			"eyes": 2,
			"jim": 2,
			"shut": 1,
			"long": 2,
			"bring": 9,
			"nations": 1,
			"something": 6,
			"trace": 8,
			"bind": 5,
			"quiet": 1,
			"pride": 3,
			"land": 4,
			"wars": 1,
			"is": 15,
			"cross": 2,
			"rise": 17,
			"eternity": 5,
			"few": 1,
			"like": 6,
			"takes": 1,
			"return": 5,
			"away": 4,
			"form": 5,
			"forms": 2,
			"why": 1,
			"please": 11,
			"immortality": 1,
			"kings": 1,
			"forever": 1,
			"good": 4,
			"lead": 4,
			"force": 1,
			"either": 1,
			"care": 2,
			"about": 1,
			"they": 5,
			"prayer": 4,
			"easy": 2,
			"believe": 4,
			"faint": 1,
			"you": 25,
			"nature": 4,
			"tyrants": 2,
			"guide": 7,
			"mother": 1,
			"grant": 3,
			"thus": 2,
			"pale": 2,
			"seven": 1,
			"new": 1,
			"nay": 1,
			"strike": 7,
			"earths": 4,
			"its": 30,
			"than": 5,
			"smile": 8,
			"swift": 1,
			"lightly": 1,
			"pleasure": 1,
			"beams": 1,
			"stir": 3,
			"een": 1,
			"song": 2,
			"those": 18,
			"sea": 6,
			"crown": 4,
			"friends": 1,
			"where": 15,
			"gentle": 1,
			"others": 5,
			"despair": 4,
			"run": 4,
			"train": 1,
			"church": 4,
			"holy": 2,
			"press": 3,
			"summers": 1,
			"blast": 1,
			"gray": 3,
			"just": 3,
			"welcome": 8,
			"for": 8,
			"judgment": 1,
			"read": 6,
			"hand": 2,
			"heaven": 71,
			"lost": 1,
			"catch": 7,
			"cry": 2,
			"bloody": 1,
			"base": 1,
			"worse": 1,
			"theres": 2,
			"take": 20,
			"speak": 16,
			"breath": 2,
			"spite": 1,
			"autumn": 1,
			"rest": 22,
			"my": 91,
			"blow": 3,
			"count": 1,
			"words": 1,
			"hour": 3,
			"came": 2,
			"remain": 3,
			"great": 3,
			"john": 3,
			"beauty": 1,
			"short": 1,
			"again": 2,
			"deaths": 1,
			"earl": 1,
			"themselves": 1,
			"touch": 7,
			"freedom": 3,
			"thy": 65,
			"sing": 15,
			"watch": 13,
			"wall": 1,
			"pray": 19,
			"sleep": 25,
			"battle": 8,
			"teach": 12,
			"tone": 1,
			"moan": 1,
			"peace": 5,
			"hopes": 1,
			"ourselves": 7,
			"waves": 1,
			"whom": 17,
			"better": 5,
			"shadow": 1,
			"mary": 2,
			"shore": 1,
			"soul": 3,
			"hope": 7,
			"wear": 8,
			"seek": 12,
			"gather": 1,
			"remember": 2,
			"strive": 2,
			"cheer": 7,
			"cease": 2,
			"any": 9,
			"most": 3,
			"sir": 2,
			"town": 3,
			"win": 13,
			"reach": 5,
			"friend": 1,
			"wrath": 1,
			"fools": 1,
			"streets": 1,
			"stretched": 1,
			"name": 1,
			"clay": 1,
			"queen": 1,
			"glow": 3,
			"along": 1,
			"william": 1,
			"face": 20,
			"sin": 2,
			"rain": 1,
			"faith": 1,
			"god": 45,
			"foot": 1,
			"shame": 3,
			"noble": 2,
			"power": 1,
			"bud": 2,
			"comfort": 5,
			"flee": 3,
			"oer": 2,
			"sudden": 1,
			"immortal": 2,
			"need": 1,
			"trumpet": 1,
			"did": 1,
			"walls": 1,
			"was": 1,
			"that": 51,
			"if": 5,
			"willie": 2,
			"let": 7,
			"show": 15,
			"lips": 4,
			"drop": 3,
			"arm": 1,
			"man": 28,
			"bear": 35,
			"daily": 1,
			"both": 1,
			"another": 2,
			"taste": 3,
			"embrace": 2,
			"full": 1,
			"make": 61,
			"fall": 17,
			"go": 22,
			"spake": 1,
			"cried": 1,
			"reign": 6,
			"half": 2,
			"trust": 5,
			"hang": 1,
			"sail": 6,
			"had": 1,
			"must": 1,
			"general": 1,
			"climb": 5,
			"pure": 1,
			"what": 14,
			"sit": 9,
			"an": 11,
			"repose": 1,
			"front": 3,
			"wait": 7,
			"understand": 4,
			"hold": 13,
			"nothing": 1,
			"stone": 1,
			"stars": 1,
			"music": 3,
			"or": 19,
			"think": 22,
			"de": 2,
			"eye": 5,
			"start": 3,
			"pause": 4,
			"bright": 2,
			"have": 34,
			"study": 5,
			"blush": 3,
			"tears": 1,
			"gave": 2,
			"isle": 1,
			"horse": 3,
			"ride": 7,
			"fill": 11,
			"awake": 1,
			"their": 55,
			"fold": 3,
			"a": 97,
			"so": 7,
			"pains": 1,
			"given": 2,
			"them": 16,
			"true": 2,
			"upon": 4,
			"lay": 13,
			"things": 5,
			"lord": 3,
			"many": 8,
			"spirit": 1,
			"hath": 1,
			"ashes": 1,
			"leave": 14,
			"walk": 5,
			"whence": 1,
			"delight": 3,
			"love": 33,
			"on": 9,
			"bend": 3,
			"break": 13,
			"wing": 1,
			"charm": 4,
			"maryland": 1,
			"own": 2,
			"red": 2,
			"mountain": 1,
			"above": 1,
			"fast": 2,
			"chains": 1,
			"deep": 1,
			"memory": 2,
			"content": 1,
			"but": 18,
			"glance": 2,
			"death": 19,
			"knowledge": 1,
			"time": 1,
			"poor": 1,
			"thee": 105,
			"ye": 2,
			"choose": 5,
			"years": 2,
			"when": 10,
			"eat": 9,
			"april": 1,
			"eternal": 4,
			"honest": 1,
			"plain": 1,
			"merry": 1,
			"thank": 1,
			"waters": 1,
			"mans": 3,
			"burst": 2,
			"sigh": 4,
			"raise": 6,
			"be": 264,
			"bed": 3,
			"merit": 1,
			"feet": 2,
			"wings": 1,
			"t": 2,
			"glory": 13,
			"veil": 1,
			"highest": 1,
			"line": 1,
			"out": 3,
			"awful": 1,
			"dumb": 1,
			"earthly": 2,
			"brave": 2,
			"naught": 1,
			"heart": 6,
			"say": 29,
			"head": 1,
			"close": 6,
			"nobler": 2,
			"verse": 1,
			"and": 127,
			"order": 1,
			"bliss": 1,
			"thunder": 3,
			"grace": 4,
			"march": 1,
			"truth": 4,
			"bloom": 1,
			"do": 41,
			"prize": 1,
			"doom": 1,
			"last": 2,
			"west": 4,
			"christian": 1,
			"myself": 4,
			"move": 9,
			"dream": 3,
			"fate": 2,
			"ask": 6,
			"blaze": 1,
			"fly": 6,
			"i": 17,
			"thou": 1,
			"haste": 2,
			"woman": 1,
			"greet": 12,
			"robin": 1,
			"home": 1,
			"pay": 8,
			"swell": 3,
			"wretched": 1,
			"here": 1,
			"south": 3,
			"mirth": 4,
			"mortal": 1,
			"one": 15,
			"might": 2,
			"such": 12,
			"judge": 2,
			"draw": 7,
			"rush": 1,
			"rome": 1,
			"hate": 3,
			"state": 2,
			"work": 11,
			"rather": 1,
			"each": 6,
			"whereer": 1,
			"henry": 1,
			"how": 4,
			"hearts": 3,
			"higher": 6,
			"help": 3,
			"other": 3,
			"from": 11,
			"join": 7,
			"drink": 3,
			"across": 1,
			"would": 3,
			"mind": 3,
			"ill": 3,
			"endless": 4,
			"sublime": 1,
			"reason": 2,
			"beat": 5,
			"beneath": 1,
			"these": 11,
			"shield": 2,
			"duty": 1,
			"while": 2,
			"strand": 2,
			"breast": 3,
			"honor": 3,
			"no": 11,
			"bound": 3,
			"bid": 4,
			"took": 1,
			"calm": 1,
			"roll": 1,
			"rouse": 3,
			"dread": 4,
			"decay": 4,
			"mighty": 1,
			"breeze": 1,
			"ears": 2,
			"with": 18,
			"sad": 1,
			"virtue": 2,
			"everlasting": 1,
			"soft": 1,
			"wave": 3,
			"now": 1,
			"set": 5,
			"give": 31,
			"gaze": 8,
			"foreign": 1,
			"some": 13,
			"till": 4,
			"meet": 26,
			"will": 2,
			"follow": 12,
			"flash": 1,
			"strong": 1,
			"himself": 7,
			"prayers": 1,
			"all": 40,
			"chief": 1,
			"drum": 1,
			"gods": 10,
			"then": 4,
			"room": 1,
			"feed": 6,
			"lose": 8,
			"thought": 2,
			"through": 2,
			"pleasant": 1,
			"notes": 1,
			"thomas": 1,
			"ten": 1,
			"laugh": 2,
			"toil": 2,
			"angels": 1,
			"george": 1,
			"well": 2,
			"king": 4,
			"shine": 11,
			"couch": 1,
			"lake": 1,
			"mount": 1,
			"dost": 1,
			"spring": 2,
			"minds": 1,
			"wake": 5,
			"turned": 1,
			"our": 58,
			"wrong": 2,
			"day": 7,
			"hall": 2,
			"feel": 35,
			"aside": 1,
			"fortune": 2,
			"open": 3,
			"frame": 1,
			"fear": 9,
			"night": 2,
			"patience": 1,
			"ends": 3,
			"pity": 3,
			"stay": 12,
			"shall": 1,
			"only": 2,
			"golden": 3,
			"wind": 1,
			"still": 5,
			"your": 30,
			"shade": 1,
			"natures": 4,
			"yet": 5,
			"mark": 10,
			"to": 31,
			"poetry": 4,
			"hill": 2,
			"youth": 2,
			"human": 3,
			"speed": 2,
			"knee": 1,
			"into": 4,
			"cut": 2,
			"keen": 1,
			"turn": 5,
			"lie": 11,
			"answer": 3,
			"mankind": 1,
			"live": 43,
			"religion": 3,
			"use": 8,
			"homes": 1,
			"heavenly": 2,
			"freedoms": 1,
			"wounds": 1,
			"view": 11,
			"get": 8,
			"know": 31,
			"mould": 2,
			"prove": 9,
			"soar": 5,
			"art": 1,
			"ah": 1,
			"harp": 2,
			"flow": 2,
			"may": 1,
			"th": 1,
			"hail": 3,
			"strife": 1,
			"eve": 1,
			"sweep": 3,
			"whisper": 4,
			"enter": 4,
			"yon": 3,
			"we": 6,
			"gloom": 1,
			"glad": 1,
			"simple": 2,
			"spread": 2,
			"whose": 2,
			"falling": 1,
			"as": 9,
			"fair": 2,
			"heavens": 3,
			"stand": 9,
			"english": 1,
			"done": 1,
			"life": 16,
			"noon": 1,
			"end": 5,
			"he": 10,
			"arms": 30,
			"me": 192,
			"strength": 3,
			"son": 2,
			"at": 13,
			"slumber": 4,
			"frown": 1,
			"point": 3,
			"wound": 1,
			"o": 5,
			"gain": 9,
			"browning": 1,
			"grow": 10,
			"yonder": 5,
			"left": 2,
			"the": 843,
			"ghost": 1,
			"tis": 1,
			"waste": 3,
			"though": 1,
			"fight": 18,
			"sure": 1,
			"seems": 1,
			"labor": 4,
			"her": 75,
			"share": 6,
			"change": 3,
			"tread": 4,
			"fire": 2,
			"fail": 1,
			"near": 4,
			"first": 1,
			"seas": 3,
			"oft": 1,
			"there": 6,
			"in": 27,
			"flowers": 1,
			"forgive": 3,
			"step": 1,
			"purpose": 1,
			"dim": 1,
			"shed": 3,
			"air": 4,
			"ruin": 2,
			"thoughts": 2
		},
		"loud": {
			"of": 1,
			"amid": 1,
			"up": 1,
			"nor": 1,
			"not": 1,
			"they": 1,
			"you": 1,
			"thus": 1,
			"song": 1,
			"for": 2,
			"cry": 2,
			"should": 1,
			"sang": 1,
			"winds": 1,
			"waves": 1,
			"rang": 1,
			"cheer": 1,
			"bells": 1,
			"were": 1,
			"trumpet": 1,
			"that": 3,
			"their": 1,
			"a": 1,
			"so": 1,
			"them": 1,
			"love": 1,
			"deep": 1,
			"but": 1,
			"when": 1,
			"and": 12,
			"i": 1,
			"thou": 1,
			"from": 1,
			"voice": 1,
			"alfred": 1,
			"gaze": 1,
			"drum": 1,
			"laugh": 1,
			"doth": 1,
			"our": 1,
			"storms": 1,
			"wind": 2,
			"loud": 3,
			"human": 1,
			"as": 1,
			"he": 2,
			"the": 13,
			"in": 5
		},
		"poetry": {
			"itself": 1,
			"science": 1,
			"which": 5,
			"of": 9,
			"beyond": 2,
			"nor": 1,
			"began": 1,
			"wisdom": 1,
			"by": 3,
			"alone": 1,
			"is": 13,
			"its": 1,
			"than": 3,
			"for": 1,
			"were": 1,
			"that": 3,
			"if": 2,
			"study": 1,
			"many": 1,
			"on": 1,
			"but": 2,
			"when": 1,
			"be": 1,
			"t": 1,
			"out": 1,
			"and": 6,
			"might": 1,
			"from": 1,
			"would": 1,
			"with": 1,
			"will": 3,
			"through": 1,
			"has": 1,
			"to": 5,
			"may": 1,
			"as": 2,
			"he": 1,
			"the": 6,
			"in": 5
		},
		"hill": {
			"ring": 1,
			"his": 1,
			"beside": 1,
			"she": 1,
			"does": 1,
			"behold": 1,
			"it": 3,
			"over": 3,
			"is": 2,
			"like": 2,
			"they": 3,
			"where": 2,
			"for": 1,
			"speak": 1,
			"my": 2,
			"sits": 1,
			"along": 1,
			"god": 1,
			"was": 2,
			"that": 1,
			"an": 1,
			"even": 1,
			"or": 2,
			"a": 3,
			"green": 1,
			"delight": 1,
			"on": 2,
			"but": 2,
			"when": 1,
			"eternal": 1,
			"ay": 1,
			"and": 20,
			"do": 1,
			"i": 1,
			"how": 1,
			"from": 1,
			"all": 3,
			"to": 8,
			"we": 1,
			"whose": 1,
			"as": 2,
			"charles": 1,
			"stand": 1,
			"he": 3,
			"o": 1,
			"the": 4,
			"there": 1,
			"in": 4
		},
		"clouds": {
			"his": 1,
			"are": 5,
			"of": 4,
			"depart": 1,
			"by": 1,
			"is": 1,
			"rise": 1,
			"like": 1,
			"away": 2,
			"abroad": 1,
			"afar": 1,
			"its": 1,
			"thy": 1,
			"oer": 1,
			"did": 1,
			"that": 6,
			"full": 1,
			"or": 1,
			"have": 2,
			"their": 2,
			"a": 1,
			"lay": 1,
			"on": 1,
			"ye": 2,
			"and": 11,
			"down": 1,
			"from": 2,
			"would": 2,
			"no": 1,
			"roll": 1,
			"with": 3,
			"around": 2,
			"will": 1,
			"all": 1,
			"before": 2,
			"to": 4,
			"we": 1,
			"as": 1,
			"at": 1,
			"o": 1,
			"the": 4,
			"her": 1,
			"seas": 1,
			"oft": 1,
			"in": 4
		},
		"youth": {
			"more": 1,
			"who": 1,
			"which": 2,
			"of": 4,
			"amid": 1,
			"keep": 1,
			"nor": 1,
			"fresh": 1,
			"not": 2,
			"depart": 1,
			"it": 1,
			"shows": 1,
			"weep": 1,
			"by": 1,
			"is": 2,
			"although": 1,
			"for": 5,
			"should": 1,
			"speak": 1,
			"didst": 1,
			"my": 1,
			"standing": 1,
			"again": 1,
			"better": 1,
			"makes": 1,
			"rough": 1,
			"forward": 1,
			"were": 1,
			"was": 2,
			"that": 5,
			"fall": 1,
			"ripe": 1,
			"had": 1,
			"what": 2,
			"a": 1,
			"on": 2,
			"but": 1,
			"when": 1,
			"be": 1,
			"and": 15,
			"bliss": 1,
			"i": 2,
			"knew": 1,
			"thou": 1,
			"one": 1,
			"how": 1,
			"from": 1,
			"sublime": 1,
			"with": 1,
			"now": 1,
			"all": 1,
			"through": 1,
			"our": 1,
			"shall": 1,
			"your": 1,
			"to": 4,
			"may": 2,
			"we": 2,
			"glad": 1,
			"as": 1,
			"at": 1,
			"the": 1,
			"theyre": 1,
			"in": 3,
			"forgive": 1,
			"grows": 1
		},
		"human": {
			"suffering": 1,
			"blood": 2,
			"deeds": 1,
			"of": 1,
			"among": 1,
			"does": 1,
			"race": 1,
			"pain": 1,
			"limbs": 1,
			"by": 1,
			"eyes": 2,
			"trace": 1,
			"forms": 1,
			"speech": 1,
			"nature": 1,
			"its": 1,
			"song": 1,
			"where": 1,
			"hand": 2,
			"cannot": 1,
			"desire": 1,
			"soul": 1,
			"reach": 1,
			"clay": 1,
			"wit": 2,
			"power": 1,
			"need": 1,
			"both": 1,
			"creatures": 1,
			"or": 1,
			"eye": 3,
			"hands": 3,
			"tears": 1,
			"a": 1,
			"so": 1,
			"folly": 1,
			"spirit": 2,
			"love": 3,
			"but": 1,
			"death": 1,
			"time": 1,
			"ye": 1,
			"kind": 4,
			"heart": 8,
			"and": 3,
			"bliss": 1,
			"days": 1,
			"mortal": 1,
			"one": 1,
			"such": 1,
			"hearts": 5,
			"mind": 1,
			"breast": 4,
			"ears": 1,
			"will": 2,
			"himself": 1,
			"gods": 1,
			"thought": 3,
			"frame": 1,
			"fear": 1,
			"still": 1,
			"natures": 1,
			"yet": 1,
			"to": 4,
			"cities": 1,
			"wood": 2,
			"mould": 1,
			"life": 5,
			"o": 1,
			"grow": 1,
			"blessed": 1,
			"the": 1,
			"theyre": 1,
			"there": 1,
			"in": 1,
			"sky": 1
		},
		"poets": {
			"ear": 1,
			"wail": 1,
			"who": 4,
			"of": 2,
			"keep": 1,
			"it": 2,
			"by": 1,
			"is": 1,
			"vision": 1,
			"like": 1,
			"sing": 1,
			"power": 1,
			"had": 1,
			"what": 1,
			"have": 2,
			"brain": 1,
			"head": 1,
			"and": 3,
			"dream": 1,
			"grave": 1,
			"mind": 2,
			"then": 1,
			"lose": 1,
			"shall": 2,
			"know": 1,
			"harp": 1,
			"we": 1,
			"as": 1,
			"the": 1,
			"dead": 1
		},
		"wandered": {
			"far": 1,
			"away": 3,
			"together": 1,
			"where": 2,
			"a": 1,
			"when": 2,
			"out": 1,
			"west": 2,
			"from": 1,
			"all": 1,
			"east": 2,
			"there": 1,
			"in": 3
		},
		"speed": {
			"voices": 1,
			"of": 1,
			"hills": 1,
			"today": 1,
			"they": 1,
			"my": 1,
			"thy": 3,
			"let": 1,
			"a": 2,
			"on": 2,
			"but": 1,
			"and": 5,
			"each": 1,
			"with": 1,
			"still": 1,
			"your": 1,
			"may": 1,
			"me": 1,
			"the": 3
		},
		"cities": {
			"come": 1,
			"wail": 1,
			"amid": 1,
			"proud": 1,
			"far": 1,
			"slow": 1,
			"crown": 1,
			"where": 2,
			"along": 1,
			"had": 1,
			"and": 2,
			"blaze": 2,
			"shining": 1,
			"all": 1,
			"then": 1,
			"shall": 1,
			"fair": 1,
			"the": 1,
			"in": 3,
			"seem": 1
		},
		"knee": {
			"his": 1,
			"white": 1,
			"she": 1,
			"like": 1,
			"why": 1,
			"its": 1,
			"where": 1,
			"my": 1,
			"came": 1,
			"thy": 1,
			"sir": 1,
			"willie": 2,
			"waiting": 1,
			"but": 1,
			"when": 4,
			"and": 7,
			"i": 1,
			"from": 1,
			"now": 1,
			"thats": 1,
			"to": 2,
			"the": 1,
			"in": 2
		},
		"springs": {
			"beside": 1,
			"of": 6,
			"up": 1,
			"two": 1,
			"not": 1,
			"by": 1,
			"like": 1,
			"for": 4,
			"darling": 1,
			"breath": 1,
			"that": 1,
			"what": 1,
			"oh": 1,
			"or": 1,
			"eternal": 1,
			"and": 6,
			"such": 1,
			"secret": 1,
			"from": 3,
			"through": 1,
			"to": 3,
			"happy": 1,
			"the": 5,
			"safe": 1,
			"first": 1,
			"in": 2
		},
		"into": {
			"light": 1,
			"his": 11,
			"hell": 1,
			"fell": 1,
			"which": 1,
			"this": 3,
			"wine": 2,
			"once": 1,
			"gold": 2,
			"grew": 1,
			"darkness": 1,
			"joy": 1,
			"mine": 1,
			"every": 1,
			"water": 1,
			"glass": 1,
			"form": 1,
			"forms": 1,
			"speech": 1,
			"shot": 1,
			"new": 1,
			"its": 2,
			"song": 2,
			"those": 1,
			"friends": 1,
			"where": 1,
			"rolled": 1,
			"for": 1,
			"past": 1,
			"heaven": 1,
			"bloody": 1,
			"my": 5,
			"thy": 5,
			"greater": 1,
			"morn": 1,
			"town": 1,
			"false": 1,
			"sin": 2,
			"faith": 1,
			"sudden": 1,
			"main": 1,
			"that": 1,
			"swords": 1,
			"another": 1,
			"what": 3,
			"stone": 1,
			"or": 1,
			"moved": 1,
			"hands": 1,
			"tears": 2,
			"their": 5,
			"a": 24,
			"true": 1,
			"green": 1,
			"folly": 1,
			"things": 1,
			"many": 1,
			"empty": 2,
			"thee": 1,
			"eternal": 1,
			"terror": 1,
			"glory": 2,
			"line": 1,
			"dumb": 1,
			"naught": 1,
			"paradise": 1,
			"and": 3,
			"grace": 1,
			"dull": 1,
			"one": 6,
			"such": 1,
			"each": 2,
			"these": 1,
			"calm": 1,
			"with": 1,
			"soft": 1,
			"some": 2,
			"thought": 1,
			"clear": 1,
			"lake": 1,
			"our": 5,
			"day": 1,
			"sense": 2,
			"future": 1,
			"shall": 1,
			"golden": 2,
			"still": 1,
			"your": 3,
			"poetry": 2,
			"human": 1,
			"heavenly": 1,
			"english": 1,
			"life": 3,
			"end": 1,
			"the": 81,
			"her": 6,
			"harmony": 2,
			"ruin": 1
		},
		"cut": {
			"his": 1,
			"him": 2,
			"off": 2,
			"it": 1,
			"a": 1,
			"on": 1,
			"and": 4,
			"down": 1,
			"with": 1,
			"through": 1,
			"life": 1,
			"iii": 1,
			"left": 1,
			"the": 5,
			"in": 2
		},
		"round": {
			"us": 4,
			"since": 1,
			"his": 4,
			"him": 5,
			"none": 1,
			"hast": 1,
			"which": 1,
			"of": 3,
			"this": 2,
			"hills": 1,
			"daughter": 1,
			"once": 1,
			"she": 1,
			"joy": 1,
			"wheel": 2,
			"not": 2,
			"every": 1,
			"it": 2,
			"ocean": 2,
			"about": 12,
			"they": 1,
			"you": 2,
			"its": 3,
			"slow": 1,
			"my": 4,
			"shines": 1,
			"thy": 1,
			"pray": 1,
			"william": 1,
			"face": 1,
			"god": 5,
			"was": 2,
			"that": 2,
			"let": 1,
			"what": 2,
			"oh": 1,
			"an": 1,
			"de": 2,
			"tears": 1,
			"their": 3,
			"a": 5,
			"so": 1,
			"them": 3,
			"above": 1,
			"old": 2,
			"thee": 1,
			"when": 2,
			"and": 12,
			"sun": 1,
			"thou": 1,
			"whereer": 1,
			"from": 1,
			"these": 1,
			"alfred": 1,
			"decay": 1,
			"with": 5,
			"all": 2,
			"through": 2,
			"our": 6,
			"frame": 1,
			"still": 1,
			"your": 1,
			"to": 2,
			"we": 1,
			"as": 1,
			"he": 1,
			"me": 12,
			"the": 52,
			"world": 1,
			"her": 9,
			"first": 1,
			"there": 1,
			"in": 4
		},
		"wood": {
			"beside": 1,
			"of": 2,
			"up": 1,
			"it": 1,
			"land": 2,
			"like": 1,
			"its": 1,
			"didst": 1,
			"was": 2,
			"their": 1,
			"a": 1,
			"out": 1,
			"and": 7,
			"do": 1,
			"down": 1,
			"with": 2,
			"now": 1,
			"may": 1,
			"as": 1,
			"the": 3,
			"her": 1
		},
		"flame": {
			"perchance": 1,
			"shades": 1,
			"which": 1,
			"of": 4,
			"up": 1,
			"behold": 1,
			"crimson": 1,
			"it": 1,
			"far": 1,
			"by": 1,
			"lo": 1,
			"forever": 1,
			"they": 3,
			"wide": 1,
			"you": 1,
			"its": 1,
			"where": 1,
			"for": 1,
			"burns": 1,
			"my": 1,
			"thy": 1,
			"can": 1,
			"did": 1,
			"that": 1,
			"oh": 1,
			"a": 1,
			"on": 1,
			"above": 1,
			"rushed": 1,
			"when": 1,
			"t": 1,
			"and": 9,
			"thou": 1,
			"down": 1,
			"from": 3,
			"while": 1,
			"with": 1,
			"will": 1,
			"through": 1,
			"thats": 1,
			"doth": 1,
			"as": 1,
			"he": 2,
			"at": 1,
			"o": 1,
			"the": 5,
			"tis": 1,
			"though": 1,
			"there": 1,
			"in": 3
		},
		"keen": {
			"sight": 1,
			"eyes": 1,
			"cold": 1,
			"is": 1,
			"great": 1,
			"blows": 1,
			"because": 1,
			"full": 1,
			"eye": 1,
			"met": 1,
			"delight": 1,
			"on": 1,
			"out": 1,
			"and": 1,
			"draw": 1,
			"with": 1,
			"yet": 1,
			"as": 1,
			"he": 1,
			"wound": 1,
			"the": 2
		},
		"turn": {
			"us": 1,
			"thine": 1,
			"his": 2,
			"save": 1,
			"him": 2,
			"of": 2,
			"once": 2,
			"up": 2,
			"forth": 1,
			"mine": 1,
			"by": 1,
			"eyes": 1,
			"away": 1,
			"you": 2,
			"pale": 1,
			"earths": 1,
			"those": 1,
			"where": 1,
			"my": 2,
			"again": 2,
			"thy": 1,
			"oer": 1,
			"that": 1,
			"another": 1,
			"full": 1,
			"their": 1,
			"a": 2,
			"delight": 1,
			"but": 1,
			"thee": 3,
			"and": 10,
			"i": 1,
			"here": 1,
			"from": 1,
			"with": 2,
			"our": 1,
			"aside": 2,
			"shall": 1,
			"to": 12,
			"into": 1,
			"apart": 1,
			"he": 2,
			"me": 1,
			"o": 1,
			"the": 5,
			"forgive": 1
		},
		"thinking": {
			"footnote": 1,
			"his": 1,
			"are": 1,
			"of": 6,
			"is": 1,
			"although": 1,
			"about": 1,
			"mother": 1,
			"makes": 1,
			"were": 1,
			"that": 2,
			"nothing": 1,
			"things": 1,
			"on": 2,
			"heads": 1,
			"our": 1,
			"to": 1,
			"me": 2,
			"the": 2
		},
		"mid": {
			"flower": 1,
			"of": 1,
			"this": 1,
			"by": 1,
			"wars": 1,
			"its": 1,
			"for": 1,
			"thy": 1,
			"waves": 1,
			"bright": 1,
			"a": 1,
			"upon": 1,
			"and": 2,
			"sunshine": 1,
			"tall": 1,
			"work": 1,
			"living": 1,
			"little": 1,
			"the": 13
		},
		"slowly": {
			"dying": 2,
			"up": 2,
			"it": 1,
			"over": 1,
			"by": 1,
			"ever": 1,
			"they": 1,
			"speak": 1,
			"winds": 1,
			"comes": 2,
			"sir": 1,
			"oer": 1,
			"moved": 1,
			"a": 1,
			"on": 1,
			"but": 1,
			"when": 1,
			"out": 1,
			"and": 5,
			"move": 1,
			"i": 1,
			"down": 2,
			"from": 1,
			"while": 1,
			"with": 1,
			"then": 1,
			"turned": 1,
			"to": 2,
			"slowly": 1,
			"the": 1,
			"bent": 1,
			"there": 1,
			"in": 1,
			"grows": 1
		},
		"lie": {
			"low": 1,
			"within": 2,
			"alas": 1,
			"which": 4,
			"fame": 1,
			"amid": 2,
			"beyond": 1,
			"nor": 1,
			"not": 2,
			"it": 1,
			"alone": 1,
			"bring": 1,
			"cold": 1,
			"is": 2,
			"why": 1,
			"together": 1,
			"lightly": 1,
			"those": 1,
			"where": 2,
			"just": 1,
			"for": 2,
			"thy": 1,
			"that": 1,
			"let": 1,
			"daily": 1,
			"both": 1,
			"had": 1,
			"awake": 1,
			"their": 1,
			"a": 3,
			"so": 1,
			"upon": 3,
			"ashes": 1,
			"on": 5,
			"above": 1,
			"deep": 1,
			"ye": 2,
			"when": 1,
			"and": 14,
			"down": 5,
			"here": 1,
			"too": 1,
			"how": 1,
			"from": 1,
			"beneath": 2,
			"while": 1,
			"with": 1,
			"around": 2,
			"till": 1,
			"all": 1,
			"slain": 1,
			"through": 1,
			"asleep": 1,
			"toil": 1,
			"open": 1,
			"still": 4,
			"to": 4,
			"into": 1,
			"gently": 1,
			"may": 2,
			"as": 1,
			"he": 1,
			"at": 3,
			"lies": 2,
			"o": 3,
			"the": 5,
			"dead": 1,
			"there": 1,
			"in": 12
		},
		"little": {
			"flower": 4,
			"footnote": 1,
			"floor": 1,
			"more": 5,
			"ring": 1,
			"dust": 1,
			"loves": 1,
			"river": 2,
			"laws": 1,
			"light": 1,
			"birds": 3,
			"space": 3,
			"cloud": 3,
			"stream": 2,
			"hell": 1,
			"thing": 4,
			"white": 1,
			"rule": 1,
			"hast": 1,
			"purple": 1,
			"are": 2,
			"who": 1,
			"gate": 1,
			"men": 2,
			"which": 1,
			"ones": 6,
			"deeds": 1,
			"worth": 2,
			"body": 1,
			"of": 14,
			"brook": 2,
			"learning": 1,
			"angel": 1,
			"she": 2,
			"among": 1,
			"beyond": 1,
			"whatever": 1,
			"bird": 2,
			"brother": 1,
			"two": 1,
			"pain": 1,
			"place": 1,
			"not": 1,
			"it": 1,
			"child": 4,
			"ease": 1,
			"feeble": 1,
			"by": 2,
			"father": 1,
			"fountain": 1,
			"matter": 1,
			"pride": 1,
			"wise": 1,
			"is": 2,
			"cross": 1,
			"boy": 1,
			"sway": 1,
			"children": 4,
			"why": 1,
			"care": 1,
			"nay": 1,
			"sister": 1,
			"than": 1,
			"where": 2,
			"brief": 1,
			"church": 1,
			"gray": 1,
			"for": 1,
			"hand": 3,
			"boys": 2,
			"words": 1,
			"hour": 4,
			"great": 1,
			"thy": 1,
			"waves": 1,
			"mary": 1,
			"cheer": 1,
			"town": 2,
			"longer": 2,
			"face": 1,
			"faith": 1,
			"can": 3,
			"did": 1,
			"was": 1,
			"that": 2,
			"cares": 1,
			"another": 1,
			"says": 1,
			"make": 1,
			"go": 1,
			"brothers": 2,
			"moon": 1,
			"stars": 2,
			"or": 2,
			"hands": 3,
			"have": 1,
			"isle": 1,
			"a": 2,
			"so": 1,
			"green": 2,
			"upon": 1,
			"things": 1,
			"on": 2,
			"red": 1,
			"girl": 3,
			"but": 2,
			"time": 2,
			"choose": 1,
			"when": 2,
			"weeping": 1,
			"out": 1,
			"tried": 1,
			"heart": 1,
			"head": 1,
			"and": 9,
			"dream": 1,
			"year": 2,
			"fly": 1,
			"i": 2,
			"thou": 1,
			"down": 1,
			"less": 1,
			"here": 1,
			"island": 6,
			"one": 8,
			"such": 1,
			"state": 1,
			"looks": 1,
			"maid": 4,
			"while": 6,
			"maidens": 1,
			"dread": 1,
			"sphere": 1,
			"now": 1,
			"set": 1,
			"some": 1,
			"meet": 1,
			"then": 1,
			"room": 1,
			"thought": 4,
			"through": 1,
			"has": 1,
			"doth": 2,
			"road": 1,
			"spring": 3,
			"nearer": 1,
			"day": 2,
			"sense": 1,
			"hall": 1,
			"page": 1,
			"shall": 1,
			"before": 1,
			"way": 1,
			"to": 7,
			"into": 1,
			"round": 1,
			"little": 1,
			"know": 3,
			"flow": 1,
			"may": 1,
			"loss": 1,
			"whose": 1,
			"as": 4,
			"fair": 1,
			"done": 1,
			"said": 1,
			"life": 1,
			"he": 3,
			"at": 3,
			"below": 1,
			"grow": 1,
			"weight": 1,
			"the": 5,
			"treasure": 1,
			"world": 3,
			"stood": 2,
			"house": 3,
			"labor": 1,
			"fire": 2,
			"seas": 1,
			"there": 1,
			"in": 4,
			"step": 1
		},
		"answer": {
			"him": 3,
			"back": 1,
			"who": 1,
			"of": 2,
			"is": 1,
			"for": 2,
			"my": 1,
			"came": 1,
			"thy": 1,
			"yes": 1,
			"let": 1,
			"make": 2,
			"a": 1,
			"brings": 1,
			"things": 1,
			"t": 1,
			"and": 4,
			"thou": 1,
			"such": 1,
			"from": 1,
			"no": 1,
			"with": 1,
			"meet": 1,
			"to": 2,
			"me": 6,
			"o": 1,
			"there": 2,
			"in": 1
		},
		"written": {
			"creed": 1,
			"of": 1,
			"by": 2,
			"for": 1,
			"oer": 1,
			"a": 2,
			"upon": 1,
			"but": 1,
			"when": 1,
			"april": 1,
			"thou": 1,
			"while": 1,
			"some": 1,
			"all": 1,
			"shall": 1,
			"to": 1,
			"life": 1,
			"in": 10
		},
		"mankind": {
			"ring": 1,
			"his": 1,
			"are": 2,
			"who": 1,
			"which": 1,
			"this": 1,
			"is": 2,
			"away": 1,
			"why": 1,
			"for": 2,
			"seek": 1,
			"let": 1,
			"make": 1,
			"but": 1,
			"and": 3,
			"here": 1,
			"from": 1,
			"no": 1,
			"with": 1,
			"will": 2,
			"shall": 1,
			"before": 1,
			"only": 1,
			"may": 1,
			"we": 2,
			"as": 1,
			"at": 1,
			"o": 2,
			"the": 3,
			"though": 1,
			"there": 1,
			"in": 3
		},
		"rich": {
			"sweet": 1,
			"more": 1,
			"made": 1,
			"who": 1,
			"of": 2,
			"wine": 1,
			"she": 2,
			"nor": 1,
			"does": 1,
			"not": 2,
			"crown": 1,
			"take": 1,
			"came": 1,
			"enough": 1,
			"that": 1,
			"ripe": 1,
			"or": 1,
			"ride": 1,
			"a": 1,
			"green": 2,
			"mans": 3,
			"glory": 1,
			"and": 12,
			"ask": 1,
			"how": 1,
			"these": 1,
			"no": 1,
			"with": 3,
			"now": 2,
			"will": 1,
			"to": 3,
			"art": 1,
			"as": 3,
			"arms": 1,
			"the": 2,
			"in": 9,
			"air": 1
		},
		"live": {
			"more": 1,
			"within": 1,
			"loves": 1,
			"hell": 1,
			"s": 1,
			"learn": 1,
			"tell": 1,
			"alas": 1,
			"among": 1,
			"nor": 1,
			"not": 1,
			"by": 1,
			"alone": 2,
			"is": 1,
			"like": 1,
			"away": 1,
			"without": 4,
			"richard": 1,
			"holy": 1,
			"welcome": 1,
			"for": 5,
			"past": 1,
			"my": 2,
			"again": 4,
			"torn": 1,
			"william": 1,
			"god": 1,
			"oer": 1,
			"that": 3,
			"willie": 1,
			"man": 1,
			"must": 1,
			"what": 1,
			"or": 7,
			"their": 1,
			"a": 1,
			"so": 2,
			"upon": 1,
			"love": 1,
			"on": 5,
			"but": 4,
			"when": 1,
			"until": 1,
			"be": 1,
			"and": 26,
			"do": 1,
			"days": 1,
			"i": 4,
			"worthy": 1,
			"thou": 1,
			"here": 1,
			"one": 2,
			"beneath": 1,
			"maid": 1,
			"while": 3,
			"with": 6,
			"now": 1,
			"single": 1,
			"till": 5,
			"well": 2,
			"dost": 1,
			"behind": 1,
			"our": 1,
			"fortune": 1,
			"before": 1,
			"to": 16,
			"apart": 1,
			"as": 4,
			"at": 1,
			"below": 1,
			"iii": 1,
			"the": 9,
			"dead": 1,
			"in": 18
		},
		"strain": {
			"learn": 1,
			"rule": 1,
			"of": 2,
			"dear": 1,
			"brought": 1,
			"is": 1,
			"like": 1,
			"they": 1,
			"for": 1,
			"that": 1,
			"had": 1,
			"what": 1,
			"a": 1,
			"courage": 1,
			"many": 1,
			"but": 1,
			"when": 2,
			"brave": 1,
			"and": 6,
			"i": 1,
			"with": 1,
			"then": 1,
			"ho": 1,
			"through": 1,
			"to": 2,
			"whose": 1,
			"o": 1,
			"the": 1,
			"there": 1
		},
		"religion": {
			"breathing": 1,
			"are": 1,
			"which": 1,
			"of": 1,
			"liberty": 1,
			"by": 1,
			"is": 5,
			"for": 1,
			"god": 1,
			"were": 1,
			"if": 1,
			"what": 2,
			"have": 1,
			"and": 5,
			"stands": 1,
			"would": 1,
			"virtue": 1,
			"could": 1,
			"to": 2,
			"leads": 1,
			"in": 1
		},
		"use": {
			"us": 1,
			"his": 4,
			"who": 1,
			"of": 12,
			"not": 1,
			"praise": 1,
			"it": 4,
			"by": 1,
			"pride": 1,
			"than": 1,
			"thy": 1,
			"that": 1,
			"or": 3,
			"their": 1,
			"so": 1,
			"them": 1,
			"sometimes": 1,
			"on": 1,
			"but": 1,
			"be": 1,
			"and": 6,
			"i": 1,
			"no": 1,
			"has": 1,
			"doth": 1,
			"to": 4,
			"we": 1,
			"the": 2,
			"in": 3,
			"flowers": 1
		},
		"homes": {
			"look": 1,
			"are": 1,
			"of": 6,
			"once": 1,
			"by": 1,
			"where": 1,
			"waiting": 1,
			"their": 1,
			"and": 2,
			"with": 1,
			"flash": 1,
			"gods": 1,
			"turned": 1,
			"best": 1,
			"the": 1
		},
		"backward": {
			"look": 1,
			"bare": 1,
			"cast": 1,
			"lo": 1,
			"path": 1,
			"take": 1,
			"shore": 2,
			"had": 1,
			"but": 1,
			"and": 2,
			"drew": 1,
			"all": 1,
			"then": 1,
			"our": 1,
			"turn": 1,
			"turning": 1,
			"borne": 1,
			"the": 1,
			"tread": 1,
			"in": 1
		},
		"gently": {
			"of": 1,
			"not": 1,
			"dry": 1,
			"it": 1,
			"sway": 1,
			"blows": 1,
			"comes": 1,
			"cried": 1,
			"lay": 1,
			"on": 3,
			"be": 1,
			"heart": 1,
			"and": 2,
			"dream": 1,
			"down": 1,
			"from": 1,
			"your": 1,
			"to": 3,
			"round": 1,
			"as": 1,
			"said": 2,
			"the": 2,
			"theyre": 1,
			"near": 1,
			"in": 1
		},
		"heavenly": {
			"virtues": 1,
			"light": 2,
			"narrow": 1,
			"which": 1,
			"country": 1,
			"of": 1,
			"hills": 1,
			"race": 1,
			"place": 2,
			"flight": 1,
			"spirits": 1,
			"father": 1,
			"land": 1,
			"forms": 1,
			"its": 1,
			"my": 1,
			"winds": 1,
			"beauty": 1,
			"peace": 1,
			"birth": 1,
			"ray": 1,
			"glow": 1,
			"god": 1,
			"that": 1,
			"lips": 1,
			"gladness": 1,
			"music": 3,
			"love": 4,
			"on": 1,
			"wing": 1,
			"but": 1,
			"close": 1,
			"and": 1,
			"days": 1,
			"these": 1,
			"guest": 1,
			"with": 1,
			"gods": 1,
			"fires": 1,
			"then": 1,
			"songs": 1,
			"king": 1,
			"shine": 1,
			"needs": 1,
			"pity": 1,
			"shall": 1,
			"yet": 1,
			"to": 1,
			"poetry": 1,
			"flame": 2,
			"strain": 1,
			"powers": 1,
			"as": 1,
			"at": 3,
			"seat": 1,
			"the": 2,
			"treasure": 1,
			"first": 1,
			"thoughts": 1
		},
		"glorious": {
			"summer": 1,
			"light": 1,
			"pen": 1,
			"war": 1,
			"dance": 1,
			"court": 1,
			"of": 6,
			"sight": 1,
			"place": 1,
			"it": 1,
			"lights": 2,
			"long": 1,
			"wars": 1,
			"like": 1,
			"form": 1,
			"swift": 1,
			"song": 1,
			"church": 1,
			"for": 3,
			"great": 1,
			"beauty": 1,
			"birth": 1,
			"shore": 1,
			"name": 2,
			"that": 1,
			"must": 2,
			"repose": 1,
			"stars": 1,
			"eye": 1,
			"their": 1,
			"a": 1,
			"on": 1,
			"old": 1,
			"head": 1,
			"and": 3,
			"sun": 3,
			"christian": 1,
			"black": 1,
			"days": 1,
			"presence": 1,
			"shining": 1,
			"draw": 1,
			"how": 1,
			"from": 1,
			"mind": 1,
			"voice": 1,
			"sphere": 1,
			"till": 1,
			"will": 1,
			"all": 1,
			"chief": 1,
			"king": 1,
			"throne": 1,
			"day": 3,
			"works": 1,
			"shall": 1,
			"to": 3,
			"wounds": 1,
			"art": 1,
			"as": 2,
			"life": 3,
			"the": 1,
			"there": 1,
			"in": 6
		},
		"turning": {
			"his": 1,
			"save": 1,
			"not": 1,
			"by": 1,
			"just": 1,
			"for": 1,
			"again": 1,
			"de": 1,
			"their": 1,
			"too": 1,
			"one": 1,
			"from": 1,
			"sphere": 1,
			"soft": 2,
			"to": 4,
			"round": 1,
			"turning": 1,
			"the": 1,
			"in": 1
		},
		"freedoms": {
			"flower": 1,
			"banner": 1,
			"are": 1,
			"right": 2,
			"sake": 1,
			"call": 1,
			"sword": 2,
			"tongue": 1,
			"hallowed": 1,
			"song": 1,
			"where": 1,
			"holy": 1,
			"battle": 1,
			"hope": 1,
			"name": 1,
			"cause": 2,
			"victory": 1,
			"field": 1,
			"soil": 1,
			"death": 1,
			"foes": 1,
			"home": 1,
			"broad": 1,
			"now": 1,
			"harvest": 1,
			"day": 1,
			"shall": 1,
			"best": 1,
			"flame": 1,
			"oak": 1
		},
		"wounds": {
			"light": 1,
			"his": 1,
			"deeper": 1,
			"are": 3,
			"who": 1,
			"of": 1,
			"she": 1,
			"than": 1,
			"my": 2,
			"that": 1,
			"repose": 1,
			"upon": 1,
			"be": 1,
			"and": 3,
			"with": 1,
			"to": 1,
			"view": 1,
			"in": 5
		},
		"growing": {
			"virtues": 1,
			"deeper": 1,
			"of": 4,
			"up": 1,
			"dear": 1,
			"over": 1,
			"eyes": 1,
			"wise": 1,
			"boy": 1,
			"sway": 1,
			"they": 1,
			"comes": 1,
			"that": 1,
			"green": 2,
			"sees": 1,
			"old": 4,
			"and": 2,
			"how": 1,
			"thought": 1,
			"shine": 1,
			"spring": 1,
			"to": 1,
			"as": 1,
			"life": 2,
			"the": 1,
			"tis": 1,
			"in": 2,
			"dim": 1
		},
		"hence": {
			"tell": 1,
			"are": 1,
			"this": 1,
			"nor": 2,
			"unto": 1,
			"away": 1,
			"came": 1,
			"shadow": 1,
			"can": 1,
			"that": 1,
			"even": 1,
			"joys": 1,
			"dreams": 1,
			"be": 1,
			"glory": 1,
			"and": 2,
			"thou": 1,
			"one": 1,
			"might": 1,
			"each": 1,
			"with": 1,
			"all": 2,
			"we": 1,
			"the": 3,
			"though": 1,
			"in": 1,
			"shalt": 1
		},
		"view": {
			"come": 1,
			"of": 2,
			"she": 1,
			"beyond": 1,
			"aught": 1,
			"is": 2,
			"themselves": 1,
			"sadly": 1,
			"if": 1,
			"man": 1,
			"but": 1,
			"when": 1,
			"glory": 1,
			"and": 5,
			"i": 1,
			"each": 2,
			"from": 1,
			"all": 1,
			"could": 1,
			"mankind": 1,
			"we": 1,
			"he": 1,
			"me": 2,
			"the": 11,
			"tis": 1,
			"in": 3
		},
		"spear": {
			"they": 1,
			"theres": 1,
			"earl": 1,
			"closed": 1,
			"were": 1,
			"full": 1,
			"a": 1,
			"on": 1,
			"but": 1,
			"and": 11,
			"with": 1,
			"then": 1,
			"the": 3,
			"in": 1
		},
		"get": {
			"free": 1,
			"him": 1,
			"back": 1,
			"pour": 1,
			"up": 7,
			"among": 1,
			"place": 1,
			"good": 1,
			"along": 1,
			"that": 1,
			"hold": 1,
			"a": 9,
			"them": 2,
			"many": 1,
			"but": 2,
			"thee": 3,
			"and": 1,
			"from": 1,
			"no": 2,
			"wealth": 1,
			"still": 1,
			"as": 1,
			"o": 2,
			"the": 3,
			"there": 1,
			"in": 1
		},
		"know": {
			"perchance": 1,
			"us": 2,
			"taught": 1,
			"thine": 1,
			"light": 1,
			"his": 2,
			"him": 2,
			"are": 3,
			"who": 2,
			"which": 3,
			"this": 2,
			"she": 3,
			"rose": 1,
			"not": 43,
			"it": 10,
			"by": 3,
			"long": 1,
			"is": 3,
			"why": 4,
			"they": 1,
			"you": 5,
			"pale": 1,
			"its": 2,
			"than": 3,
			"where": 4,
			"despair": 1,
			"for": 3,
			"past": 1,
			"hand": 1,
			"my": 3,
			"great": 1,
			"again": 2,
			"enough": 1,
			"thy": 4,
			"yes": 1,
			"better": 1,
			"god": 1,
			"oer": 1,
			"that": 31,
			"if": 1,
			"must": 3,
			"what": 10,
			"or": 2,
			"wilt": 1,
			"their": 3,
			"a": 5,
			"so": 2,
			"lay": 4,
			"love": 1,
			"on": 1,
			"but": 5,
			"thee": 8,
			"ye": 4,
			"when": 7,
			"t": 1,
			"and": 8,
			"myself": 1,
			"hid": 1,
			"i": 12,
			"thou": 3,
			"here": 1,
			"too": 3,
			"secret": 1,
			"whereer": 1,
			"how": 8,
			"while": 1,
			"no": 6,
			"with": 2,
			"virtue": 1,
			"some": 1,
			"till": 1,
			"all": 2,
			"then": 3,
			"ho": 1,
			"thats": 1,
			"well": 1,
			"much": 1,
			"being": 1,
			"our": 2,
			"shall": 1,
			"to": 2,
			"poetry": 1,
			"little": 1,
			"religion": 1,
			"know": 1,
			"may": 1,
			"we": 3,
			"as": 3,
			"he": 3,
			"me": 4,
			"at": 1,
			"o": 2,
			"the": 26,
			"though": 1,
			"theyre": 1,
			"her": 2,
			"there": 2,
			"in": 2
		},
		"mould": {
			"made": 1,
			"of": 1,
			"breathe": 1,
			"she": 1,
			"it": 1,
			"bring": 1,
			"although": 1,
			"darling": 1,
			"that": 1,
			"let": 1,
			"a": 4,
			"but": 1,
			"and": 3,
			"with": 1,
			"lying": 1,
			"below": 1,
			"o": 1,
			"the": 3,
			"in": 1
		},
		"prove": {
			"thine": 1,
			"his": 1,
			"him": 1,
			"find": 1,
			"by": 2,
			"thy": 1,
			"that": 4,
			"what": 1,
			"an": 1,
			"their": 2,
			"a": 4,
			"and": 1,
			"i": 1,
			"thou": 3,
			"one": 1,
			"how": 1,
			"then": 1,
			"much": 1,
			"being": 1,
			"our": 1,
			"to": 1,
			"whose": 1,
			"as": 1,
			"the": 3
		},
		"vows": {
			"made": 1,
			"by": 1,
			"for": 1,
			"were": 1,
			"but": 2,
			"and": 8,
			"rather": 1,
			"from": 1,
			"with": 1,
			"shall": 1,
			"at": 1,
			"in": 1,
			"seem": 1
		},
		"soar": {
			"high": 1,
			"away": 1,
			"thus": 1,
			"where": 1,
			"again": 1,
			"that": 1,
			"make": 1,
			"so": 1,
			"on": 1,
			"above": 2,
			"but": 1,
			"eternal": 1,
			"and": 3,
			"to": 5,
			"as": 1
		},
		"sore": {
			"come": 1,
			"more": 1,
			"which": 1,
			"of": 1,
			"is": 1,
			"my": 1,
			"thy": 2,
			"remember": 1,
			"faith": 1,
			"have": 1,
			"am": 1,
			"upon": 1,
			"and": 2,
			"i": 1,
			"these": 1,
			"wounds": 1,
			"o": 2,
			"the": 1,
			"there": 1,
			"in": 1
		},
		"art": {
			"fled": 1,
			"saviour": 1,
			"more": 3,
			"wrought": 1,
			"weary": 1,
			"wonder": 1,
			"body": 1,
			"of": 4,
			"high": 1,
			"thyself": 2,
			"forth": 1,
			"dear": 1,
			"mine": 1,
			"not": 14,
			"divine": 1,
			"constant": 1,
			"it": 1,
			"far": 3,
			"by": 1,
			"is": 3,
			"good": 2,
			"pale": 1,
			"new": 1,
			"than": 2,
			"where": 4,
			"just": 1,
			"for": 3,
			"past": 1,
			"take": 1,
			"my": 5,
			"thy": 2,
			"yes": 1,
			"sin": 1,
			"god": 1,
			"can": 1,
			"immortal": 1,
			"that": 1,
			"if": 1,
			"both": 1,
			"victory": 1,
			"must": 1,
			"what": 2,
			"oh": 1,
			"or": 3,
			"bright": 1,
			"a": 6,
			"so": 5,
			"true": 2,
			"lord": 1,
			"spirit": 1,
			"but": 3,
			"gone": 11,
			"glory": 1,
			"and": 8,
			"dark": 1,
			"i": 3,
			"unknown": 1,
			"worthy": 2,
			"thou": 44,
			"here": 1,
			"too": 2,
			"might": 1,
			"against": 1,
			"how": 1,
			"from": 2,
			"present": 1,
			"with": 2,
			"around": 1,
			"sad": 1,
			"all": 2,
			"then": 1,
			"through": 2,
			"our": 1,
			"shall": 1,
			"still": 1,
			"to": 6,
			"religion": 1,
			"freedoms": 1,
			"hence": 1,
			"may": 1,
			"yon": 1,
			"as": 2,
			"fair": 2,
			"at": 1,
			"o": 2,
			"the": 14,
			"sure": 1,
			"young": 2,
			"near": 2,
			"jesus": 1,
			"there": 2,
			"in": 2
		},
		"lived": {
			"of": 1,
			"she": 1,
			"nor": 1,
			"today": 1,
			"it": 1,
			"for": 1,
			"whom": 1,
			"indeed": 1,
			"was": 1,
			"or": 1,
			"a": 1,
			"so": 3,
			"upon": 2,
			"on": 1,
			"and": 5,
			"i": 1,
			"knew": 1,
			"from": 1,
			"with": 2,
			"through": 2,
			"shall": 1,
			"yet": 1,
			"to": 1,
			"he": 1,
			"at": 1,
			"the": 1,
			"in": 1
		},
		"ah": {
			"sweet": 1,
			"come": 2,
			"jean": 1,
			"foolish": 1,
			"blessd": 1,
			"ring": 1,
			"wife": 1,
			"christ": 1,
			"his": 1,
			"voices": 1,
			"woe": 1,
			"silver": 1,
			"surely": 1,
			"tell": 1,
			"who": 10,
			"this": 2,
			"morning": 1,
			"maiden": 1,
			"neither": 1,
			"bring": 1,
			"few": 1,
			"why": 2,
			"where": 1,
			"for": 3,
			"read": 1,
			"boys": 1,
			"my": 1,
			"ere": 1,
			"better": 1,
			"soul": 1,
			"god": 2,
			"was": 1,
			"that": 3,
			"if": 2,
			"let": 2,
			"tear": 1,
			"had": 1,
			"what": 5,
			"never": 3,
			"ye": 1,
			"when": 1,
			"and": 1,
			"do": 2,
			"black": 1,
			"i": 3,
			"thou": 1,
			"here": 1,
			"too": 1,
			"such": 1,
			"how": 4,
			"would": 2,
			"foul": 1,
			"no": 5,
			"sad": 1,
			"now": 1,
			"then": 2,
			"through": 1,
			"well": 3,
			"dost": 1,
			"little": 2,
			"art": 1,
			"ah": 4,
			"we": 2,
			"whose": 1,
			"happy": 1,
			"said": 1,
			"he": 1,
			"me": 4,
			"the": 4,
			"sure": 1,
			"grand": 1,
			"in": 2
		},
		"harp": {
			"which": 1,
			"of": 4,
			"she": 1,
			"is": 1,
			"rang": 1,
			"that": 2,
			"what": 1,
			"or": 2,
			"on": 1,
			"and": 4,
			"with": 3,
			"till": 1,
			"has": 1,
			"to": 2,
			"the": 2,
			"in": 2
		},
		"bold": {
			"blue": 1,
			"come": 1,
			"went": 1,
			"which": 1,
			"of": 2,
			"nor": 1,
			"sons": 1,
			"age": 1,
			"by": 1,
			"you": 1,
			"thus": 1,
			"for": 1,
			"hand": 2,
			"should": 2,
			"held": 1,
			"face": 1,
			"that": 1,
			"rode": 1,
			"a": 2,
			"things": 1,
			"but": 1,
			"foes": 1,
			"when": 1,
			"be": 2,
			"close": 1,
			"and": 8,
			"quick": 1,
			"i": 1,
			"draw": 1,
			"sublime": 1,
			"alfred": 1,
			"with": 3,
			"will": 1,
			"all": 1,
			"through": 1,
			"yet": 1,
			"to": 1,
			"live": 2,
			"as": 1,
			"the": 1,
			"in": 1
		},
		"flow": {
			"come": 1,
			"hast": 1,
			"of": 6,
			"she": 1,
			"praise": 1,
			"father": 1,
			"vision": 1,
			"like": 1,
			"sung": 1,
			"for": 2,
			"theres": 1,
			"oer": 1,
			"that": 1,
			"what": 1,
			"wilt": 1,
			"upon": 1,
			"but": 1,
			"when": 1,
			"and": 4,
			"thou": 1,
			"tall": 1,
			"from": 1,
			"with": 2,
			"has": 1,
			"only": 1,
			"your": 1,
			"yet": 1,
			"to": 1,
			"as": 1,
			"the": 5,
			"there": 1,
			"in": 3
		},
		"vast": {
			"river": 1,
			"are": 1,
			"of": 3,
			"alone": 1,
			"is": 1,
			"ocean": 2,
			"they": 1,
			"afar": 1,
			"sea": 1,
			"where": 1,
			"surprise": 1,
			"soul": 1,
			"or": 1,
			"and": 11,
			"calm": 1,
			"wave": 1,
			"some": 1,
			"till": 1,
			"realm": 1,
			"works": 1,
			"frame": 1,
			"to": 2,
			"weight": 1,
			"the": 2,
			"tis": 1,
			"world": 1
		},
		"may": {
			"come": 11,
			"sound": 1,
			"look": 2,
			"us": 3,
			"hear": 6,
			"ready": 1,
			"die": 5,
			"his": 3,
			"save": 1,
			"him": 2,
			"see": 4,
			"learn": 1,
			"tell": 1,
			"are": 1,
			"beam": 1,
			"hide": 1,
			"call": 4,
			"of": 6,
			"brook": 1,
			"this": 2,
			"yield": 1,
			"keep": 3,
			"sons": 1,
			"find": 8,
			"morning": 1,
			"part": 1,
			"pass": 3,
			"not": 27,
			"fade": 1,
			"dwell": 3,
			"serve": 2,
			"praise": 2,
			"it": 3,
			"perish": 1,
			"weep": 2,
			"by": 5,
			"try": 1,
			"father": 2,
			"shut": 1,
			"long": 1,
			"bring": 4,
			"bind": 1,
			"is": 2,
			"soon": 1,
			"rise": 2,
			"like": 1,
			"why": 3,
			"lead": 2,
			"they": 4,
			"faint": 1,
			"you": 2,
			"mother": 11,
			"grant": 1,
			"new": 1,
			"strike": 2,
			"smile": 2,
			"kindly": 1,
			"for": 4,
			"read": 3,
			"become": 2,
			"catch": 1,
			"surprise": 1,
			"theres": 1,
			"rest": 4,
			"my": 4,
			"blow": 1,
			"remain": 2,
			"tender": 1,
			"touch": 1,
			"thy": 5,
			"sing": 1,
			"morn": 2,
			"sleep": 1,
			"peace": 1,
			"hope": 3,
			"seek": 2,
			"gather": 1,
			"cease": 2,
			"most": 2,
			"win": 4,
			"reach": 4,
			"queen": 2,
			"face": 1,
			"oer": 1,
			"that": 2,
			"if": 1,
			"show": 3,
			"man": 1,
			"bear": 2,
			"always": 1,
			"make": 2,
			"fall": 6,
			"go": 5,
			"trust": 1,
			"sail": 1,
			"what": 3,
			"sit": 1,
			"an": 1,
			"hold": 3,
			"or": 3,
			"conscience": 1,
			"have": 7,
			"their": 4,
			"a": 5,
			"so": 3,
			"sometimes": 1,
			"sink": 1,
			"upon": 1,
			"lay": 3,
			"never": 5,
			"love": 1,
			"on": 2,
			"break": 1,
			"wing": 1,
			"maryland": 1,
			"but": 6,
			"time": 2,
			"when": 3,
			"eternal": 1,
			"thank": 1,
			"sigh": 1,
			"raise": 2,
			"be": 77,
			"t": 1,
			"line": 1,
			"out": 1,
			"say": 3,
			"close": 1,
			"and": 10,
			"eer": 1,
			"march": 1,
			"bloom": 2,
			"do": 3,
			"dark": 1,
			"last": 1,
			"move": 2,
			"dream": 2,
			"ask": 2,
			"i": 15,
			"woman": 1,
			"greet": 1,
			"swell": 1,
			"broke": 1,
			"too": 1,
			"one": 3,
			"draw": 1,
			"how": 1,
			"help": 2,
			"from": 1,
			"would": 1,
			"want": 1,
			"while": 2,
			"honor": 1,
			"bid": 1,
			"roll": 2,
			"now": 3,
			"give": 6,
			"some": 2,
			"meet": 4,
			"will": 1,
			"follow": 1,
			"flash": 2,
			"all": 3,
			"gods": 1,
			"feed": 1,
			"through": 1,
			"well": 2,
			"doth": 1,
			"shine": 3,
			"spring": 1,
			"our": 1,
			"feel": 3,
			"fear": 1,
			"pity": 1,
			"stay": 1,
			"shall": 1,
			"before": 1,
			"only": 1,
			"chance": 1,
			"your": 2,
			"yet": 4,
			"best": 1,
			"to": 4,
			"youth": 1,
			"turn": 2,
			"lie": 2,
			"little": 1,
			"mankind": 1,
			"live": 4,
			"use": 1,
			"freedoms": 1,
			"view": 1,
			"get": 2,
			"know": 5,
			"prove": 2,
			"may": 1,
			"hail": 1,
			"sweep": 1,
			"whisper": 2,
			"yon": 1,
			"we": 6,
			"as": 3,
			"stand": 1,
			"end": 1,
			"he": 5,
			"me": 1,
			"at": 5,
			"slumber": 1,
			"gain": 1,
			"grow": 1,
			"the": 25,
			"fight": 3,
			"share": 1,
			"change": 2,
			"tread": 1,
			"first": 1,
			"there": 5,
			"in": 6,
			"shed": 1,
			"seem": 1
		},
		"th": {
			"ear": 1,
			"blood": 1,
			"which": 1,
			"of": 4,
			"proud": 2,
			"corn": 1,
			"lo": 1,
			"sea": 1,
			"morn": 1,
			"soul": 2,
			"sail": 1,
			"have": 1,
			"spirit": 1,
			"delight": 1,
			"eternal": 1,
			"and": 4,
			"other": 1,
			"from": 1,
			"breast": 1,
			"chief": 1,
			"throne": 1,
			"to": 2,
			"clouds": 1,
			"into": 1,
			"the": 1,
			"dead": 1,
			"sky": 1
		},
		"hail": {
			"light": 1,
			"him": 1,
			"fell": 1,
			"of": 1,
			"sacred": 1,
			"is": 1,
			"gentle": 1,
			"for": 1,
			"sabbath": 3,
			"that": 1,
			"let": 1,
			"an": 1,
			"or": 1,
			"them": 1,
			"thee": 3,
			"ye": 3,
			"be": 1,
			"and": 1,
			"i": 2,
			"thou": 1,
			"with": 1,
			"to": 1,
			"hail": 2,
			"heavens": 1,
			"happy": 1,
			"he": 1,
			"the": 8,
			"in": 1
		},
		"strife": {
			"ring": 1,
			"made": 1,
			"of": 5,
			"once": 1,
			"by": 2,
			"is": 1,
			"nature": 1,
			"afar": 1,
			"for": 2,
			"should": 1,
			"came": 1,
			"tender": 1,
			"that": 2,
			"let": 1,
			"full": 1,
			"trust": 1,
			"nothing": 1,
			"or": 1,
			"have": 1,
			"their": 1,
			"so": 1,
			"but": 2,
			"lives": 1,
			"when": 2,
			"be": 1,
			"and": 11,
			"i": 1,
			"breathes": 1,
			"such": 1,
			"hearts": 1,
			"from": 2,
			"would": 1,
			"now": 1,
			"some": 1,
			"will": 1,
			"all": 1,
			"our": 1,
			"your": 1,
			"to": 3,
			"we": 1,
			"o": 3,
			"the": 6,
			"her": 1,
			"there": 1
		},
		"eve": {
			"more": 1,
			"his": 2,
			"who": 2,
			"of": 1,
			"is": 1,
			"for": 1,
			"because": 1,
			"was": 1,
			"that": 1,
			"if": 1,
			"hold": 1,
			"a": 1,
			"on": 1,
			"when": 3,
			"and": 2,
			"now": 1,
			"to": 3,
			"we": 1,
			"he": 3,
			"at": 2,
			"the": 3,
			"her": 1,
			"in": 1
		},
		"sweep": {
			"of": 1,
			"shake": 1,
			"heard": 1,
			"along": 2,
			"oer": 2,
			"lest": 1,
			"their": 1,
			"a": 1,
			"and": 2,
			"here": 1,
			"these": 1,
			"through": 1,
			"into": 2,
			"we": 1,
			"the": 10,
			"there": 1
		},
		"whisper": {
			"come": 1,
			"low": 1,
			"of": 6,
			"this": 1,
			"where": 1,
			"my": 1,
			"words": 1,
			"love": 1,
			"on": 2,
			"and": 1,
			"i": 1,
			"from": 2,
			"solitude": 1,
			"with": 1,
			"angels": 1,
			"as": 3,
			"he": 1,
			"at": 1,
			"in": 1
		},
		"withered": {
			"cheek": 1,
			"of": 1,
			"rose": 1,
			"by": 1,
			"leaves": 2,
			"its": 1,
			"my": 1,
			"face": 1,
			"leaf": 2,
			"hands": 2,
			"and": 5,
			"blossom": 1,
			"from": 1,
			"all": 1,
			"frame": 1,
			"lie": 1,
			"flowers": 1
		},
		"apart": {
			"are": 1,
			"she": 1,
			"by": 1,
			"forever": 1,
			"together": 1,
			"wide": 1,
			"its": 1,
			"thy": 1,
			"that": 1,
			"time": 1,
			"when": 1,
			"t": 1,
			"and": 4,
			"i": 1,
			"from": 1,
			"while": 1,
			"no": 1,
			"as": 1,
			"sat": 1,
			"the": 2
		},
		"enter": {
			"up": 1,
			"heaven": 2,
			"death": 1,
			"and": 1,
			"here": 3,
			"no": 1,
			"now": 4,
			"all": 1,
			"still": 1,
			"into": 1,
			"as": 1,
			"life": 1,
			"at": 1,
			"the": 3,
			"there": 1,
			"in": 3
		},
		"yon": {
			"blue": 2,
			"ring": 1,
			"earth": 1,
			"cloud": 2,
			"white": 2,
			"beam": 1,
			"of": 3,
			"flood": 1,
			"bird": 1,
			"water": 1,
			"quiet": 1,
			"sea": 1,
			"where": 1,
			"holy": 1,
			"gray": 2,
			"heaven": 1,
			"cup": 1,
			"base": 1,
			"band": 1,
			"great": 1,
			"rising": 1,
			"were": 1,
			"that": 2,
			"thorn": 1,
			"man": 1,
			"bright": 2,
			"isle": 1,
			"winter": 1,
			"green": 2,
			"mountain": 1,
			"and": 1,
			"sun": 2,
			"steel": 1,
			"fields": 1,
			"marble": 1,
			"rare": 1,
			"no": 1,
			"calm": 1,
			"wild": 1,
			"through": 1,
			"shall": 1,
			"wood": 1,
			"keen": 1,
			"little": 1,
			"sign": 1,
			"skies": 1,
			"at": 1,
			"the": 2,
			"house": 1,
			"grim": 1,
			"lowly": 1,
			"step": 1,
			"sky": 1
		},
		"sign": {
			"save": 1,
			"of": 5,
			"nor": 1,
			"pressed": 1,
			"just": 1,
			"for": 2,
			"enough": 1,
			"clay": 1,
			"god": 1,
			"that": 2,
			"on": 1,
			"but": 1,
			"and": 5,
			"with": 1,
			"all": 1,
			"to": 3,
			"loud": 1,
			"as": 1,
			"the": 3
		},
		"ship": {
			"caught": 1,
			"unseen": 1,
			"of": 3,
			"up": 1,
			"every": 1,
			"is": 3,
			"comes": 3,
			"along": 1,
			"was": 2,
			"that": 2,
			"must": 1,
			"or": 1,
			"brings": 1,
			"but": 1,
			"and": 1,
			"thou": 1,
			"till": 1,
			"has": 1,
			"as": 1,
			"he": 1,
			"me": 1,
			"the": 1,
			"her": 1
		},
		"skies": {
			"us": 1,
			"since": 1,
			"see": 1,
			"seemed": 1,
			"are": 5,
			"who": 1,
			"of": 2,
			"longfellow": 1,
			"up": 1,
			"she": 3,
			"beyond": 1,
			"serene": 2,
			"not": 1,
			"serve": 1,
			"over": 1,
			"by": 1,
			"pride": 1,
			"is": 1,
			"hark": 1,
			"together": 1,
			"they": 2,
			"for": 1,
			"heaven": 2,
			"thy": 2,
			"were": 1,
			"oer": 1,
			"that": 1,
			"if": 1,
			"let": 1,
			"go": 1,
			"oh": 1,
			"or": 1,
			"waiting": 1,
			"their": 1,
			"a": 1,
			"sink": 1,
			"lord": 1,
			"on": 1,
			"bend": 1,
			"above": 1,
			"memory": 1,
			"but": 3,
			"when": 1,
			"and": 7,
			"i": 1,
			"one": 1,
			"against": 1,
			"saint": 1,
			"how": 2,
			"no": 1,
			"with": 1,
			"gay": 1,
			"natures": 1,
			"to": 5,
			"thinking": 1,
			"th": 1,
			"whose": 1,
			"as": 2,
			"fair": 1,
			"heavens": 1,
			"the": 11,
			"scarce": 1,
			"there": 2,
			"in": 2,
			"seem": 1
		},
		"smiled": {
			"she": 3,
			"dear": 1,
			"like": 1,
			"they": 1,
			"where": 1,
			"because": 1,
			"that": 2,
			"a": 1,
			"on": 2,
			"but": 1,
			"be": 1,
			"and": 9,
			"to": 3,
			"though": 1,
			"there": 1,
			"in": 2
		},
		"powers": {
			"which": 1,
			"of": 2,
			"longfellow": 1,
			"nor": 1,
			"kings": 1,
			"its": 1,
			"my": 2,
			"most": 1,
			"that": 3,
			"fall": 1,
			"on": 2,
			"above": 2,
			"and": 4,
			"here": 1,
			"will": 1,
			"to": 3,
			"as": 1,
			"he": 1,
			"the": 3,
			"in": 1
		},
		"we": {
			"come": 9,
			"low": 1,
			"bow": 3,
			"dare": 4,
			"look": 8,
			"more": 1,
			"hear": 11,
			"within": 1,
			"curse": 1,
			"went": 3,
			"wish": 2,
			"forget": 6,
			"pine": 1,
			"die": 4,
			"his": 4,
			"him": 3,
			"see": 30,
			"women": 1,
			"learn": 3,
			"white": 2,
			"surely": 1,
			"seemed": 2,
			"are": 74,
			"beside": 1,
			"alas": 2,
			"made": 2,
			"fell": 1,
			"who": 2,
			"seen": 2,
			"men": 2,
			"suffer": 1,
			"which": 1,
			"court": 1,
			"call": 14,
			"of": 7,
			"this": 2,
			"blind": 1,
			"yield": 1,
			"keep": 2,
			"hung": 1,
			"talk": 4,
			"after": 1,
			"wander": 1,
			"once": 3,
			"breathe": 3,
			"rock": 1,
			"silence": 1,
			"find": 9,
			"three": 1,
			"forth": 3,
			"played": 1,
			"beheld": 1,
			"two": 8,
			"pain": 1,
			"mourn": 2,
			"lift": 2,
			"part": 4,
			"pass": 3,
			"fine": 1,
			"behold": 4,
			"not": 7,
			"dwell": 2,
			"serve": 1,
			"every": 3,
			"praise": 3,
			"pressed": 1,
			"it": 6,
			"smooth": 1,
			"shake": 1,
			"perish": 1,
			"twas": 1,
			"far": 1,
			"mean": 1,
			"spirits": 1,
			"weep": 2,
			"send": 1,
			"by": 4,
			"long": 1,
			"bring": 3,
			"cross": 1,
			"rise": 3,
			"looked": 1,
			"unto": 1,
			"like": 4,
			"return": 1,
			"away": 3,
			"found": 2,
			"forever": 1,
			"ever": 1,
			"either": 1,
			"together": 1,
			"about": 2,
			"believe": 3,
			"path": 1,
			"faint": 2,
			"gazed": 1,
			"guide": 1,
			"thus": 1,
			"swept": 2,
			"heard": 7,
			"without": 2,
			"laid": 1,
			"than": 1,
			"smile": 1,
			"where": 1,
			"used": 5,
			"run": 3,
			"press": 1,
			"for": 5,
			"read": 3,
			"become": 1,
			"catch": 1,
			"cry": 2,
			"should": 20,
			"take": 4,
			"cannot": 18,
			"speak": 2,
			"rest": 1,
			"my": 1,
			"bore": 2,
			"count": 2,
			"came": 1,
			"remain": 1,
			"sighing": 1,
			"again": 2,
			"thy": 1,
			"sing": 4,
			"watch": 1,
			"pray": 5,
			"sleep": 1,
			"battle": 1,
			"ourselves": 5,
			"therefore": 1,
			"hope": 1,
			"wear": 2,
			"seek": 6,
			"gather": 3,
			"remember": 2,
			"strive": 1,
			"various": 1,
			"cheer": 1,
			"cease": 1,
			"any": 1,
			"held": 3,
			"reach": 1,
			"name": 4,
			"along": 1,
			"sin": 1,
			"god": 1,
			"can": 24,
			"shame": 1,
			"were": 17,
			"need": 5,
			"indeed": 1,
			"did": 5,
			"was": 1,
			"that": 6,
			"if": 1,
			"let": 2,
			"show": 1,
			"bear": 5,
			"both": 1,
			"always": 1,
			"make": 8,
			"fall": 5,
			"steep": 2,
			"ripe": 1,
			"crowd": 1,
			"go": 5,
			"cried": 1,
			"trust": 5,
			"sail": 2,
			"had": 12,
			"must": 23,
			"climb": 3,
			"what": 2,
			"sit": 7,
			"wait": 2,
			"hold": 4,
			"waiting": 2,
			"think": 8,
			"ran": 1,
			"lest": 2,
			"start": 1,
			"have": 41,
			"trod": 4,
			"ride": 3,
			"their": 1,
			"a": 7,
			"so": 2,
			"them": 5,
			"sometimes": 1,
			"sink": 1,
			"upon": 2,
			"lay": 4,
			"things": 1,
			"never": 7,
			"cruel": 1,
			"leave": 7,
			"met": 6,
			"walk": 7,
			"whence": 2,
			"delight": 1,
			"love": 13,
			"groan": 1,
			"on": 5,
			"saw": 7,
			"bend": 1,
			"quite": 2,
			"sees": 1,
			"own": 1,
			"above": 1,
			"but": 11,
			"grass": 1,
			"rushed": 1,
			"buried": 2,
			"thee": 3,
			"when": 3,
			"eat": 2,
			"onward": 1,
			"thank": 3,
			"sigh": 1,
			"felt": 2,
			"raise": 2,
			"be": 5,
			"t": 2,
			"watched": 3,
			"say": 4,
			"and": 13,
			"march": 2,
			"truth": 1,
			"do": 18,
			"prize": 1,
			"last": 1,
			"move": 1,
			"dream": 3,
			"ask": 2,
			"fly": 1,
			"i": 1,
			"knew": 5,
			"thou": 1,
			"greet": 1,
			"down": 2,
			"bad": 1,
			"pay": 2,
			"raised": 1,
			"fought": 1,
			"one": 1,
			"might": 4,
			"storm": 1,
			"such": 1,
			"judge": 1,
			"rush": 1,
			"each": 1,
			"henry": 1,
			"from": 2,
			"sought": 2,
			"drink": 5,
			"strange": 1,
			"would": 6,
			"no": 3,
			"called": 2,
			"dread": 2,
			"with": 9,
			"wave": 1,
			"now": 4,
			"set": 1,
			"give": 7,
			"some": 1,
			"learned": 1,
			"till": 1,
			"meet": 19,
			"will": 19,
			"follow": 2,
			"all": 11,
			"wild": 1,
			"feed": 1,
			"lose": 7,
			"thought": 6,
			"could": 9,
			"through": 1,
			"laugh": 4,
			"well": 1,
			"spoke": 2,
			"spring": 1,
			"wake": 2,
			"turned": 1,
			"being": 1,
			"our": 10,
			"wrong": 1,
			"day": 1,
			"feel": 8,
			"neer": 1,
			"fear": 2,
			"loved": 4,
			"shall": 33,
			"before": 1,
			"only": 5,
			"still": 3,
			"to": 18,
			"wandered": 1,
			"turn": 5,
			"lie": 3,
			"little": 2,
			"live": 9,
			"strain": 2,
			"view": 1,
			"get": 2,
			"know": 41,
			"prove": 1,
			"soar": 1,
			"ah": 1,
			"may": 36,
			"sweep": 1,
			"enter": 1,
			"we": 14,
			"spread": 2,
			"whose": 1,
			"as": 2,
			"stand": 6,
			"said": 4,
			"french": 1,
			"end": 1,
			"sat": 4,
			"at": 3,
			"below": 1,
			"slumber": 1,
			"frown": 1,
			"wound": 1,
			"o": 1,
			"gain": 2,
			"grow": 3,
			"left": 6,
			"common": 1,
			"the": 26,
			"fight": 5,
			"stood": 5,
			"her": 1,
			"passed": 2,
			"share": 3,
			"tread": 6,
			"thirst": 1,
			"fail": 1,
			"near": 1,
			"first": 3,
			"oft": 1,
			"there": 2,
			"in": 14,
			"forgive": 1,
			"purpose": 1,
			"shed": 2
		},
		"gloom": {
			"warm": 1,
			"which": 1,
			"of": 6,
			"this": 1,
			"nor": 1,
			"it": 1,
			"alone": 1,
			"like": 1,
			"away": 1,
			"lead": 1,
			"where": 2,
			"my": 1,
			"that": 1,
			"had": 2,
			"hath": 1,
			"but": 2,
			"out": 1,
			"and": 8,
			"thou": 3,
			"how": 1,
			"from": 1,
			"beneath": 1,
			"with": 1,
			"then": 1,
			"your": 1,
			"yet": 1,
			"to": 1,
			"ah": 1,
			"the": 7,
			"in": 1
		},
		"glad": {
			"blue": 1,
			"cool": 1,
			"light": 1,
			"earth": 2,
			"tell": 1,
			"who": 1,
			"of": 5,
			"it": 1,
			"lo": 1,
			"mother": 1,
			"song": 2,
			"for": 1,
			"cry": 1,
			"surprise": 1,
			"thy": 1,
			"ray": 1,
			"were": 1,
			"that": 1,
			"let": 1,
			"eye": 1,
			"so": 2,
			"green": 1,
			"things": 1,
			"spirit": 1,
			"when": 3,
			"lifes": 1,
			"be": 1,
			"and": 7,
			"how": 1,
			"hearts": 1,
			"from": 1,
			"voice": 1,
			"with": 1,
			"yet": 1,
			"to": 9,
			"round": 2,
			"me": 1,
			"son": 1,
			"at": 1,
			"rings": 1,
			"the": 3
		},
		"simple": {
			"thing": 1,
			"creed": 1,
			"story": 1,
			"of": 1,
			"race": 1,
			"maiden": 1,
			"twas": 1,
			"they": 1,
			"path": 1,
			"nature": 1,
			"song": 1,
			"just": 1,
			"for": 1,
			"beauty": 1,
			"name": 1,
			"faith": 2,
			"crowned": 1,
			"that": 2,
			"show": 1,
			"man": 1,
			"trust": 1,
			"their": 1,
			"lay": 1,
			"but": 1,
			"merry": 1,
			"truth": 2,
			"thou": 1,
			"hearts": 1,
			"has": 1,
			"well": 1,
			"ways": 1,
			"human": 1,
			"fancy": 1,
			"in": 1
		},
		"loss": {
			"beside": 1,
			"of": 9,
			"nor": 1,
			"by": 1,
			"is": 1,
			"its": 1,
			"for": 1,
			"was": 1,
			"so": 1,
			"but": 1,
			"be": 2,
			"and": 3,
			"i": 1,
			"might": 1,
			"ill": 1,
			"no": 1,
			"has": 1,
			"to": 2,
			"o": 1
		},
		"infant": {
			"voices": 1,
			"beside": 1,
			"which": 1,
			"played": 1,
			"is": 2,
			"kings": 1,
			"church": 1,
			"for": 1,
			"friendship": 1,
			"god": 1,
			"that": 1,
			"lips": 1,
			"fall": 1,
			"hands": 1,
			"years": 1,
			"and": 1,
			"still": 1,
			"in": 3
		},
		"spread": {
			"his": 4,
			"of": 1,
			"nor": 1,
			"it": 1,
			"abroad": 2,
			"pale": 1,
			"its": 1,
			"where": 1,
			"my": 1,
			"thy": 1,
			"oer": 1,
			"that": 2,
			"what": 1,
			"their": 1,
			"a": 2,
			"them": 1,
			"upon": 1,
			"above": 1,
			"but": 1,
			"wings": 1,
			"out": 1,
			"and": 2,
			"sunshine": 1,
			"from": 1,
			"no": 1,
			"set": 1,
			"to": 2,
			"may": 1,
			"at": 1,
			"the": 10,
			"her": 1,
			"in": 1
		},
		"store": {
			"which": 1,
			"of": 7,
			"she": 1,
			"nor": 1,
			"divine": 1,
			"for": 1,
			"most": 1,
			"that": 1,
			"their": 1,
			"on": 1,
			"and": 2,
			"i": 2,
			"one": 1,
			"these": 1,
			"with": 2,
			"thomas": 1,
			"your": 1,
			"to": 1,
			"as": 1,
			"at": 1,
			"o": 1,
			"the": 2,
			"tis": 1,
			"though": 1,
			"her": 1,
			"in": 1
		},
		"whose": {
			"sweet": 2,
			"low": 2,
			"look": 1,
			"murmur": 1,
			"lot": 1,
			"went": 1,
			"light": 3,
			"earth": 1,
			"appear": 1,
			"struck": 1,
			"banner": 1,
			"ear": 1,
			"midnight": 2,
			"blood": 4,
			"temple": 1,
			"cheek": 1,
			"kiss": 1,
			"voices": 1,
			"s": 1,
			"weary": 1,
			"are": 2,
			"aid": 1,
			"humble": 1,
			"made": 1,
			"word": 3,
			"very": 3,
			"silent": 1,
			"men": 2,
			"deeds": 2,
			"worth": 1,
			"body": 1,
			"of": 2,
			"high": 1,
			"rude": 1,
			"fame": 2,
			"souls": 1,
			"once": 1,
			"sons": 2,
			"sacred": 1,
			"sight": 1,
			"whatever": 1,
			"joy": 1,
			"fruit": 1,
			"wheel": 1,
			"height": 1,
			"dear": 1,
			"fresh": 1,
			"fine": 1,
			"lines": 1,
			"limbs": 2,
			"mine": 1,
			"constant": 1,
			"burden": 1,
			"today": 1,
			"every": 3,
			"sword": 1,
			"smooth": 1,
			"magic": 2,
			"image": 1,
			"far": 1,
			"mean": 1,
			"bark": 1,
			"eyes": 4,
			"quiet": 2,
			"land": 1,
			"is": 7,
			"vision": 1,
			"like": 2,
			"form": 1,
			"forms": 1,
			"they": 1,
			"prayer": 1,
			"pale": 1,
			"leaves": 1,
			"ranks": 1,
			"pleasure": 1,
			"beams": 1,
			"song": 2,
			"run": 1,
			"holy": 1,
			"hand": 3,
			"cup": 3,
			"cry": 1,
			"breath": 2,
			"my": 1,
			"fingers": 1,
			"words": 2,
			"tender": 1,
			"beauty": 2,
			"birth": 1,
			"ray": 1,
			"hope": 1,
			"wandering": 1,
			"yellow": 1,
			"name": 3,
			"face": 3,
			"trembling": 2,
			"faith": 3,
			"wit": 1,
			"noble": 1,
			"power": 3,
			"were": 1,
			"sudden": 1,
			"did": 1,
			"was": 4,
			"that": 2,
			"swords": 1,
			"arm": 1,
			"taste": 1,
			"fall": 1,
			"half": 1,
			"music": 3,
			"eye": 8,
			"hands": 1,
			"bright": 1,
			"have": 2,
			"a": 1,
			"so": 1,
			"faces": 1,
			"courage": 1,
			"true": 1,
			"green": 1,
			"spirit": 4,
			"love": 3,
			"own": 1,
			"iron": 1,
			"glance": 2,
			"lives": 2,
			"years": 2,
			"waters": 1,
			"feet": 6,
			"wings": 3,
			"glory": 2,
			"veil": 1,
			"line": 1,
			"awful": 2,
			"dumb": 1,
			"heart": 3,
			"sorrow": 1,
			"and": 3,
			"thunder": 1,
			"dark": 1,
			"last": 2,
			"days": 8,
			"i": 1,
			"thou": 1,
			"presence": 3,
			"mortal": 1,
			"chamber": 1,
			"perfect": 1,
			"arts": 1,
			"work": 2,
			"fields": 1,
			"broad": 2,
			"brow": 3,
			"hearts": 4,
			"from": 1,
			"marble": 1,
			"mind": 1,
			"ancient": 1,
			"breast": 1,
			"no": 3,
			"calm": 1,
			"voice": 1,
			"kingdom": 1,
			"guilty": 1,
			"mighty": 2,
			"with": 1,
			"everlasting": 1,
			"now": 1,
			"shone": 1,
			"flash": 1,
			"all": 1,
			"chief": 1,
			"loving": 1,
			"flesh": 1,
			"thought": 2,
			"through": 1,
			"has": 1,
			"doth": 1,
			"thread": 1,
			"upward": 1,
			"smoke": 1,
			"walked": 1,
			"mercy": 1,
			"loved": 1,
			"before": 1,
			"echo": 1,
			"golden": 1,
			"to": 1,
			"round": 1,
			"flame": 1,
			"answer": 1,
			"rich": 1,
			"use": 2,
			"homes": 1,
			"glorious": 3,
			"wounds": 1,
			"flow": 2,
			"sweep": 1,
			"sign": 1,
			"we": 2,
			"loss": 3,
			"as": 1,
			"life": 5,
			"he": 1,
			"strength": 1,
			"at": 1,
			"seat": 1,
			"streams": 1,
			"the": 15,
			"treasure": 1,
			"young": 1,
			"tread": 1,
			"first": 1,
			"in": 1,
			"harmony": 1,
			"seem": 1
		},
		"falling": {
			"amidst": 1,
			"fell": 1,
			"beam": 1,
			"of": 2,
			"star": 2,
			"thick": 1,
			"over": 1,
			"like": 1,
			"they": 1,
			"afar": 1,
			"leaves": 1,
			"drops": 1,
			"sadly": 1,
			"rain": 2,
			"that": 1,
			"man": 1,
			"leaf": 2,
			"tear": 2,
			"tears": 1,
			"upon": 1,
			"on": 1,
			"fast": 1,
			"out": 1,
			"sun": 1,
			"down": 1,
			"state": 1,
			"with": 3,
			"to": 2,
			"into": 1,
			"gloom": 1,
			"below": 1,
			"chain": 1,
			"the": 1,
			"there": 1,
			"in": 1
		},
		"as": {
			"sweet": 5,
			"blue": 1,
			"come": 1,
			"low": 2,
			"else": 1,
			"caught": 1,
			"look": 1,
			"summer": 1,
			"taught": 1,
			"since": 1,
			"thine": 9,
			"died": 1,
			"ours": 1,
			"dust": 1,
			"loves": 1,
			"went": 1,
			"wish": 1,
			"free": 2,
			"light": 3,
			"earth": 1,
			"doubt": 1,
			"his": 16,
			"him": 1,
			"midnight": 1,
			"sharp": 1,
			"blood": 1,
			"wi": 1,
			"bare": 1,
			"fit": 1,
			"ages": 1,
			"white": 3,
			"science": 1,
			"none": 2,
			"silver": 1,
			"weary": 1,
			"seemed": 1,
			"are": 12,
			"right": 1,
			"back": 2,
			"warm": 1,
			"under": 1,
			"silent": 1,
			"men": 5,
			"dies": 2,
			"of": 30,
			"this": 5,
			"high": 5,
			"wine": 2,
			"after": 1,
			"once": 1,
			"up": 1,
			"she": 30,
			"sacred": 2,
			"gold": 1,
			"does": 1,
			"morning": 4,
			"thyself": 2,
			"lightning": 2,
			"forth": 1,
			"foam": 1,
			"bird": 1,
			"scorn": 1,
			"dear": 1,
			"fresh": 1,
			"thick": 1,
			"sick": 1,
			"fine": 1,
			"rose": 2,
			"mine": 1,
			"not": 2,
			"today": 1,
			"proud": 1,
			"hes": 1,
			"dry": 1,
			"every": 1,
			"it": 42,
			"over": 3,
			"smooth": 1,
			"shows": 1,
			"neither": 1,
			"far": 4,
			"water": 2,
			"send": 1,
			"by": 11,
			"jove": 1,
			"long": 4,
			"breaks": 2,
			"mute": 1,
			"something": 2,
			"cold": 2,
			"is": 10,
			"ships": 2,
			"soon": 5,
			"unto": 4,
			"glass": 1,
			"hard": 1,
			"away": 1,
			"children": 1,
			"good": 2,
			"ever": 10,
			"either": 1,
			"they": 73,
			"speech": 1,
			"easy": 4,
			"wide": 2,
			"you": 27,
			"moves": 1,
			"nature": 1,
			"swept": 1,
			"new": 1,
			"heard": 1,
			"its": 5,
			"slow": 2,
			"swift": 1,
			"song": 1,
			"those": 5,
			"friends": 2,
			"where": 3,
			"gentle": 3,
			"others": 2,
			"used": 1,
			"rolled": 1,
			"lovers": 1,
			"press": 1,
			"for": 13,
			"burns": 1,
			"past": 1,
			"heaven": 5,
			"frost": 1,
			"cannot": 1,
			"breath": 3,
			"fixed": 1,
			"my": 14,
			"blow": 1,
			"heroes": 1,
			"twilight": 1,
			"winds": 1,
			"great": 3,
			"tender": 1,
			"short": 2,
			"shines": 2,
			"forgot": 1,
			"freedom": 1,
			"thy": 14,
			"sing": 1,
			"smiles": 1,
			"vain": 1,
			"pray": 1,
			"comes": 5,
			"mary": 1,
			"soul": 2,
			"hope": 1,
			"seek": 1,
			"garden": 1,
			"makes": 1,
			"any": 4,
			"sir": 2,
			"wandering": 2,
			"evening": 1,
			"friend": 1,
			"bells": 1,
			"dew": 2,
			"rain": 1,
			"god": 10,
			"can": 3,
			"wit": 1,
			"oer": 3,
			"trumpet": 1,
			"did": 2,
			"was": 3,
			"that": 11,
			"if": 70,
			"let": 1,
			"womans": 1,
			"drop": 1,
			"man": 5,
			"bear": 1,
			"poems": 2,
			"fain": 1,
			"full": 3,
			"make": 2,
			"fall": 2,
			"often": 1,
			"gives": 1,
			"must": 1,
			"climb": 1,
			"pure": 3,
			"beautiful": 1,
			"an": 6,
			"stone": 1,
			"stars": 2,
			"even": 1,
			"or": 5,
			"eye": 1,
			"moved": 1,
			"bright": 4,
			"winter": 2,
			"their": 6,
			"a": 99,
			"so": 2,
			"heat": 1,
			"given": 1,
			"falls": 1,
			"sometimes": 1,
			"joys": 1,
			"true": 5,
			"things": 2,
			"never": 4,
			"many": 3,
			"walk": 1,
			"love": 3,
			"on": 10,
			"saw": 1,
			"quite": 1,
			"above": 1,
			"fast": 4,
			"deep": 3,
			"memory": 1,
			"old": 4,
			"but": 2,
			"grass": 1,
			"death": 9,
			"foes": 1,
			"rushed": 1,
			"poor": 2,
			"perhaps": 1,
			"thee": 1,
			"ye": 4,
			"moving": 1,
			"when": 18,
			"lifes": 1,
			"onward": 2,
			"merry": 1,
			"mans": 1,
			"be": 2,
			"firm": 1,
			"t": 4,
			"having": 1,
			"distant": 1,
			"naught": 1,
			"sweetly": 1,
			"heart": 1,
			"sorrow": 1,
			"paradise": 1,
			"and": 14,
			"eer": 5,
			"do": 4,
			"dark": 1,
			"quick": 1,
			"lone": 1,
			"sunshine": 2,
			"lovely": 1,
			"black": 2,
			"dream": 2,
			"fate": 1,
			"year": 2,
			"i": 70,
			"snow": 3,
			"thou": 25,
			"woman": 1,
			"down": 6,
			"told": 3,
			"sunny": 1,
			"home": 1,
			"dull": 1,
			"here": 2,
			"too": 3,
			"raised": 1,
			"steel": 1,
			"fought": 1,
			"mortal": 1,
			"one": 27,
			"draw": 2,
			"perfect": 2,
			"work": 1,
			"pearl": 1,
			"forest": 1,
			"looks": 1,
			"each": 2,
			"help": 1,
			"other": 1,
			"from": 14,
			"sleeping": 1,
			"would": 1,
			"living": 1,
			"feeling": 1,
			"ill": 1,
			"want": 1,
			"ancient": 1,
			"these": 12,
			"breast": 1,
			"honor": 1,
			"no": 2,
			"maidens": 2,
			"mighty": 2,
			"with": 14,
			"sad": 3,
			"wave": 1,
			"now": 3,
			"set": 1,
			"some": 10,
			"till": 1,
			"hair": 1,
			"will": 2,
			"strong": 2,
			"twenty": 3,
			"lying": 1,
			"all": 8,
			"gay": 1,
			"gods": 5,
			"wild": 2,
			"comrades": 1,
			"then": 4,
			"flesh": 2,
			"large": 2,
			"blest": 1,
			"thought": 2,
			"through": 3,
			"has": 1,
			"songs": 1,
			"angels": 5,
			"well": 16,
			"spoke": 1,
			"doth": 1,
			"clear": 1,
			"king": 1,
			"shine": 1,
			"mount": 1,
			"master": 1,
			"much": 11,
			"turned": 1,
			"our": 6,
			"wrong": 1,
			"day": 2,
			"feel": 1,
			"neer": 1,
			"night": 6,
			"ends": 1,
			"mercy": 1,
			"before": 6,
			"only": 2,
			"still": 2,
			"chance": 2,
			"your": 2,
			"natures": 1,
			"yet": 4,
			"best": 2,
			"to": 34,
			"loud": 1,
			"poetry": 3,
			"clouds": 1,
			"human": 4,
			"poets": 1,
			"springs": 1,
			"round": 1,
			"mid": 1,
			"little": 4,
			"mankind": 1,
			"rich": 2,
			"live": 2,
			"use": 1,
			"gently": 2,
			"turning": 1,
			"know": 1,
			"may": 3,
			"sign": 1,
			"we": 41,
			"whose": 1,
			"as": 25,
			"throng": 1,
			"fair": 5,
			"english": 1,
			"happy": 1,
			"life": 6,
			"he": 69,
			"at": 5,
			"deer": 1,
			"below": 1,
			"o": 2,
			"streams": 2,
			"common": 1,
			"the": 250,
			"tis": 1,
			"waste": 1,
			"though": 21,
			"theyre": 2,
			"sure": 3,
			"her": 7,
			"leads": 1,
			"dead": 1,
			"tread": 1,
			"fire": 1,
			"first": 1,
			"seas": 2,
			"oft": 3,
			"in": 54,
			"flowers": 2,
			"air": 4,
			"saith": 1,
			"grows": 2
		},
		"throng": {
			"his": 1,
			"beside": 1,
			"who": 1,
			"of": 2,
			"it": 1,
			"they": 2,
			"because": 1,
			"that": 1,
			"hang": 1,
			"their": 1,
			"a": 1,
			"but": 3,
			"ye": 1,
			"when": 1,
			"and": 2,
			"with": 1,
			"o": 1,
			"the": 4,
			"in": 1
		},
		"array": {
			"of": 4,
			"why": 1,
			"slow": 1,
			"for": 1,
			"their": 1,
			"so": 1,
			"maryland": 1,
			"but": 1,
			"and": 1,
			"from": 1,
			"no": 1,
			"with": 1,
			"now": 1,
			"gods": 1,
			"he": 1,
			"me": 1,
			"the": 1,
			"stood": 1,
			"there": 1,
			"in": 1
		},
		"fair": {
			"come": 1,
			"jean": 1,
			"look": 1,
			"earth": 1,
			"st": 1,
			"cheek": 1,
			"women": 1,
			"fit": 1,
			"white": 1,
			"rule": 1,
			"science": 2,
			"are": 3,
			"ive": 1,
			"which": 2,
			"greece": 1,
			"ones": 2,
			"of": 6,
			"star": 1,
			"hills": 1,
			"daughter": 1,
			"she": 3,
			"beyond": 2,
			"anonymous": 1,
			"nor": 1,
			"grew": 1,
			"fruit": 2,
			"it": 1,
			"over": 1,
			"maiden": 1,
			"by": 4,
			"alone": 1,
			"land": 2,
			"is": 1,
			"return": 1,
			"boy": 1,
			"form": 1,
			"gift": 1,
			"forms": 3,
			"ocean": 1,
			"they": 2,
			"grain": 1,
			"faint": 1,
			"nature": 1,
			"thus": 1,
			"pale": 2,
			"its": 1,
			"than": 4,
			"where": 3,
			"richard": 1,
			"for": 4,
			"hand": 1,
			"heaven": 1,
			"take": 1,
			"boys": 1,
			"my": 1,
			"words": 1,
			"came": 1,
			"beauty": 1,
			"thy": 2,
			"peace": 1,
			"ere": 1,
			"hope": 1,
			"queen": 1,
			"faith": 1,
			"power": 1,
			"were": 1,
			"was": 1,
			"that": 3,
			"daily": 1,
			"leaf": 1,
			"what": 3,
			"moon": 1,
			"stars": 1,
			"or": 1,
			"have": 1,
			"tree": 1,
			"their": 1,
			"a": 7,
			"so": 2,
			"love": 1,
			"above": 2,
			"but": 5,
			"thee": 1,
			"when": 2,
			"gone": 1,
			"raise": 1,
			"be": 1,
			"glory": 1,
			"head": 1,
			"and": 27,
			"grace": 1,
			"sun": 1,
			"truth": 1,
			"i": 10,
			"thou": 2,
			"here": 1,
			"presence": 1,
			"one": 1,
			"might": 1,
			"stands": 1,
			"fields": 1,
			"whereer": 1,
			"brow": 1,
			"how": 1,
			"from": 3,
			"gifts": 1,
			"would": 1,
			"maid": 1,
			"while": 2,
			"with": 2,
			"some": 1,
			"hair": 1,
			"then": 2,
			"page": 1,
			"fallen": 1,
			"shall": 1,
			"before": 2,
			"your": 1,
			"best": 1,
			"course": 1,
			"to": 9,
			"art": 1,
			"ah": 2,
			"ship": 1,
			"skies": 1,
			"we": 2,
			"whose": 1,
			"as": 12,
			"array": 1,
			"fair": 2,
			"he": 1,
			"son": 1,
			"at": 1,
			"seat": 2,
			"o": 2,
			"the": 16,
			"world": 1,
			"stood": 1,
			"young": 10,
			"been": 1,
			"in": 8,
			"flowers": 1,
			"saith": 1
		},
		"charles": {
			"come": 1,
			"footnote": 1,
			"tennyson": 1,
			"ii": 3,
			"who": 1,
			"of": 2,
			"not": 1,
			"it": 1,
			"something": 1,
			"they": 1,
			"robert": 1,
			"heaven": 1,
			"my": 1,
			"francis": 1,
			"that": 1,
			"what": 1,
			"and": 6,
			"from": 1,
			"soggarth": 1,
			"king": 1,
			"to": 1,
			"o": 1,
			"coming": 1,
			"the": 8
		},
		"borne": {
			"us": 2,
			"him": 2,
			"up": 1,
			"fruit": 1,
			"by": 1,
			"unto": 1,
			"where": 2,
			"comes": 1,
			"a": 2,
			"so": 1,
			"upon": 1,
			"many": 1,
			"on": 2,
			"thee": 1,
			"out": 1,
			"and": 2,
			"i": 1,
			"down": 1,
			"one": 1,
			"such": 1,
			"from": 1,
			"with": 1,
			"through": 1,
			"before": 1,
			"to": 1,
			"the": 1,
			"her": 1,
			"seem": 1
		},
		"heavens": {
			"sweet": 1,
			"look": 2,
			"itself": 1,
			"gates": 1,
			"light": 1,
			"space": 1,
			"are": 4,
			"next": 1,
			"sweetest": 2,
			"gate": 2,
			"which": 1,
			"of": 1,
			"this": 1,
			"star": 1,
			"high": 7,
			"command": 1,
			"gold": 1,
			"morning": 1,
			"sight": 1,
			"race": 1,
			"serene": 1,
			"began": 1,
			"far": 1,
			"lights": 1,
			"by": 1,
			"long": 1,
			"new": 1,
			"crown": 2,
			"hand": 1,
			"cup": 1,
			"breath": 2,
			"themselves": 2,
			"thy": 2,
			"queen": 1,
			"can": 1,
			"that": 1,
			"man": 1,
			"had": 1,
			"bright": 3,
			"have": 1,
			"fill": 2,
			"a": 2,
			"own": 3,
			"above": 3,
			"deep": 1,
			"eternal": 2,
			"distant": 1,
			"and": 4,
			"last": 3,
			"such": 1,
			"from": 1,
			"no": 1,
			"mighty": 1,
			"with": 1,
			"through": 1,
			"laugh": 1,
			"king": 1,
			"hall": 1,
			"before": 1,
			"wind": 1,
			"to": 1,
			"we": 1,
			"o": 1,
			"the": 2,
			"safe": 1,
			"first": 2,
			"in": 2
		},
		"stand": {
			"within": 1,
			"his": 2,
			"none": 1,
			"back": 1,
			"men": 1,
			"this": 1,
			"high": 1,
			"amid": 1,
			"up": 4,
			"she": 1,
			"nor": 1,
			"dear": 1,
			"it": 1,
			"smooth": 1,
			"by": 4,
			"alone": 1,
			"like": 5,
			"ever": 7,
			"they": 2,
			"without": 1,
			"its": 1,
			"than": 1,
			"those": 1,
			"where": 1,
			"for": 1,
			"fixed": 1,
			"thy": 2,
			"ere": 1,
			"face": 1,
			"noble": 1,
			"half": 1,
			"what": 1,
			"or": 4,
			"their": 1,
			"a": 3,
			"upon": 3,
			"on": 2,
			"fast": 2,
			"but": 1,
			"firm": 1,
			"close": 2,
			"and": 8,
			"thou": 1,
			"between": 1,
			"such": 1,
			"from": 1,
			"while": 1,
			"with": 2,
			"foreign": 1,
			"desolate": 1,
			"behind": 1,
			"open": 1,
			"equal": 1,
			"shall": 1,
			"before": 4,
			"still": 1,
			"to": 7,
			"round": 1,
			"as": 1,
			"fair": 1,
			"stand": 1,
			"he": 1,
			"at": 3,
			"o": 1,
			"the": 8,
			"sure": 1,
			"in": 10
		},
		"english": {
			"bow": 1,
			"wife": 1,
			"laws": 1,
			"struck": 1,
			"blood": 2,
			"who": 1,
			"of": 2,
			"slaves": 1,
			"host": 1,
			"land": 1,
			"they": 1,
			"ranks": 1,
			"words": 1,
			"earl": 1,
			"that": 1,
			"cried": 1,
			"must": 1,
			"horse": 1,
			"so": 1,
			"on": 1,
			"but": 1,
			"line": 2,
			"verse": 2,
			"and": 5,
			"tale": 1,
			"fields": 1,
			"hearts": 1,
			"from": 1,
			"beat": 1,
			"with": 3,
			"now": 1,
			"all": 1,
			"wild": 1,
			"then": 1,
			"minds": 1,
			"sense": 1,
			"poetry": 1,
			"poets": 1,
			"whose": 1,
			"as": 1,
			"said": 1,
			"he": 1,
			"the": 2,
			"bent": 1,
			"dead": 1,
			"soldier": 1,
			"in": 2,
			"air": 1
		},
		"happy": {
			"walks": 1,
			"lot": 1,
			"thousand": 1,
			"s": 1,
			"are": 3,
			"who": 1,
			"ones": 1,
			"of": 3,
			"brook": 2,
			"spot": 1,
			"lines": 1,
			"news": 1,
			"hours": 1,
			"every": 1,
			"maiden": 1,
			"land": 2,
			"is": 2,
			"boy": 1,
			"children": 1,
			"they": 2,
			"than": 2,
			"friends": 1,
			"where": 1,
			"clime": 1,
			"should": 2,
			"autumn": 1,
			"hour": 2,
			"winds": 1,
			"morn": 1,
			"sleep": 1,
			"birth": 1,
			"shore": 1,
			"ground": 2,
			"soul": 3,
			"bells": 1,
			"name": 2,
			"dew": 1,
			"were": 1,
			"was": 2,
			"that": 3,
			"creatures": 1,
			"stars": 1,
			"field": 1,
			"tears": 1,
			"spirit": 1,
			"above": 1,
			"but": 1,
			"time": 1,
			"years": 1,
			"mans": 1,
			"head": 1,
			"and": 2,
			"days": 5,
			"i": 3,
			"thou": 1,
			"home": 4,
			"island": 1,
			"one": 1,
			"state": 3,
			"work": 1,
			"fields": 1,
			"would": 1,
			"voice": 1,
			"with": 1,
			"now": 2,
			"realm": 1,
			"will": 1,
			"all": 2,
			"blest": 1,
			"could": 2,
			"day": 4,
			"chance": 1,
			"yet": 1,
			"way": 1,
			"to": 1,
			"heavenly": 1,
			"art": 1,
			"may": 1,
			"skies": 2,
			"as": 12,
			"happy": 1,
			"life": 2,
			"he": 5,
			"slumber": 1,
			"seat": 1,
			"the": 7,
			"dead": 2,
			"in": 4
		},
		"done": {
			"flower": 1,
			"us": 1,
			"more": 1,
			"his": 3,
			"who": 2,
			"men": 1,
			"of": 2,
			"this": 2,
			"two": 1,
			"mine": 1,
			"not": 1,
			"it": 3,
			"by": 4,
			"is": 1,
			"forever": 2,
			"they": 2,
			"mother": 1,
			"without": 1,
			"its": 1,
			"for": 5,
			"my": 5,
			"count": 1,
			"comes": 1,
			"ere": 1,
			"william": 1,
			"can": 1,
			"that": 3,
			"if": 2,
			"full": 1,
			"what": 3,
			"oh": 1,
			"or": 1,
			"think": 1,
			"a": 3,
			"but": 8,
			"ye": 1,
			"when": 2,
			"gone": 1,
			"and": 16,
			"i": 3,
			"thou": 1,
			"down": 1,
			"home": 1,
			"such": 1,
			"how": 1,
			"no": 2,
			"with": 2,
			"now": 1,
			"some": 1,
			"all": 2,
			"grief": 1,
			"then": 1,
			"thats": 1,
			"well": 1,
			"stay": 1,
			"before": 1,
			"only": 2,
			"to": 2,
			"hence": 1,
			"ah": 1,
			"we": 3,
			"as": 6,
			"he": 3,
			"at": 1,
			"o": 3,
			"the": 9,
			"tis": 1,
			"her": 1,
			"there": 1,
			"in": 5
		},
		"said": {
			"hear": 1,
			"blessd": 1,
			"within": 1,
			"im": 3,
			"his": 2,
			"alas": 1,
			"ive": 1,
			"who": 2,
			"of": 3,
			"this": 4,
			"up": 2,
			"she": 5,
			"not": 1,
			"it": 5,
			"twas": 1,
			"spirits": 1,
			"by": 2,
			"cold": 1,
			"is": 2,
			"lo": 1,
			"good": 2,
			"ever": 1,
			"they": 3,
			"you": 2,
			"nay": 1,
			"its": 4,
			"just": 2,
			"for": 11,
			"boys": 1,
			"my": 3,
			"whats": 1,
			"again": 1,
			"earl": 1,
			"peace": 1,
			"god": 3,
			"cause": 1,
			"was": 1,
			"that": 10,
			"if": 1,
			"let": 2,
			"what": 5,
			"oh": 1,
			"or": 1,
			"am": 1,
			"bitter": 1,
			"a": 4,
			"adieu": 1,
			"on": 1,
			"old": 2,
			"filled": 1,
			"but": 5,
			"poor": 3,
			"ye": 1,
			"when": 3,
			"be": 1,
			"t": 1,
			"out": 1,
			"and": 10,
			"do": 1,
			"last": 1,
			"i": 22,
			"one": 1,
			"across": 1,
			"these": 1,
			"while": 1,
			"no": 2,
			"with": 2,
			"now": 1,
			"till": 1,
			"all": 2,
			"our": 1,
			"open": 1,
			"before": 2,
			"to": 10,
			"into": 1,
			"thinking": 1,
			"little": 1,
			"art": 1,
			"we": 2,
			"as": 3,
			"said": 1,
			"he": 15,
			"at": 1,
			"led": 1,
			"o": 3,
			"the": 17,
			"though": 1,
			"near": 1,
			"there": 1,
			"in": 5
		},
		"life": {
			"sweet": 1,
			"come": 2,
			"look": 1,
			"itself": 1,
			"more": 1,
			"murmur": 1,
			"within": 1,
			"forget": 1,
			"his": 2,
			"him": 1,
			"begin": 1,
			"tell": 1,
			"seemed": 1,
			"are": 3,
			"beside": 1,
			"six": 1,
			"alas": 1,
			"made": 1,
			"ive": 1,
			"who": 2,
			"which": 1,
			"holds": 1,
			"worth": 2,
			"of": 30,
			"this": 1,
			"high": 1,
			"kept": 1,
			"up": 2,
			"food": 1,
			"she": 2,
			"shakespeare": 1,
			"beyond": 1,
			"nor": 3,
			"does": 1,
			"cling": 1,
			"goes": 1,
			"dear": 1,
			"pain": 1,
			"not": 2,
			"put": 2,
			"it": 5,
			"began": 2,
			"far": 1,
			"by": 2,
			"long": 1,
			"is": 66,
			"rise": 1,
			"like": 5,
			"away": 1,
			"forever": 1,
			"lead": 1,
			"hark": 1,
			"they": 6,
			"you": 1,
			"moves": 1,
			"without": 2,
			"its": 7,
			"than": 4,
			"pleasure": 1,
			"those": 2,
			"where": 4,
			"for": 19,
			"become": 1,
			"cry": 1,
			"my": 6,
			"again": 4,
			"earl": 1,
			"enough": 1,
			"thy": 2,
			"comes": 1,
			"better": 2,
			"born": 1,
			"longer": 1,
			"william": 2,
			"sin": 1,
			"god": 1,
			"can": 2,
			"were": 5,
			"immortal": 1,
			"indeed": 1,
			"did": 1,
			"was": 13,
			"that": 14,
			"let": 1,
			"man": 1,
			"poems": 1,
			"jerusalem": 1,
			"had": 2,
			"gives": 1,
			"what": 3,
			"beautiful": 1,
			"an": 1,
			"or": 6,
			"have": 1,
			"their": 1,
			"a": 10,
			"so": 5,
			"brings": 1,
			"upon": 3,
			"lay": 1,
			"hath": 3,
			"love": 3,
			"quite": 1,
			"above": 1,
			"deep": 1,
			"old": 1,
			"but": 6,
			"knowledge": 1,
			"ye": 1,
			"lives": 1,
			"when": 3,
			"eternal": 1,
			"religious": 1,
			"be": 6,
			"t": 1,
			"line": 1,
			"out": 1,
			"tried": 1,
			"and": 55,
			"truth": 1,
			"do": 2,
			"last": 1,
			"fate": 1,
			"i": 7,
			"thou": 4,
			"too": 1,
			"one": 2,
			"between": 1,
			"such": 1,
			"how": 5,
			"from": 10,
			"would": 2,
			"sublime": 1,
			"beneath": 1,
			"no": 2,
			"roll": 1,
			"with": 12,
			"virtue": 1,
			"now": 1,
			"set": 1,
			"some": 1,
			"all": 4,
			"then": 3,
			"blest": 1,
			"could": 1,
			"through": 3,
			"has": 1,
			"doth": 2,
			"king": 1,
			"begun": 2,
			"behind": 1,
			"shall": 7,
			"wind": 1,
			"still": 1,
			"your": 1,
			"way": 1,
			"to": 22,
			"into": 5,
			"round": 1,
			"written": 1,
			"know": 1,
			"may": 7,
			"we": 4,
			"whose": 1,
			"as": 2,
			"fair": 1,
			"life": 2,
			"he": 3,
			"at": 3,
			"lies": 2,
			"o": 13,
			"the": 25,
			"though": 1,
			"been": 1,
			"near": 1,
			"there": 2,
			"in": 17
		},
		"french": {
			"went": 1,
			"of": 10,
			"host": 1,
			"they": 1,
			"you": 1,
			"general": 1,
			"a": 1,
			"them": 1,
			"and": 1,
			"rush": 1,
			"lilies": 1,
			"with": 1,
			"to": 1,
			"the": 2
		},
		"noon": {
			"of": 4,
			"beheld": 1,
			"by": 1,
			"long": 1,
			"is": 2,
			"looked": 1,
			"they": 1,
			"its": 1,
			"just": 1,
			"drops": 1,
			"sir": 1,
			"when": 1,
			"and": 4,
			"drew": 1,
			"still": 1,
			"to": 3,
			"he": 2,
			"the": 2,
			"in": 2
		},
		"end": {
			"die": 1,
			"his": 1,
			"james": 1,
			"hast": 1,
			"who": 1,
			"men": 1,
			"of": 13,
			"this": 1,
			"whatever": 1,
			"it": 1,
			"mean": 1,
			"is": 4,
			"unto": 1,
			"like": 1,
			"they": 1,
			"its": 1,
			"where": 1,
			"my": 2,
			"thy": 4,
			"peace": 1,
			"can": 1,
			"sudden": 1,
			"was": 2,
			"that": 2,
			"what": 1,
			"hold": 1,
			"or": 1,
			"their": 1,
			"true": 1,
			"lord": 1,
			"many": 1,
			"on": 1,
			"but": 3,
			"and": 8,
			"i": 2,
			"from": 3,
			"no": 1,
			"with": 2,
			"wave": 1,
			"give": 1,
			"will": 3,
			"all": 1,
			"then": 2,
			"could": 1,
			"has": 1,
			"nights": 1,
			"our": 1,
			"shall": 1,
			"to": 10,
			"may": 1,
			"as": 1,
			"charles": 1,
			"said": 1,
			"at": 1,
			"o": 1,
			"the": 6,
			"sure": 1,
			"her": 1,
			"there": 1,
			"in": 7
		},
		"he": {
			"perchance": 1,
			"come": 4,
			"caught": 1,
			"fled": 3,
			"dying": 1,
			"look": 2,
			"sighs": 2,
			"us": 2,
			"more": 1,
			"hear": 2,
			"sent": 2,
			"taught": 3,
			"wrought": 2,
			"walks": 7,
			"died": 14,
			"within": 1,
			"loves": 5,
			"went": 9,
			"touched": 2,
			"die": 2,
			"cloud": 1,
			"his": 33,
			"james": 1,
			"hell": 1,
			"him": 4,
			"crossed": 1,
			"see": 1,
			"fit": 1,
			"none": 1,
			"tell": 1,
			"seemed": 7,
			"fears": 1,
			"beside": 2,
			"six": 2,
			"back": 1,
			"made": 7,
			"fell": 9,
			"under": 2,
			"who": 46,
			"holds": 3,
			"dies": 3,
			"call": 1,
			"steps": 1,
			"sounds": 1,
			"of": 6,
			"this": 3,
			"cast": 2,
			"high": 1,
			"amid": 1,
			"alike": 1,
			"calls": 2,
			"pour": 1,
			"hung": 1,
			"kept": 5,
			"after": 1,
			"once": 3,
			"feels": 4,
			"up": 7,
			"off": 3,
			"she": 1,
			"among": 2,
			"nor": 1,
			"find": 2,
			"does": 2,
			"grown": 1,
			"forth": 2,
			"beheld": 1,
			"goes": 8,
			"rose": 6,
			"mine": 1,
			"sings": 5,
			"not": 15,
			"put": 4,
			"today": 1,
			"every": 1,
			"it": 8,
			"began": 2,
			"shows": 2,
			"hangs": 1,
			"brought": 1,
			"by": 7,
			"bade": 3,
			"alone": 6,
			"long": 1,
			"breaks": 1,
			"kissed": 3,
			"land": 1,
			"wise": 1,
			"is": 62,
			"soon": 1,
			"looked": 13,
			"like": 6,
			"takes": 3,
			"farewell": 1,
			"away": 2,
			"found": 1,
			"good": 2,
			"pleased": 1,
			"ever": 4,
			"shook": 2,
			"prayer": 1,
			"gazed": 2,
			"wide": 1,
			"mother": 1,
			"thus": 5,
			"swept": 1,
			"seven": 1,
			"heard": 9,
			"leaves": 1,
			"laid": 3,
			"swift": 1,
			"kindly": 2,
			"een": 1,
			"those": 1,
			"where": 1,
			"used": 3,
			"for": 12,
			"read": 2,
			"heaven": 1,
			"lost": 1,
			"should": 12,
			"bowed": 4,
			"sang": 7,
			"cannot": 11,
			"boys": 1,
			"fixed": 1,
			"rest": 1,
			"my": 4,
			"whats": 1,
			"bore": 4,
			"came": 13,
			"winds": 1,
			"again": 2,
			"earl": 2,
			"shines": 1,
			"thy": 4,
			"smiles": 1,
			"comes": 11,
			"wept": 1,
			"ere": 1,
			"hopes": 3,
			"whom": 2,
			"better": 1,
			"sadly": 4,
			"flung": 2,
			"cheer": 1,
			"makes": 6,
			"most": 1,
			"sir": 1,
			"held": 5,
			"stretched": 1,
			"sits": 4,
			"along": 1,
			"face": 1,
			"closed": 2,
			"can": 10,
			"were": 3,
			"bears": 2,
			"oer": 3,
			"need": 2,
			"indeed": 1,
			"did": 17,
			"was": 59,
			"that": 44,
			"let": 3,
			"says": 9,
			"always": 1,
			"spake": 4,
			"cried": 10,
			"reign": 1,
			"rode": 8,
			"had": 33,
			"gives": 4,
			"must": 8,
			"what": 4,
			"an": 2,
			"or": 4,
			"ran": 1,
			"de": 2,
			"finds": 3,
			"have": 1,
			"gave": 13,
			"trod": 2,
			"their": 2,
			"a": 11,
			"so": 3,
			"faces": 1,
			"brings": 3,
			"falls": 4,
			"them": 11,
			"flies": 4,
			"upon": 1,
			"lay": 8,
			"lord": 1,
			"never": 9,
			"ceased": 1,
			"hath": 15,
			"met": 2,
			"love": 1,
			"on": 13,
			"saw": 9,
			"quite": 1,
			"sees": 12,
			"above": 1,
			"filled": 1,
			"but": 11,
			"rushed": 2,
			"buried": 1,
			"thee": 3,
			"lives": 4,
			"when": 3,
			"gone": 2,
			"turns": 3,
			"thank": 1,
			"dreams": 2,
			"felt": 3,
			"knows": 10,
			"be": 10,
			"out": 2,
			"kind": 1,
			"watched": 1,
			"tried": 1,
			"naught": 1,
			"sweetly": 1,
			"heart": 1,
			"say": 3,
			"and": 32,
			"sun": 1,
			"do": 2,
			"cries": 3,
			"i": 17,
			"knew": 11,
			"down": 3,
			"told": 4,
			"bids": 1,
			"pay": 1,
			"broke": 1,
			"too": 1,
			"raised": 2,
			"fought": 5,
			"one": 1,
			"might": 11,
			"between": 1,
			"breathes": 1,
			"against": 1,
			"stands": 9,
			"looks": 5,
			"anothers": 1,
			"how": 2,
			"hearts": 1,
			"other": 1,
			"from": 9,
			"gifts": 1,
			"sought": 3,
			"would": 24,
			"beat": 1,
			"while": 1,
			"no": 7,
			"mystic": 1,
			"bound": 1,
			"early": 1,
			"took": 9,
			"calm": 1,
			"called": 2,
			"with": 10,
			"drew": 4,
			"now": 4,
			"set": 2,
			"some": 1,
			"till": 1,
			"meet": 1,
			"will": 27,
			"himself": 6,
			"wore": 1,
			"all": 6,
			"wild": 1,
			"then": 4,
			"slain": 1,
			"thought": 8,
			"could": 21,
			"through": 2,
			"has": 31,
			"thats": 4,
			"well": 1,
			"spoke": 7,
			"doth": 2,
			"much": 1,
			"turned": 8,
			"behind": 1,
			"nearer": 1,
			"our": 4,
			"walked": 2,
			"sleeps": 5,
			"neer": 3,
			"fear": 1,
			"needs": 2,
			"loved": 10,
			"shall": 23,
			"before": 2,
			"only": 4,
			"still": 5,
			"yet": 7,
			"mark": 1,
			"to": 39,
			"wandered": 1,
			"into": 1,
			"round": 1,
			"turn": 1,
			"slowly": 1,
			"gently": 1,
			"get": 1,
			"lived": 4,
			"may": 18,
			"th": 1,
			"sweep": 1,
			"smiled": 8,
			"we": 2,
			"glad": 1,
			"whose": 6,
			"as": 6,
			"said": 33,
			"he": 12,
			"me": 8,
			"sat": 8,
			"at": 5,
			"below": 1,
			"lies": 7,
			"wound": 1,
			"led": 3,
			"o": 2,
			"left": 5,
			"the": 72,
			"tis": 1,
			"though": 1,
			"fight": 1,
			"sure": 1,
			"bent": 1,
			"stood": 11,
			"seems": 3,
			"her": 5,
			"passed": 11,
			"been": 1,
			"dead": 1,
			"first": 3,
			"there": 2,
			"in": 20,
			"shed": 1,
			"saith": 1
		},
		"arms": {
			"us": 1,
			"ready": 1,
			"are": 1,
			"amidst": 1,
			"who": 1,
			"men": 1,
			"which": 1,
			"of": 3,
			"hung": 1,
			"she": 1,
			"nor": 1,
			"not": 1,
			"pride": 1,
			"is": 1,
			"although": 1,
			"like": 1,
			"away": 1,
			"they": 3,
			"wide": 1,
			"take": 1,
			"my": 1,
			"whats": 1,
			"again": 1,
			"along": 1,
			"were": 2,
			"that": 3,
			"let": 1,
			"cried": 1,
			"must": 1,
			"their": 1,
			"a": 2,
			"them": 1,
			"true": 1,
			"on": 1,
			"but": 2,
			"ye": 4,
			"be": 1,
			"and": 23,
			"i": 4,
			"against": 1,
			"from": 2,
			"ill": 1,
			"with": 3,
			"singing": 1,
			"soft": 1,
			"some": 1,
			"lying": 1,
			"all": 1,
			"then": 1,
			"ho": 1,
			"through": 1,
			"behind": 1,
			"to": 17,
			"cut": 1,
			"round": 1,
			"whose": 1,
			"as": 1,
			"he": 1,
			"o": 1,
			"the": 8,
			"her": 1,
			"young": 1,
			"in": 5,
			"forgive": 1
		},
		"me": {
			"sweet": 4,
			"perchance": 1,
			"come": 4,
			"sound": 1,
			"low": 1,
			"jean": 1,
			"fled": 1,
			"more": 5,
			"hear": 2,
			"wrought": 1,
			"free": 2,
			"doubt": 1,
			"pine": 1,
			"die": 1,
			"his": 4,
			"appear": 1,
			"james": 1,
			"mad": 1,
			"endure": 1,
			"him": 2,
			"see": 1,
			"play": 2,
			"lady": 2,
			"kiss": 2,
			"white": 1,
			"rule": 1,
			"none": 1,
			"woe": 1,
			"tell": 1,
			"weary": 1,
			"dance": 1,
			"are": 4,
			"right": 1,
			"back": 6,
			"warm": 1,
			"made": 3,
			"next": 1,
			"who": 7,
			"beam": 1,
			"hide": 7,
			"call": 1,
			"of": 13,
			"this": 7,
			"blind": 1,
			"high": 2,
			"keep": 1,
			"alike": 1,
			"once": 6,
			"up": 4,
			"food": 1,
			"she": 7,
			"among": 1,
			"anonymous": 3,
			"nor": 4,
			"three": 4,
			"does": 1,
			"joy": 1,
			"forth": 2,
			"dear": 2,
			"mourn": 1,
			"lift": 1,
			"pass": 1,
			"chant": 1,
			"sick": 1,
			"aught": 1,
			"mine": 1,
			"behold": 1,
			"not": 17,
			"side": 1,
			"dry": 1,
			"every": 1,
			"it": 8,
			"over": 1,
			"far": 2,
			"mean": 1,
			"lights": 1,
			"weep": 1,
			"by": 12,
			"try": 1,
			"eyes": 1,
			"alone": 2,
			"long": 1,
			"something": 1,
			"cold": 1,
			"wise": 2,
			"is": 15,
			"soon": 1,
			"rise": 2,
			"although": 1,
			"like": 7,
			"return": 1,
			"away": 1,
			"why": 2,
			"sung": 1,
			"douglas": 2,
			"good": 3,
			"together": 1,
			"about": 1,
			"they": 7,
			"easy": 1,
			"wide": 1,
			"you": 10,
			"mother": 1,
			"new": 1,
			"nay": 2,
			"without": 1,
			"robert": 3,
			"its": 3,
			"than": 4,
			"smile": 1,
			"swift": 1,
			"friends": 1,
			"where": 7,
			"yea": 1,
			"welcome": 1,
			"for": 26,
			"past": 3,
			"read": 1,
			"cry": 1,
			"surprise": 1,
			"darling": 1,
			"theres": 1,
			"speak": 1,
			"tomorrow": 1,
			"didst": 1,
			"rest": 3,
			"my": 32,
			"words": 1,
			"great": 2,
			"john": 2,
			"sighing": 1,
			"beauty": 1,
			"again": 2,
			"thy": 18,
			"sing": 2,
			"yes": 2,
			"smiles": 1,
			"vain": 1,
			"pray": 1,
			"ere": 2,
			"tonight": 1,
			"birth": 2,
			"mary": 3,
			"dearest": 2,
			"therefore": 1,
			"soul": 1,
			"hope": 2,
			"remember": 1,
			"cease": 1,
			"any": 1,
			"most": 2,
			"sir": 2,
			"queen": 1,
			"william": 2,
			"face": 1,
			"god": 2,
			"power": 1,
			"were": 3,
			"comfort": 1,
			"oer": 3,
			"immortal": 1,
			"did": 1,
			"was": 2,
			"that": 25,
			"if": 6,
			"willie": 4,
			"let": 8,
			"lips": 2,
			"drop": 1,
			"cares": 1,
			"bear": 3,
			"both": 1,
			"another": 2,
			"always": 1,
			"taste": 1,
			"full": 1,
			"make": 4,
			"go": 3,
			"cried": 2,
			"trust": 1,
			"had": 1,
			"pure": 1,
			"what": 12,
			"sit": 2,
			"oh": 4,
			"an": 7,
			"front": 1,
			"hold": 1,
			"or": 7,
			"think": 1,
			"have": 3,
			"am": 1,
			"sae": 1,
			"their": 2,
			"a": 29,
			"so": 6,
			"adieu": 1,
			"true": 1,
			"upon": 2,
			"lay": 1,
			"things": 1,
			"lord": 3,
			"never": 4,
			"many": 3,
			"hath": 1,
			"leave": 1,
			"walk": 3,
			"whence": 1,
			"love": 7,
			"on": 13,
			"quite": 1,
			"above": 2,
			"fast": 1,
			"old": 3,
			"naked": 1,
			"but": 23,
			"time": 1,
			"poor": 2,
			"empty": 1,
			"perhaps": 1,
			"thee": 2,
			"ye": 5,
			"when": 29,
			"plain": 1,
			"sigh": 1,
			"dreams": 2,
			"be": 8,
			"ay": 1,
			"weeping": 1,
			"t": 3,
			"glory": 1,
			"out": 5,
			"vere": 1,
			"say": 2,
			"and": 76,
			"truth": 2,
			"do": 1,
			"dark": 1,
			"move": 1,
			"black": 1,
			"fly": 1,
			"i": 42,
			"unknown": 2,
			"thou": 7,
			"down": 9,
			"less": 2,
			"robin": 1,
			"home": 2,
			"dull": 1,
			"here": 13,
			"too": 3,
			"one": 3,
			"between": 1,
			"such": 2,
			"judge": 1,
			"softly": 1,
			"saint": 1,
			"each": 1,
			"henry": 1,
			"how": 9,
			"other": 2,
			"from": 35,
			"join": 1,
			"across": 1,
			"ill": 4,
			"beneath": 1,
			"these": 1,
			"while": 3,
			"no": 7,
			"bound": 1,
			"early": 7,
			"alfred": 1,
			"ears": 1,
			"with": 27,
			"now": 16,
			"give": 1,
			"some": 2,
			"shone": 1,
			"till": 2,
			"will": 1,
			"all": 10,
			"grief": 1,
			"gods": 3,
			"then": 4,
			"could": 1,
			"through": 4,
			"songs": 1,
			"toil": 1,
			"well": 5,
			"doth": 1,
			"clear": 1,
			"dost": 1,
			"behind": 1,
			"wealth": 1,
			"our": 2,
			"wrong": 1,
			"feel": 4,
			"gathered": 1,
			"night": 1,
			"loved": 1,
			"pity": 3,
			"shall": 2,
			"before": 1,
			"only": 2,
			"wind": 1,
			"still": 8,
			"your": 4,
			"yet": 7,
			"best": 1,
			"to": 71,
			"loud": 1,
			"into": 6,
			"round": 4,
			"thinking": 2,
			"lie": 1,
			"little": 1,
			"live": 4,
			"hence": 2,
			"know": 1,
			"art": 1,
			"ah": 1,
			"flow": 1,
			"may": 1,
			"whisper": 1,
			"sign": 1,
			"we": 5,
			"store": 2,
			"whose": 3,
			"as": 21,
			"stand": 1,
			"said": 2,
			"end": 1,
			"he": 9,
			"me": 1,
			"at": 9,
			"straight": 1,
			"seat": 1,
			"lies": 2,
			"wound": 1,
			"o": 15,
			"coming": 1,
			"chain": 1,
			"browning": 1,
			"left": 1,
			"arise": 1,
			"the": 65,
			"tis": 2,
			"though": 8,
			"sure": 1,
			"world": 1,
			"seems": 1,
			"her": 3,
			"passed": 1,
			"young": 1,
			"dead": 5,
			"near": 1,
			"oft": 2,
			"jesus": 1,
			"there": 7,
			"lowly": 1,
			"in": 33,
			"shed": 2,
			"saith": 1
		},
		"sat": {
			"right": 1,
			"of": 2,
			"high": 1,
			"amid": 1,
			"two": 1,
			"side": 2,
			"by": 4,
			"like": 2,
			"sighing": 1,
			"freedom": 1,
			"smiles": 1,
			"oer": 1,
			"another": 1,
			"their": 1,
			"a": 2,
			"upon": 1,
			"on": 7,
			"and": 6,
			"lone": 1,
			"i": 1,
			"down": 1,
			"here": 1,
			"still": 1,
			"to": 1,
			"knee": 1,
			"as": 1,
			"at": 4,
			"the": 7,
			"there": 3,
			"in": 8
		},
		"strength": {
			"sweet": 1,
			"fled": 1,
			"his": 1,
			"save": 1,
			"which": 1,
			"of": 14,
			"nor": 1,
			"grown": 1,
			"it": 2,
			"is": 2,
			"unto": 1,
			"like": 1,
			"hurrah": 1,
			"away": 1,
			"they": 1,
			"thus": 1,
			"despair": 1,
			"for": 1,
			"should": 1,
			"thy": 1,
			"was": 2,
			"that": 1,
			"if": 1,
			"had": 1,
			"gives": 1,
			"what": 1,
			"or": 1,
			"a": 1,
			"but": 3,
			"lifes": 1,
			"out": 1,
			"and": 12,
			"i": 2,
			"such": 1,
			"from": 1,
			"no": 1,
			"single": 1,
			"could": 1,
			"our": 2,
			"shall": 1,
			"your": 1,
			"to": 9,
			"we": 1,
			"as": 1,
			"life": 1,
			"he": 4,
			"the": 2,
			"first": 2,
			"in": 7
		},
		"son": {
			"sweet": 1,
			"come": 1,
			"more": 1,
			"his": 1,
			"ive": 1,
			"who": 2,
			"of": 12,
			"keep": 1,
			"she": 1,
			"by": 1,
			"is": 1,
			"grant": 1,
			"thus": 1,
			"take": 1,
			"my": 2,
			"whom": 2,
			"makes": 1,
			"trembling": 1,
			"were": 1,
			"was": 1,
			"that": 1,
			"go": 1,
			"upon": 1,
			"but": 1,
			"be": 1,
			"and": 8,
			"myself": 1,
			"i": 4,
			"thou": 2,
			"here": 1,
			"from": 1,
			"these": 1,
			"all": 1,
			"much": 1,
			"shall": 2,
			"to": 1,
			"ah": 1,
			"he": 2,
			"me": 1,
			"the": 3,
			"though": 1,
			"stood": 1,
			"in": 1
		},
		"flag": {
			"went": 1,
			"his": 1,
			"who": 1,
			"which": 1,
			"of": 9,
			"she": 1,
			"goes": 1,
			"over": 1,
			"is": 3,
			"takes": 1,
			"they": 1,
			"should": 1,
			"oer": 1,
			"was": 1,
			"that": 2,
			"falls": 1,
			"met": 1,
			"when": 1,
			"and": 2,
			"i": 2,
			"set": 1,
			"through": 1,
			"to": 2,
			"we": 3,
			"whose": 1,
			"the": 4,
			"in": 4
		},
		"gleam": {
			"fell": 1,
			"of": 8,
			"up": 1,
			"over": 1,
			"than": 1,
			"where": 1,
			"upon": 1,
			"on": 1,
			"above": 1,
			"and": 4,
			"with": 2,
			"the": 1,
			"her": 1,
			"in": 3
		},
		"at": {
			"come": 1,
			"sent": 1,
			"thine": 1,
			"earth": 1,
			"his": 38,
			"st": 2,
			"him": 8,
			"midnight": 8,
			"law": 1,
			"play": 3,
			"war": 2,
			"six": 1,
			"right": 1,
			"back": 1,
			"who": 2,
			"men": 1,
			"which": 1,
			"court": 3,
			"call": 1,
			"of": 1,
			"this": 7,
			"cast": 3,
			"high": 1,
			"fame": 1,
			"once": 32,
			"liberty": 1,
			"sez": 1,
			"morning": 3,
			"sight": 1,
			"played": 1,
			"two": 1,
			"pain": 1,
			"aught": 1,
			"hours": 1,
			"englands": 2,
			"every": 12,
			"ease": 2,
			"jim": 3,
			"alone": 1,
			"is": 2,
			"like": 3,
			"lo": 1,
			"idle": 1,
			"why": 1,
			"force": 1,
			"they": 1,
			"seven": 2,
			"its": 9,
			"sc": 2,
			"pleasure": 1,
			"een": 2,
			"those": 2,
			"sea": 3,
			"where": 1,
			"others": 1,
			"church": 2,
			"lovers": 2,
			"holy": 1,
			"for": 2,
			"noise": 1,
			"read": 1,
			"hand": 6,
			"heaven": 1,
			"rest": 16,
			"my": 17,
			"hour": 1,
			"standing": 1,
			"twilight": 2,
			"thy": 13,
			"morn": 7,
			"pray": 1,
			"peace": 5,
			"least": 16,
			"because": 1,
			"any": 2,
			"most": 2,
			"sir": 1,
			"times": 6,
			"evening": 7,
			"name": 1,
			"door": 1,
			"foot": 2,
			"moment": 1,
			"shame": 1,
			"were": 1,
			"waking": 1,
			"sabbath": 1,
			"need": 1,
			"cause": 1,
			"did": 1,
			"was": 2,
			"that": 12,
			"full": 3,
			"desert": 1,
			"had": 1,
			"what": 2,
			"oh": 1,
			"an": 7,
			"even": 2,
			"or": 5,
			"eye": 1,
			"gave": 1,
			"their": 11,
			"a": 25,
			"so": 1,
			"them": 1,
			"upon": 1,
			"many": 1,
			"dawn": 5,
			"on": 5,
			"break": 5,
			"feast": 1,
			"but": 1,
			"death": 1,
			"time": 1,
			"perhaps": 1,
			"thee": 2,
			"years": 1,
			"when": 3,
			"length": 26,
			"be": 1,
			"naught": 1,
			"heart": 3,
			"say": 1,
			"head": 1,
			"and": 17,
			"last": 87,
			"fate": 1,
			"i": 3,
			"thou": 1,
			"home": 29,
			"here": 1,
			"one": 7,
			"such": 3,
			"rome": 2,
			"work": 2,
			"saint": 1,
			"each": 3,
			"anothers": 1,
			"would": 1,
			"endless": 1,
			"reason": 1,
			"these": 1,
			"worst": 2,
			"with": 6,
			"now": 1,
			"set": 1,
			"gaze": 2,
			"some": 6,
			"will": 6,
			"all": 23,
			"grief": 1,
			"gods": 2,
			"wild": 1,
			"then": 1,
			"large": 2,
			"thought": 1,
			"has": 1,
			"couch": 1,
			"spring": 1,
			"our": 9,
			"night": 23,
			"shall": 1,
			"still": 1,
			"your": 12,
			"natures": 3,
			"best": 5,
			"to": 4,
			"freedoms": 1,
			"growing": 1,
			"ah": 1,
			"bold": 1,
			"may": 1,
			"th": 2,
			"strife": 1,
			"eve": 9,
			"ship": 1,
			"we": 2,
			"loss": 1,
			"whose": 7,
			"as": 1,
			"fair": 1,
			"charles": 1,
			"heavens": 3,
			"life": 1,
			"noon": 4,
			"end": 2,
			"he": 1,
			"arms": 1,
			"me": 11,
			"sat": 1,
			"at": 3,
			"o": 1,
			"yonder": 1,
			"the": 220,
			"tis": 1,
			"though": 1,
			"her": 19,
			"dead": 3,
			"first": 18,
			"jesus": 5,
			"in": 9
		},
		"fancy": {
			"foolish": 1,
			"of": 1,
			"this": 1,
			"up": 1,
			"it": 1,
			"long": 1,
			"is": 2,
			"like": 1,
			"shot": 1,
			"than": 1,
			"lightly": 1,
			"cannot": 1,
			"makes": 1,
			"oer": 1,
			"runs": 2,
			"must": 1,
			"what": 2,
			"finds": 1,
			"a": 1,
			"falls": 1,
			"on": 1,
			"but": 1,
			"when": 1,
			"and": 1,
			"whateer": 1,
			"how": 1,
			"no": 1,
			"now": 1,
			"could": 1,
			"yet": 1,
			"to": 1,
			"rich": 1,
			"me": 3,
			"the": 1
		},
		"deer": {
			"not": 1,
			"they": 1,
			"again": 2,
			"sir": 1,
			"oer": 1,
			"leave": 1,
			"on": 1,
			"break": 1,
			"but": 1,
			"and": 3,
			"with": 2,
			"has": 1,
			"well": 1,
			"to": 1,
			"he": 2,
			"the": 2,
			"in": 1
		},
		"below": {
			"sweet": 1,
			"blue": 1,
			"mountains": 1,
			"him": 1,
			"tell": 1,
			"who": 2,
			"of": 1,
			"not": 1,
			"proud": 1,
			"over": 1,
			"by": 1,
			"breaks": 1,
			"is": 1,
			"few": 1,
			"like": 1,
			"farewell": 1,
			"hark": 1,
			"they": 1,
			"you": 1,
			"for": 1,
			"words": 1,
			"again": 1,
			"thy": 1,
			"sin": 1,
			"were": 2,
			"was": 1,
			"that": 3,
			"if": 1,
			"what": 2,
			"oh": 1,
			"or": 2,
			"so": 1,
			"perhaps": 1,
			"when": 1,
			"t": 1,
			"and": 12,
			"i": 4,
			"thou": 2,
			"from": 1,
			"while": 1,
			"no": 2,
			"with": 1,
			"around": 1,
			"till": 1,
			"through": 1,
			"george": 1,
			"our": 2,
			"your": 1,
			"he": 1,
			"me": 1,
			"o": 1,
			"the": 12,
			"there": 1,
			"in": 2
		},
		"straight": {
			"up": 1,
			"thy": 1,
			"walls": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"so": 1,
			"on": 1,
			"when": 1,
			"line": 1,
			"and": 1,
			"i": 1,
			"called": 1,
			"with": 1,
			"through": 1,
			"to": 1,
			"as": 2,
			"at": 1,
			"o": 1,
			"in": 2
		},
		"slumber": {
			"fled": 1,
			"breaking": 1,
			"fell": 1,
			"long": 1,
			"like": 1,
			"seven": 1,
			"for": 1,
			"autumn": 1,
			"again": 1,
			"tonight": 1,
			"steep": 1,
			"so": 1,
			"on": 2,
			"but": 1,
			"when": 2,
			"close": 1,
			"and": 3,
			"from": 1,
			"bound": 1,
			"with": 1,
			"till": 1,
			"open": 1,
			"shall": 1,
			"round": 2,
			"he": 1,
			"at": 1,
			"lies": 1,
			"though": 1,
			"there": 1,
			"in": 3
		},
		"frown": {
			"which": 1,
			"of": 3,
			"behold": 1,
			"they": 2,
			"that": 2,
			"or": 1,
			"and": 6,
			"till": 1,
			"he": 1,
			"at": 2,
			"o": 2,
			"the": 2
		},
		"seat": {
			"of": 5,
			"over": 1,
			"by": 2,
			"sighing": 1,
			"sing": 1,
			"hath": 1,
			"above": 1,
			"be": 1,
			"and": 7,
			"here": 1,
			"with": 1,
			"mount": 1,
			"as": 1,
			"he": 1,
			"me": 1,
			"at": 1,
			"the": 5,
			"young": 1,
			"in": 4
		},
		"point": {
			"his": 1,
			"of": 4,
			"this": 1,
			"you": 1,
			"thus": 1,
			"where": 1,
			"for": 1,
			"must": 1,
			"out": 1,
			"with": 1,
			"to": 4,
			"slowly": 1,
			"me": 1,
			"at": 1,
			"the": 4
		},
		"lies": {
			"sound": 1,
			"low": 1,
			"dying": 1,
			"his": 1,
			"amidst": 1,
			"who": 1,
			"which": 1,
			"amid": 1,
			"she": 2,
			"beyond": 1,
			"heavy": 2,
			"not": 2,
			"praise": 1,
			"it": 1,
			"over": 1,
			"twas": 1,
			"by": 3,
			"twixt": 1,
			"cold": 2,
			"glittering": 1,
			"like": 1,
			"about": 1,
			"nature": 1,
			"where": 1,
			"just": 2,
			"for": 1,
			"worse": 1,
			"sir": 1,
			"stretched": 1,
			"forward": 1,
			"that": 3,
			"oh": 1,
			"a": 3,
			"upon": 1,
			"on": 2,
			"deep": 1,
			"old": 1,
			"but": 1,
			"buried": 1,
			"when": 2,
			"be": 2,
			"out": 3,
			"and": 6,
			"i": 2,
			"down": 1,
			"between": 1,
			"from": 1,
			"sleeping": 1,
			"beneath": 1,
			"hidden": 1,
			"while": 1,
			"no": 1,
			"with": 1,
			"around": 1,
			"all": 5,
			"through": 2,
			"our": 3,
			"night": 3,
			"before": 1,
			"still": 4,
			"to": 3,
			"art": 1,
			"as": 1,
			"me": 1,
			"the": 11,
			"seems": 2,
			"dead": 2,
			"there": 2,
			"in": 17
		},
		"wound": {
			"his": 2,
			"him": 1,
			"hast": 1,
			"of": 1,
			"up": 1,
			"father": 1,
			"is": 1,
			"you": 1,
			"those": 1,
			"for": 1,
			"my": 2,
			"oer": 1,
			"did": 1,
			"that": 2,
			"a": 1,
			"but": 1,
			"ye": 1,
			"be": 1,
			"and": 3,
			"no": 1,
			"with": 2,
			"yet": 1,
			"know": 1,
			"may": 1,
			"as": 2,
			"the": 2,
			"though": 1,
			"in": 1
		},
		"iii": {
			"war": 1,
			"act": 1,
			"lo": 1,
			"ever": 1,
			"sc": 6,
			"faith": 1,
			"man": 1,
			"a": 1,
			"i": 1,
			"one": 1,
			"now": 1,
			"through": 1,
			"our": 1,
			"he": 1,
			"the": 1,
			"there": 1
		},
		"led": {
			"his": 2,
			"him": 1,
			"who": 2,
			"forth": 1,
			"by": 4,
			"is": 1,
			"unto": 1,
			"you": 1,
			"where": 1,
			"welcome": 1,
			"my": 1,
			"thy": 1,
			"yellow": 1,
			"their": 1,
			"a": 4,
			"them": 2,
			"and": 2,
			"down": 1,
			"from": 1,
			"with": 3,
			"some": 1,
			"all": 1,
			"upward": 1,
			"to": 1,
			"into": 2,
			"art": 1,
			"as": 1,
			"me": 3,
			"the": 3,
			"her": 1,
			"safe": 1,
			"in": 1
		},
		"o": {
			"sweet": 8,
			"come": 1,
			"foolish": 2,
			"look": 2,
			"summer": 1,
			"saviour": 1,
			"us": 1,
			"more": 1,
			"blessd": 2,
			"england": 3,
			"blessings": 2,
			"dust": 3,
			"curse": 1,
			"im": 1,
			"christ": 3,
			"free": 1,
			"light": 2,
			"earth": 4,
			"cloud": 1,
			"his": 3,
			"stream": 1,
			"save": 5,
			"play": 4,
			"lady": 2,
			"white": 2,
			"science": 1,
			"none": 2,
			"shades": 1,
			"tell": 3,
			"war": 1,
			"weary": 2,
			"ive": 1,
			"word": 3,
			"who": 4,
			"hollow": 1,
			"sweetest": 2,
			"guard": 1,
			"men": 7,
			"lover": 1,
			"beam": 1,
			"hide": 1,
			"call": 1,
			"shout": 1,
			"of": 10,
			"this": 3,
			"bonnie": 1,
			"souls": 1,
			"pour": 1,
			"up": 2,
			"off": 1,
			"liberty": 2,
			"silence": 1,
			"sons": 1,
			"sacred": 5,
			"gold": 1,
			"morning": 2,
			"heavy": 1,
			"stormy": 1,
			"joy": 3,
			"bird": 1,
			"dear": 6,
			"place": 1,
			"mine": 4,
			"not": 2,
			"divine": 1,
			"praise": 1,
			"it": 7,
			"evil": 3,
			"began": 1,
			"magic": 1,
			"maiden": 2,
			"twas": 2,
			"far": 1,
			"wisdom": 1,
			"child": 4,
			"weep": 2,
			"water": 1,
			"feeble": 1,
			"by": 2,
			"eyes": 1,
			"father": 6,
			"nevermore": 1,
			"long": 1,
			"fountain": 2,
			"land": 6,
			"is": 2,
			"few": 1,
			"farewell": 1,
			"fairest": 1,
			"away": 1,
			"why": 3,
			"good": 1,
			"lead": 1,
			"ever": 2,
			"care": 1,
			"steed": 1,
			"they": 2,
			"you": 4,
			"guide": 1,
			"stern": 2,
			"mother": 3,
			"grant": 1,
			"thus": 1,
			"its": 3,
			"than": 1,
			"those": 1,
			"sea": 2,
			"friends": 1,
			"where": 5,
			"gentle": 2,
			"brief": 1,
			"holy": 4,
			"just": 1,
			"welcome": 1,
			"for": 10,
			"heaven": 3,
			"bosom": 1,
			"lost": 3,
			"catch": 1,
			"should": 1,
			"lonely": 2,
			"worse": 1,
			"darling": 1,
			"theres": 1,
			"take": 3,
			"bride": 1,
			"spite": 1,
			"boys": 1,
			"rest": 1,
			"my": 33,
			"twilight": 1,
			"great": 2,
			"tender": 1,
			"freedom": 1,
			"thy": 3,
			"sing": 1,
			"vain": 1,
			"sleep": 1,
			"battle": 1,
			"teach": 2,
			"peace": 2,
			"better": 1,
			"ray": 1,
			"mary": 1,
			"soul": 3,
			"hope": 1,
			"remember": 2,
			"cheer": 2,
			"most": 2,
			"times": 1,
			"wandering": 1,
			"friend": 5,
			"bells": 1,
			"lords": 1,
			"friendship": 1,
			"clay": 1,
			"queen": 3,
			"forward": 1,
			"dew": 5,
			"rain": 1,
			"whether": 1,
			"god": 45,
			"can": 1,
			"shame": 2,
			"noble": 1,
			"stroke": 1,
			"were": 1,
			"sabbath": 1,
			"did": 1,
			"that": 15,
			"if": 4,
			"let": 7,
			"drop": 1,
			"man": 3,
			"another": 1,
			"make": 1,
			"brothers": 1,
			"had": 4,
			"must": 2,
			"what": 14,
			"an": 2,
			"moon": 2,
			"hold": 1,
			"even": 1,
			"conscience": 1,
			"think": 7,
			"bright": 1,
			"tears": 1,
			"ride": 2,
			"winter": 1,
			"a": 3,
			"them": 1,
			"joys": 1,
			"true": 1,
			"green": 1,
			"upon": 1,
			"lord": 30,
			"never": 3,
			"many": 1,
			"spirit": 2,
			"cruel": 2,
			"love": 12,
			"on": 4,
			"saw": 3,
			"red": 1,
			"smiling": 1,
			"memory": 1,
			"but": 4,
			"iron": 1,
			"grass": 5,
			"wet": 1,
			"death": 11,
			"time": 2,
			"poor": 1,
			"thee": 2,
			"ye": 13,
			"years": 1,
			"when": 6,
			"deed": 1,
			"lifes": 2,
			"dreams": 1,
			"raise": 1,
			"be": 7,
			"wondrous": 1,
			"t": 1,
			"out": 1,
			"kind": 1,
			"heart": 6,
			"say": 7,
			"sorrow": 1,
			"german": 1,
			"paradise": 15,
			"and": 11,
			"mothers": 1,
			"grace": 1,
			"sun": 3,
			"truth": 1,
			"dark": 2,
			"lovely": 2,
			"ask": 1,
			"days": 2,
			"grave": 1,
			"i": 7,
			"worthy": 1,
			"thou": 26,
			"woman": 2,
			"western": 2,
			"wretched": 1,
			"here": 1,
			"too": 1,
			"one": 1,
			"against": 1,
			"perfect": 2,
			"rome": 1,
			"state": 1,
			"rather": 2,
			"fields": 1,
			"how": 10,
			"hearts": 2,
			"from": 1,
			"stranger": 1,
			"strange": 1,
			"would": 4,
			"mind": 3,
			"rare": 1,
			"these": 1,
			"duty": 1,
			"while": 1,
			"no": 3,
			"mystic": 1,
			"voice": 1,
			"dread": 2,
			"breeze": 2,
			"with": 5,
			"virtue": 1,
			"everlasting": 1,
			"now": 1,
			"set": 1,
			"give": 8,
			"learned": 1,
			"realm": 1,
			"will": 2,
			"strong": 3,
			"wild": 2,
			"then": 4,
			"lose": 1,
			"thought": 2,
			"pleasant": 1,
			"thats": 1,
			"well": 3,
			"rhine": 1,
			"king": 4,
			"mount": 1,
			"master": 4,
			"dost": 1,
			"spring": 1,
			"wake": 1,
			"beauteous": 1,
			"our": 2,
			"fear": 1,
			"fallen": 1,
			"mercy": 1,
			"loved": 1,
			"stay": 1,
			"only": 1,
			"golden": 1,
			"still": 2,
			"your": 4,
			"shade": 1,
			"yet": 3,
			"way": 1,
			"to": 14,
			"human": 1,
			"turn": 2,
			"lie": 1,
			"little": 3,
			"glorious": 1,
			"vast": 1,
			"may": 7,
			"th": 3,
			"strife": 1,
			"ship": 1,
			"we": 3,
			"loss": 1,
			"as": 1,
			"fair": 6,
			"stand": 1,
			"happy": 2,
			"said": 1,
			"life": 10,
			"me": 5,
			"son": 2,
			"o": 9,
			"chorus": 1,
			"blessed": 2,
			"the": 74,
			"tis": 2,
			"though": 1,
			"theyre": 2,
			"world": 4,
			"radiant": 1,
			"dead": 1,
			"thirst": 1,
			"fire": 3,
			"seas": 1,
			"jesus": 1,
			"restless": 1,
			"in": 4,
			"flowers": 1,
			"dim": 1
		},
		"east": {
			"see": 1,
			"ii": 1,
			"ive": 2,
			"by": 1,
			"unto": 1,
			"like": 1,
			"they": 1,
			"sea": 1,
			"gray": 1,
			"my": 1,
			"sir": 1,
			"was": 2,
			"must": 1,
			"what": 1,
			"or": 5,
			"lay": 1,
			"hath": 1,
			"and": 7,
			"west": 2,
			"thou": 1,
			"from": 1,
			"with": 1,
			"all": 1,
			"neer": 1,
			"wind": 1,
			"to": 5,
			"lie": 1,
			"little": 1,
			"o": 1,
			"the": 3,
			"tis": 1
		},
		"coming": {
			"come": 1,
			"of": 6,
			"cast": 1,
			"up": 1,
			"tide": 1,
			"evil": 1,
			"host": 1,
			"by": 1,
			"father": 5,
			"is": 1,
			"like": 1,
			"ever": 1,
			"beams": 1,
			"cry": 1,
			"hour": 3,
			"great": 1,
			"morn": 1,
			"full": 1,
			"late": 1,
			"them": 1,
			"lay": 1,
			"on": 1,
			"above": 1,
			"fast": 3,
			"but": 2,
			"years": 3,
			"april": 1,
			"be": 1,
			"feet": 1,
			"and": 3,
			"days": 1,
			"i": 1,
			"down": 1,
			"home": 1,
			"one": 1,
			"ill": 1,
			"gods": 1,
			"shall": 1,
			"only": 1,
			"to": 2,
			"speed": 1,
			"round": 1,
			"strife": 1,
			"eve": 1,
			"as": 1,
			"life": 1,
			"he": 3,
			"at": 1,
			"the": 1,
			"in": 7
		},
		"chain": {
			"which": 1,
			"of": 4,
			"this": 1,
			"like": 1,
			"about": 1,
			"you": 1,
			"pale": 1,
			"for": 1,
			"that": 2,
			"or": 1,
			"a": 1,
			"upon": 1,
			"on": 1,
			"maryland": 1,
			"but": 2,
			"thee": 1,
			"be": 1,
			"and": 7,
			"beneath": 1,
			"these": 1,
			"then": 2,
			"upward": 1,
			"yet": 1,
			"to": 1,
			"he": 1,
			"me": 1,
			"chain": 1,
			"the": 1,
			"scarce": 1
		},
		"gain": {
			"us": 1,
			"james": 1,
			"of": 1,
			"behold": 1,
			"far": 1,
			"for": 1,
			"came": 1,
			"thy": 1,
			"that": 1,
			"if": 1,
			"what": 1,
			"or": 2,
			"fold": 1,
			"a": 2,
			"on": 1,
			"but": 1,
			"thee": 1,
			"glory": 1,
			"and": 3,
			"here": 1,
			"our": 1,
			"to": 2,
			"the": 6,
			"in": 1
		},
		"browning": {
			"longfellow": 1,
			"it": 1,
			"by": 1,
			"comfort": 1,
			"a": 2,
			"on": 1,
			"i": 1,
			"our": 1,
			"fear": 2,
			"o": 1,
			"blessed": 1,
			"the": 8,
			"there": 1
		},
		"greek": {
			"his": 1,
			"who": 1,
			"of": 7,
			"by": 2,
			"poet": 1,
			"where": 1,
			"church": 1,
			"or": 1,
			"lord": 1,
			"rushed": 1,
			"head": 1,
			"and": 2,
			"christian": 1,
			"maid": 1,
			"he": 1,
			"grow": 1,
			"the": 1
		},
		"grow": {
			"more": 2,
			"are": 1,
			"warm": 1,
			"silent": 1,
			"sick": 1,
			"far": 1,
			"by": 1,
			"long": 1,
			"cold": 4,
			"forever": 1,
			"faint": 1,
			"pale": 1,
			"without": 2,
			"its": 1,
			"than": 1,
			"where": 1,
			"fixed": 1,
			"my": 1,
			"great": 1,
			"again": 2,
			"vain": 1,
			"immortal": 1,
			"that": 2,
			"if": 1,
			"let": 1,
			"half": 1,
			"beautiful": 1,
			"or": 1,
			"bright": 1,
			"their": 1,
			"a": 1,
			"so": 3,
			"on": 1,
			"deep": 1,
			"old": 2,
			"but": 4,
			"poor": 1,
			"when": 1,
			"out": 2,
			"and": 9,
			"dream": 1,
			"i": 3,
			"here": 1,
			"too": 1,
			"between": 1,
			"such": 1,
			"against": 1,
			"henry": 1,
			"from": 1,
			"strange": 1,
			"stronger": 1,
			"these": 1,
			"while": 1,
			"no": 3,
			"calm": 1,
			"sad": 1,
			"strong": 1,
			"our": 2,
			"yet": 2,
			"to": 3,
			"loud": 1,
			"ah": 1,
			"the": 3,
			"her": 1,
			"there": 1,
			"in": 3,
			"dim": 6
		},
		"yonder": {
			"cloud": 2,
			"glen": 1,
			"fell": 1,
			"height": 2,
			"host": 1,
			"by": 1,
			"where": 1,
			"shines": 1,
			"wall": 1,
			"comes": 1,
			"ere": 1,
			"garden": 1,
			"held": 1,
			"town": 1,
			"that": 1,
			"thorn": 1,
			"what": 1,
			"moon": 1,
			"stars": 1,
			"a": 2,
			"and": 1,
			"west": 1,
			"grave": 1,
			"i": 2,
			"tower": 2,
			"shining": 2,
			"sublime": 1,
			"doth": 1,
			"round": 1,
			"little": 1,
			"the": 2,
			"her": 1,
			"fire": 1
		},
		"weight": {
			"of": 6,
			"nor": 1,
			"heavy": 1,
			"for": 1,
			"must": 1,
			"upon": 1,
			"many": 1,
			"but": 1,
			"and": 2,
			"i": 1,
			"one": 1,
			"from": 2,
			"no": 1,
			"could": 1,
			"to": 2,
			"the": 1
		},
		"left": {
			"us": 8,
			"unseen": 1,
			"free": 1,
			"his": 3,
			"him": 3,
			"right": 1,
			"holds": 1,
			"of": 8,
			"this": 1,
			"nor": 1,
			"aught": 1,
			"not": 2,
			"side": 1,
			"dry": 1,
			"it": 3,
			"by": 1,
			"alone": 2,
			"is": 1,
			"afar": 1,
			"without": 1,
			"its": 3,
			"where": 2,
			"for": 4,
			"hand": 2,
			"lonely": 1,
			"my": 5,
			"friend": 1,
			"oer": 1,
			"that": 1,
			"let": 1,
			"what": 1,
			"an": 2,
			"or": 1,
			"their": 2,
			"a": 5,
			"them": 3,
			"upon": 1,
			"on": 5,
			"thee": 2,
			"and": 6,
			"i": 2,
			"such": 1,
			"each": 1,
			"all": 1,
			"through": 1,
			"behind": 14,
			"our": 4,
			"yet": 1,
			"to": 12,
			"me": 12,
			"the": 18,
			"her": 1,
			"in": 5
		},
		"translation": {
			"naught": 1,
			"of": 47,
			"those": 1,
			"out": 1,
			"is": 1,
			"it": 1
		},
		"rings": {
			"along": 2,
			"on": 2,
			"out": 1,
			"and": 2,
			"down": 1,
			"from": 1,
			"with": 2,
			"all": 1,
			"the": 6,
			"in": 3
		},
		"chorus": {
			"sweet": 1,
			"of": 3,
			"dear": 1,
			"weep": 1,
			"breaks": 1,
			"together": 1,
			"john": 1,
			"let": 1,
			"or": 1,
			"a": 1,
			"so": 1,
			"through": 1,
			"king": 2,
			"to": 1,
			"the": 2,
			"first": 2
		},
		"streams": {
			"are": 2,
			"of": 7,
			"high": 1,
			"like": 1,
			"return": 1,
			"where": 1,
			"run": 1,
			"along": 1,
			"were": 1,
			"that": 1,
			"or": 1,
			"their": 1,
			"a": 2,
			"but": 1,
			"and": 2,
			"from": 3,
			"around": 1,
			"mid": 1,
			"the": 7
		},
		"blessed": {
			"him": 1,
			"means": 1,
			"are": 5,
			"which": 1,
			"ones": 1,
			"this": 1,
			"cast": 1,
			"serve": 1,
			"it": 1,
			"is": 1,
			"like": 1,
			"guide": 1,
			"for": 1,
			"heaven": 1,
			"should": 1,
			"soul": 1,
			"hope": 1,
			"name": 1,
			"william": 1,
			"that": 1,
			"man": 1,
			"creatures": 1,
			"time": 2,
			"be": 2,
			"bed": 1,
			"feet": 1,
			"and": 2,
			"sun": 1,
			"each": 1,
			"from": 1,
			"with": 2,
			"will": 1,
			"our": 1,
			"little": 1,
			"me": 3,
			"lies": 1,
			"the": 3,
			"her": 1,
			"jesus": 1,
			"in": 2,
			"thoughts": 1
		},
		"arise": {
			"his": 1,
			"which": 1,
			"good": 1,
			"for": 1,
			"again": 2,
			"hope": 1,
			"but": 1,
			"and": 5,
			"i": 2,
			"henry": 1,
			"to": 1,
			"whose": 1,
			"as": 1,
			"life": 1,
			"he": 1,
			"arise": 1,
			"the": 3,
			"her": 1,
			"in": 2
		},
		"common": {
			"dust": 1,
			"men": 2,
			"sight": 1,
			"it": 1,
			"quiet": 1,
			"good": 4,
			"speech": 1,
			"prayer": 1,
			"soul": 1,
			"friend": 1,
			"comfort": 1,
			"have": 1,
			"a": 1,
			"joys": 1,
			"things": 2,
			"walk": 1,
			"love": 1,
			"but": 1,
			"mothers": 1,
			"fate": 1,
			"i": 1,
			"gifts": 1,
			"mind": 1,
			"then": 1,
			"master": 1,
			"ways": 1,
			"day": 1,
			"sense": 5,
			"needs": 1,
			"to": 1,
			"as": 3,
			"throng": 1,
			"there": 1
		},
		"the": {
			"sweet": 43,
			"books": 5,
			"tune": 4,
			"perchance": 1,
			"flower": 31,
			"blue": 47,
			"come": 18,
			"sound": 30,
			"low": 14,
			"bow": 10,
			"dare": 1,
			"fled": 1,
			"footnote": 4,
			"cool": 8,
			"foolish": 5,
			"breaking": 3,
			"dying": 27,
			"bread": 5,
			"look": 13,
			"summer": 36,
			"floor": 11,
			"saviour": 7,
			"itself": 1,
			"woes": 3,
			"sighs": 1,
			"us": 4,
			"suffering": 4,
			"more": 23,
			"hear": 2,
			"sent": 1,
			"murmur": 2,
			"wrought": 1,
			"won": 1,
			"since": 1,
			"thine": 1,
			"blessd": 8,
			"ring": 6,
			"died": 3,
			"lot": 5,
			"within": 8,
			"wife": 8,
			"ready": 2,
			"unseen": 4,
			"blessings": 6,
			"dust": 30,
			"going": 1,
			"curse": 8,
			"blew": 2,
			"justice": 2,
			"loves": 2,
			"went": 6,
			"im": 3,
			"parting": 7,
			"virtues": 4,
			"christ": 5,
			"gates": 19,
			"worn": 2,
			"wish": 1,
			"river": 47,
			"fierce": 12,
			"chase": 4,
			"free": 26,
			"laws": 8,
			"light": 122,
			"earth": 100,
			"birds": 20,
			"pen": 8,
			"space": 3,
			"forehead": 2,
			"doubt": 2,
			"pine": 7,
			"die": 3,
			"cloud": 15,
			"mountains": 34,
			"his": 38,
			"appear": 1,
			"stream": 21,
			"james": 2,
			"save": 4,
			"mad": 4,
			"struck": 4,
			"st": 1,
			"hell": 4,
			"dreary": 7,
			"him": 1,
			"fond": 3,
			"banner": 14,
			"crest": 6,
			"ear": 22,
			"book": 17,
			"midnight": 13,
			"sharp": 5,
			"crossed": 1,
			"law": 25,
			"see": 1,
			"means": 3,
			"blood": 33,
			"valley": 17,
			"leap": 3,
			"narrow": 9,
			"hero": 13,
			"precious": 4,
			"wi": 1,
			"begin": 3,
			"temple": 8,
			"cheek": 8,
			"play": 8,
			"lady": 10,
			"bare": 2,
			"kiss": 5,
			"women": 5,
			"faithful": 10,
			"breathing": 3,
			"horn": 9,
			"thousand": 4,
			"voices": 3,
			"tennyson": 1,
			"thing": 15,
			"deeper": 3,
			"creed": 2,
			"passions": 6,
			"s": 1,
			"ages": 14,
			"learn": 3,
			"white": 29,
			"glen": 8,
			"rule": 5,
			"science": 2,
			"none": 2,
			"shades": 6,
			"woe": 3,
			"silver": 16,
			"purple": 13,
			"surely": 1,
			"war": 23,
			"wail": 7,
			"weary": 25,
			"wonder": 5,
			"dance": 10,
			"seemed": 4,
			"are": 57,
			"saints": 9,
			"story": 11,
			"fears": 1,
			"beside": 2,
			"humble": 3,
			"six": 7,
			"alas": 3,
			"right": 25,
			"back": 5,
			"warm": 10,
			"made": 5,
			"ive": 1,
			"amidst": 1,
			"word": 27,
			"fell": 9,
			"very": 31,
			"under": 8,
			"next": 15,
			"who": 31,
			"seen": 1,
			"hollow": 13,
			"sweetest": 14,
			"silent": 43,
			"gate": 29,
			"men": 33,
			"lover": 7,
			"which": 43,
			"sake": 9,
			"mist": 11,
			"court": 6,
			"beam": 5,
			"ones": 5,
			"deeds": 8,
			"holds": 1,
			"dies": 5,
			"worth": 3,
			"tired": 6,
			"call": 13,
			"shout": 10,
			"country": 15,
			"steps": 2,
			"toward": 1,
			"body": 9,
			"sounds": 13,
			"of": 1393,
			"brook": 11,
			"this": 7,
			"blind": 9,
			"cast": 1,
			"bonnie": 3,
			"star": 20,
			"season": 6,
			"high": 29,
			"rude": 11,
			"graves": 11,
			"worlds": 28,
			"fame": 9,
			"amid": 2,
			"yield": 3,
			"souls": 14,
			"calls": 2,
			"pour": 4,
			"hung": 3,
			"talk": 3,
			"wine": 13,
			"kept": 1,
			"learning": 1,
			"after": 5,
			"hills": 52,
			"daughter": 6,
			"once": 2,
			"up": 11,
			"off": 1,
			"food": 6,
			"triumph": 8,
			"tide": 22,
			"breathe": 1,
			"angel": 26,
			"she": 26,
			"rock": 21,
			"liberty": 1,
			"among": 2,
			"shakespeare": 1,
			"silence": 14,
			"beyond": 6,
			"anonymous": 3,
			"nor": 10,
			"sons": 13,
			"sacred": 22,
			"hymn": 7,
			"find": 1,
			"blossoms": 7,
			"gold": 9,
			"three": 4,
			"does": 5,
			"morning": 59,
			"act": 2,
			"grew": 6,
			"city": 11,
			"heavy": 5,
			"roar": 20,
			"flood": 20,
			"sight": 16,
			"whatever": 1,
			"grown": 2,
			"age": 8,
			"stormy": 11,
			"darkness": 37,
			"joy": 18,
			"lightning": 14,
			"cling": 2,
			"forth": 1,
			"foam": 9,
			"fruit": 15,
			"bird": 24,
			"wheel": 9,
			"scorn": 3,
			"height": 10,
			"brother": 3,
			"sheep": 5,
			"played": 2,
			"beheld": 1,
			"race": 11,
			"goes": 7,
			"dreadful": 6,
			"spot": 8,
			"dear": 27,
			"two": 19,
			"fresh": 7,
			"pain": 14,
			"mouth": 10,
			"thick": 3,
			"place": 36,
			"serene": 1,
			"lift": 2,
			"part": 8,
			"pass": 6,
			"lands": 6,
			"chant": 7,
			"sick": 4,
			"fine": 2,
			"sands": 11,
			"rose": 43,
			"slaves": 3,
			"lines": 14,
			"beloved": 4,
			"limbs": 1,
			"mine": 5,
			"rivers": 10,
			"solemn": 20,
			"news": 6,
			"sings": 2,
			"not": 13,
			"rapture": 3,
			"divine": 11,
			"hours": 14,
			"burn": 4,
			"constant": 3,
			"crimson": 5,
			"side": 22,
			"burden": 11,
			"put": 2,
			"starry": 10,
			"proud": 20,
			"dry": 3,
			"every": 2,
			"praise": 13,
			"sword": 30,
			"it": 26,
			"evil": 11,
			"over": 9,
			"army": 9,
			"host": 15,
			"smooth": 5,
			"shake": 1,
			"magic": 6,
			"sins": 4,
			"shows": 2,
			"maiden": 8,
			"flight": 9,
			"image": 5,
			"eager": 3,
			"fool": 9,
			"twas": 3,
			"far": 15,
			"mean": 4,
			"spirits": 11,
			"hangs": 2,
			"wisdom": 7,
			"child": 24,
			"health": 1,
			"lights": 7,
			"bark": 3,
			"tongue": 8,
			"weep": 2,
			"water": 18,
			"send": 1,
			"feeble": 7,
			"sod": 22,
			"load": 5,
			"by": 35,
			"eyes": 24,
			"jim": 1,
			"fathers": 13,
			"father": 19,
			"nevermore": 5,
			"woods": 30,
			"alone": 6,
			"shut": 1,
			"long": 36,
			"sorrows": 5,
			"fountain": 13,
			"bring": 2,
			"corn": 8,
			"breaks": 1,
			"nations": 21,
			"mute": 4,
			"trace": 1,
			"bind": 1,
			"quiet": 9,
			"matter": 3,
			"cold": 29,
			"pride": 12,
			"land": 107,
			"wars": 6,
			"wise": 24,
			"is": 97,
			"cross": 25,
			"vision": 19,
			"joyous": 4,
			"ships": 12,
			"soon": 1,
			"glittering": 7,
			"rise": 8,
			"looked": 3,
			"author": 6,
			"few": 4,
			"unto": 2,
			"like": 26,
			"takes": 2,
			"lo": 2,
			"hurrah": 1,
			"boy": 18,
			"farewell": 3,
			"fairest": 11,
			"glass": 13,
			"hard": 9,
			"away": 9,
			"hoary": 3,
			"form": 17,
			"sway": 3,
			"gift": 9,
			"children": 17,
			"idle": 6,
			"forms": 10,
			"why": 2,
			"native": 4,
			"people": 14,
			"sung": 1,
			"immortality": 1,
			"hallowed": 8,
			"kings": 13,
			"forever": 3,
			"douglas": 1,
			"good": 62,
			"lead": 3,
			"ocean": 37,
			"hark": 1,
			"force": 5,
			"ever": 4,
			"either": 1,
			"care": 5,
			"together": 3,
			"about": 3,
			"steed": 11,
			"they": 36,
			"shook": 5,
			"speech": 4,
			"prayer": 4,
			"grain": 6,
			"path": 22,
			"laughing": 5,
			"faint": 2,
			"gazed": 3,
			"funeral": 7,
			"wide": 19,
			"you": 9,
			"moves": 1,
			"nature": 5,
			"shot": 10,
			"tyrants": 18,
			"guide": 2,
			"stern": 6,
			"glowing": 5,
			"mother": 20,
			"mild": 4,
			"thus": 2,
			"pale": 23,
			"swept": 2,
			"seven": 5,
			"new": 25,
			"nay": 3,
			"weakness": 2,
			"afar": 3,
			"rosy": 4,
			"heard": 5,
			"leaves": 29,
			"without": 1,
			"sister": 4,
			"robert": 1,
			"slave": 14,
			"earths": 4,
			"ranks": 17,
			"laid": 1,
			"its": 11,
			"than": 10,
			"smile": 24,
			"slow": 10,
			"swift": 8,
			"kindly": 4,
			"lightly": 2,
			"pleasure": 2,
			"beams": 4,
			"stir": 7,
			"een": 1,
			"poet": 18,
			"song": 48,
			"those": 5,
			"sea": 114,
			"crown": 16,
			"friends": 5,
			"where": 47,
			"gentle": 14,
			"others": 6,
			"looking": 2,
			"used": 1,
			"brief": 4,
			"despair": 1,
			"small": 6,
			"run": 3,
			"train": 5,
			"rolled": 2,
			"church": 12,
			"lovers": 4,
			"holy": 41,
			"press": 2,
			"summers": 5,
			"blast": 19,
			"gray": 26,
			"just": 10,
			"welcome": 7,
			"for": 47,
			"noise": 6,
			"blown": 3,
			"drops": 5,
			"past": 45,
			"judgment": 4,
			"hand": 65,
			"heaven": 17,
			"stones": 8,
			"bosom": 7,
			"become": 1,
			"charge": 7,
			"frost": 6,
			"cup": 11,
			"lost": 11,
			"catch": 1,
			"cry": 23,
			"clime": 2,
			"bloody": 6,
			"should": 7,
			"lonely": 14,
			"surprise": 2,
			"base": 8,
			"worse": 4,
			"bowed": 1,
			"suns": 15,
			"sang": 6,
			"theres": 5,
			"take": 2,
			"melancholy": 5,
			"cannot": 1,
			"bride": 9,
			"speak": 1,
			"breath": 31,
			"spite": 1,
			"boys": 4,
			"autumn": 9,
			"fixed": 2,
			"didst": 1,
			"rest": 53,
			"my": 21,
			"spent": 2,
			"blow": 16,
			"whats": 2,
			"fingers": 1,
			"band": 9,
			"bore": 4,
			"count": 3,
			"words": 22,
			"hour": 55,
			"came": 15,
			"standing": 2,
			"note": 8,
			"heroes": 9,
			"remain": 2,
			"twilight": 13,
			"winds": 44,
			"great": 91,
			"john": 4,
			"tender": 18,
			"sighing": 2,
			"beauty": 11,
			"short": 6,
			"again": 5,
			"deaths": 1,
			"desire": 1,
			"earl": 6,
			"shines": 1,
			"themselves": 1,
			"burning": 12,
			"forgot": 1,
			"touch": 18,
			"enough": 1,
			"freedom": 3,
			"thy": 9,
			"sing": 3,
			"yes": 1,
			"smiles": 4,
			"watch": 6,
			"wall": 23,
			"greater": 6,
			"morn": 38,
			"hushed": 2,
			"vain": 5,
			"sleep": 7,
			"battle": 38,
			"pretty": 4,
			"tone": 5,
			"moan": 2,
			"warrior": 8,
			"peace": 12,
			"wheels": 11,
			"majesty": 3,
			"blows": 9,
			"comes": 3,
			"ere": 4,
			"hopes": 5,
			"tonight": 2,
			"waves": 32,
			"birth": 2,
			"whom": 4,
			"rang": 1,
			"better": 21,
			"ray": 2,
			"shadow": 27,
			"least": 9,
			"mary": 1,
			"shore": 59,
			"dearest": 5,
			"ground": 56,
			"soul": 112,
			"passion": 7,
			"hope": 15,
			"born": 1,
			"garden": 11,
			"gather": 1,
			"various": 3,
			"francis": 1,
			"cheer": 1,
			"cease": 1,
			"makes": 2,
			"rough": 7,
			"most": 30,
			"sir": 2,
			"senses": 11,
			"times": 6,
			"wandering": 7,
			"held": 4,
			"torn": 3,
			"town": 14,
			"evening": 30,
			"yellow": 11,
			"rising": 16,
			"reach": 5,
			"friend": 11,
			"wrath": 4,
			"bells": 10,
			"lords": 10,
			"fools": 2,
			"streets": 11,
			"friendship": 1,
			"stretched": 1,
			"name": 20,
			"door": 43,
			"clay": 3,
			"queen": 12,
			"glow": 3,
			"sits": 1,
			"along": 3,
			"william": 1,
			"face": 39,
			"false": 4,
			"forward": 3,
			"closed": 1,
			"sin": 10,
			"battles": 15,
			"trembling": 4,
			"dew": 25,
			"rain": 24,
			"faith": 11,
			"whether": 1,
			"god": 23,
			"can": 8,
			"wit": 4,
			"foot": 9,
			"moment": 4,
			"shame": 2,
			"noble": 8,
			"power": 21,
			"stroke": 6,
			"were": 24,
			"bud": 7,
			"comfort": 4,
			"flee": 1,
			"waking": 3,
			"oer": 17,
			"crowned": 2,
			"sabbath": 12,
			"sudden": 2,
			"immortal": 10,
			"need": 1,
			"main": 16,
			"shell": 6,
			"trumpet": 17,
			"cause": 15,
			"did": 4,
			"walls": 15,
			"was": 46,
			"runs": 3,
			"that": 203,
			"rolling": 8,
			"swords": 5,
			"if": 8,
			"let": 9,
			"show": 5,
			"same": 69,
			"thorn": 11,
			"womans": 2,
			"lips": 21,
			"drop": 3,
			"cares": 3,
			"arm": 4,
			"man": 60,
			"bear": 3,
			"daily": 2,
			"poems": 8,
			"both": 2,
			"thin": 2,
			"another": 1,
			"says": 1,
			"always": 4,
			"taste": 5,
			"embrace": 1,
			"leaf": 4,
			"full": 13,
			"make": 4,
			"victory": 4,
			"fall": 15,
			"steep": 13,
			"busy": 7,
			"ripe": 2,
			"broken": 9,
			"crowd": 14,
			"go": 2,
			"spake": 3,
			"cried": 9,
			"reign": 2,
			"seed": 11,
			"gladness": 6,
			"half": 6,
			"trust": 4,
			"sail": 7,
			"rode": 4,
			"tear": 16,
			"desert": 26,
			"perfume": 4,
			"had": 8,
			"gives": 5,
			"must": 10,
			"general": 7,
			"pure": 10,
			"what": 12,
			"sit": 4,
			"oh": 1,
			"beautiful": 20,
			"an": 12,
			"repose": 2,
			"moon": 44,
			"front": 5,
			"wait": 1,
			"hold": 1,
			"creatures": 2,
			"stone": 17,
			"stars": 56,
			"music": 20,
			"pleasures": 7,
			"even": 8,
			"charms": 3,
			"or": 48,
			"waiting": 3,
			"conscience": 6,
			"field": 52,
			"ran": 2,
			"de": 2,
			"eye": 60,
			"soil": 10,
			"lest": 1,
			"wilt": 1,
			"sweeter": 1,
			"start": 2,
			"moved": 2,
			"hands": 15,
			"bright": 30,
			"have": 14,
			"study": 5,
			"late": 2,
			"tree": 28,
			"blush": 2,
			"tears": 18,
			"gave": 2,
			"trod": 1,
			"isle": 3,
			"sae": 2,
			"horse": 9,
			"prey": 5,
			"towers": 6,
			"danger": 4,
			"ride": 2,
			"fill": 1,
			"awake": 1,
			"bitter": 10,
			"soldiers": 19,
			"winter": 16,
			"their": 19,
			"fold": 4,
			"a": 61,
			"so": 22,
			"pains": 2,
			"faces": 3,
			"heat": 7,
			"babe": 9,
			"brings": 2,
			"given": 4,
			"falls": 3,
			"them": 2,
			"pines": 9,
			"joys": 9,
			"courage": 1,
			"true": 14,
			"green": 47,
			"upon": 8,
			"gallant": 5,
			"folly": 1,
			"lay": 20,
			"things": 15,
			"lord": 91,
			"whole": 49,
			"never": 11,
			"ceased": 1,
			"many": 13,
			"dawn": 15,
			"spirit": 50,
			"hath": 9,
			"ashes": 5,
			"almost": 1,
			"cruel": 7,
			"leave": 4,
			"walk": 2,
			"whence": 2,
			"delight": 5,
			"love": 40,
			"tomb": 24,
			"groan": 2,
			"on": 86,
			"saw": 3,
			"bend": 1,
			"break": 5,
			"quite": 2,
			"wing": 12,
			"charm": 5,
			"sees": 2,
			"maryland": 1,
			"own": 4,
			"red": 28,
			"girl": 4,
			"shroud": 4,
			"brain": 9,
			"evermore": 3,
			"mountain": 27,
			"above": 6,
			"smiling": 7,
			"fast": 2,
			"chains": 1,
			"deep": 53,
			"memory": 12,
			"roaring": 9,
			"feast": 12,
			"celestial": 7,
			"old": 112,
			"content": 1,
			"naked": 5,
			"but": 43,
			"iron": 12,
			"bell": 9,
			"infinite": 6,
			"glance": 9,
			"grass": 26,
			"wet": 2,
			"brown": 10,
			"death": 15,
			"knowledge": 1,
			"self": 1,
			"foes": 6,
			"rushed": 3,
			"time": 45,
			"poor": 50,
			"empty": 1,
			"thee": 2,
			"ye": 10,
			"banners": 5,
			"lives": 2,
			"years": 30,
			"moving": 5,
			"when": 23,
			"eat": 1,
			"gone": 4,
			"deed": 12,
			"onward": 1,
			"april": 5,
			"turns": 4,
			"eternal": 31,
			"terror": 3,
			"honest": 1,
			"plain": 36,
			"religious": 5,
			"merry": 12,
			"waters": 23,
			"mans": 2,
			"burst": 3,
			"length": 4,
			"sigh": 6,
			"dreams": 4,
			"felt": 1,
			"task": 6,
			"knows": 2,
			"raise": 1,
			"be": 21,
			"bed": 13,
			"firm": 2,
			"van": 7,
			"ay": 2,
			"roses": 12,
			"weeping": 3,
			"merit": 2,
			"feet": 13,
			"wondrous": 4,
			"wings": 10,
			"t": 3,
			"glory": 32,
			"veil": 9,
			"having": 1,
			"highest": 18,
			"line": 21,
			"out": 12,
			"kind": 11,
			"awful": 12,
			"dumb": 2,
			"earthly": 2,
			"rhyme": 3,
			"brave": 50,
			"rage": 7,
			"distant": 15,
			"sweetly": 1,
			"heart": 132,
			"say": 4,
			"sorrow": 2,
			"german": 28,
			"anguish": 3,
			"head": 20,
			"paradise": 2,
			"close": 10,
			"nobler": 7,
			"verse": 5,
			"and": 585,
			"eer": 1,
			"bliss": 6,
			"thunder": 15,
			"bones": 5,
			"mothers": 8,
			"grace": 7,
			"sun": 173,
			"march": 7,
			"truth": 26,
			"bloom": 7,
			"do": 1,
			"fever": 12,
			"dark": 55,
			"prize": 14,
			"quick": 8,
			"doom": 10,
			"last": 89,
			"lone": 4,
			"west": 32,
			"sunshine": 21,
			"rays": 2,
			"christian": 8,
			"lovely": 8,
			"move": 1,
			"cries": 3,
			"black": 28,
			"dream": 11,
			"fate": 7,
			"year": 38,
			"wounded": 3,
			"blaze": 6,
			"days": 41,
			"grave": 63,
			"poem": 18,
			"fly": 7,
			"i": 76,
			"knew": 1,
			"unknown": 2,
			"snow": 29,
			"worthy": 1,
			"thou": 10,
			"haste": 1,
			"woman": 8,
			"depths": 12,
			"guns": 16,
			"tale": 10,
			"down": 18,
			"told": 1,
			"sunny": 6,
			"less": 5,
			"western": 18,
			"robin": 1,
			"bad": 4,
			"home": 16,
			"broke": 4,
			"tower": 10,
			"dull": 11,
			"wretched": 9,
			"here": 6,
			"south": 13,
			"island": 17,
			"mournful": 5,
			"too": 5,
			"raised": 2,
			"steel": 6,
			"fought": 1,
			"mirth": 1,
			"presence": 5,
			"mortal": 3,
			"one": 45,
			"might": 7,
			"storm": 37,
			"between": 4,
			"breathes": 2,
			"chamber": 8,
			"such": 2,
			"judge": 10,
			"shining": 14,
			"rocks": 11,
			"draw": 1,
			"softly": 1,
			"fatherland": 17,
			"rush": 5,
			"against": 3,
			"perfect": 5,
			"secret": 20,
			"shadows": 20,
			"hate": 2,
			"tall": 10,
			"arts": 4,
			"state": 7,
			"work": 21,
			"pearl": 3,
			"blossom": 10,
			"forest": 34,
			"stands": 6,
			"looks": 3,
			"fields": 28,
			"saint": 8,
			"broad": 14,
			"each": 5,
			"whereer": 1,
			"henry": 4,
			"brow": 15,
			"how": 11,
			"hearts": 19,
			"higher": 12,
			"help": 2,
			"other": 46,
			"from": 65,
			"sleeping": 2,
			"stranger": 11,
			"gifts": 6,
			"marble": 7,
			"drink": 1,
			"strange": 1,
			"across": 2,
			"would": 10,
			"stronger": 3,
			"living": 30,
			"lilies": 6,
			"feeling": 7,
			"mind": 53,
			"ill": 3,
			"endless": 3,
			"sublime": 1,
			"want": 6,
			"blade": 11,
			"reason": 10,
			"beat": 2,
			"beneath": 6,
			"maid": 13,
			"ancient": 9,
			"hidden": 4,
			"these": 3,
			"nigh": 1,
			"shield": 3,
			"while": 23,
			"foul": 2,
			"strand": 9,
			"breast": 19,
			"honor": 5,
			"present": 18,
			"no": 18,
			"mystic": 8,
			"bound": 4,
			"early": 8,
			"bid": 1,
			"took": 1,
			"worst": 18,
			"calm": 6,
			"roll": 8,
			"called": 1,
			"voice": 52,
			"guest": 4,
			"maidens": 6,
			"dread": 14,
			"sand": 7,
			"alfred": 1,
			"sphere": 9,
			"kingdom": 7,
			"decay": 1,
			"goodly": 2,
			"guilty": 8,
			"mighty": 29,
			"breeze": 26,
			"ears": 2,
			"with": 116,
			"around": 7,
			"singing": 7,
			"sad": 21,
			"sweetness": 6,
			"virtue": 2,
			"everlasting": 4,
			"soft": 22,
			"wave": 29,
			"drew": 1,
			"now": 18,
			"set": 4,
			"give": 5,
			"gaze": 4,
			"single": 4,
			"foreign": 2,
			"flying": 9,
			"some": 8,
			"shone": 2,
			"learned": 2,
			"till": 6,
			"hair": 10,
			"tempest": 12,
			"realm": 6,
			"meet": 3,
			"heads": 5,
			"will": 24,
			"follow": 2,
			"flash": 8,
			"strong": 16,
			"himself": 4,
			"locks": 2,
			"prayers": 4,
			"lying": 2,
			"all": 29,
			"chief": 6,
			"patient": 7,
			"grief": 12,
			"desolate": 10,
			"gay": 15,
			"drum": 10,
			"gods": 21,
			"wild": 43,
			"loving": 4,
			"fires": 9,
			"then": 21,
			"room": 15,
			"gale": 13,
			"harvest": 10,
			"ho": 4,
			"slain": 10,
			"feed": 3,
			"flesh": 6,
			"poured": 3,
			"large": 8,
			"blest": 12,
			"thought": 22,
			"could": 2,
			"through": 29,
			"pleasant": 7,
			"notes": 6,
			"thomas": 2,
			"ten": 2,
			"foe": 45,
			"has": 16,
			"street": 24,
			"songs": 14,
			"thats": 3,
			"asleep": 1,
			"laugh": 1,
			"toil": 12,
			"service": 6,
			"angels": 79,
			"george": 1,
			"well": 15,
			"rhine": 19,
			"doth": 7,
			"thread": 4,
			"road": 23,
			"clear": 10,
			"king": 67,
			"shine": 5,
			"couch": 6,
			"lake": 15,
			"mount": 3,
			"master": 13,
			"ways": 7,
			"nights": 5,
			"peaceful": 4,
			"spring": 33,
			"minds": 4,
			"upward": 1,
			"fiery": 18,
			"turned": 4,
			"begun": 1,
			"being": 4,
			"beauteous": 2,
			"behind": 3,
			"wealth": 9,
			"our": 12,
			"throne": 21,
			"smoke": 13,
			"storms": 7,
			"wrong": 16,
			"day": 123,
			"sense": 17,
			"hall": 15,
			"walked": 1,
			"passing": 7,
			"works": 4,
			"aside": 1,
			"gathered": 7,
			"open": 19,
			"page": 6,
			"frame": 4,
			"neer": 2,
			"future": 20,
			"fear": 9,
			"night": 126,
			"patience": 1,
			"needs": 1,
			"ends": 2,
			"fallen": 6,
			"mercy": 4,
			"loved": 15,
			"pity": 1,
			"shall": 22,
			"before": 4,
			"echo": 6,
			"only": 23,
			"golden": 37,
			"wind": 67,
			"still": 28,
			"chance": 2,
			"your": 7,
			"shade": 39,
			"natures": 1,
			"mingled": 2,
			"yet": 7,
			"best": 57,
			"way": 67,
			"mark": 9,
			"course": 7,
			"to": 127,
			"loud": 18,
			"poetry": 11,
			"hill": 58,
			"clouds": 34,
			"youth": 9,
			"human": 24,
			"poets": 13,
			"speed": 4,
			"cities": 6,
			"knee": 10,
			"springs": 7,
			"into": 4,
			"cut": 1,
			"round": 18,
			"wood": 15,
			"flame": 12,
			"keen": 3,
			"turn": 2,
			"thinking": 1,
			"mid": 1,
			"slowly": 6,
			"lie": 4,
			"little": 50,
			"answer": 4,
			"written": 3,
			"rich": 12,
			"live": 2,
			"strain": 11,
			"religion": 2,
			"use": 10,
			"homes": 3,
			"backward": 3,
			"heavenly": 9,
			"glorious": 21,
			"turning": 3,
			"wounds": 3,
			"growing": 5,
			"hence": 1,
			"view": 7,
			"spear": 13,
			"know": 3,
			"mould": 4,
			"prove": 1,
			"vows": 1,
			"sore": 1,
			"art": 7,
			"lived": 1,
			"ah": 3,
			"harp": 10,
			"bold": 10,
			"flow": 5,
			"vast": 14,
			"may": 36,
			"hail": 3,
			"strife": 22,
			"eve": 2,
			"sweep": 2,
			"whisper": 3,
			"withered": 3,
			"apart": 2,
			"enter": 2,
			"yon": 1,
			"sign": 12,
			"ship": 2,
			"skies": 68,
			"smiled": 1,
			"powers": 9,
			"we": 31,
			"gloom": 24,
			"glad": 15,
			"simple": 6,
			"loss": 5,
			"infant": 5,
			"spread": 4,
			"store": 3,
			"whose": 13,
			"falling": 12,
			"as": 59,
			"throng": 10,
			"array": 1,
			"fair": 32,
			"borne": 2,
			"heavens": 27,
			"stand": 2,
			"english": 21,
			"happy": 30,
			"done": 2,
			"said": 17,
			"life": 37,
			"french": 21,
			"noon": 8,
			"end": 28,
			"he": 50,
			"arms": 11,
			"me": 9,
			"sat": 2,
			"strength": 15,
			"son": 18,
			"flag": 23,
			"gleam": 7,
			"at": 40,
			"fancy": 3,
			"deer": 15,
			"below": 4,
			"straight": 3,
			"slumber": 1,
			"frown": 6,
			"seat": 7,
			"point": 5,
			"lies": 9,
			"wound": 3,
			"o": 45,
			"east": 31,
			"coming": 24,
			"chain": 13,
			"gain": 5,
			"greek": 16,
			"grow": 6,
			"yonder": 3,
			"weight": 6,
			"left": 8,
			"translation": 6,
			"rings": 3,
			"chorus": 6,
			"streams": 5,
			"blessed": 9,
			"arise": 1,
			"common": 9,
			"the": 314,
			"ghost": 2,
			"tis": 4,
			"waste": 9,
			"though": 4,
			"fight": 34,
			"treasure": 1,
			"sure": 5,
			"world": 230,
			"bent": 5,
			"stood": 13,
			"scarce": 2,
			"drawn": 2,
			"seems": 2,
			"house": 17,
			"labor": 3,
			"her": 15,
			"leads": 3,
			"passed": 1,
			"share": 3,
			"radiant": 3,
			"weak": 6,
			"grand": 7,
			"young": 36,
			"been": 2,
			"dead": 109,
			"tread": 9,
			"thirst": 1,
			"fire": 26,
			"trees": 39,
			"scene": 19,
			"fail": 1,
			"near": 7,
			"first": 73,
			"seas": 18,
			"devil": 20,
			"oft": 2,
			"soldier": 11,
			"there": 23,
			"grim": 4,
			"lowly": 5,
			"restless": 3,
			"in": 188,
			"flowers": 31,
			"choice": 7,
			"harmony": 1,
			"step": 1,
			"purpose": 4,
			"dim": 9,
			"shed": 3,
			"air": 94,
			"north": 20,
			"ruin": 4,
			"saith": 9,
			"seem": 2,
			"thoughts": 14,
			"sky": 86,
			"oak": 8,
			"grows": 8
		},
		"ghost": {
			"walks": 2,
			"of": 4,
			"this": 1,
			"she": 1,
			"not": 1,
			"it": 1,
			"return": 1,
			"mother": 1,
			"along": 1,
			"that": 1,
			"what": 1,
			"heart": 1,
			"thou": 1,
			"with": 1,
			"through": 1,
			"to": 2,
			"o": 1,
			"the": 3
		},
		"tis": {
			"sweet": 2,
			"summer": 1,
			"more": 2,
			"dreary": 1,
			"weary": 2,
			"very": 1,
			"next": 1,
			"seen": 1,
			"greece": 1,
			"of": 2,
			"up": 1,
			"liberty": 1,
			"pain": 1,
			"not": 16,
			"by": 1,
			"something": 2,
			"wars": 1,
			"soon": 1,
			"like": 2,
			"hard": 2,
			"found": 1,
			"forms": 1,
			"good": 1,
			"easy": 2,
			"you": 1,
			"thus": 1,
			"heard": 1,
			"holy": 1,
			"for": 3,
			"heaven": 3,
			"bloody": 1,
			"my": 1,
			"thy": 3,
			"morn": 1,
			"vain": 1,
			"makes": 1,
			"friendship": 1,
			"god": 1,
			"that": 2,
			"always": 1,
			"broken": 1,
			"what": 1,
			"an": 4,
			"nothing": 1,
			"trod": 1,
			"a": 12,
			"given": 2,
			"falls": 1,
			"true": 4,
			"folly": 1,
			"never": 2,
			"almost": 1,
			"love": 1,
			"evermore": 1,
			"deep": 1,
			"but": 8,
			"time": 1,
			"buried": 1,
			"years": 1,
			"when": 1,
			"and": 2,
			"truth": 1,
			"dark": 1,
			"i": 2,
			"thou": 2,
			"here": 1,
			"too": 1,
			"one": 1,
			"rome": 1,
			"each": 1,
			"from": 1,
			"early": 1,
			"solitude": 1,
			"with": 1,
			"around": 1,
			"virtue": 1,
			"now": 1,
			"some": 1,
			"all": 4,
			"then": 1,
			"pleasant": 2,
			"well": 1,
			"mercy": 1,
			"shall": 1,
			"only": 1,
			"yet": 1,
			"to": 7,
			"we": 1,
			"as": 2,
			"done": 1,
			"said": 1,
			"life": 2,
			"he": 3,
			"left": 1,
			"the": 19,
			"in": 1
		},
		"aroon": {
			"made": 1,
			"who": 3,
			"nor": 1,
			"try": 1,
			"why": 1,
			"you": 1,
			"came": 1,
			"john": 1,
			"am": 1,
			"their": 1,
			"never": 1,
			"when": 1,
			"and": 4,
			"our": 1,
			"yet": 1,
			"her": 1
		},
		"waste": {
			"his": 1,
			"are": 1,
			"of": 8,
			"once": 1,
			"long": 1,
			"like": 1,
			"its": 1,
			"where": 1,
			"for": 1,
			"thy": 1,
			"that": 2,
			"their": 2,
			"lives": 1,
			"and": 6,
			"these": 1,
			"no": 1,
			"with": 1,
			"to": 1,
			"we": 1,
			"the": 2,
			"in": 2
		},
		"though": {
			"sweet": 1,
			"dying": 1,
			"more": 1,
			"unseen": 1,
			"free": 1,
			"earth": 1,
			"his": 5,
			"banner": 1,
			"ages": 2,
			"none": 2,
			"humble": 1,
			"right": 2,
			"under": 1,
			"men": 1,
			"which": 1,
			"dies": 1,
			"of": 4,
			"blind": 1,
			"rude": 1,
			"kept": 1,
			"once": 1,
			"angel": 1,
			"she": 3,
			"among": 1,
			"roar": 1,
			"stormy": 1,
			"dear": 1,
			"mine": 1,
			"not": 5,
			"every": 1,
			"pressed": 1,
			"it": 11,
			"far": 2,
			"spirits": 1,
			"by": 3,
			"sorrows": 1,
			"nations": 1,
			"mute": 1,
			"cold": 1,
			"rise": 1,
			"few": 1,
			"like": 1,
			"hard": 1,
			"good": 1,
			"about": 1,
			"they": 12,
			"you": 5,
			"tyrants": 1,
			"pale": 1,
			"its": 2,
			"than": 1,
			"friends": 1,
			"heaven": 1,
			"lost": 2,
			"should": 1,
			"lonely": 1,
			"my": 14,
			"short": 1,
			"deaths": 1,
			"thy": 3,
			"battle": 1,
			"wept": 1,
			"hope": 1,
			"trembling": 1,
			"were": 1,
			"oer": 3,
			"that": 3,
			"show": 1,
			"full": 1,
			"fall": 1,
			"nothing": 1,
			"music": 1,
			"even": 1,
			"conscience": 1,
			"late": 2,
			"sae": 1,
			"their": 1,
			"a": 8,
			"given": 1,
			"joys": 1,
			"green": 1,
			"never": 1,
			"love": 1,
			"on": 3,
			"but": 3,
			"death": 1,
			"foes": 1,
			"poor": 2,
			"terror": 1,
			"be": 2,
			"t": 1,
			"naught": 1,
			"heart": 1,
			"sorrow": 1,
			"and": 11,
			"lone": 1,
			"i": 13,
			"unknown": 1,
			"thou": 7,
			"tower": 1,
			"dull": 1,
			"fields": 1,
			"each": 1,
			"beat": 1,
			"beneath": 1,
			"hidden": 1,
			"while": 1,
			"no": 8,
			"ears": 1,
			"with": 7,
			"around": 1,
			"sad": 4,
			"now": 3,
			"single": 1,
			"will": 1,
			"strong": 1,
			"himself": 2,
			"all": 11,
			"gods": 1,
			"through": 1,
			"well": 2,
			"clear": 1,
			"wake": 1,
			"turned": 1,
			"our": 2,
			"storms": 1,
			"wrong": 1,
			"neer": 4,
			"equal": 1,
			"fallen": 3,
			"still": 2,
			"your": 2,
			"yet": 2,
			"to": 1,
			"may": 1,
			"sweep": 1,
			"we": 4,
			"borne": 1,
			"heavens": 1,
			"life": 2,
			"he": 6,
			"strength": 1,
			"at": 2,
			"the": 39,
			"her": 3,
			"radiant": 1,
			"dead": 3,
			"seas": 1,
			"oft": 3,
			"there": 5,
			"in": 8
		},
		"fight": {
			"more": 1,
			"went": 1,
			"virtues": 1,
			"his": 2,
			"see": 1,
			"s": 1,
			"are": 1,
			"of": 2,
			"after": 1,
			"up": 1,
			"three": 1,
			"thyself": 1,
			"it": 2,
			"began": 1,
			"send": 1,
			"by": 1,
			"is": 3,
			"although": 1,
			"like": 1,
			"forever": 1,
			"they": 3,
			"you": 1,
			"for": 7,
			"rest": 1,
			"my": 1,
			"john": 1,
			"again": 3,
			"thy": 1,
			"ere": 1,
			"tonight": 1,
			"better": 2,
			"were": 1,
			"oer": 1,
			"did": 2,
			"another": 1,
			"had": 2,
			"or": 2,
			"their": 1,
			"a": 2,
			"on": 2,
			"but": 3,
			"thee": 1,
			"when": 1,
			"and": 12,
			"ask": 1,
			"thou": 1,
			"fought": 1,
			"how": 1,
			"from": 2,
			"no": 1,
			"with": 3,
			"now": 3,
			"some": 1,
			"till": 1,
			"all": 1,
			"then": 3,
			"our": 1,
			"before": 1,
			"yet": 1,
			"bold": 1,
			"we": 1,
			"as": 1,
			"at": 1,
			"the": 4,
			"scarce": 1,
			"her": 1,
			"been": 1,
			"there": 1
		},
		"theyre": {
			"us": 1,
			"free": 1,
			"grown": 1,
			"every": 1,
			"you": 1,
			"for": 1,
			"spent": 1,
			"soul": 1,
			"their": 1,
			"a": 1,
			"all": 2,
			"done": 1,
			"said": 1,
			"he": 1,
			"below": 1,
			"led": 1,
			"the": 1,
			"in": 3
		},
		"treasure": {
			"hast": 1,
			"are": 1,
			"of": 4,
			"it": 1,
			"is": 2,
			"unto": 1,
			"without": 1,
			"lost": 1,
			"rest": 1,
			"thy": 1,
			"peace": 1,
			"tears": 1,
			"a": 1,
			"time": 1,
			"thou": 1,
			"mortal": 1,
			"from": 1,
			"all": 1,
			"we": 1,
			"the": 1,
			"in": 1
		},
		"sure": {
			"dying": 1,
			"his": 1,
			"word": 1,
			"who": 1,
			"of": 4,
			"sons": 1,
			"it": 2,
			"something": 1,
			"is": 2,
			"than": 1,
			"tomorrow": 1,
			"my": 3,
			"faith": 1,
			"that": 4,
			"if": 2,
			"what": 1,
			"an": 1,
			"a": 2,
			"t": 1,
			"and": 6,
			"i": 1,
			"such": 1,
			"help": 1,
			"will": 2,
			"then": 1,
			"before": 2,
			"to": 13,
			"as": 5,
			"said": 1,
			"he": 3,
			"at": 1,
			"the": 11,
			"though": 1
		},
		"world": {
			"sweet": 1,
			"itself": 1,
			"since": 2,
			"thine": 1,
			"within": 2,
			"unseen": 2,
			"im": 3,
			"his": 3,
			"breathing": 1,
			"saints": 1,
			"beside": 2,
			"who": 3,
			"seen": 1,
			"silent": 1,
			"of": 23,
			"this": 2,
			"keep": 1,
			"calls": 3,
			"she": 1,
			"beyond": 1,
			"nor": 2,
			"goes": 1,
			"fresh": 1,
			"today": 1,
			"it": 5,
			"over": 1,
			"weep": 1,
			"send": 1,
			"by": 1,
			"alone": 1,
			"is": 33,
			"cross": 1,
			"like": 2,
			"farewell": 2,
			"away": 2,
			"forever": 3,
			"ever": 1,
			"they": 1,
			"thus": 1,
			"new": 2,
			"without": 5,
			"robert": 1,
			"laid": 1,
			"its": 3,
			"than": 1,
			"those": 1,
			"where": 1,
			"for": 2,
			"read": 1,
			"hand": 2,
			"my": 3,
			"standing": 1,
			"again": 2,
			"enough": 1,
			"thy": 1,
			"comes": 1,
			"false": 1,
			"can": 4,
			"were": 2,
			"oer": 2,
			"was": 12,
			"that": 5,
			"if": 1,
			"let": 1,
			"both": 1,
			"go": 2,
			"must": 1,
			"what": 1,
			"an": 1,
			"repose": 1,
			"or": 2,
			"have": 1,
			"am": 2,
			"their": 1,
			"a": 5,
			"so": 3,
			"hath": 1,
			"on": 1,
			"above": 3,
			"but": 3,
			"thee": 1,
			"when": 2,
			"be": 5,
			"t": 1,
			"and": 27,
			"do": 2,
			"i": 4,
			"unknown": 1,
			"thou": 9,
			"too": 3,
			"one": 1,
			"might": 6,
			"such": 1,
			"draw": 1,
			"looks": 1,
			"how": 2,
			"from": 4,
			"beneath": 2,
			"honor": 1,
			"no": 3,
			"with": 12,
			"around": 3,
			"sad": 1,
			"now": 1,
			"till": 1,
			"will": 2,
			"himself": 1,
			"all": 2,
			"poured": 1,
			"could": 1,
			"through": 1,
			"has": 2,
			"well": 1,
			"doth": 2,
			"nights": 1,
			"aside": 1,
			"night": 1,
			"shall": 4,
			"yet": 2,
			"to": 11,
			"turn": 1,
			"slowly": 1,
			"art": 1,
			"may": 2,
			"smiled": 1,
			"we": 2,
			"whose": 1,
			"as": 4,
			"he": 3,
			"me": 1,
			"below": 2,
			"o": 4,
			"the": 8,
			"though": 1,
			"her": 3,
			"there": 1,
			"in": 14,
			"grows": 1
		},
		"bent": {
			"low": 2,
			"more": 1,
			"his": 1,
			"him": 1,
			"of": 1,
			"perish": 1,
			"try": 1,
			"eyes": 1,
			"like": 2,
			"should": 1,
			"my": 1,
			"man": 1,
			"their": 1,
			"on": 5,
			"old": 1,
			"rushed": 1,
			"and": 3,
			"down": 3,
			"such": 1,
			"from": 1,
			"with": 2,
			"some": 1,
			"all": 1,
			"page": 1,
			"to": 4,
			"as": 2,
			"me": 1,
			"the": 8,
			"her": 1,
			"in": 1
		},
		"stood": {
			"sweet": 1,
			"bow": 1,
			"his": 2,
			"none": 1,
			"weary": 1,
			"beside": 3,
			"six": 1,
			"who": 3,
			"amid": 1,
			"up": 2,
			"serene": 1,
			"it": 1,
			"over": 1,
			"by": 5,
			"alone": 2,
			"like": 1,
			"wide": 1,
			"een": 1,
			"where": 1,
			"looking": 3,
			"just": 1,
			"for": 1,
			"face": 1,
			"half": 1,
			"an": 1,
			"even": 1,
			"or": 1,
			"a": 4,
			"upon": 4,
			"on": 4,
			"fast": 1,
			"deep": 1,
			"but": 1,
			"when": 2,
			"firm": 1,
			"and": 12,
			"one": 1,
			"how": 1,
			"from": 1,
			"beneath": 2,
			"while": 1,
			"calm": 1,
			"with": 7,
			"around": 1,
			"now": 1,
			"till": 1,
			"all": 2,
			"through": 1,
			"our": 2,
			"before": 6,
			"still": 4,
			"to": 4,
			"round": 1,
			"vast": 1,
			"he": 1,
			"at": 5,
			"the": 11,
			"stood": 1,
			"her": 1,
			"there": 2,
			"in": 8
		},
		"scarce": {
			"his": 1,
			"serve": 1,
			"long": 1,
			"is": 1,
			"ever": 1,
			"heard": 1,
			"than": 1,
			"where": 1,
			"for": 1,
			"themselves": 1,
			"any": 1,
			"can": 2,
			"were": 1,
			"did": 1,
			"was": 2,
			"if": 1,
			"fall": 1,
			"half": 1,
			"a": 4,
			"pains": 1,
			"be": 1,
			"do": 1,
			"thou": 1,
			"one": 1,
			"such": 1,
			"would": 1,
			"could": 2,
			"through": 1,
			"king": 1,
			"begun": 1,
			"to": 1,
			"lie": 1,
			"know": 2,
			"yon": 1,
			"we": 1,
			"o": 1,
			"the": 6,
			"theyre": 1
		},
		"drawn": {
			"war": 1,
			"are": 1,
			"up": 1,
			"sword": 1,
			"its": 1,
			"my": 1,
			"a": 1,
			"sees": 1,
			"above": 1,
			"out": 2,
			"and": 3,
			"too": 1,
			"against": 1,
			"from": 2,
			"we": 1,
			"in": 2
		},
		"seems": {
			"right": 1,
			"not": 1,
			"it": 2,
			"something": 1,
			"like": 2,
			"most": 1,
			"was": 1,
			"that": 1,
			"a": 5,
			"so": 5,
			"almost": 1,
			"but": 2,
			"and": 2,
			"sleeping": 1,
			"no": 1,
			"all": 1,
			"asleep": 1,
			"wrong": 1,
			"yet": 2,
			"to": 23,
			"as": 4,
			"happy": 2,
			"the": 2,
			"tis": 1,
			"bent": 1,
			"in": 1
		},
		"house": {
			"him": 1,
			"fit": 1,
			"made": 1,
			"which": 1,
			"holds": 1,
			"of": 7,
			"feels": 1,
			"it": 1,
			"shut": 1,
			"is": 4,
			"hard": 1,
			"good": 2,
			"you": 1,
			"where": 1,
			"cup": 1,
			"my": 1,
			"again": 1,
			"was": 1,
			"that": 2,
			"make": 1,
			"must": 1,
			"an": 3,
			"a": 1,
			"so": 1,
			"upon": 1,
			"never": 1,
			"on": 4,
			"but": 1,
			"when": 3,
			"turns": 1,
			"and": 9,
			"i": 2,
			"unknown": 1,
			"against": 1,
			"from": 1,
			"with": 1,
			"wave": 1,
			"all": 1,
			"then": 1,
			"doth": 1,
			"to": 2,
			"lived": 1,
			"whose": 2,
			"in": 4
		},
		"labor": {
			"come": 1,
			"wrought": 1,
			"lift": 1,
			"not": 1,
			"it": 1,
			"health": 1,
			"is": 3,
			"you": 1,
			"for": 2,
			"lost": 1,
			"hushed": 1,
			"wit": 1,
			"did": 1,
			"was": 1,
			"or": 1,
			"folly": 1,
			"never": 1,
			"many": 1,
			"met": 1,
			"when": 1,
			"and": 5,
			"while": 1,
			"no": 1,
			"bound": 1,
			"night": 1,
			"to": 2,
			"little": 1,
			"we": 1,
			"life": 1,
			"at": 1,
			"passed": 1,
			"in": 1
		},
		"her": {
			"sweet": 5,
			"tune": 1,
			"flower": 1,
			"blue": 3,
			"come": 2,
			"dying": 1,
			"summer": 1,
			"saviour": 2,
			"woes": 3,
			"sighs": 1,
			"suffering": 2,
			"ain": 1,
			"parting": 1,
			"virtues": 1,
			"gates": 1,
			"worn": 1,
			"wish": 1,
			"fierce": 2,
			"free": 1,
			"light": 4,
			"earth": 2,
			"birds": 1,
			"forehead": 2,
			"his": 2,
			"stream": 1,
			"crest": 1,
			"ear": 2,
			"midnight": 1,
			"blood": 4,
			"narrow": 1,
			"hero": 1,
			"precious": 2,
			"cheek": 16,
			"play": 1,
			"bare": 1,
			"kiss": 2,
			"breathing": 2,
			"horn": 3,
			"thousand": 1,
			"creed": 1,
			"white": 3,
			"none": 1,
			"woe": 3,
			"silver": 5,
			"purple": 1,
			"weary": 1,
			"seemed": 1,
			"are": 3,
			"story": 2,
			"fears": 1,
			"right": 2,
			"back": 5,
			"warm": 2,
			"made": 1,
			"under": 1,
			"next": 1,
			"who": 6,
			"silent": 1,
			"guard": 1,
			"gate": 1,
			"lover": 1,
			"which": 1,
			"sake": 3,
			"worth": 1,
			"call": 2,
			"country": 2,
			"steps": 1,
			"of": 9,
			"this": 1,
			"star": 1,
			"high": 4,
			"fame": 1,
			"amid": 3,
			"hung": 1,
			"talk": 1,
			"kept": 1,
			"once": 2,
			"up": 6,
			"angel": 1,
			"she": 15,
			"nor": 1,
			"sons": 5,
			"sacred": 1,
			"three": 2,
			"heavy": 1,
			"sight": 1,
			"grown": 1,
			"joy": 1,
			"cling": 1,
			"height": 1,
			"brother": 6,
			"played": 2,
			"race": 2,
			"dear": 1,
			"two": 1,
			"pain": 1,
			"mouth": 2,
			"place": 2,
			"part": 1,
			"sick": 1,
			"sands": 1,
			"rose": 1,
			"limbs": 2,
			"behold": 1,
			"solemn": 2,
			"not": 2,
			"burn": 1,
			"constant": 1,
			"side": 8,
			"burden": 2,
			"starry": 4,
			"every": 1,
			"sword": 1,
			"it": 1,
			"evil": 2,
			"host": 1,
			"began": 1,
			"sins": 1,
			"maiden": 3,
			"flight": 1,
			"far": 1,
			"spirits": 1,
			"child": 5,
			"lights": 1,
			"bark": 2,
			"tongue": 1,
			"bless": 1,
			"load": 1,
			"by": 11,
			"eyes": 20,
			"fathers": 7,
			"father": 3,
			"alone": 2,
			"long": 1,
			"quiet": 1,
			"cold": 1,
			"pride": 2,
			"land": 1,
			"wise": 1,
			"is": 6,
			"soon": 1,
			"rise": 1,
			"like": 2,
			"lo": 1,
			"boy": 1,
			"fairest": 1,
			"hard": 1,
			"away": 2,
			"form": 3,
			"children": 5,
			"forms": 1,
			"why": 1,
			"native": 2,
			"people": 2,
			"forever": 1,
			"good": 2,
			"they": 2,
			"shook": 4,
			"speech": 1,
			"path": 1,
			"faint": 1,
			"funeral": 1,
			"tyrants": 1,
			"guide": 1,
			"mother": 4,
			"pale": 7,
			"seven": 3,
			"new": 1,
			"weakness": 1,
			"rosy": 1,
			"sister": 2,
			"than": 1,
			"smile": 3,
			"song": 2,
			"those": 1,
			"crown": 2,
			"friends": 2,
			"where": 1,
			"gentle": 3,
			"small": 2,
			"train": 2,
			"lovers": 2,
			"holy": 2,
			"for": 9,
			"hand": 15,
			"bosom": 11,
			"cry": 3,
			"clime": 1,
			"should": 1,
			"darling": 1,
			"theres": 1,
			"take": 3,
			"speak": 2,
			"breath": 6,
			"rest": 3,
			"my": 4,
			"fingers": 1,
			"words": 2,
			"came": 1,
			"note": 1,
			"great": 2,
			"tender": 4,
			"beauty": 5,
			"sing": 2,
			"smiles": 1,
			"battle": 2,
			"pretty": 1,
			"moan": 1,
			"warrior": 2,
			"peace": 3,
			"hopes": 1,
			"birth": 1,
			"whom": 1,
			"better": 2,
			"ray": 1,
			"shadow": 3,
			"soul": 7,
			"passion": 1,
			"various": 1,
			"senses": 1,
			"held": 1,
			"torn": 1,
			"evening": 3,
			"yellow": 1,
			"rising": 1,
			"wrath": 1,
			"lords": 1,
			"name": 2,
			"door": 2,
			"clay": 1,
			"queen": 1,
			"face": 30,
			"battles": 1,
			"trembling": 2,
			"god": 1,
			"power": 1,
			"were": 5,
			"bud": 1,
			"waking": 1,
			"oer": 2,
			"sabbath": 1,
			"need": 1,
			"shell": 1,
			"trumpet": 1,
			"cause": 1,
			"did": 2,
			"walls": 1,
			"was": 11,
			"that": 9,
			"show": 1,
			"womans": 1,
			"lips": 6,
			"arm": 1,
			"man": 2,
			"both": 1,
			"taste": 1,
			"make": 1,
			"busy": 1,
			"reign": 1,
			"half": 1,
			"trust": 1,
			"had": 4,
			"must": 1,
			"climb": 1,
			"pure": 4,
			"what": 2,
			"oh": 1,
			"beautiful": 1,
			"an": 1,
			"nothing": 1,
			"music": 1,
			"charms": 1,
			"or": 3,
			"waiting": 1,
			"ran": 1,
			"eye": 16,
			"soil": 1,
			"lest": 1,
			"moved": 1,
			"hands": 8,
			"bright": 1,
			"have": 1,
			"blush": 1,
			"tears": 11,
			"towers": 1,
			"winter": 1,
			"a": 6,
			"so": 2,
			"babe": 2,
			"sometimes": 1,
			"adieu": 1,
			"true": 2,
			"green": 5,
			"flies": 1,
			"lay": 1,
			"lord": 1,
			"never": 1,
			"many": 2,
			"spirit": 4,
			"leave": 1,
			"met": 1,
			"love": 9,
			"tomb": 3,
			"on": 11,
			"break": 1,
			"charm": 2,
			"own": 18,
			"shroud": 1,
			"mountain": 1,
			"deep": 1,
			"memory": 1,
			"roaring": 1,
			"old": 3,
			"naked": 2,
			"but": 8,
			"bell": 2,
			"infinite": 1,
			"grass": 1,
			"brown": 1,
			"death": 1,
			"foes": 3,
			"time": 3,
			"poor": 1,
			"empty": 1,
			"buried": 1,
			"ye": 2,
			"years": 1,
			"when": 6,
			"gone": 1,
			"merry": 1,
			"waters": 1,
			"sigh": 1,
			"dreams": 1,
			"task": 2,
			"be": 2,
			"bed": 3,
			"van": 2,
			"ay": 1,
			"roses": 1,
			"feet": 15,
			"wings": 6,
			"glory": 3,
			"veil": 1,
			"out": 1,
			"kind": 3,
			"dumb": 1,
			"earthly": 1,
			"brave": 2,
			"rage": 1,
			"heart": 22,
			"say": 4,
			"head": 11,
			"and": 58,
			"truth": 1,
			"dark": 1,
			"last": 2,
			"lone": 1,
			"sunshine": 1,
			"lovely": 1,
			"dream": 1,
			"days": 1,
			"grave": 5,
			"fly": 1,
			"i": 6,
			"snow": 1,
			"thou": 1,
			"woman": 1,
			"down": 5,
			"home": 6,
			"swell": 1,
			"tower": 2,
			"wretched": 1,
			"here": 1,
			"mournful": 1,
			"too": 1,
			"mirth": 1,
			"presence": 2,
			"mortal": 1,
			"one": 2,
			"breathes": 1,
			"chamber": 1,
			"such": 1,
			"shining": 2,
			"rocks": 1,
			"against": 2,
			"perfect": 1,
			"secret": 2,
			"tall": 1,
			"state": 1,
			"work": 1,
			"stands": 1,
			"broad": 2,
			"each": 3,
			"brow": 5,
			"how": 1,
			"other": 2,
			"from": 10,
			"sleeping": 2,
			"marble": 1,
			"would": 1,
			"living": 1,
			"mind": 7,
			"reason": 1,
			"rare": 1,
			"ancient": 4,
			"while": 2,
			"foul": 1,
			"breast": 16,
			"mystic": 1,
			"bound": 1,
			"worst": 1,
			"voice": 4,
			"maidens": 2,
			"dread": 1,
			"decay": 1,
			"goodly": 1,
			"guilty": 1,
			"mighty": 1,
			"ears": 1,
			"with": 15,
			"around": 1,
			"virtue": 1,
			"soft": 1,
			"now": 3,
			"gaze": 1,
			"single": 1,
			"some": 1,
			"shone": 1,
			"hair": 7,
			"meet": 1,
			"will": 3,
			"wore": 1,
			"locks": 1,
			"all": 8,
			"patient": 1,
			"grief": 3,
			"gay": 1,
			"wild": 1,
			"then": 2,
			"room": 1,
			"large": 1,
			"thought": 2,
			"could": 2,
			"through": 3,
			"pleasant": 1,
			"notes": 1,
			"foe": 2,
			"songs": 1,
			"doth": 1,
			"thread": 1,
			"couch": 1,
			"master": 2,
			"wealth": 2,
			"throne": 3,
			"day": 1,
			"sense": 1,
			"works": 2,
			"open": 3,
			"page": 1,
			"frame": 1,
			"future": 2,
			"night": 1,
			"fallen": 2,
			"mercy": 1,
			"loved": 1,
			"shall": 3,
			"before": 1,
			"hundred": 1,
			"only": 3,
			"golden": 1,
			"still": 1,
			"your": 1,
			"shade": 2,
			"yet": 1,
			"best": 1,
			"way": 3,
			"mark": 2,
			"course": 1,
			"to": 27,
			"loud": 1,
			"youth": 2,
			"poets": 2,
			"speed": 1,
			"knee": 3,
			"round": 1,
			"wood": 1,
			"slowly": 1,
			"little": 9,
			"answer": 1,
			"rich": 1,
			"gently": 1,
			"heavenly": 1,
			"glorious": 1,
			"wounds": 1,
			"hence": 1,
			"harp": 1,
			"sweep": 1,
			"whisper": 1,
			"withered": 2,
			"skies": 2,
			"we": 2,
			"glad": 3,
			"infant": 2,
			"spread": 1,
			"store": 1,
			"whose": 1,
			"as": 7,
			"throng": 2,
			"fair": 7,
			"happy": 1,
			"said": 1,
			"life": 8,
			"he": 1,
			"arms": 3,
			"me": 1,
			"sat": 1,
			"strength": 1,
			"son": 4,
			"flag": 1,
			"seat": 2,
			"lies": 1,
			"o": 4,
			"left": 1,
			"the": 24,
			"tis": 1,
			"though": 1,
			"stood": 1,
			"house": 2,
			"her": 9,
			"grand": 1,
			"young": 5,
			"near": 1,
			"first": 2,
			"oft": 1,
			"soldier": 2,
			"there": 4,
			"lowly": 1,
			"in": 21,
			"flowers": 1,
			"step": 1,
			"purpose": 1,
			"shed": 1,
			"air": 1,
			"ruin": 1,
			"seem": 1,
			"thoughts": 2
		},
		"leads": {
			"us": 3,
			"his": 1,
			"men": 1,
			"up": 1,
			"off": 1,
			"on": 1,
			"and": 1,
			"our": 1,
			"to": 8,
			"me": 1,
			"at": 1,
			"the": 4
		},
		"passed": {
			"since": 2,
			"of": 2,
			"beyond": 1,
			"it": 1,
			"by": 8,
			"long": 1,
			"like": 1,
			"away": 9,
			"sung": 1,
			"thus": 1,
			"again": 2,
			"along": 1,
			"oer": 1,
			"that": 1,
			"if": 1,
			"a": 1,
			"them": 1,
			"upon": 1,
			"love": 1,
			"on": 4,
			"thee": 1,
			"and": 6,
			"down": 1,
			"from": 6,
			"with": 2,
			"around": 1,
			"through": 5,
			"our": 1,
			"to": 5,
			"into": 1,
			"life": 2,
			"below": 1,
			"the": 5,
			"in": 5
		},
		"share": {
			"his": 2,
			"of": 3,
			"whatever": 1,
			"not": 1,
			"is": 1,
			"earths": 1,
			"for": 1,
			"thy": 1,
			"seek": 1,
			"oh": 1,
			"their": 2,
			"on": 1,
			"but": 3,
			"and": 1,
			"no": 1,
			"with": 1,
			"to": 1,
			"ah": 1,
			"eve": 1,
			"we": 1,
			"the": 3,
			"though": 1,
			"her": 2,
			"oft": 1,
			"in": 1
		},
		"change": {
			"itself": 1,
			"his": 3,
			"him": 1,
			"of": 5,
			"this": 1,
			"nor": 3,
			"every": 1,
			"it": 1,
			"weep": 1,
			"water": 1,
			"by": 1,
			"for": 2,
			"my": 3,
			"came": 7,
			"thy": 2,
			"can": 2,
			"both": 1,
			"or": 3,
			"their": 1,
			"a": 2,
			"hath": 1,
			"old": 1,
			"but": 1,
			"mans": 1,
			"heart": 1,
			"and": 7,
			"thou": 1,
			"one": 1,
			"from": 1,
			"sublime": 1,
			"beneath": 1,
			"no": 2,
			"now": 1,
			"all": 1,
			"through": 1,
			"beauteous": 1,
			"shall": 2,
			"to": 4,
			"as": 4,
			"o": 3,
			"the": 8,
			"her": 1,
			"there": 1,
			"in": 1
		},
		"radiant": {
			"gates": 1,
			"white": 1,
			"of": 1,
			"eyes": 1,
			"bring": 1,
			"my": 1,
			"face": 1,
			"when": 1,
			"be": 1,
			"feet": 1,
			"line": 1,
			"and": 2,
			"dark": 1,
			"i": 1,
			"one": 2,
			"from": 1,
			"maid": 1,
			"dost": 1,
			"way": 1,
			"glorious": 1,
			"arms": 1,
			"in": 1
		},
		"safe": {
			"this": 1,
			"een": 1,
			"fold": 1,
			"on": 1,
			"and": 6,
			"i": 1,
			"thou": 1,
			"one": 1,
			"from": 5,
			"while": 1,
			"with": 2,
			"all": 1,
			"to": 2,
			"may": 1,
			"as": 1,
			"o": 1,
			"the": 1,
			"in": 2
		},
		"weak": {
			"fled": 1,
			"thine": 1,
			"his": 2,
			"of": 1,
			"for": 1,
			"hand": 2,
			"if": 1,
			"let": 1,
			"oh": 1,
			"an": 2,
			"or": 1,
			"have": 1,
			"their": 2,
			"a": 1,
			"old": 1,
			"but": 2,
			"head": 1,
			"and": 7,
			"here": 1,
			"with": 1,
			"then": 1,
			"to": 3,
			"the": 2,
			"in": 1
		},
		"grand": {
			"his": 1,
			"kiss": 1,
			"are": 1,
			"which": 1,
			"of": 1,
			"among": 1,
			"nor": 1,
			"long": 1,
			"its": 2,
			"swift": 1,
			"base": 1,
			"god": 1,
			"runs": 1,
			"must": 6,
			"their": 1,
			"lay": 1,
			"old": 7,
			"but": 1,
			"when": 2,
			"and": 4,
			"i": 2,
			"shall": 1,
			"yet": 1,
			"chorus": 1,
			"grand": 1,
			"in": 1
		},
		"young": {
			"wife": 2,
			"blessings": 1,
			"forehead": 1,
			"his": 2,
			"blood": 1,
			"play": 1,
			"are": 2,
			"ive": 1,
			"who": 2,
			"men": 5,
			"ones": 2,
			"hide": 1,
			"of": 3,
			"this": 1,
			"worlds": 1,
			"daughter": 1,
			"she": 1,
			"gold": 1,
			"mouth": 1,
			"rivers": 1,
			"it": 1,
			"host": 1,
			"child": 2,
			"brought": 1,
			"by": 1,
			"is": 3,
			"like": 1,
			"they": 1,
			"mother": 1,
			"thus": 1,
			"smile": 1,
			"friends": 1,
			"gentle": 1,
			"lovers": 1,
			"bride": 2,
			"desire": 2,
			"yes": 1,
			"moan": 1,
			"yellow": 1,
			"face": 1,
			"were": 1,
			"was": 2,
			"that": 1,
			"bear": 1,
			"make": 1,
			"an": 2,
			"so": 1,
			"faces": 1,
			"babe": 1,
			"upon": 1,
			"gallant": 1,
			"many": 1,
			"girl": 6,
			"but": 2,
			"glance": 1,
			"years": 1,
			"when": 3,
			"mans": 3,
			"roses": 1,
			"heart": 3,
			"and": 21,
			"rays": 2,
			"days": 1,
			"i": 1,
			"raised": 1,
			"brow": 1,
			"hearts": 2,
			"from": 1,
			"maid": 1,
			"while": 1,
			"no": 1,
			"bound": 2,
			"roll": 1,
			"voice": 1,
			"with": 3,
			"now": 1,
			"will": 1,
			"all": 2,
			"gay": 1,
			"spring": 1,
			"fiery": 1,
			"day": 2,
			"life": 3,
			"he": 1,
			"me": 1,
			"strength": 1,
			"the": 3,
			"stood": 1,
			"young": 1,
			"dead": 3,
			"there": 1,
			"flowers": 1
		},
		"been": {
			"more": 3,
			"sent": 1,
			"taught": 1,
			"since": 1,
			"thine": 2,
			"wife": 1,
			"his": 2,
			"struck": 1,
			"fond": 1,
			"wi": 1,
			"white": 1,
			"alas": 1,
			"made": 1,
			"which": 1,
			"of": 1,
			"this": 1,
			"blind": 1,
			"kept": 1,
			"once": 1,
			"fresh": 1,
			"by": 4,
			"long": 2,
			"pride": 1,
			"like": 3,
			"they": 1,
			"laughing": 1,
			"you": 1,
			"heard": 2,
			"without": 1,
			"slave": 1,
			"laid": 1,
			"where": 2,
			"for": 4,
			"blown": 1,
			"my": 5,
			"thy": 1,
			"born": 2,
			"most": 1,
			"closed": 1,
			"wit": 1,
			"shell": 1,
			"that": 1,
			"let": 1,
			"half": 1,
			"had": 1,
			"must": 1,
			"what": 2,
			"an": 1,
			"or": 2,
			"field": 1,
			"bright": 1,
			"late": 1,
			"tears": 1,
			"a": 13,
			"so": 3,
			"true": 2,
			"on": 1,
			"content": 1,
			"but": 3,
			"death": 1,
			"known": 1,
			"thee": 1,
			"t": 1,
			"and": 9,
			"order": 1,
			"hid": 1,
			"i": 1,
			"marching": 1,
			"told": 3,
			"too": 1,
			"one": 3,
			"from": 2,
			"no": 2,
			"called": 1,
			"with": 3,
			"learned": 1,
			"lying": 1,
			"all": 1,
			"grief": 1,
			"gods": 1,
			"wild": 1,
			"then": 1,
			"pleasant": 1,
			"has": 1,
			"well": 1,
			"dost": 1,
			"our": 1,
			"open": 1,
			"before": 1,
			"your": 1,
			"mingled": 2,
			"yet": 1,
			"to": 10,
			"into": 1,
			"written": 1,
			"growing": 2,
			"ah": 1,
			"may": 1,
			"we": 1,
			"glad": 1,
			"as": 3,
			"fair": 2,
			"happy": 1,
			"said": 1,
			"at": 1,
			"the": 8,
			"drawn": 1,
			"seems": 1,
			"dead": 1,
			"there": 3,
			"in": 7
		},
		"dead": {
			"perchance": 1,
			"come": 1,
			"sound": 1,
			"summer": 1,
			"more": 1,
			"within": 1,
			"christ": 1,
			"forget": 1,
			"his": 2,
			"james": 1,
			"are": 4,
			"under": 3,
			"who": 3,
			"of": 11,
			"she": 1,
			"among": 1,
			"beyond": 1,
			"nor": 2,
			"dear": 1,
			"not": 2,
			"it": 1,
			"child": 1,
			"by": 2,
			"alone": 2,
			"long": 1,
			"cold": 1,
			"is": 3,
			"rise": 1,
			"unto": 2,
			"boy": 1,
			"away": 1,
			"form": 1,
			"people": 1,
			"they": 4,
			"thus": 1,
			"new": 2,
			"leaves": 5,
			"robert": 1,
			"its": 1,
			"those": 1,
			"sea": 1,
			"friends": 1,
			"for": 1,
			"past": 1,
			"bosom": 1,
			"lost": 1,
			"should": 1,
			"theres": 1,
			"my": 2,
			"touch": 1,
			"warrior": 1,
			"ere": 4,
			"whom": 1,
			"mary": 2,
			"most": 1,
			"face": 1,
			"god": 1,
			"were": 1,
			"oer": 1,
			"that": 3,
			"if": 1,
			"lips": 1,
			"man": 2,
			"both": 2,
			"go": 2,
			"reign": 1,
			"what": 2,
			"sit": 1,
			"repose": 1,
			"or": 1,
			"hands": 1,
			"bright": 1,
			"tears": 1,
			"a": 3,
			"upon": 1,
			"lay": 1,
			"love": 2,
			"on": 2,
			"red": 1,
			"deep": 1,
			"but": 8,
			"when": 3,
			"gone": 1,
			"ay": 1,
			"weeping": 1,
			"line": 1,
			"brave": 1,
			"heart": 1,
			"and": 32,
			"march": 1,
			"do": 1,
			"i": 8,
			"woman": 1,
			"one": 3,
			"might": 2,
			"saint": 1,
			"each": 1,
			"how": 1,
			"from": 3,
			"across": 1,
			"while": 1,
			"no": 2,
			"calm": 1,
			"with": 4,
			"now": 1,
			"some": 1,
			"will": 2,
			"follow": 1,
			"through": 1,
			"asleep": 2,
			"well": 1,
			"ways": 1,
			"dost": 1,
			"our": 1,
			"day": 1,
			"night": 1,
			"shall": 1,
			"before": 2,
			"to": 8,
			"wood": 1,
			"lie": 1,
			"vast": 1,
			"we": 4,
			"whose": 1,
			"as": 2,
			"he": 2,
			"at": 2,
			"o": 5,
			"the": 15,
			"though": 3,
			"dead": 1,
			"seas": 1,
			"there": 1,
			"in": 11
		},
		"tread": {
			"lady": 1,
			"under": 1,
			"of": 5,
			"not": 1,
			"it": 1,
			"far": 2,
			"alone": 2,
			"is": 2,
			"like": 1,
			"found": 1,
			"they": 1,
			"without": 1,
			"its": 1,
			"those": 3,
			"for": 2,
			"thy": 2,
			"oer": 1,
			"go": 1,
			"gives": 1,
			"or": 1,
			"their": 1,
			"a": 1,
			"upon": 3,
			"on": 2,
			"but": 1,
			"thee": 1,
			"and": 4,
			"i": 1,
			"down": 1,
			"each": 1,
			"beneath": 1,
			"with": 4,
			"singing": 1,
			"shall": 1,
			"to": 1,
			"we": 1,
			"as": 1,
			"he": 1,
			"o": 1,
			"the": 7,
			"tis": 1,
			"in": 2
		},
		"thirst": {
			"right": 1,
			"of": 1,
			"nor": 1,
			"is": 1,
			"forever": 1,
			"where": 1,
			"for": 6,
			"so": 1,
			"and": 2,
			"no": 1,
			"give": 1,
			"as": 1,
			"o": 1,
			"the": 1,
			"oft": 1
		},
		"fire": {
			"look": 1,
			"us": 1,
			"england": 1,
			"doubt": 1,
			"struck": 1,
			"him": 1,
			"of": 14,
			"once": 1,
			"up": 1,
			"she": 1,
			"among": 1,
			"flood": 1,
			"behold": 1,
			"divine": 1,
			"it": 2,
			"far": 1,
			"by": 1,
			"is": 4,
			"lo": 1,
			"away": 1,
			"they": 1,
			"you": 1,
			"laid": 1,
			"burns": 1,
			"john": 1,
			"enough": 1,
			"thy": 1,
			"sleep": 1,
			"was": 2,
			"that": 6,
			"hold": 1,
			"or": 2,
			"hands": 1,
			"their": 1,
			"a": 1,
			"so": 3,
			"upon": 2,
			"ashes": 1,
			"on": 3,
			"but": 2,
			"moving": 1,
			"close": 1,
			"and": 26,
			"do": 1,
			"i": 2,
			"from": 4,
			"these": 1,
			"with": 5,
			"around": 1,
			"drew": 1,
			"through": 2,
			"thats": 1,
			"our": 3,
			"shall": 1,
			"before": 1,
			"still": 1,
			"yet": 1,
			"to": 1,
			"into": 1,
			"whose": 2,
			"he": 1,
			"at": 2,
			"the": 10,
			"scarce": 1,
			"in": 8
		},
		"trees": {
			"sweet": 1,
			"books": 1,
			"caught": 1,
			"footnote": 1,
			"men": 1,
			"of": 4,
			"it": 1,
			"began": 1,
			"is": 1,
			"like": 1,
			"they": 1,
			"yea": 1,
			"rolled": 1,
			"for": 2,
			"my": 1,
			"were": 1,
			"oh": 1,
			"or": 1,
			"their": 1,
			"on": 1,
			"deep": 1,
			"celestial": 1,
			"lives": 1,
			"when": 1,
			"and": 10,
			"do": 1,
			"each": 1,
			"with": 2,
			"wave": 1,
			"has": 1,
			"to": 2,
			"he": 1,
			"at": 2,
			"grow": 1,
			"the": 10,
			"there": 1,
			"in": 6
		},
		"scene": {
			"more": 1,
			"within": 1,
			"his": 1,
			"are": 1,
			"of": 4,
			"you": 1,
			"where": 2,
			"must": 1,
			"think": 1,
			"a": 1,
			"them": 1,
			"on": 1,
			"and": 8,
			"lovely": 1,
			"i": 1,
			"here": 2,
			"from": 1,
			"thomas": 1,
			"well": 1,
			"behind": 1,
			"our": 1,
			"shall": 1,
			"to": 2,
			"he": 1,
			"the": 3,
			"her": 1,
			"been": 1
		},
		"fail": {
			"justice": 1,
			"lady": 1,
			"who": 1,
			"of": 1,
			"whatever": 1,
			"it": 1,
			"where": 1,
			"what": 2,
			"or": 2,
			"lord": 1,
			"but": 2,
			"and": 1,
			"i": 2,
			"how": 1,
			"now": 1,
			"to": 2,
			"he": 1,
			"the": 3,
			"in": 1
		},
		"near": {
			"us": 7,
			"loves": 1,
			"his": 3,
			"him": 1,
			"who": 1,
			"of": 1,
			"city": 1,
			"it": 3,
			"over": 1,
			"bring": 1,
			"is": 1,
			"about": 1,
			"prayer": 1,
			"thus": 1,
			"where": 1,
			"my": 1,
			"enough": 1,
			"shadow": 1,
			"sir": 1,
			"were": 1,
			"that": 1,
			"make": 2,
			"oh": 3,
			"an": 1,
			"have": 1,
			"a": 3,
			"so": 2,
			"them": 2,
			"upon": 1,
			"on": 1,
			"above": 1,
			"thee": 3,
			"ye": 1,
			"kind": 1,
			"and": 17,
			"i": 2,
			"each": 1,
			"how": 2,
			"with": 4,
			"all": 1,
			"thomas": 1,
			"being": 1,
			"to": 6,
			"we": 1,
			"glad": 1,
			"as": 4,
			"charles": 1,
			"life": 1,
			"he": 2,
			"at": 1,
			"the": 25,
			"tis": 1,
			"though": 1,
			"her": 3,
			"in": 1
		},
		"first": {
			"sweet": 1,
			"taught": 1,
			"his": 2,
			"endure": 1,
			"fond": 1,
			"book": 1,
			"law": 1,
			"blood": 3,
			"begin": 1,
			"breathing": 1,
			"made": 2,
			"amidst": 1,
			"word": 1,
			"who": 1,
			"beam": 3,
			"of": 10,
			"this": 1,
			"feels": 1,
			"she": 1,
			"find": 1,
			"command": 1,
			"grew": 1,
			"city": 1,
			"sight": 2,
			"dear": 1,
			"part": 2,
			"news": 1,
			"not": 1,
			"it": 2,
			"over": 1,
			"shows": 1,
			"flight": 1,
			"by": 3,
			"is": 3,
			"glass": 1,
			"sway": 1,
			"kings": 1,
			"they": 1,
			"faint": 1,
			"you": 2,
			"mother": 1,
			"thus": 1,
			"pale": 1,
			"heard": 1,
			"beams": 1,
			"those": 2,
			"for": 2,
			"past": 1,
			"sang": 1,
			"breath": 1,
			"my": 1,
			"great": 3,
			"thy": 3,
			"watch": 1,
			"morn": 1,
			"ray": 1,
			"passion": 1,
			"garden": 2,
			"stroke": 1,
			"were": 2,
			"bud": 1,
			"waking": 1,
			"cause": 1,
			"was": 5,
			"that": 2,
			"man": 3,
			"fall": 1,
			"cried": 1,
			"must": 1,
			"or": 1,
			"gave": 1,
			"trod": 1,
			"a": 3,
			"babe": 1,
			"falls": 1,
			"joys": 1,
			"true": 1,
			"hath": 1,
			"met": 1,
			"love": 2,
			"on": 4,
			"break": 1,
			"but": 3,
			"time": 3,
			"poor": 1,
			"when": 1,
			"burst": 1,
			"be": 3,
			"roses": 1,
			"line": 1,
			"say": 1,
			"anguish": 1,
			"verse": 1,
			"and": 17,
			"dark": 1,
			"last": 1,
			"days": 1,
			"i": 5,
			"told": 1,
			"work": 1,
			"from": 2,
			"drink": 1,
			"present": 1,
			"with": 3,
			"now": 1,
			"set": 1,
			"give": 1,
			"shone": 1,
			"all": 1,
			"wild": 1,
			"then": 2,
			"gale": 1,
			"could": 1,
			"notes": 1,
			"foe": 1,
			"george": 1,
			"spring": 1,
			"begun": 2,
			"our": 1,
			"day": 1,
			"feel": 1,
			"best": 1,
			"to": 9,
			"flow": 1,
			"as": 1,
			"happy": 1,
			"he": 2,
			"at": 3,
			"translation": 1,
			"the": 9,
			"though": 1,
			"sure": 1,
			"her": 2,
			"in": 7
		},
		"seas": {
			"more": 1,
			"which": 1,
			"of": 2,
			"dry": 2,
			"far": 1,
			"by": 1,
			"they": 1,
			"where": 2,
			"thy": 1,
			"shore": 1,
			"rough": 1,
			"can": 1,
			"that": 2,
			"if": 1,
			"eye": 1,
			"a": 1,
			"on": 1,
			"but": 1,
			"watched": 1,
			"and": 9,
			"do": 1,
			"black": 1,
			"i": 2,
			"unknown": 1,
			"swell": 1,
			"with": 1,
			"hair": 1,
			"shall": 1,
			"to": 4,
			"into": 1,
			"at": 1,
			"the": 3,
			"though": 1,
			"in": 2
		},
		"devil": {
			"his": 1,
			"it": 1,
			"is": 1,
			"they": 1,
			"can": 1,
			"did": 1,
			"was": 3,
			"or": 1,
			"a": 3,
			"hath": 2,
			"firm": 1,
			"and": 1,
			"i": 1,
			"thou": 1,
			"with": 1,
			"himself": 1,
			"to": 1,
			"o": 1,
			"the": 1,
			"stood": 1,
			"in": 1
		},
		"oft": {
			"look": 1,
			"his": 1,
			"him": 1,
			"hast": 1,
			"seemed": 1,
			"are": 2,
			"alas": 1,
			"of": 1,
			"she": 2,
			"it": 2,
			"is": 1,
			"found": 1,
			"for": 1,
			"theres": 1,
			"my": 2,
			"did": 1,
			"was": 1,
			"let": 1,
			"both": 1,
			"had": 2,
			"have": 6,
			"a": 1,
			"hath": 3,
			"when": 3,
			"merit": 1,
			"t": 1,
			"and": 5,
			"do": 2,
			"i": 5,
			"might": 1,
			"from": 2,
			"would": 1,
			"with": 2,
			"till": 1,
			"familiar": 1,
			"has": 1,
			"doth": 1,
			"to": 3,
			"whose": 1,
			"as": 3,
			"he": 2,
			"the": 10,
			"tis": 1,
			"her": 1,
			"been": 1,
			"there": 1,
			"in": 6
		},
		"soldier": {
			"look": 1,
			"his": 1,
			"of": 3,
			"twas": 1,
			"by": 1,
			"rest": 1,
			"ere": 1,
			"cried": 1,
			"think": 1,
			"falls": 1,
			"gallant": 1,
			"never": 1,
			"sees": 1,
			"when": 2,
			"brave": 1,
			"and": 3,
			"knew": 1,
			"too": 1,
			"with": 2,
			"he": 3,
			"in": 3
		},
		"jesus": {
			"us": 1,
			"christ": 4,
			"up": 1,
			"she": 1,
			"find": 1,
			"it": 1,
			"bring": 1,
			"is": 2,
			"grant": 1,
			"for": 1,
			"standing": 1,
			"wept": 1,
			"lord": 1,
			"hath": 1,
			"on": 2,
			"saw": 1,
			"feet": 3,
			"and": 1,
			"thou": 2,
			"endless": 1,
			"will": 1,
			"shall": 2,
			"led": 1,
			"the": 2,
			"in": 1,
			"saith": 1
		},
		"there": {
			"blue": 1,
			"jean": 2,
			"more": 1,
			"taught": 1,
			"within": 1,
			"went": 1,
			"christ": 1,
			"earth": 1,
			"his": 7,
			"james": 1,
			"st": 1,
			"him": 1,
			"s": 2,
			"none": 2,
			"are": 42,
			"right": 1,
			"who": 3,
			"which": 1,
			"sounds": 1,
			"of": 4,
			"breathe": 1,
			"she": 6,
			"beyond": 1,
			"find": 1,
			"does": 1,
			"grew": 1,
			"forth": 1,
			"place": 1,
			"rose": 5,
			"behold": 1,
			"not": 4,
			"it": 6,
			"hangs": 1,
			"by": 6,
			"alone": 4,
			"bring": 1,
			"is": 128,
			"like": 2,
			"away": 1,
			"forever": 1,
			"ever": 3,
			"care": 1,
			"they": 6,
			"you": 1,
			"nature": 1,
			"guide": 1,
			"mother": 1,
			"new": 1,
			"without": 1,
			"robert": 1,
			"than": 2,
			"those": 1,
			"where": 6,
			"yea": 1,
			"run": 1,
			"rolled": 1,
			"for": 6,
			"hand": 1,
			"should": 2,
			"theres": 1,
			"take": 2,
			"tomorrow": 1,
			"rest": 1,
			"my": 7,
			"whats": 1,
			"came": 19,
			"great": 1,
			"john": 1,
			"shines": 1,
			"thy": 1,
			"yes": 1,
			"blows": 1,
			"comes": 7,
			"better": 1,
			"mary": 1,
			"flung": 1,
			"because": 1,
			"most": 1,
			"sir": 1,
			"rising": 1,
			"stretched": 1,
			"william": 1,
			"face": 1,
			"can": 1,
			"were": 16,
			"bears": 1,
			"did": 1,
			"was": 51,
			"that": 6,
			"if": 1,
			"let": 3,
			"make": 1,
			"half": 1,
			"rode": 2,
			"had": 4,
			"must": 7,
			"what": 4,
			"oh": 1,
			"an": 3,
			"have": 1,
			"towers": 1,
			"their": 1,
			"a": 20,
			"so": 1,
			"given": 1,
			"adieu": 1,
			"upon": 5,
			"lay": 3,
			"lord": 1,
			"never": 4,
			"many": 1,
			"hath": 3,
			"love": 3,
			"on": 5,
			"bend": 1,
			"above": 2,
			"deep": 1,
			"but": 9,
			"brown": 1,
			"perhaps": 1,
			"lives": 3,
			"when": 2,
			"thank": 1,
			"be": 15,
			"t": 1,
			"out": 1,
			"naught": 1,
			"and": 24,
			"truth": 1,
			"hid": 1,
			"i": 24,
			"thou": 5,
			"home": 1,
			"here": 1,
			"too": 4,
			"one": 5,
			"might": 2,
			"between": 2,
			"such": 1,
			"secret": 1,
			"stands": 2,
			"how": 1,
			"from": 5,
			"would": 2,
			"beat": 1,
			"beneath": 1,
			"while": 3,
			"honor": 1,
			"no": 18,
			"voice": 1,
			"mighty": 1,
			"with": 11,
			"everlasting": 1,
			"now": 1,
			"some": 1,
			"will": 5,
			"all": 1,
			"wild": 1,
			"then": 2,
			"room": 1,
			"through": 3,
			"asleep": 1,
			"angels": 1,
			"george": 1,
			"doth": 1,
			"king": 1,
			"much": 1,
			"our": 1,
			"sense": 1,
			"hall": 1,
			"open": 1,
			"pity": 1,
			"shall": 4,
			"only": 2,
			"still": 1,
			"yet": 3,
			"to": 16,
			"loud": 1,
			"mid": 1,
			"live": 1,
			"get": 1,
			"may": 3,
			"we": 4,
			"whose": 2,
			"falling": 1,
			"as": 5,
			"he": 10,
			"sat": 2,
			"at": 6,
			"lies": 3,
			"o": 7,
			"grow": 1,
			"rings": 1,
			"the": 50,
			"tis": 1,
			"though": 3,
			"stood": 4,
			"her": 1,
			"fire": 1,
			"first": 1,
			"there": 3,
			"in": 15,
			"step": 1,
			"air": 1,
			"grows": 1
		},
		"grim": {
			"right": 1,
			"of": 1,
			"they": 1,
			"can": 1,
			"walls": 1,
			"that": 1,
			"repose": 1,
			"and": 5,
			"from": 1,
			"with": 2,
			"feel": 1,
			"to": 3,
			"sat": 1,
			"grow": 1,
			"though": 1,
			"in": 2,
			"grows": 1
		},
		"lowly": {
			"flower": 1,
			"come": 1,
			"lot": 1,
			"of": 2,
			"praise": 1,
			"wise": 1,
			"rise": 1,
			"they": 1,
			"laid": 3,
			"thy": 1,
			"moan": 1,
			"born": 1,
			"reach": 1,
			"was": 1,
			"spirit": 2,
			"leave": 1,
			"bed": 1,
			"head": 1,
			"and": 1,
			"grave": 1,
			"these": 1,
			"whose": 1,
			"as": 2,
			"at": 1,
			"in": 1,
			"shed": 1,
			"thoughts": 1
		},
		"restless": {
			"it": 1,
			"is": 1,
			"bore": 1,
			"sleep": 1,
			"soul": 1,
			"glow": 1,
			"never": 1,
			"spirit": 1,
			"feet": 2,
			"wings": 1,
			"heart": 1,
			"wretched": 1,
			"fields": 1,
			"wave": 1,
			"could": 1,
			"ways": 1,
			"day": 2,
			"night": 1,
			"in": 1
		},
		"in": {
			"sweet": 5,
			"tune": 8,
			"flower": 3,
			"blue": 3,
			"come": 6,
			"low": 2,
			"dying": 1,
			"look": 1,
			"summer": 3,
			"itself": 7,
			"woes": 1,
			"sighs": 1,
			"us": 5,
			"suffering": 2,
			"more": 4,
			"taught": 1,
			"walks": 2,
			"since": 1,
			"thine": 11,
			"ring": 2,
			"ours": 1,
			"england": 8,
			"blessings": 3,
			"dust": 7,
			"justice": 1,
			"loves": 2,
			"parting": 1,
			"virtues": 1,
			"fierce": 1,
			"chase": 1,
			"free": 1,
			"light": 7,
			"earth": 9,
			"doubt": 6,
			"mountains": 1,
			"his": 229,
			"appear": 1,
			"mad": 1,
			"st": 1,
			"hell": 2,
			"dreary": 2,
			"him": 20,
			"ear": 1,
			"sharp": 2,
			"charity": 1,
			"law": 5,
			"see": 3,
			"blood": 10,
			"narrow": 1,
			"precious": 1,
			"play": 2,
			"women": 1,
			"faithful": 1,
			"tennyson": 1,
			"deeper": 1,
			"ages": 4,
			"white": 6,
			"glen": 1,
			"woe": 3,
			"purple": 3,
			"tell": 1,
			"war": 3,
			"dance": 3,
			"are": 3,
			"story": 1,
			"right": 2,
			"word": 2,
			"fell": 2,
			"very": 2,
			"next": 1,
			"who": 4,
			"sweetest": 2,
			"silent": 3,
			"men": 3,
			"which": 21,
			"court": 4,
			"deeds": 3,
			"sounds": 2,
			"of": 56,
			"this": 67,
			"graves": 1,
			"worlds": 2,
			"fame": 3,
			"souls": 3,
			"keep": 2,
			"wine": 2,
			"after": 2,
			"once": 3,
			"up": 1,
			"triumph": 10,
			"tide": 1,
			"breathe": 1,
			"angel": 1,
			"she": 5,
			"among": 2,
			"silence": 23,
			"anonymous": 1,
			"nor": 3,
			"find": 1,
			"gold": 6,
			"three": 3,
			"morning": 1,
			"act": 2,
			"city": 2,
			"heavy": 1,
			"thyself": 1,
			"sight": 12,
			"age": 5,
			"stormy": 1,
			"darkness": 13,
			"joy": 8,
			"lightning": 1,
			"forth": 1,
			"fruit": 1,
			"scorn": 4,
			"height": 1,
			"race": 1,
			"dreadful": 2,
			"dear": 1,
			"two": 4,
			"pain": 13,
			"thick": 1,
			"place": 4,
			"part": 3,
			"lands": 2,
			"sick": 1,
			"fine": 2,
			"lines": 2,
			"mine": 9,
			"behold": 1,
			"solemn": 6,
			"not": 7,
			"awe": 8,
			"rapture": 2,
			"divine": 1,
			"hours": 4,
			"crimson": 1,
			"put": 2,
			"today": 1,
			"proud": 1,
			"dry": 1,
			"every": 40,
			"it": 15,
			"evil": 1,
			"far": 1,
			"health": 4,
			"water": 4,
			"ease": 3,
			"by": 8,
			"eyes": 1,
			"alone": 1,
			"long": 6,
			"sorrows": 1,
			"mute": 1,
			"quiet": 3,
			"cold": 1,
			"pride": 8,
			"land": 2,
			"wars": 1,
			"is": 3,
			"vision": 1,
			"ships": 2,
			"glittering": 1,
			"eternity": 1,
			"like": 9,
			"return": 2,
			"lo": 1,
			"fairest": 2,
			"away": 1,
			"hoary": 1,
			"form": 3,
			"found": 1,
			"idle": 2,
			"forms": 2,
			"native": 1,
			"forever": 1,
			"good": 3,
			"pleased": 1,
			"ocean": 1,
			"ever": 2,
			"either": 2,
			"they": 7,
			"speech": 1,
			"prayer": 12,
			"you": 7,
			"nature": 4,
			"glowing": 1,
			"pale": 1,
			"new": 3,
			"rosy": 2,
			"leaves": 3,
			"robert": 1,
			"earths": 2,
			"ranks": 2,
			"laid": 1,
			"its": 67,
			"swift": 1,
			"kindly": 1,
			"pleasure": 3,
			"song": 8,
			"those": 16,
			"sea": 3,
			"where": 5,
			"gentle": 1,
			"others": 5,
			"looking": 1,
			"brief": 1,
			"despair": 1,
			"lovers": 1,
			"press": 1,
			"gray": 4,
			"just": 2,
			"for": 14,
			"drops": 1,
			"judgment": 2,
			"hand": 19,
			"heaven": 35,
			"stones": 1,
			"lost": 2,
			"clime": 1,
			"bloody": 1,
			"should": 1,
			"surprise": 1,
			"melancholy": 2,
			"speak": 1,
			"spite": 7,
			"autumn": 1,
			"rest": 4,
			"my": 123,
			"words": 10,
			"hour": 2,
			"came": 1,
			"twilight": 1,
			"john": 1,
			"tender": 2,
			"beauty": 5,
			"short": 2,
			"burning": 2,
			"thy": 73,
			"smiles": 2,
			"vain": 73,
			"sleep": 9,
			"battle": 14,
			"tone": 1,
			"peace": 12,
			"majesty": 5,
			"comes": 1,
			"ourselves": 5,
			"waves": 1,
			"whom": 3,
			"better": 2,
			"shadow": 1,
			"ground": 2,
			"sadly": 1,
			"soul": 3,
			"passion": 2,
			"hope": 4,
			"because": 1,
			"any": 6,
			"most": 1,
			"times": 3,
			"town": 4,
			"yellow": 1,
			"win": 1,
			"reach": 1,
			"friend": 1,
			"wrath": 4,
			"streets": 1,
			"friendship": 3,
			"name": 4,
			"clay": 2,
			"face": 1,
			"sin": 1,
			"battles": 1,
			"trembling": 3,
			"dew": 1,
			"rain": 1,
			"faith": 9,
			"god": 13,
			"wit": 1,
			"shame": 2,
			"noble": 2,
			"power": 5,
			"were": 4,
			"bud": 1,
			"comfort": 1,
			"oer": 1,
			"sabbath": 1,
			"immortal": 3,
			"need": 1,
			"was": 3,
			"that": 72,
			"let": 1,
			"cares": 1,
			"man": 11,
			"bear": 1,
			"daily": 1,
			"poems": 2,
			"both": 2,
			"another": 2,
			"always": 2,
			"full": 4,
			"victory": 2,
			"fall": 1,
			"broken": 1,
			"crowd": 1,
			"gladness": 3,
			"half": 3,
			"trust": 5,
			"must": 2,
			"general": 1,
			"pure": 1,
			"what": 15,
			"oh": 4,
			"beautiful": 1,
			"an": 14,
			"repose": 1,
			"front": 8,
			"nothing": 3,
			"music": 4,
			"pleasures": 1,
			"or": 23,
			"waiting": 1,
			"field": 1,
			"de": 7,
			"finds": 1,
			"eye": 1,
			"pause": 1,
			"bright": 5,
			"am": 1,
			"tears": 13,
			"trod": 1,
			"isle": 1,
			"sae": 1,
			"making": 4,
			"danger": 1,
			"bitter": 1,
			"winter": 6,
			"their": 98,
			"a": 213,
			"so": 8,
			"pains": 1,
			"given": 1,
			"them": 9,
			"joys": 1,
			"green": 3,
			"upon": 3,
			"gallant": 1,
			"things": 2,
			"lord": 2,
			"many": 14,
			"spirit": 3,
			"hath": 2,
			"ashes": 1,
			"delight": 1,
			"love": 29,
			"on": 8,
			"quite": 1,
			"sees": 1,
			"red": 2,
			"shroud": 1,
			"mountain": 1,
			"above": 1,
			"smiling": 3,
			"chains": 4,
			"deep": 4,
			"memory": 2,
			"celestial": 4,
			"old": 2,
			"content": 3,
			"but": 13,
			"grass": 1,
			"death": 16,
			"self": 1,
			"time": 10,
			"poor": 2,
			"empty": 1,
			"thee": 50,
			"years": 5,
			"when": 6,
			"deed": 2,
			"lifes": 7,
			"eternal": 1,
			"terror": 3,
			"honest": 3,
			"plain": 2,
			"religious": 1,
			"merry": 1,
			"waters": 1,
			"mans": 5,
			"length": 1,
			"dreams": 13,
			"felt": 1,
			"be": 2,
			"bed": 1,
			"van": 2,
			"t": 3,
			"glory": 10,
			"having": 2,
			"highest": 1,
			"out": 2,
			"kind": 1,
			"earthly": 2,
			"rhyme": 3,
			"brave": 1,
			"rage": 2,
			"distant": 1,
			"heart": 9,
			"say": 1,
			"sorrow": 6,
			"anguish": 4,
			"head": 2,
			"paradise": 5,
			"close": 1,
			"verse": 1,
			"and": 100,
			"order": 7,
			"bliss": 9,
			"thunder": 1,
			"sun": 3,
			"march": 1,
			"truth": 5,
			"bloom": 4,
			"do": 1,
			"dark": 4,
			"lone": 1,
			"sunshine": 2,
			"christian": 1,
			"myself": 1,
			"move": 1,
			"black": 1,
			"dream": 1,
			"fate": 1,
			"ask": 1,
			"blaze": 1,
			"days": 5,
			"grave": 1,
			"i": 17,
			"snow": 1,
			"worthy": 1,
			"thou": 1,
			"haste": 6,
			"woman": 1,
			"tale": 1,
			"down": 2,
			"sunny": 1,
			"bad": 1,
			"pay": 1,
			"tower": 1,
			"dull": 2,
			"here": 1,
			"south": 1,
			"mournful": 2,
			"too": 1,
			"steel": 1,
			"mirth": 1,
			"mortal": 5,
			"one": 38,
			"storm": 4,
			"between": 3,
			"such": 15,
			"shining": 1,
			"perfect": 1,
			"shadows": 1,
			"hate": 2,
			"tall": 1,
			"arts": 1,
			"state": 7,
			"work": 6,
			"forest": 2,
			"fields": 2,
			"saint": 1,
			"broad": 1,
			"each": 18,
			"anothers": 1,
			"henry": 1,
			"how": 2,
			"hearts": 3,
			"other": 8,
			"from": 6,
			"stranger": 1,
			"gifts": 1,
			"marble": 2,
			"would": 3,
			"living": 2,
			"feeling": 1,
			"mind": 3,
			"endless": 4,
			"sublime": 1,
			"beneath": 2,
			"ancient": 1,
			"these": 11,
			"duty": 1,
			"while": 1,
			"honor": 2,
			"present": 1,
			"no": 6,
			"mystic": 1,
			"bound": 1,
			"early": 2,
			"worst": 1,
			"calm": 4,
			"voice": 1,
			"maidens": 1,
			"dread": 1,
			"solitude": 2,
			"mighty": 1,
			"ears": 1,
			"with": 18,
			"around": 1,
			"singing": 1,
			"sad": 2,
			"sweetness": 1,
			"virtue": 3,
			"everlasting": 3,
			"soft": 5,
			"drew": 1,
			"now": 5,
			"gaze": 2,
			"single": 1,
			"some": 35,
			"till": 1,
			"will": 1,
			"strong": 1,
			"himself": 4,
			"prayers": 1,
			"all": 53,
			"grief": 2,
			"gay": 3,
			"gods": 13,
			"wild": 4,
			"loving": 2,
			"then": 4,
			"large": 2,
			"blest": 1,
			"thought": 6,
			"through": 2,
			"pleasant": 2,
			"ten": 1,
			"has": 1,
			"street": 1,
			"service": 1,
			"well": 1,
			"doth": 1,
			"king": 1,
			"shine": 1,
			"nights": 3,
			"spring": 3,
			"much": 1,
			"minds": 2,
			"upward": 1,
			"fiery": 2,
			"being": 4,
			"behind": 1,
			"wealth": 1,
			"our": 64,
			"smoke": 3,
			"storms": 3,
			"day": 1,
			"hall": 3,
			"works": 3,
			"neer": 1,
			"fear": 8,
			"night": 6,
			"patience": 1,
			"mercy": 2,
			"pity": 2,
			"shall": 1,
			"before": 2,
			"golden": 4,
			"wind": 1,
			"still": 6,
			"your": 47,
			"shade": 3,
			"yet": 5,
			"way": 3,
			"to": 33,
			"loud": 2,
			"poetry": 6,
			"hill": 1,
			"clouds": 3,
			"youth": 6,
			"human": 3,
			"cities": 1,
			"into": 1,
			"flame": 6,
			"turn": 2,
			"thinking": 1,
			"mid": 1,
			"lie": 1,
			"little": 2,
			"rich": 2,
			"religion": 2,
			"homes": 1,
			"backward": 1,
			"heavenly": 4,
			"glorious": 3,
			"freedoms": 4,
			"view": 3,
			"get": 1,
			"mould": 3,
			"art": 1,
			"ah": 1,
			"flow": 2,
			"may": 8,
			"th": 4,
			"strife": 1,
			"eve": 1,
			"yon": 5,
			"we": 7,
			"gloom": 5,
			"glad": 1,
			"store": 3,
			"whose": 9,
			"falling": 1,
			"as": 6,
			"array": 4,
			"fair": 4,
			"charles": 1,
			"heavens": 8,
			"stand": 1,
			"english": 1,
			"happy": 4,
			"said": 1,
			"life": 7,
			"he": 5,
			"arms": 7,
			"me": 29,
			"strength": 1,
			"at": 12,
			"fancy": 1,
			"below": 1,
			"slumber": 5,
			"lies": 2,
			"o": 8,
			"greek": 1,
			"yonder": 6,
			"chorus": 1,
			"streams": 1,
			"common": 2,
			"the": 1232,
			"though": 3,
			"fight": 4,
			"bent": 1,
			"stood": 1,
			"labor": 2,
			"her": 101,
			"change": 1,
			"weak": 1,
			"grand": 1,
			"dead": 1,
			"tread": 1,
			"fire": 5,
			"trees": 1,
			"near": 1,
			"oft": 1,
			"there": 6,
			"grim": 1,
			"lowly": 1,
			"restless": 1,
			"in": 14,
			"choice": 1,
			"harmony": 4,
			"step": 1,
			"dim": 2,
			"shed": 1,
			"air": 11,
			"ruin": 1,
			"thoughts": 6,
			"grows": 1
		},
		"flowers": {
			"come": 1,
			"more": 1,
			"die": 1,
			"are": 9,
			"which": 1,
			"of": 5,
			"alike": 2,
			"she": 3,
			"nor": 1,
			"gold": 1,
			"grown": 1,
			"fresh": 1,
			"depart": 1,
			"it": 2,
			"by": 1,
			"bring": 1,
			"is": 1,
			"away": 2,
			"forever": 1,
			"without": 1,
			"for": 2,
			"should": 1,
			"rising": 1,
			"whether": 1,
			"that": 13,
			"fall": 1,
			"or": 2,
			"have": 1,
			"a": 2,
			"upon": 1,
			"things": 1,
			"death": 1,
			"when": 2,
			"burst": 1,
			"be": 1,
			"kind": 1,
			"and": 14,
			"bloom": 2,
			"do": 2,
			"i": 1,
			"against": 1,
			"from": 1,
			"while": 1,
			"no": 2,
			"with": 1,
			"around": 1,
			"now": 3,
			"laugh": 1,
			"spring": 1,
			"fallen": 1,
			"your": 1,
			"yet": 1,
			"to": 7,
			"youth": 1,
			"into": 1,
			"slowly": 1,
			"may": 1,
			"we": 2,
			"as": 1,
			"array": 1,
			"at": 1,
			"o": 2,
			"the": 8,
			"tis": 2,
			"there": 2,
			"in": 6
		},
		"choice": {
			"war": 1,
			"word": 1,
			"of": 4,
			"goes": 1,
			"by": 1,
			"is": 1,
			"you": 1,
			"thy": 1,
			"an": 1,
			"and": 2,
			"thou": 1,
			"from": 1,
			"till": 1,
			"to": 2,
			"the": 2,
			"in": 1
		},
		"forgive": {
			"us": 1,
			"alas": 1,
			"feels": 1,
			"divine": 1,
			"good": 1,
			"its": 1,
			"my": 1,
			"what": 1,
			"oh": 1,
			"them": 1,
			"ashes": 1,
			"but": 1,
			"and": 3,
			"i": 1,
			"these": 1,
			"best": 1,
			"me": 5,
			"o": 1,
			"the": 2
		},
		"harmony": {
			"who": 1,
			"of": 3,
			"not": 1,
			"divine": 1,
			"alone": 1,
			"they": 1,
			"william": 1,
			"make": 1,
			"or": 1,
			"but": 1,
			"when": 1,
			"and": 3,
			"sublime": 1,
			"with": 3,
			"meet": 1,
			"through": 1,
			"before": 1,
			"turn": 1,
			"as": 1,
			"life": 1,
			"the": 1
		},
		"step": {
			"ive": 1,
			"of": 2,
			"after": 1,
			"is": 1,
			"for": 1,
			"enough": 1,
			"were": 1,
			"was": 1,
			"that": 2,
			"a": 4,
			"but": 1,
			"and": 4,
			"i": 3,
			"down": 1,
			"too": 1,
			"might": 1,
			"looks": 1,
			"from": 1,
			"across": 1,
			"feeling": 1,
			"no": 1,
			"aside": 1,
			"to": 1,
			"into": 1,
			"slowly": 1,
			"the": 1,
			"in": 1
		},
		"purpose": {
			"more": 1,
			"since": 1,
			"of": 3,
			"grew": 1,
			"aught": 1,
			"unto": 1,
			"easy": 1,
			"than": 1,
			"passion": 1,
			"runs": 3,
			"that": 1,
			"let": 1,
			"man": 1,
			"an": 1,
			"understand": 1,
			"hold": 1,
			"or": 1,
			"i": 1,
			"with": 1,
			"some": 1,
			"strong": 1,
			"yet": 1,
			"as": 1,
			"the": 1,
			"grand": 1,
			"grim": 1
		},
		"dim": {
			"look": 1,
			"light": 1,
			"of": 1,
			"hymn": 1,
			"fade": 1,
			"praise": 1,
			"lights": 1,
			"eyes": 2,
			"woods": 1,
			"alone": 1,
			"path": 1,
			"its": 2,
			"where": 1,
			"heaven": 1,
			"was": 3,
			"if": 1,
			"let": 1,
			"what": 1,
			"or": 1,
			"eye": 1,
			"gave": 1,
			"their": 1,
			"a": 2,
			"spirit": 1,
			"but": 2,
			"time": 1,
			"when": 2,
			"earthly": 1,
			"and": 13,
			"sun": 1,
			"i": 5,
			"unknown": 1,
			"one": 1,
			"shadows": 1,
			"whereer": 1,
			"these": 1,
			"while": 1,
			"with": 6,
			"well": 1,
			"clear": 1,
			"king": 1,
			"ways": 1,
			"shall": 1,
			"to": 1,
			"cut": 1,
			"ah": 1,
			"he": 1,
			"slumber": 1,
			"o": 2,
			"the": 4,
			"world": 1,
			"in": 1
		},
		"aloud": {
			"look": 1,
			"back": 1,
			"under": 1,
			"by": 1,
			"that": 1,
			"go": 1,
			"or": 1,
			"a": 1,
			"but": 1,
			"and": 1,
			"i": 1,
			"how": 1,
			"with": 1,
			"through": 1,
			"has": 1,
			"to": 3,
			"as": 1,
			"the": 5
		},
		"shed": {
			"come": 1,
			"his": 1,
			"call": 1,
			"of": 1,
			"off": 1,
			"nor": 1,
			"beloved": 1,
			"it": 1,
			"over": 1,
			"by": 1,
			"they": 1,
			"abroad": 1,
			"its": 1,
			"than": 1,
			"for": 2,
			"that": 1,
			"full": 1,
			"make": 1,
			"or": 2,
			"their": 1,
			"a": 4,
			"so": 1,
			"upon": 1,
			"on": 2,
			"empty": 1,
			"when": 1,
			"and": 5,
			"i": 2,
			"one": 1,
			"no": 1,
			"with": 1,
			"now": 1,
			"will": 1,
			"then": 1,
			"as": 1,
			"o": 1,
			"the": 6,
			"her": 1,
			"in": 1
		},
		"air": {
			"im": 1,
			"his": 3,
			"seemed": 1,
			"are": 3,
			"men": 1,
			"which": 1,
			"of": 4,
			"this": 1,
			"hills": 1,
			"she": 2,
			"nor": 4,
			"joy": 1,
			"not": 3,
			"every": 1,
			"it": 3,
			"send": 1,
			"is": 6,
			"glittering": 1,
			"like": 1,
			"they": 1,
			"you": 1,
			"thus": 1,
			"leaves": 1,
			"without": 1,
			"for": 3,
			"burns": 1,
			"cry": 1,
			"theres": 1,
			"my": 4,
			"came": 1,
			"john": 1,
			"again": 2,
			"thy": 1,
			"blows": 2,
			"comes": 1,
			"makes": 1,
			"along": 2,
			"were": 1,
			"was": 4,
			"that": 5,
			"show": 1,
			"full": 1,
			"had": 1,
			"pure": 1,
			"what": 2,
			"oh": 1,
			"an": 3,
			"or": 3,
			"am": 1,
			"gave": 1,
			"a": 5,
			"but": 2,
			"close": 1,
			"and": 27,
			"sunshine": 1,
			"year": 1,
			"i": 1,
			"thou": 1,
			"less": 1,
			"here": 1,
			"one": 1,
			"such": 1,
			"how": 2,
			"beat": 1,
			"these": 1,
			"no": 2,
			"with": 7,
			"around": 1,
			"give": 1,
			"some": 1,
			"will": 1,
			"all": 1,
			"then": 4,
			"could": 1,
			"through": 1,
			"behind": 1,
			"our": 2,
			"shall": 3,
			"still": 1,
			"your": 1,
			"yet": 1,
			"to": 3,
			"know": 1,
			"glad": 1,
			"as": 6,
			"noon": 1,
			"he": 1,
			"o": 2,
			"the": 22,
			"her": 3,
			"there": 3,
			"in": 2
		},
		"north": {
			"does": 1,
			"great": 1,
			"thy": 1,
			"sing": 1,
			"or": 1,
			"but": 2,
			"and": 9,
			"rush": 1,
			"with": 2,
			"all": 1,
			"wind": 1,
			"to": 3,
			"the": 1,
			"there": 1,
			"in": 1
		},
		"ruin": {
			"more": 1,
			"of": 3,
			"rock": 1,
			"thus": 1,
			"laid": 1,
			"or": 1,
			"upon": 1,
			"on": 1,
			"thee": 1,
			"and": 6,
			"stands": 1,
			"while": 1,
			"now": 1,
			"all": 1,
			"fear": 1,
			"to": 2,
			"the": 1
		},
		"saith": {
			"she": 1,
			"unto": 2,
			"they": 1,
			"earl": 1,
			"god": 1,
			"if": 1,
			"a": 2,
			"them": 1,
			"but": 1,
			"and": 1,
			"one": 1,
			"to": 1,
			"we": 1,
			"he": 3,
			"the": 4,
			"in": 1
		},
		"seem": {
			"sweet": 1,
			"touched": 1,
			"none": 1,
			"right": 2,
			"very": 1,
			"of": 1,
			"not": 2,
			"by": 1,
			"like": 2,
			"they": 1,
			"afar": 1,
			"than": 1,
			"just": 1,
			"for": 2,
			"lost": 1,
			"theres": 1,
			"most": 1,
			"that": 1,
			"full": 1,
			"what": 1,
			"an": 1,
			"or": 1,
			"waiting": 1,
			"a": 1,
			"so": 2,
			"quite": 1,
			"but": 4,
			"and": 1,
			"worthy": 1,
			"told": 1,
			"here": 1,
			"with": 1,
			"best": 1,
			"to": 21,
			"bold": 1,
			"life": 1,
			"the": 3,
			"in": 3
		},
		"thoughts": {
			"more": 1,
			"walks": 1,
			"within": 1,
			"his": 2,
			"are": 7,
			"which": 1,
			"of": 19,
			"this": 1,
			"not": 1,
			"over": 1,
			"by": 1,
			"like": 1,
			"they": 5,
			"for": 1,
			"should": 2,
			"remain": 1,
			"great": 1,
			"sleep": 1,
			"peace": 1,
			"friendship": 1,
			"can": 2,
			"were": 3,
			"was": 2,
			"that": 16,
			"let": 1,
			"go": 2,
			"what": 1,
			"oh": 1,
			"a": 1,
			"so": 2,
			"never": 1,
			"on": 1,
			"above": 1,
			"and": 7,
			"i": 1,
			"too": 1,
			"one": 1,
			"from": 2,
			"sublime": 1,
			"sphere": 1,
			"with": 4,
			"will": 1,
			"doth": 1,
			"our": 2,
			"night": 1,
			"still": 1,
			"to": 5,
			"into": 1,
			"may": 1,
			"we": 2,
			"whose": 1,
			"as": 2,
			"he": 1,
			"at": 1,
			"grow": 1,
			"arise": 1,
			"in": 3
		},
		"shalt": {
			"come": 1,
			"hear": 1,
			"see": 2,
			"high": 1,
			"find": 3,
			"behold": 2,
			"not": 6,
			"lead": 1,
			"my": 1,
			"great": 1,
			"wear": 1,
			"win": 1,
			"oer": 1,
			"show": 1,
			"have": 2,
			"delight": 1,
			"love": 1,
			"be": 5,
			"do": 1,
			"move": 1,
			"thou": 11,
			"judge": 1,
			"stronger": 1,
			"to": 1,
			"lie": 1,
			"know": 2,
			"stand": 1,
			"in": 1
		},
		"sky": {
			"low": 1,
			"look": 1,
			"more": 1,
			"hear": 1,
			"light": 1,
			"his": 1,
			"see": 1,
			"are": 3,
			"who": 1,
			"beam": 1,
			"of": 4,
			"this": 1,
			"off": 1,
			"anonymous": 1,
			"morning": 1,
			"it": 1,
			"by": 1,
			"long": 1,
			"is": 8,
			"why": 1,
			"you": 1,
			"mild": 1,
			"its": 2,
			"than": 1,
			"where": 3,
			"for": 3,
			"my": 1,
			"smiles": 1,
			"watch": 1,
			"ere": 1,
			"oer": 1,
			"did": 1,
			"that": 3,
			"man": 1,
			"gives": 1,
			"or": 2,
			"lest": 1,
			"wilt": 1,
			"bright": 1,
			"their": 1,
			"a": 5,
			"so": 4,
			"on": 1,
			"above": 2,
			"but": 3,
			"when": 1,
			"lifes": 1,
			"be": 1,
			"ay": 1,
			"and": 23,
			"i": 4,
			"thou": 4,
			"one": 2,
			"against": 1,
			"how": 1,
			"beneath": 1,
			"with": 1,
			"through": 1,
			"has": 1,
			"still": 1,
			"your": 1,
			"to": 1,
			"into": 1,
			"ah": 1,
			"we": 3,
			"whose": 2,
			"as": 2,
			"o": 1,
			"the": 16,
			"tis": 1,
			"oft": 1,
			"in": 2
		},
		"oak": {
			"his": 1,
			"rule": 1,
			"are": 2,
			"ive": 1,
			"of": 1,
			"than": 1,
			"for": 1,
			"that": 2,
			"or": 1,
			"so": 1,
			"and": 4,
			"i": 1,
			"such": 1,
			"shadows": 1,
			"our": 1,
			"shall": 1,
			"the": 2
		},
		"grows": {
			"low": 1,
			"us": 1,
			"more": 1,
			"wi": 1,
			"weary": 3,
			"up": 2,
			"over": 1,
			"by": 2,
			"quiet": 1,
			"cold": 1,
			"is": 2,
			"cross": 1,
			"faint": 1,
			"pale": 1,
			"where": 1,
			"gentle": 1,
			"for": 1,
			"full": 1,
			"what": 1,
			"or": 1,
			"bright": 2,
			"a": 2,
			"green": 3,
			"upon": 1,
			"on": 3,
			"quite": 1,
			"red": 1,
			"brown": 1,
			"lives": 1,
			"and": 4,
			"dark": 1,
			"black": 1,
			"i": 1,
			"one": 1,
			"with": 1,
			"till": 1,
			"to": 1,
			"into": 1,
			"round": 1,
			"rich": 1,
			"whose": 1,
			"as": 1,
			"fair": 1,
			"o": 1,
			"the": 10,
			"her": 1,
			"in": 6,
			"dim": 2
		}
	};

/***/ }
/******/ ]);